// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "GameplayTasks.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1GameplayTasks() {}
	void UGameplayTaskOwnerInterface::StaticRegisterNativesUGameplayTaskOwnerInterface()
	{
	}
	IMPLEMENT_CLASS(UGameplayTaskOwnerInterface, 982862599);
static class UEnum* ETaskResourceOverlapPolicy_StaticEnum()
{
	extern GAMEPLAYTASKS_API class UPackage* Z_Construct_UPackage__Script_GameplayTasks();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEPLAYTASKS_API class UEnum* Z_Construct_UEnum_GameplayTasks_ETaskResourceOverlapPolicy();
		Singleton = GetStaticEnum(Z_Construct_UEnum_GameplayTasks_ETaskResourceOverlapPolicy, Z_Construct_UPackage__Script_GameplayTasks(), TEXT("ETaskResourceOverlapPolicy"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETaskResourceOverlapPolicy(ETaskResourceOverlapPolicy_StaticEnum, TEXT("/Script/GameplayTasks"), TEXT("ETaskResourceOverlapPolicy"), false, nullptr, nullptr);
static class UEnum* EGameplayTaskState_StaticEnum()
{
	extern GAMEPLAYTASKS_API class UPackage* Z_Construct_UPackage__Script_GameplayTasks();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEPLAYTASKS_API class UEnum* Z_Construct_UEnum_GameplayTasks_EGameplayTaskState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_GameplayTasks_EGameplayTaskState, Z_Construct_UPackage__Script_GameplayTasks(), TEXT("EGameplayTaskState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGameplayTaskState(EGameplayTaskState_StaticEnum, TEXT("/Script/GameplayTasks"), TEXT("EGameplayTaskState"), false, nullptr, nullptr);
class UScriptStruct* FGameplayResourceSet::StaticStruct()
{
	extern GAMEPLAYTASKS_API class UPackage* Z_Construct_UPackage__Script_GameplayTasks();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEPLAYTASKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGameplayResourceSet();
		extern GAMEPLAYTASKS_API uint32 Get_Z_Construct_UScriptStruct_FGameplayResourceSet_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGameplayResourceSet, Z_Construct_UPackage__Script_GameplayTasks(), TEXT("GameplayResourceSet"), sizeof(FGameplayResourceSet), Get_Z_Construct_UScriptStruct_FGameplayResourceSet_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGameplayResourceSet(FGameplayResourceSet::StaticStruct, TEXT("/Script/GameplayTasks"), TEXT("GameplayResourceSet"), false, nullptr, nullptr);
static struct FScriptStruct_GameplayTasks_StaticRegisterNativesFGameplayResourceSet
{
	FScriptStruct_GameplayTasks_StaticRegisterNativesFGameplayResourceSet()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GameplayResourceSet")),new UScriptStruct::TCppStructOps<FGameplayResourceSet>);
	}
} ScriptStruct_GameplayTasks_StaticRegisterNativesFGameplayResourceSet;
	void UGameplayTask::StaticRegisterNativesUGameplayTask()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTask::StaticClass(), "EndTask",(Native)&UGameplayTask::execEndTask);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTask::StaticClass(), "ReadyForActivation",(Native)&UGameplayTask::execReadyForActivation);
	}
	IMPLEMENT_CLASS(UGameplayTask, 344303594);
	void UGameplayTaskResource::StaticRegisterNativesUGameplayTaskResource()
	{
	}
	IMPLEMENT_CLASS(UGameplayTaskResource, 3665128318);
	void UGameplayTask_ClaimResource::StaticRegisterNativesUGameplayTask_ClaimResource()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTask_ClaimResource::StaticClass(), "ClaimResource",(Native)&UGameplayTask_ClaimResource::execClaimResource);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTask_ClaimResource::StaticClass(), "ClaimResources",(Native)&UGameplayTask_ClaimResource::execClaimResources);
	}
	IMPLEMENT_CLASS(UGameplayTask_ClaimResource, 3157997969);
	void UGameplayTask_SpawnActor::StaticRegisterNativesUGameplayTask_SpawnActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTask_SpawnActor::StaticClass(), "BeginSpawningActor",(Native)&UGameplayTask_SpawnActor::execBeginSpawningActor);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTask_SpawnActor::StaticClass(), "FinishSpawningActor",(Native)&UGameplayTask_SpawnActor::execFinishSpawningActor);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTask_SpawnActor::StaticClass(), "SpawnActor",(Native)&UGameplayTask_SpawnActor::execSpawnActor);
	}
	IMPLEMENT_CLASS(UGameplayTask_SpawnActor, 674773198);
	void UGameplayTask_WaitDelay::StaticRegisterNativesUGameplayTask_WaitDelay()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTask_WaitDelay::StaticClass(), "TaskWaitDelay",(Native)&UGameplayTask_WaitDelay::execTaskWaitDelay);
	}
	IMPLEMENT_CLASS(UGameplayTask_WaitDelay, 3006815289);
static class UEnum* EGameplayTaskRunResult_StaticEnum()
{
	extern GAMEPLAYTASKS_API class UPackage* Z_Construct_UPackage__Script_GameplayTasks();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern GAMEPLAYTASKS_API class UEnum* Z_Construct_UEnum_GameplayTasks_EGameplayTaskRunResult();
		Singleton = GetStaticEnum(Z_Construct_UEnum_GameplayTasks_EGameplayTaskRunResult, Z_Construct_UPackage__Script_GameplayTasks(), TEXT("EGameplayTaskRunResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGameplayTaskRunResult(EGameplayTaskRunResult_StaticEnum, TEXT("/Script/GameplayTasks"), TEXT("EGameplayTaskRunResult"), false, nullptr, nullptr);
	void UGameplayTasksComponent::StaticRegisterNativesUGameplayTasksComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTasksComponent::StaticClass(), "K2_RunGameplayTask",(Native)&UGameplayTasksComponent::execK2_RunGameplayTask);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayTasksComponent::StaticClass(), "OnRep_SimulatedTasks",(Native)&UGameplayTasksComponent::execOnRep_SimulatedTasks);
	}
	IMPLEMENT_CLASS(UGameplayTasksComponent, 1289827373);
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();

	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTaskOwnerInterface();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UDelegateFunction_UGameplayTask_GenericGameplayTaskDelegate__DelegateSignature();
	GAMEPLAYTASKS_API class UEnum* Z_Construct_UEnum_GameplayTasks_ETaskResourceOverlapPolicy();
	GAMEPLAYTASKS_API class UEnum* Z_Construct_UEnum_GameplayTasks_EGameplayTaskState();
	GAMEPLAYTASKS_API class UScriptStruct* Z_Construct_UScriptStruct_FGameplayResourceSet();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTask_EndTask();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTask_ReadyForActivation();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTask_NoRegister();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTask();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTaskResource_NoRegister();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTaskResource();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTask_ClaimResource_ClaimResource();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTask_ClaimResource_ClaimResources();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTask_ClaimResource_NoRegister();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTask_ClaimResource();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UDelegateFunction_GameplayTasks_GameplayTaskSpawnActorDelegate__DelegateSignature();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTask_SpawnActor_BeginSpawningActor();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTask_SpawnActor_FinishSpawningActor();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTask_SpawnActor_SpawnActor();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTask_SpawnActor_NoRegister();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTask_SpawnActor();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UDelegateFunction_UGameplayTask_WaitDelay_TaskDelayDelegate__DelegateSignature();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTask_WaitDelay_TaskWaitDelay();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTask_WaitDelay_NoRegister();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTask_WaitDelay();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UDelegateFunction_GameplayTasks_OnClaimedResourcesChangeSignature__DelegateSignature();
	GAMEPLAYTASKS_API class UEnum* Z_Construct_UEnum_GameplayTasks_EGameplayTaskRunResult();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTasksComponent_K2_RunGameplayTask();
	GAMEPLAYTASKS_API class UFunction* Z_Construct_UFunction_UGameplayTasksComponent_OnRep_SimulatedTasks();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTasksComponent_NoRegister();
	GAMEPLAYTASKS_API class UClass* Z_Construct_UClass_UGameplayTasksComponent();
	GAMEPLAYTASKS_API class UPackage* Z_Construct_UPackage__Script_GameplayTasks();
	UClass* Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister()
	{
		return UGameplayTaskOwnerInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameplayTaskOwnerInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage__Script_GameplayTasks();
			OuterClass = UGameplayTaskOwnerInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20084081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("CannotImplementInterfaceInBlueprint"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTaskOwnerInterface.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameplayTaskOwnerInterface(Z_Construct_UClass_UGameplayTaskOwnerInterface, &UGameplayTaskOwnerInterface::StaticClass, TEXT("UGameplayTaskOwnerInterface"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameplayTaskOwnerInterface);
	UFunction* Z_Construct_UDelegateFunction_UGameplayTask_GenericGameplayTaskDelegate__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UClass_UGameplayTask();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GenericGameplayTaskDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTask.h"));
#endif
		}
		return ReturnFunction;
	}
	UEnum* Z_Construct_UEnum_GameplayTasks_ETaskResourceOverlapPolicy()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_GameplayTasks();
		extern uint32 Get_Z_Construct_UEnum_GameplayTasks_ETaskResourceOverlapPolicy_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETaskResourceOverlapPolicy"), 0, Get_Z_Construct_UEnum_GameplayTasks_ETaskResourceOverlapPolicy_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETaskResourceOverlapPolicy"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETaskResourceOverlapPolicy::StartOnTop")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETaskResourceOverlapPolicy::StartAtEnd")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETaskResourceOverlapPolicy::ETaskResourceOverlapPolicy_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ETaskResourceOverlapPolicy");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTask.h"));
			MetaData->SetValue(ReturnEnum, TEXT("StartAtEnd.ToolTip"), TEXT("Wait for other same-priority tasks to finish."));
			MetaData->SetValue(ReturnEnum, TEXT("StartOnTop.ToolTip"), TEXT("Pause overlapping same-priority tasks."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_GameplayTasks_ETaskResourceOverlapPolicy_CRC() { return 1624483547U; }
	UEnum* Z_Construct_UEnum_GameplayTasks_EGameplayTaskState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_GameplayTasks();
		extern uint32 Get_Z_Construct_UEnum_GameplayTasks_EGameplayTaskState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EGameplayTaskState"), 0, Get_Z_Construct_UEnum_GameplayTasks_EGameplayTaskState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EGameplayTaskState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskState::Uninitialized")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskState::AwaitingActivation")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskState::Paused")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskState::Active")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskState::Finished")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskState::EGameplayTaskState_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EGameplayTaskState");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTask.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_GameplayTasks_EGameplayTaskState_CRC() { return 3281221164U; }
	UScriptStruct* Z_Construct_UScriptStruct_FGameplayResourceSet()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_GameplayTasks();
		extern uint32 Get_Z_Construct_UScriptStruct_FGameplayResourceSet_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("GameplayResourceSet"), sizeof(FGameplayResourceSet), Get_Z_Construct_UScriptStruct_FGameplayResourceSet_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GameplayResourceSet"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FGameplayResourceSet>, EStructFlags(0x00000201));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTask.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FGameplayResourceSet_CRC() { return 1528687464U; }
	UFunction* Z_Construct_UFunction_UGameplayTask_EndTask()
	{
		UObject* Outer=Z_Construct_UClass_UGameplayTask();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EndTask"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameplayTasks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTask.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called explicitly to end the task (usually by the task itself). Calls OnDestroy.\n    @NOTE: you need to call EndTask before sending out any \"on completed\" delegates.\n    If you don't the task will still be in an \"active\" state while the event receivers may\n    assume it's already \"finished\""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameplayTask_ReadyForActivation()
	{
		UObject* Outer=Z_Construct_UClass_UGameplayTask();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ReadyForActivation"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Gameplay Tasks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTask.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Called to trigger the actual task once the delegates have been set up"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGameplayTask_NoRegister()
	{
		return UGameplayTask::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameplayTask()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_GameplayTasks();
			OuterClass = UGameplayTask::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;

				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTask_EndTask());
				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGameplayTask_GenericGameplayTaskDelegate__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTask_ReadyForActivation());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ChildTask = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChildTask"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ChildTask, UGameplayTask), 0x0020080000000000, Z_Construct_UClass_UGameplayTask_NoRegister());
				UProperty* NewProp_InstanceName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InstanceName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(InstanceName, UGameplayTask), 0x0020080000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTask_EndTask(), "EndTask"); // 3181392328
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGameplayTask_GenericGameplayTaskDelegate__DelegateSignature(), "GenericGameplayTaskDelegate__DelegateSignature"); // 2447680245
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTask_ReadyForActivation(), "ReadyForActivation"); // 4123843791
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister(), VTABLE_OFFSET(UGameplayTask, IGameplayTaskOwnerInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ExposedAsyncProxy"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameplayTask.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTask.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_ChildTask, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTask.h"));
				MetaData->SetValue(NewProp_ChildTask, TEXT("ToolTip"), TEXT("child task instance"));
				MetaData->SetValue(NewProp_InstanceName, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTask.h"));
				MetaData->SetValue(NewProp_InstanceName, TEXT("ToolTip"), TEXT("This name allows us to find the task later so that we can end it."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameplayTask(Z_Construct_UClass_UGameplayTask, &UGameplayTask::StaticClass, TEXT("UGameplayTask"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameplayTask);
	UClass* Z_Construct_UClass_UGameplayTaskResource_NoRegister()
	{
		return UGameplayTaskResource::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameplayTaskResource()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_GameplayTasks();
			OuterClass = UGameplayTaskResource::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x24100085;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bManuallySetID, UGameplayTaskResource, uint8);
				UProperty* NewProp_bManuallySetID = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bManuallySetID"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bManuallySetID, UGameplayTaskResource), 0x0010000000010001, CPP_BOOL_PROPERTY_BITMASK(bManuallySetID, UGameplayTaskResource), sizeof(uint8), false);
				UProperty* NewProp_AutoResourceID = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutoResourceID"), RF_Public|RF_Transient|RF_MarkAsNative) UInt8Property(CPP_PROPERTY_BASE(AutoResourceID, UGameplayTaskResource), 0x0040000000000000);
				UProperty* NewProp_ManualResourceID = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ManualResourceID"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ManualResourceID, UGameplayTaskResource), 0x0020080000014015);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->ClassConfigName = FName(TEXT("Game"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameplayTaskResource.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTaskResource.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_bManuallySetID, TEXT("Category"), TEXT("Task Resource"));
				MetaData->SetValue(NewProp_bManuallySetID, TEXT("InlineEditConditionToggle"), TEXT(""));
				MetaData->SetValue(NewProp_bManuallySetID, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTaskResource.h"));
				MetaData->SetValue(NewProp_AutoResourceID, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTaskResource.h"));
				MetaData->SetValue(NewProp_ManualResourceID, TEXT("Category"), TEXT("Task Resource"));
				MetaData->SetValue(NewProp_ManualResourceID, TEXT("ClampMax"), TEXT("15"));
				MetaData->SetValue(NewProp_ManualResourceID, TEXT("ClampMin"), TEXT("-1"));
				MetaData->SetValue(NewProp_ManualResourceID, TEXT("EditCondition"), TEXT("bManuallySetID"));
				MetaData->SetValue(NewProp_ManualResourceID, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTaskResource.h"));
				MetaData->SetValue(NewProp_ManualResourceID, TEXT("ToolTip"), TEXT("Overrides AutoResourceID. -1 means auto ID will be applied"));
				MetaData->SetValue(NewProp_ManualResourceID, TEXT("UIMax"), TEXT("15"));
				MetaData->SetValue(NewProp_ManualResourceID, TEXT("UIMin"), TEXT("-1"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameplayTaskResource(Z_Construct_UClass_UGameplayTaskResource, &UGameplayTaskResource::StaticClass, TEXT("UGameplayTaskResource"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameplayTaskResource);
	UFunction* Z_Construct_UFunction_UGameplayTask_ClaimResource_ClaimResource()
	{
		struct GameplayTask_ClaimResource_eventClaimResource_Parms
		{
			TScriptInterface<IGameplayTaskOwnerInterface> InTaskOwner;
			TSubclassOf<UGameplayTaskResource>  ResourceClass;
			uint8 Priority;
			FName TaskInstanceName;
			UGameplayTask_ClaimResource* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameplayTask_ClaimResource();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClaimResource"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GameplayTask_ClaimResource_eventClaimResource_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameplayTask_ClaimResource_eventClaimResource_Parms), 0x0010000000000580, Z_Construct_UClass_UGameplayTask_ClaimResource_NoRegister());
			UProperty* NewProp_TaskInstanceName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TaskInstanceName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(TaskInstanceName, GameplayTask_ClaimResource_eventClaimResource_Parms), 0x0010040000000082);
			UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Priority"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Priority, GameplayTask_ClaimResource_eventClaimResource_Parms), 0x0010040000000082);
			UProperty* NewProp_ResourceClass = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResourceClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(ResourceClass, GameplayTask_ClaimResource_eventClaimResource_Parms), 0x0014000000000080, Z_Construct_UClass_UGameplayTaskResource_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_InTaskOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InTaskOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UInterfaceProperty(CPP_PROPERTY_BASE(InTaskOwner, GameplayTask_ClaimResource_eventClaimResource_Parms), 0x0014000000000080, Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("Priority, TaskInstanceName"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Tasks"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Priority"), TEXT("192"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TaskInstanceName"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_ClaimResource.h"));
			MetaData->SetValue(NewProp_TaskInstanceName, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_Priority, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameplayTask_ClaimResource_ClaimResources()
	{
		struct GameplayTask_ClaimResource_eventClaimResources_Parms
		{
			TScriptInterface<IGameplayTaskOwnerInterface> InTaskOwner;
			TArray<TSubclassOf<UGameplayTaskResource> > ResourceClasses;
			uint8 Priority;
			FName TaskInstanceName;
			UGameplayTask_ClaimResource* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameplayTask_ClaimResource();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ClaimResources"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GameplayTask_ClaimResource_eventClaimResources_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameplayTask_ClaimResource_eventClaimResources_Parms), 0x0010000000000580, Z_Construct_UClass_UGameplayTask_ClaimResource_NoRegister());
			UProperty* NewProp_TaskInstanceName = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TaskInstanceName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(TaskInstanceName, GameplayTask_ClaimResource_eventClaimResources_Parms), 0x0010040000000082);
			UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Priority"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Priority, GameplayTask_ClaimResource_eventClaimResources_Parms), 0x0010040000000082);
			UProperty* NewProp_ResourceClasses = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ResourceClasses"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ResourceClasses, GameplayTask_ClaimResource_eventClaimResources_Parms), 0x0014000000000080);
			UProperty* NewProp_ResourceClasses_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ResourceClasses, TEXT("ResourceClasses"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UGameplayTaskResource_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_InTaskOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("InTaskOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UInterfaceProperty(CPP_PROPERTY_BASE(InTaskOwner, GameplayTask_ClaimResource_eventClaimResources_Parms), 0x0014000000000080, Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("Priority, TaskInstanceName"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("AI|Tasks"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Priority"), TEXT("192"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_TaskInstanceName"), TEXT("None"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_ClaimResource.h"));
			MetaData->SetValue(NewProp_TaskInstanceName, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_Priority, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGameplayTask_ClaimResource_NoRegister()
	{
		return UGameplayTask_ClaimResource::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameplayTask_ClaimResource()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameplayTask();
			Z_Construct_UPackage__Script_GameplayTasks();
			OuterClass = UGameplayTask_ClaimResource::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTask_ClaimResource_ClaimResource());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTask_ClaimResource_ClaimResources());

				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTask_ClaimResource_ClaimResource(), "ClaimResource"); // 1044782769
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTask_ClaimResource_ClaimResources(), "ClaimResources"); // 1635935234
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tasks/GameplayTask_ClaimResource.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_ClaimResource.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameplayTask_ClaimResource(Z_Construct_UClass_UGameplayTask_ClaimResource, &UGameplayTask_ClaimResource::StaticClass, TEXT("UGameplayTask_ClaimResource"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameplayTask_ClaimResource);
	UFunction* Z_Construct_UDelegateFunction_GameplayTasks_GameplayTaskSpawnActorDelegate__DelegateSignature()
	{
		struct _Script_GameplayTasks_eventGameplayTaskSpawnActorDelegate_Parms
		{
			AActor* SpawnedActor;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameplayTasks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GameplayTaskSpawnActorDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameplayTasks_eventGameplayTaskSpawnActorDelegate_Parms));
			UProperty* NewProp_SpawnedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SpawnedActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SpawnedActor, _Script_GameplayTasks_eventGameplayTaskSpawnActorDelegate_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_SpawnActor.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameplayTask_SpawnActor_BeginSpawningActor()
	{
		struct GameplayTask_SpawnActor_eventBeginSpawningActor_Parms
		{
			UObject* WorldContextObject;
			AActor* SpawnedActor;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameplayTask_SpawnActor();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BeginSpawningActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04420400, 65535, sizeof(GameplayTask_SpawnActor_eventBeginSpawningActor_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, GameplayTask_SpawnActor_eventBeginSpawningActor_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, GameplayTask_SpawnActor_eventBeginSpawningActor_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, GameplayTask_SpawnActor_eventBeginSpawningActor_Parms), sizeof(bool), true);
			UProperty* NewProp_SpawnedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SpawnedActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SpawnedActor, GameplayTask_SpawnActor_eventBeginSpawningActor_Parms), 0x0010000000000180, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GameplayTask_SpawnActor_eventBeginSpawningActor_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameplayTasks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_SpawnActor.h"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameplayTask_SpawnActor_FinishSpawningActor()
	{
		struct GameplayTask_SpawnActor_eventFinishSpawningActor_Parms
		{
			UObject* WorldContextObject;
			AActor* SpawnedActor;
		};
		UObject* Outer=Z_Construct_UClass_UGameplayTask_SpawnActor();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FinishSpawningActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(GameplayTask_SpawnActor_eventFinishSpawningActor_Parms));
			UProperty* NewProp_SpawnedActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SpawnedActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(SpawnedActor, GameplayTask_SpawnActor_eventFinishSpawningActor_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_WorldContextObject = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("WorldContextObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(WorldContextObject, GameplayTask_SpawnActor_eventFinishSpawningActor_Parms), 0x0010000000000080, Z_Construct_UClass_UObject_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("true"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameplayTasks"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_SpawnActor.h"));
			MetaData->SetValue(ReturnFunction, TEXT("WorldContext"), TEXT("WorldContextObject"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameplayTask_SpawnActor_SpawnActor()
	{
		struct GameplayTask_SpawnActor_eventSpawnActor_Parms
		{
			TScriptInterface<IGameplayTaskOwnerInterface> TaskOwner;
			FVector SpawnLocation;
			FRotator SpawnRotation;
			TSubclassOf<AActor>  Class;
			bool bSpawnOnlyOnAuthority;
			UGameplayTask_SpawnActor* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameplayTask_SpawnActor();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SpawnActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04822401, 65535, sizeof(GameplayTask_SpawnActor_eventSpawnActor_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameplayTask_SpawnActor_eventSpawnActor_Parms), 0x0010000000000580, Z_Construct_UClass_UGameplayTask_SpawnActor_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSpawnOnlyOnAuthority, GameplayTask_SpawnActor_eventSpawnActor_Parms, bool);
			UProperty* NewProp_bSpawnOnlyOnAuthority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bSpawnOnlyOnAuthority"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSpawnOnlyOnAuthority, GameplayTask_SpawnActor_eventSpawnActor_Parms), 0x0010040000000080, CPP_BOOL_PROPERTY_BITMASK(bSpawnOnlyOnAuthority, GameplayTask_SpawnActor_eventSpawnActor_Parms), sizeof(bool), true);
			UProperty* NewProp_Class = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Class"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(Class, GameplayTask_SpawnActor_eventSpawnActor_Parms), 0x0014000000000080, Z_Construct_UClass_AActor_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_SpawnRotation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SpawnRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SpawnRotation, GameplayTask_SpawnActor_eventSpawnActor_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_SpawnLocation = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("SpawnLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SpawnLocation, GameplayTask_SpawnActor_eventSpawnActor_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TaskOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TaskOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UInterfaceProperty(CPP_PROPERTY_BASE(TaskOwner, GameplayTask_SpawnActor_eventSpawnActor_Parms), 0x0014040000000080, Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("TaskOwner, bSpawnOnlyOnAuthority"));
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("TRUE"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameplayTasks"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bSpawnOnlyOnAuthority"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("TaskOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Spawn Actor for Gameplay Task"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_SpawnActor.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Spawn new Actor on the network authority (server)"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGameplayTask_SpawnActor_NoRegister()
	{
		return UGameplayTask_SpawnActor::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameplayTask_SpawnActor()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameplayTask();
			Z_Construct_UPackage__Script_GameplayTasks();
			OuterClass = UGameplayTask_SpawnActor::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTask_SpawnActor_BeginSpawningActor());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTask_SpawnActor_FinishSpawningActor());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTask_SpawnActor_SpawnActor());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_ClassToSpawn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ClassToSpawn"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(ClassToSpawn, UGameplayTask_SpawnActor), 0x0024080000000000, Z_Construct_UClass_AActor_NoRegister(), UClass::StaticClass());
				UProperty* NewProp_DidNotSpawn = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DidNotSpawn"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(DidNotSpawn, UGameplayTask_SpawnActor), 0x0010000010080000, Z_Construct_UDelegateFunction_GameplayTasks_GameplayTaskSpawnActorDelegate__DelegateSignature());
				UProperty* NewProp_Success = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Success"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(Success, UGameplayTask_SpawnActor), 0x0010000010080000, Z_Construct_UDelegateFunction_GameplayTasks_GameplayTaskSpawnActorDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTask_SpawnActor_BeginSpawningActor(), "BeginSpawningActor"); // 1557236028
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTask_SpawnActor_FinishSpawningActor(), "FinishSpawningActor"); // 1061448842
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTask_SpawnActor_SpawnActor(), "SpawnActor"); // 3169072164
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tasks/GameplayTask_SpawnActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_SpawnActor.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Convenience task for spawning actors (optionally limiting the spawning to the network authority). If not the net authority, we will not spawn\nand Success will not be called. The nice thing this adds is the ability to modify expose on spawn properties while also implicitly checking\nnetwork role before spawning.\n\nThough this task doesn't do much - games can implement similar tasks that carry out game specific rules. For example a 'SpawnProjectile'\ntask that limits the available classes to the games projectile class, and that does game specific stuff on spawn (for example, determining\nfiring position from a weapon attachment).\n\nLong term we can also use this task as a sync point. If the executing client could wait execution until the server creates and replicates the\nactor down to him. We could potentially also use this to do predictive actor spawning / reconciliation."));
				MetaData->SetValue(NewProp_ClassToSpawn, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_SpawnActor.h"));
				MetaData->SetValue(NewProp_DidNotSpawn, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_SpawnActor.h"));
				MetaData->SetValue(NewProp_DidNotSpawn, TEXT("ToolTip"), TEXT("Called when we can't spawn: on clients or potentially on server if they fail to spawn (rare)"));
				MetaData->SetValue(NewProp_Success, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_SpawnActor.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameplayTask_SpawnActor(Z_Construct_UClass_UGameplayTask_SpawnActor, &UGameplayTask_SpawnActor::StaticClass, TEXT("UGameplayTask_SpawnActor"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameplayTask_SpawnActor);
	UFunction* Z_Construct_UDelegateFunction_UGameplayTask_WaitDelay_TaskDelayDelegate__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UClass_UGameplayTask_WaitDelay();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TaskDelayDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_WaitDelay.h"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameplayTask_WaitDelay_TaskWaitDelay()
	{
		struct GameplayTask_WaitDelay_eventTaskWaitDelay_Parms
		{
			TScriptInterface<IGameplayTaskOwnerInterface> TaskOwner;
			float Time;
			uint8 Priority;
			UGameplayTask_WaitDelay* ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameplayTask_WaitDelay();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TaskWaitDelay"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GameplayTask_WaitDelay_eventTaskWaitDelay_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReturnValue, GameplayTask_WaitDelay_eventTaskWaitDelay_Parms), 0x0010000000000580, Z_Construct_UClass_UGameplayTask_WaitDelay_NoRegister());
			UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Priority"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Priority, GameplayTask_WaitDelay_eventTaskWaitDelay_Parms), 0x0010040000000082);
			UProperty* NewProp_Time = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Time"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Time, GameplayTask_WaitDelay_eventTaskWaitDelay_Parms), 0x0010000000000080);
			UProperty* NewProp_TaskOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TaskOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UInterfaceProperty(CPP_PROPERTY_BASE(TaskOwner, GameplayTask_WaitDelay_eventTaskWaitDelay_Parms), 0x0014040000000080, Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("TaskOwner, Priority"));
			MetaData->SetValue(ReturnFunction, TEXT("BlueprintInternalUseOnly"), TEXT("TRUE"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("GameplayTasks"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_Priority"), TEXT("192"));
			MetaData->SetValue(ReturnFunction, TEXT("DefaultToSelf"), TEXT("TaskOwner"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_WaitDelay.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Wait specified time. This is functionally the same as a standard Delay node."));
			MetaData->SetValue(NewProp_Priority, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGameplayTask_WaitDelay_NoRegister()
	{
		return UGameplayTask_WaitDelay::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameplayTask_WaitDelay()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UGameplayTask();
			Z_Construct_UPackage__Script_GameplayTasks();
			OuterClass = UGameplayTask_WaitDelay::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20880080;

				OuterClass->LinkChild(Z_Construct_UDelegateFunction_UGameplayTask_WaitDelay_TaskDelayDelegate__DelegateSignature());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTask_WaitDelay_TaskWaitDelay());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnFinish = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnFinish"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnFinish, UGameplayTask_WaitDelay), 0x0010000010080000, Z_Construct_UDelegateFunction_UGameplayTask_WaitDelay_TaskDelayDelegate__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UDelegateFunction_UGameplayTask_WaitDelay_TaskDelayDelegate__DelegateSignature(), "TaskDelayDelegate__DelegateSignature"); // 3875115516
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTask_WaitDelay_TaskWaitDelay(), "TaskWaitDelay"); // 2468646786
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Tasks/GameplayTask_WaitDelay.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_WaitDelay.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_OnFinish, TEXT("ModuleRelativePath"), TEXT("Classes/Tasks/GameplayTask_WaitDelay.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameplayTask_WaitDelay(Z_Construct_UClass_UGameplayTask_WaitDelay, &UGameplayTask_WaitDelay::StaticClass, TEXT("UGameplayTask_WaitDelay"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameplayTask_WaitDelay);
	UFunction* Z_Construct_UDelegateFunction_GameplayTasks_OnClaimedResourcesChangeSignature__DelegateSignature()
	{
		struct _Script_GameplayTasks_eventOnClaimedResourcesChangeSignature_Parms
		{
			FGameplayResourceSet NewlyClaimed;
			FGameplayResourceSet FreshlyReleased;
		};
		UObject* Outer=Z_Construct_UPackage__Script_GameplayTasks();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnClaimedResourcesChangeSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_GameplayTasks_eventOnClaimedResourcesChangeSignature_Parms));
			UProperty* NewProp_FreshlyReleased = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("FreshlyReleased"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FreshlyReleased, _Script_GameplayTasks_eventOnClaimedResourcesChangeSignature_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGameplayResourceSet());
			UProperty* NewProp_NewlyClaimed = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewlyClaimed"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NewlyClaimed, _Script_GameplayTasks_eventOnClaimedResourcesChangeSignature_Parms), 0x0010000000000080, Z_Construct_UScriptStruct_FGameplayResourceSet());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTasksComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UEnum* Z_Construct_UEnum_GameplayTasks_EGameplayTaskRunResult()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_GameplayTasks();
		extern uint32 Get_Z_Construct_UEnum_GameplayTasks_EGameplayTaskRunResult_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EGameplayTaskRunResult"), 0, Get_Z_Construct_UEnum_GameplayTasks_EGameplayTaskRunResult_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EGameplayTaskRunResult"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskRunResult::Error")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskRunResult::Failed")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskRunResult::Success_Paused")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskRunResult::Success_Active")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskRunResult::Success_Finished")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGameplayTaskRunResult::EGameplayTaskRunResult_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EGameplayTaskRunResult");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Error.ToolTip"), TEXT("When tried running a null-task"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTasksComponent.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Success_Active.ToolTip"), TEXT("Successfully activated"));
			MetaData->SetValue(ReturnEnum, TEXT("Success_Finished.ToolTip"), TEXT("Successfully activated, but finished instantly"));
			MetaData->SetValue(ReturnEnum, TEXT("Success_Paused.ToolTip"), TEXT("Successfully registered for running, but currently paused due to higher priority tasks running"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_GameplayTasks_EGameplayTaskRunResult_CRC() { return 659768424U; }
	UFunction* Z_Construct_UFunction_UGameplayTasksComponent_K2_RunGameplayTask()
	{
		struct GameplayTasksComponent_eventK2_RunGameplayTask_Parms
		{
			TScriptInterface<IGameplayTaskOwnerInterface> TaskOwner;
			UGameplayTask* Task;
			uint8 Priority;
			TArray<TSubclassOf<UGameplayTaskResource> > AdditionalRequiredResources;
			TArray<TSubclassOf<UGameplayTaskResource> > AdditionalClaimedResources;
			EGameplayTaskRunResult ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UGameplayTasksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("K2_RunGameplayTask"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04022401, 65535, sizeof(GameplayTasksComponent_eventK2_RunGameplayTask_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(ReturnValue, GameplayTasksComponent_eventK2_RunGameplayTask_Parms), 0x0010000000000580, Z_Construct_UEnum_GameplayTasks_EGameplayTaskRunResult());
			UProperty* NewProp_ReturnValue_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_ReturnValue, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_AdditionalClaimedResources = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AdditionalClaimedResources"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AdditionalClaimedResources, GameplayTasksComponent_eventK2_RunGameplayTask_Parms), 0x0014040000000080);
			UProperty* NewProp_AdditionalClaimedResources_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AdditionalClaimedResources, TEXT("AdditionalClaimedResources"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UGameplayTaskResource_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_AdditionalRequiredResources = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("AdditionalRequiredResources"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AdditionalRequiredResources, GameplayTasksComponent_eventK2_RunGameplayTask_Parms), 0x0014040000000080);
			UProperty* NewProp_AdditionalRequiredResources_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AdditionalRequiredResources, TEXT("AdditionalRequiredResources"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0004000000000000, Z_Construct_UClass_UGameplayTaskResource_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_Priority = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Priority"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Priority, GameplayTasksComponent_eventK2_RunGameplayTask_Parms), 0x0010000000000080);
			UProperty* NewProp_Task = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Task"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Task, GameplayTasksComponent_eventK2_RunGameplayTask_Parms), 0x0010000000000080, Z_Construct_UClass_UGameplayTask_NoRegister());
			UProperty* NewProp_TaskOwner = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("TaskOwner"), RF_Public|RF_Transient|RF_MarkAsNative) UInterfaceProperty(CPP_PROPERTY_BASE(TaskOwner, GameplayTasksComponent_eventK2_RunGameplayTask_Parms), 0x0014000000000080, Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("AdvancedDisplay"), TEXT("AdditionalRequiredResources, AdditionalClaimedResources"));
			MetaData->SetValue(ReturnFunction, TEXT("AutoCreateRefTerm"), TEXT("AdditionalRequiredResources, AdditionalClaimedResources"));
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Gameplay Tasks"));
			MetaData->SetValue(ReturnFunction, TEXT("DisplayName"), TEXT("Run Gameplay Task"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTasksComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("END IGameplayTaskOwnerInterface"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UGameplayTasksComponent_OnRep_SimulatedTasks()
	{
		UObject* Outer=Z_Construct_UClass_UGameplayTasksComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnRep_SimulatedTasks"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x00020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTasksComponent.h"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UGameplayTasksComponent_NoRegister()
	{
		return UGameplayTasksComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UGameplayTasksComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UActorComponent();
			Z_Construct_UPackage__Script_GameplayTasks();
			OuterClass = UGameplayTasksComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B01080;

				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTasksComponent_K2_RunGameplayTask());
				OuterClass->LinkChild(Z_Construct_UFunction_UGameplayTasksComponent_OnRep_SimulatedTasks());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnClaimedResourcesChange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnClaimedResourcesChange"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnClaimedResourcesChange, UGameplayTasksComponent), 0x0010000000080004, Z_Construct_UDelegateFunction_GameplayTasks_OnClaimedResourcesChangeSignature__DelegateSignature());
				UProperty* NewProp_TickingTasks = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TickingTasks"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(TickingTasks, UGameplayTasksComponent), 0x0020080000000000);
				UProperty* NewProp_TickingTasks_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TickingTasks, TEXT("TickingTasks"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UGameplayTask_NoRegister());
				UProperty* NewProp_TaskPriorityQueue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TaskPriorityQueue"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(TaskPriorityQueue, UGameplayTasksComponent), 0x0020080000000000);
				UProperty* NewProp_TaskPriorityQueue_Inner = new(EC_InternalUseOnlyConstructor, NewProp_TaskPriorityQueue, TEXT("TaskPriorityQueue"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UGameplayTask_NoRegister());
				UProperty* NewProp_SimulatedTasks = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SimulatedTasks"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(SimulatedTasks, UGameplayTasksComponent), 0x0020080100000020);
				NewProp_SimulatedTasks->RepNotifyFunc = FName(TEXT("OnRep_SimulatedTasks"));
				UProperty* NewProp_SimulatedTasks_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SimulatedTasks, TEXT("SimulatedTasks"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UGameplayTask_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTasksComponent_K2_RunGameplayTask(), "K2_RunGameplayTask"); // 488553291
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UGameplayTasksComponent_OnRep_SimulatedTasks(), "OnRep_SimulatedTasks"); // 1926628156
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UGameplayTaskOwnerInterface_NoRegister(), VTABLE_OFFSET(UGameplayTasksComponent, IGameplayTaskOwnerInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintSpawnableComponent"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ClassGroupNames"), TEXT("GameplayTasks"));
				MetaData->SetValue(OuterClass, TEXT("HideCategories"), TEXT("Object LOD Lighting Transform Sockets TextureStreaming"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("GameplayTasksComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTasksComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("The core ActorComponent for interfacing with the GameplayAbilities System"));
				MetaData->SetValue(NewProp_OnClaimedResourcesChange, TEXT("Category"), TEXT("Gameplay Tasks"));
				MetaData->SetValue(NewProp_OnClaimedResourcesChange, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTasksComponent.h"));
				MetaData->SetValue(NewProp_TickingTasks, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTasksComponent.h"));
				MetaData->SetValue(NewProp_TickingTasks, TEXT("ToolTip"), TEXT("Array of currently active UGameplayTask that require ticking"));
				MetaData->SetValue(NewProp_TaskPriorityQueue, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTasksComponent.h"));
				MetaData->SetValue(NewProp_SimulatedTasks, TEXT("ModuleRelativePath"), TEXT("Classes/GameplayTasksComponent.h"));
				MetaData->SetValue(NewProp_SimulatedTasks, TEXT("ToolTip"), TEXT("Tasks that run on simulated proxies"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UGameplayTasksComponent(Z_Construct_UClass_UGameplayTasksComponent, &UGameplayTasksComponent::StaticClass, TEXT("UGameplayTasksComponent"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UGameplayTasksComponent);
	UPackage* Z_Construct_UPackage__Script_GameplayTasks()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/GameplayTasks")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0xB5199052;
			Guid.B = 0xC1CCB3AD;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_UGameplayTask_GenericGameplayTaskDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_GameplayTasks_OnClaimedResourcesChangeSignature__DelegateSignature();
			Z_Construct_UDelegateFunction_GameplayTasks_GameplayTaskSpawnActorDelegate__DelegateSignature();
			Z_Construct_UDelegateFunction_UGameplayTask_WaitDelay_TaskDelayDelegate__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
