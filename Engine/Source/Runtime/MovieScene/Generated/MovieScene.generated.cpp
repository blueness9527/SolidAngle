// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "MovieScene.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1MovieScene() {}
static class UEnum* ESpawnOwnership_StaticEnum()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UEnum* Z_Construct_UEnum_MovieScene_ESpawnOwnership();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MovieScene_ESpawnOwnership, Z_Construct_UPackage__Script_MovieScene(), TEXT("ESpawnOwnership"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESpawnOwnership(ESpawnOwnership_StaticEnum, TEXT("/Script/MovieScene"), TEXT("ESpawnOwnership"), false, nullptr, nullptr);
class UScriptStruct* FMovieSceneSpawnable::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSpawnable();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSpawnable_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSpawnable, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSpawnable"), sizeof(FMovieSceneSpawnable), Get_Z_Construct_UScriptStruct_FMovieSceneSpawnable_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSpawnable(FMovieSceneSpawnable::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSpawnable"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSpawnable
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSpawnable()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSpawnable")),new UScriptStruct::TCppStructOps<FMovieSceneSpawnable>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSpawnable;
class UScriptStruct* FMovieSceneBinding::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneBinding();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneBinding_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneBinding, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneBinding"), sizeof(FMovieSceneBinding), Get_Z_Construct_UScriptStruct_FMovieSceneBinding_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneBinding(FMovieSceneBinding::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneBinding"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneBinding
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneBinding()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneBinding")),new UScriptStruct::TCppStructOps<FMovieSceneBinding>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneBinding;
class UScriptStruct* FMovieScenePossessable::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieScenePossessable();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieScenePossessable_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieScenePossessable, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieScenePossessable"), sizeof(FMovieScenePossessable), Get_Z_Construct_UScriptStruct_FMovieScenePossessable_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieScenePossessable(FMovieScenePossessable::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieScenePossessable"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieScenePossessable
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieScenePossessable()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieScenePossessable")),new UScriptStruct::TCppStructOps<FMovieScenePossessable>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieScenePossessable;
	void UMovieSceneSignedObject::StaticRegisterNativesUMovieSceneSignedObject()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneSignedObject, 356474855);
class UScriptStruct* FMovieSceneTrackLabels::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackLabels();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackLabels_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneTrackLabels, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneTrackLabels"), sizeof(FMovieSceneTrackLabels), Get_Z_Construct_UScriptStruct_FMovieSceneTrackLabels_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneTrackLabels(FMovieSceneTrackLabels::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneTrackLabels"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackLabels
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackLabels()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneTrackLabels")),new UScriptStruct::TCppStructOps<FMovieSceneTrackLabels>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackLabels;
class UScriptStruct* FMovieSceneEditorData::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEditorData();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEditorData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEditorData, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEditorData"), sizeof(FMovieSceneEditorData), Get_Z_Construct_UScriptStruct_FMovieSceneEditorData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEditorData(FMovieSceneEditorData::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEditorData"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEditorData
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEditorData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEditorData")),new UScriptStruct::TCppStructOps<FMovieSceneEditorData>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEditorData;
class UScriptStruct* FMovieSceneExpansionState::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneExpansionState();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneExpansionState_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneExpansionState, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneExpansionState"), sizeof(FMovieSceneExpansionState), Get_Z_Construct_UScriptStruct_FMovieSceneExpansionState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneExpansionState(FMovieSceneExpansionState::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneExpansionState"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneExpansionState
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneExpansionState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneExpansionState")),new UScriptStruct::TCppStructOps<FMovieSceneExpansionState>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneExpansionState;
class UScriptStruct* FMovieSceneObjectBindingPtr::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneObjectBindingPtr"), sizeof(FMovieSceneObjectBindingPtr), Get_Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneObjectBindingPtr(FMovieSceneObjectBindingPtr::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneObjectBindingPtr"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneObjectBindingPtr
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneObjectBindingPtr()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneObjectBindingPtr")),new UScriptStruct::TCppStructOps<FMovieSceneObjectBindingPtr>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneObjectBindingPtr;
	void UMovieScene::StaticRegisterNativesUMovieScene()
	{
	}
	IMPLEMENT_CLASS(UMovieScene, 792207228);
	void UMovieSceneBindingOverridesInterface::StaticRegisterNativesUMovieSceneBindingOverridesInterface()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneBindingOverridesInterface, 472460383);
class UScriptStruct* FMovieSceneBindingOverrideData::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneBindingOverrideData"), sizeof(FMovieSceneBindingOverrideData), Get_Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneBindingOverrideData(FMovieSceneBindingOverrideData::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneBindingOverrideData"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneBindingOverrideData
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneBindingOverrideData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneBindingOverrideData")),new UScriptStruct::TCppStructOps<FMovieSceneBindingOverrideData>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneBindingOverrideData;
	void UMovieSceneBindingOverrides::StaticRegisterNativesUMovieSceneBindingOverrides()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneBindingOverrides, 2653386142);
	void UMovieSceneBindingOwnerInterface::StaticRegisterNativesUMovieSceneBindingOwnerInterface()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneBindingOwnerInterface, 2357191794);
	void UMovieSceneFolder::StaticRegisterNativesUMovieSceneFolder()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneFolder, 1354003668);
class UScriptStruct* FMovieSceneSequencePlaybackSettings::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSequencePlaybackSettings"), sizeof(FMovieSceneSequencePlaybackSettings), Get_Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSequencePlaybackSettings(FMovieSceneSequencePlaybackSettings::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSequencePlaybackSettings"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequencePlaybackSettings
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequencePlaybackSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSequencePlaybackSettings")),new UScriptStruct::TCppStructOps<FMovieSceneSequencePlaybackSettings>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequencePlaybackSettings;
	void UMovieSceneSequencePlayer::StaticRegisterNativesUMovieSceneSequencePlayer()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "ChangePlaybackDirection",(Native)&UMovieSceneSequencePlayer::execChangePlaybackDirection);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "GetLength",(Native)&UMovieSceneSequencePlayer::execGetLength);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "GetPlaybackEnd",(Native)&UMovieSceneSequencePlayer::execGetPlaybackEnd);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "GetPlaybackPosition",(Native)&UMovieSceneSequencePlayer::execGetPlaybackPosition);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "GetPlaybackStart",(Native)&UMovieSceneSequencePlayer::execGetPlaybackStart);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "GetPlayRate",(Native)&UMovieSceneSequencePlayer::execGetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "IsPlaying",(Native)&UMovieSceneSequencePlayer::execIsPlaying);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "Pause",(Native)&UMovieSceneSequencePlayer::execPause);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "Play",(Native)&UMovieSceneSequencePlayer::execPlay);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "PlayLooping",(Native)&UMovieSceneSequencePlayer::execPlayLooping);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "PlayReverse",(Native)&UMovieSceneSequencePlayer::execPlayReverse);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "SetPlaybackPosition",(Native)&UMovieSceneSequencePlayer::execSetPlaybackPosition);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "SetPlaybackRange",(Native)&UMovieSceneSequencePlayer::execSetPlaybackRange);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "SetPlayRate",(Native)&UMovieSceneSequencePlayer::execSetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "StartPlayingNextTick",(Native)&UMovieSceneSequencePlayer::execStartPlayingNextTick);
		FNativeFunctionRegistrar::RegisterFunction(UMovieSceneSequencePlayer::StaticClass(), "Stop",(Native)&UMovieSceneSequencePlayer::execStop);
	}
	IMPLEMENT_CLASS(UMovieSceneSequencePlayer, 3177333250);
static class UEnum* EMovieSceneKeyInterpolation_StaticEnum()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UEnum* Z_Construct_UEnum_MovieScene_EMovieSceneKeyInterpolation();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MovieScene_EMovieSceneKeyInterpolation, Z_Construct_UPackage__Script_MovieScene(), TEXT("EMovieSceneKeyInterpolation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMovieSceneKeyInterpolation(EMovieSceneKeyInterpolation_StaticEnum, TEXT("/Script/MovieScene"), TEXT("EMovieSceneKeyInterpolation"), false, nullptr, nullptr);
static class UEnum* EMovieSceneCompletionMode_StaticEnum()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UEnum* Z_Construct_UEnum_MovieScene_EMovieSceneCompletionMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MovieScene_EMovieSceneCompletionMode, Z_Construct_UPackage__Script_MovieScene(), TEXT("EMovieSceneCompletionMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMovieSceneCompletionMode(EMovieSceneCompletionMode_StaticEnum, TEXT("/Script/MovieScene"), TEXT("EMovieSceneCompletionMode"), false, nullptr, nullptr);
class UScriptStruct* FMovieSceneSectionEvalOptions::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSectionEvalOptions"), sizeof(FMovieSceneSectionEvalOptions), Get_Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSectionEvalOptions(FMovieSceneSectionEvalOptions::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSectionEvalOptions"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSectionEvalOptions
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSectionEvalOptions()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSectionEvalOptions")),new UScriptStruct::TCppStructOps<FMovieSceneSectionEvalOptions>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSectionEvalOptions;
	void UMovieSceneSection::StaticRegisterNativesUMovieSceneSection()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneSection, 4199832323);
class UScriptStruct* FMovieSceneTrackEvalOptions::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneTrackEvalOptions"), sizeof(FMovieSceneTrackEvalOptions), Get_Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneTrackEvalOptions(FMovieSceneTrackEvalOptions::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneTrackEvalOptions"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackEvalOptions
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackEvalOptions()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneTrackEvalOptions")),new UScriptStruct::TCppStructOps<FMovieSceneTrackEvalOptions>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackEvalOptions;
class UScriptStruct* FMovieSceneTrackCompilationParams::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneTrackCompilationParams"), sizeof(FMovieSceneTrackCompilationParams), Get_Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneTrackCompilationParams(FMovieSceneTrackCompilationParams::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneTrackCompilationParams"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackCompilationParams
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackCompilationParams()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneTrackCompilationParams")),new UScriptStruct::TCppStructOps<FMovieSceneTrackCompilationParams>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackCompilationParams;
	void UMovieSceneTrack::StaticRegisterNativesUMovieSceneTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneTrack, 2557235578);
class UScriptStruct* FMovieSceneTrackIdentifier::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneTrackIdentifier"), sizeof(FMovieSceneTrackIdentifier), Get_Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneTrackIdentifier(FMovieSceneTrackIdentifier::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneTrackIdentifier"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackIdentifier
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackIdentifier()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneTrackIdentifier")),new UScriptStruct::TCppStructOps<FMovieSceneTrackIdentifier>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackIdentifier;
class UScriptStruct* FMovieSceneSequenceID::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceID();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceID_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSequenceID, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSequenceID"), sizeof(FMovieSceneSequenceID), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceID_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSequenceID(FMovieSceneSequenceID::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSequenceID"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceID
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceID()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSequenceID")),new UScriptStruct::TCppStructOps<FMovieSceneSequenceID>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceID;
class UScriptStruct* FMovieSceneEvaluationField::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationField();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationField_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvaluationField, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvaluationField"), sizeof(FMovieSceneEvaluationField), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationField_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvaluationField(FMovieSceneEvaluationField::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvaluationField"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationField
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationField()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvaluationField")),new UScriptStruct::TCppStructOps<FMovieSceneEvaluationField>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationField;
class UScriptStruct* FMovieSceneEvaluationMetaData::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvaluationMetaData"), sizeof(FMovieSceneEvaluationMetaData), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvaluationMetaData(FMovieSceneEvaluationMetaData::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvaluationMetaData"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationMetaData
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationMetaData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvaluationMetaData")),new UScriptStruct::TCppStructOps<FMovieSceneEvaluationMetaData>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationMetaData;
class UScriptStruct* FMovieSceneEvaluationGroup::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvaluationGroup"), sizeof(FMovieSceneEvaluationGroup), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvaluationGroup(FMovieSceneEvaluationGroup::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvaluationGroup"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationGroup
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationGroup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvaluationGroup")),new UScriptStruct::TCppStructOps<FMovieSceneEvaluationGroup>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationGroup;
class UScriptStruct* FMovieSceneEvaluationGroupLUTIndex::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvaluationGroupLUTIndex"), sizeof(FMovieSceneEvaluationGroupLUTIndex), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex(FMovieSceneEvaluationGroupLUTIndex::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvaluationGroupLUTIndex"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationGroupLUTIndex
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationGroupLUTIndex()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvaluationGroupLUTIndex")),new UScriptStruct::TCppStructOps<FMovieSceneEvaluationGroupLUTIndex>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationGroupLUTIndex;
class UScriptStruct* FMovieSceneEvaluationFieldSegmentPtr::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvaluationFieldSegmentPtr"), sizeof(FMovieSceneEvaluationFieldSegmentPtr), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr(FMovieSceneEvaluationFieldSegmentPtr::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvaluationFieldSegmentPtr"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationFieldSegmentPtr
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationFieldSegmentPtr()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvaluationFieldSegmentPtr")),new UScriptStruct::TCppStructOps<FMovieSceneEvaluationFieldSegmentPtr>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationFieldSegmentPtr;
class UScriptStruct* FMovieSceneEvaluationFieldTrackPtr::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvaluationFieldTrackPtr"), sizeof(FMovieSceneEvaluationFieldTrackPtr), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr(FMovieSceneEvaluationFieldTrackPtr::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvaluationFieldTrackPtr"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationFieldTrackPtr
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationFieldTrackPtr()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvaluationFieldTrackPtr")),new UScriptStruct::TCppStructOps<FMovieSceneEvaluationFieldTrackPtr>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationFieldTrackPtr;
class UScriptStruct* FMovieSceneSegment::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSegment();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSegment_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSegment, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSegment"), sizeof(FMovieSceneSegment), Get_Z_Construct_UScriptStruct_FMovieSceneSegment_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSegment(FMovieSceneSegment::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSegment"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSegment
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSegment()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSegment")),new UScriptStruct::TCppStructOps<FMovieSceneSegment>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSegment;
class UScriptStruct* FSectionEvaluationData::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FSectionEvaluationData();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FSectionEvaluationData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSectionEvaluationData, Z_Construct_UPackage__Script_MovieScene(), TEXT("SectionEvaluationData"), sizeof(FSectionEvaluationData), Get_Z_Construct_UScriptStruct_FSectionEvaluationData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSectionEvaluationData(FSectionEvaluationData::StaticStruct, TEXT("/Script/MovieScene"), TEXT("SectionEvaluationData"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFSectionEvaluationData
{
	FScriptStruct_MovieScene_StaticRegisterNativesFSectionEvaluationData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SectionEvaluationData")),new UScriptStruct::TCppStructOps<FSectionEvaluationData>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFSectionEvaluationData;
class UScriptStruct* FMovieSceneEvalTemplateBase::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvalTemplateBase"), sizeof(FMovieSceneEvalTemplateBase), Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvalTemplateBase(FMovieSceneEvalTemplateBase::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvalTemplateBase"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvalTemplateBase
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvalTemplateBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvalTemplateBase")),new UScriptStruct::TCppStructOps<FMovieSceneEvalTemplateBase>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvalTemplateBase;
class UScriptStruct* FMovieSceneEmptyStruct::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEmptyStruct();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEmptyStruct_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEmptyStruct, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEmptyStruct"), sizeof(FMovieSceneEmptyStruct), Get_Z_Construct_UScriptStruct_FMovieSceneEmptyStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEmptyStruct(FMovieSceneEmptyStruct::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEmptyStruct"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEmptyStruct
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEmptyStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEmptyStruct")),new UScriptStruct::TCppStructOps<FMovieSceneEmptyStruct>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEmptyStruct;
class UScriptStruct* FMovieSceneEvalTemplatePtr::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvalTemplatePtr"), sizeof(FMovieSceneEvalTemplatePtr), Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvalTemplatePtr(FMovieSceneEvalTemplatePtr::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvalTemplatePtr"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvalTemplatePtr
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvalTemplatePtr()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvalTemplatePtr")),new UScriptStruct::TCppStructOps<FMovieSceneEvalTemplatePtr>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvalTemplatePtr;
class UScriptStruct* FMovieSceneEvalTemplate::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvalTemplate();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplate_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvalTemplate, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvalTemplate"), sizeof(FMovieSceneEvalTemplate), Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplate_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvalTemplate(FMovieSceneEvalTemplate::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvalTemplate"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvalTemplate
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvalTemplate()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvalTemplate")),new UScriptStruct::TCppStructOps<FMovieSceneEvalTemplate>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvalTemplate;
class UScriptStruct* FMovieSceneTrackImplementationPtr::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneTrackImplementationPtr"), sizeof(FMovieSceneTrackImplementationPtr), Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneTrackImplementationPtr(FMovieSceneTrackImplementationPtr::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneTrackImplementationPtr"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackImplementationPtr
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackImplementationPtr()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneTrackImplementationPtr")),new UScriptStruct::TCppStructOps<FMovieSceneTrackImplementationPtr>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackImplementationPtr;
class UScriptStruct* FMovieSceneTrackImplementation::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackImplementation();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementation_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneTrackImplementation, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneTrackImplementation"), sizeof(FMovieSceneTrackImplementation), Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementation_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneTrackImplementation(FMovieSceneTrackImplementation::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneTrackImplementation"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackImplementation
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackImplementation()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneTrackImplementation")),new UScriptStruct::TCppStructOps<FMovieSceneTrackImplementation>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneTrackImplementation;
static class UEnum* EEvaluationMethod_StaticEnum()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UEnum* Z_Construct_UEnum_MovieScene_EEvaluationMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_MovieScene_EEvaluationMethod, Z_Construct_UPackage__Script_MovieScene(), TEXT("EEvaluationMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEvaluationMethod(EEvaluationMethod_StaticEnum, TEXT("/Script/MovieScene"), TEXT("EEvaluationMethod"), false, nullptr, nullptr);
class UScriptStruct* FMovieSceneEvaluationTrack::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvaluationTrack"), sizeof(FMovieSceneEvaluationTrack), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvaluationTrack(FMovieSceneEvaluationTrack::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvaluationTrack"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationTrack
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvaluationTrack")),new UScriptStruct::TCppStructOps<FMovieSceneEvaluationTrack>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationTrack;
class UScriptStruct* FMovieSceneSequenceTransform::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceTransform();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceTransform_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSequenceTransform, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSequenceTransform"), sizeof(FMovieSceneSequenceTransform), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceTransform_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSequenceTransform(FMovieSceneSequenceTransform::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSequenceTransform"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceTransform
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceTransform()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSequenceTransform")),new UScriptStruct::TCppStructOps<FMovieSceneSequenceTransform>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceTransform;
class UScriptStruct* FMovieSceneSectionParameters::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSectionParameters();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSectionParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSectionParameters, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSectionParameters"), sizeof(FMovieSceneSectionParameters), Get_Z_Construct_UScriptStruct_FMovieSceneSectionParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSectionParameters(FMovieSceneSectionParameters::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSectionParameters"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSectionParameters
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSectionParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSectionParameters")),new UScriptStruct::TCppStructOps<FMovieSceneSectionParameters>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSectionParameters;
class UScriptStruct* FMovieSceneSequenceHierarchy::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSequenceHierarchy"), sizeof(FMovieSceneSequenceHierarchy), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSequenceHierarchy(FMovieSceneSequenceHierarchy::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSequenceHierarchy"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceHierarchy
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceHierarchy()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSequenceHierarchy")),new UScriptStruct::TCppStructOps<FMovieSceneSequenceHierarchy>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceHierarchy;
class UScriptStruct* FMovieSceneSequenceHierarchyNode::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSequenceHierarchyNode"), sizeof(FMovieSceneSequenceHierarchyNode), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSequenceHierarchyNode(FMovieSceneSequenceHierarchyNode::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSequenceHierarchyNode"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceHierarchyNode
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceHierarchyNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSequenceHierarchyNode")),new UScriptStruct::TCppStructOps<FMovieSceneSequenceHierarchyNode>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceHierarchyNode;
class UScriptStruct* FMovieSceneSubSequenceData::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSubSequenceData();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSubSequenceData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSubSequenceData, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSubSequenceData"), sizeof(FMovieSceneSubSequenceData), Get_Z_Construct_UScriptStruct_FMovieSceneSubSequenceData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSubSequenceData(FMovieSceneSubSequenceData::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSubSequenceData"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSubSequenceData
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSubSequenceData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSubSequenceData")),new UScriptStruct::TCppStructOps<FMovieSceneSubSequenceData>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSubSequenceData;
class UScriptStruct* FCachedMovieSceneEvaluationTemplate::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate, Z_Construct_UPackage__Script_MovieScene(), TEXT("CachedMovieSceneEvaluationTemplate"), sizeof(FCachedMovieSceneEvaluationTemplate), Get_Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCachedMovieSceneEvaluationTemplate(FCachedMovieSceneEvaluationTemplate::StaticStruct, TEXT("/Script/MovieScene"), TEXT("CachedMovieSceneEvaluationTemplate"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFCachedMovieSceneEvaluationTemplate
{
	FScriptStruct_MovieScene_StaticRegisterNativesFCachedMovieSceneEvaluationTemplate()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CachedMovieSceneEvaluationTemplate")),new UScriptStruct::TCppStructOps<FCachedMovieSceneEvaluationTemplate>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFCachedMovieSceneEvaluationTemplate;
class UScriptStruct* FMovieSceneSequenceCachedSignature::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneSequenceCachedSignature"), sizeof(FMovieSceneSequenceCachedSignature), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneSequenceCachedSignature(FMovieSceneSequenceCachedSignature::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneSequenceCachedSignature"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceCachedSignature
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceCachedSignature()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneSequenceCachedSignature")),new UScriptStruct::TCppStructOps<FMovieSceneSequenceCachedSignature>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneSequenceCachedSignature;
class UScriptStruct* FMovieSceneEvaluationTemplate::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneEvaluationTemplate"), sizeof(FMovieSceneEvaluationTemplate), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneEvaluationTemplate(FMovieSceneEvaluationTemplate::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneEvaluationTemplate"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationTemplate
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationTemplate()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneEvaluationTemplate")),new UScriptStruct::TCppStructOps<FMovieSceneEvaluationTemplate>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneEvaluationTemplate;
class UScriptStruct* FMovieSceneGenerationLedger::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneGenerationLedger();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneGenerationLedger_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneGenerationLedger, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneGenerationLedger"), sizeof(FMovieSceneGenerationLedger), Get_Z_Construct_UScriptStruct_FMovieSceneGenerationLedger_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneGenerationLedger(FMovieSceneGenerationLedger::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneGenerationLedger"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneGenerationLedger
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneGenerationLedger()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneGenerationLedger")),new UScriptStruct::TCppStructOps<FMovieSceneGenerationLedger>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneGenerationLedger;
	void UMovieSceneSequence::StaticRegisterNativesUMovieSceneSequence()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneSequence, 2427594218);
	void UMovieSceneNameableTrack::StaticRegisterNativesUMovieSceneNameableTrack()
	{
	}
	IMPLEMENT_CLASS(UMovieSceneNameableTrack, 2178185866);
class UScriptStruct* FMovieSceneLegacyTrackInstanceTemplate::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneLegacyTrackInstanceTemplate"), sizeof(FMovieSceneLegacyTrackInstanceTemplate), Get_Z_Construct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate(FMovieSceneLegacyTrackInstanceTemplate::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneLegacyTrackInstanceTemplate"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneLegacyTrackInstanceTemplate
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneLegacyTrackInstanceTemplate()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneLegacyTrackInstanceTemplate")),new UScriptStruct::TCppStructOps<FMovieSceneLegacyTrackInstanceTemplate>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneLegacyTrackInstanceTemplate;
class UScriptStruct* FMovieScenePropertySectionData::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieScenePropertySectionData();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieScenePropertySectionData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieScenePropertySectionData, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieScenePropertySectionData"), sizeof(FMovieScenePropertySectionData), Get_Z_Construct_UScriptStruct_FMovieScenePropertySectionData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieScenePropertySectionData(FMovieScenePropertySectionData::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieScenePropertySectionData"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieScenePropertySectionData
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieScenePropertySectionData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieScenePropertySectionData")),new UScriptStruct::TCppStructOps<FMovieScenePropertySectionData>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieScenePropertySectionData;
class UScriptStruct* FMovieSceneKeyStruct::StaticStruct()
{
	extern MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneKeyStruct();
		extern MOVIESCENE_API uint32 Get_Z_Construct_UScriptStruct_FMovieSceneKeyStruct_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovieSceneKeyStruct, Z_Construct_UPackage__Script_MovieScene(), TEXT("MovieSceneKeyStruct"), sizeof(FMovieSceneKeyStruct), Get_Z_Construct_UScriptStruct_FMovieSceneKeyStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovieSceneKeyStruct(FMovieSceneKeyStruct::StaticStruct, TEXT("/Script/MovieScene"), TEXT("MovieSceneKeyStruct"), false, nullptr, nullptr);
static struct FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneKeyStruct
{
	FScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneKeyStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovieSceneKeyStruct")),new UScriptStruct::TCppStructOps<FMovieSceneKeyStruct>);
	}
} ScriptStruct_MovieScene_StaticRegisterNativesFMovieSceneKeyStruct;
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FGuid();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FFloatRange();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FColor();

	MOVIESCENE_API class UEnum* Z_Construct_UEnum_MovieScene_ESpawnOwnership();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSpawnable();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneBinding();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieScenePossessable();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSignedObject_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSignedObject();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackLabels();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEditorData();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneExpansionState();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieScene_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieScene();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneBindingOverridesInterface_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneBindingOverridesInterface();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneBindingOverrides_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneBindingOverrides();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneBindingOwnerInterface_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneBindingOwnerInterface();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneFolder_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneFolder();
	MOVIESCENE_API class UFunction* Z_Construct_UDelegateFunction_MovieScene_OnMovieSceneSequencePlayerEvent__DelegateSignature();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_ChangePlaybackDirection();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetLength();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackEnd();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackPosition();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackStart();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlayRate();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_IsPlaying();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_Pause();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_Play();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_PlayLooping();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_PlayReverse();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlaybackPosition();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlaybackRange();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlayRate();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_StartPlayingNextTick();
	MOVIESCENE_API class UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_Stop();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSequencePlayer_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSequencePlayer();
	MOVIESCENE_API class UEnum* Z_Construct_UEnum_MovieScene_EMovieSceneKeyInterpolation();
	MOVIESCENE_API class UEnum* Z_Construct_UEnum_MovieScene_EMovieSceneCompletionMode();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSection_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSection();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneTrack_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneTrack();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceID();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationField();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSegment();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FSectionEvaluationData();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEmptyStruct();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvalTemplate();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackImplementation();
	MOVIESCENE_API class UEnum* Z_Construct_UEnum_MovieScene_EEvaluationMethod();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceTransform();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSectionParameters();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSubSequenceData();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneGenerationLedger();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSequence_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneSequence();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneNameableTrack_NoRegister();
	MOVIESCENE_API class UClass* Z_Construct_UClass_UMovieSceneNameableTrack();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieScenePropertySectionData();
	MOVIESCENE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneKeyStruct();
	MOVIESCENE_API class UPackage* Z_Construct_UPackage__Script_MovieScene();
	UEnum* Z_Construct_UEnum_MovieScene_ESpawnOwnership()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UEnum_MovieScene_ESpawnOwnership_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESpawnOwnership"), 0, Get_Z_Construct_UEnum_MovieScene_ESpawnOwnership_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESpawnOwnership"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnOwnership::InnerSequence")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnOwnership::MasterSequence")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnOwnership::External")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnOwnership::ESpawnOwnership_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ESpawnOwnership");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("External.ToolTip"), TEXT("Once spawned, the object's lifetime is managed externally."));
			MetaData->SetValue(ReturnEnum, TEXT("InnerSequence.ToolTip"), TEXT("The object's lifetime is managed by the sequence that spawned it"));
			MetaData->SetValue(ReturnEnum, TEXT("MasterSequence.ToolTip"), TEXT("The object's lifetime is managed by the outermost sequence"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSpawnable.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MovieScene_ESpawnOwnership_CRC() { return 3136554113U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSpawnable()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSpawnable_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSpawnable"), sizeof(FMovieSceneSpawnable), Get_Z_Construct_UScriptStruct_FMovieSceneSpawnable_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSpawnable"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSpawnable>, EStructFlags(0x00000001));
#if WITH_EDITORONLY_DATA
			UProperty* NewProp_GeneratedClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GeneratedClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(GeneratedClass_DEPRECATED, FMovieSceneSpawnable), 0x0010000820000000, Z_Construct_UClass_UObject_NoRegister(), UClass::StaticClass());
#endif // WITH_EDITORONLY_DATA
			UProperty* NewProp_Ownership = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Ownership"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(Ownership, FMovieSceneSpawnable), 0x0040000000000000, Z_Construct_UEnum_MovieScene_ESpawnOwnership());
			UProperty* NewProp_Ownership_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_Ownership, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_ChildPossessables = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChildPossessables"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChildPossessables, FMovieSceneSpawnable), 0x0040000000000000);
			UProperty* NewProp_ChildPossessables_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChildPossessables, TEXT("ChildPossessables"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_ObjectTemplate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ObjectTemplate"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ObjectTemplate, FMovieSceneSpawnable), 0x0040000000000000, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, FMovieSceneSpawnable), 0x0040000000000000);
			UProperty* NewProp_Guid = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Guid"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Guid, FMovieSceneSpawnable), 0x0040000000000000, Z_Construct_UScriptStruct_FGuid());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSpawnable.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("MovieSceneSpawnable describes an object that can be spawned for this MovieScene"));
			MetaData->SetValue(NewProp_GeneratedClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSpawnable.h"));
			MetaData->SetValue(NewProp_GeneratedClass, TEXT("ToolTip"), TEXT("Deprecated generated class"));
			MetaData->SetValue(NewProp_Ownership, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSpawnable.h"));
			MetaData->SetValue(NewProp_Ownership, TEXT("ToolTip"), TEXT("Property indicating where ownership responsibility for this object lies"));
			MetaData->SetValue(NewProp_ChildPossessables, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSpawnable.h"));
			MetaData->SetValue(NewProp_ChildPossessables, TEXT("ToolTip"), TEXT("Set of GUIDs to possessable object bindings that are bound to an object inside this spawnable // @todo sequencer: This should be a TSet, but they don't duplicate correctly atm"));
			MetaData->SetValue(NewProp_ObjectTemplate, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSpawnable.h"));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSpawnable.h"));
			MetaData->SetValue(NewProp_Name, TEXT("ToolTip"), TEXT("Name label // @todo sequencer: Should be editor-only probably"));
			MetaData->SetValue(NewProp_Guid, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSpawnable.h"));
			MetaData->SetValue(NewProp_Guid, TEXT("ToolTip"), TEXT("Unique identifier of the spawnable object. // @todo sequencer: Guids need to be handled carefully when the asset is duplicated (or loaded after being copied on disk).\n//                                     Sometimes we'll need to generate fresh Guids."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSpawnable_CRC() { return 3943637793U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneBinding()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneBinding_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneBinding"), sizeof(FMovieSceneBinding), Get_Z_Construct_UScriptStruct_FMovieSceneBinding_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneBinding"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneBinding>, EStructFlags(0x00000005));
			UProperty* NewProp_Tracks = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Tracks"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Tracks, FMovieSceneBinding), 0x0040008000000008);
			UProperty* NewProp_Tracks_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Tracks, TEXT("Tracks"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0002000000080008, Z_Construct_UClass_UMovieSceneTrack_NoRegister());
			UProperty* NewProp_BindingName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BindingName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(BindingName, FMovieSceneBinding), 0x0040000000000000);
			UProperty* NewProp_ObjectGuid = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ObjectGuid"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ObjectGuid, FMovieSceneBinding), 0x0040000000000000, Z_Construct_UScriptStruct_FGuid());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBinding.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A set of tracks bound to runtime objects"));
			MetaData->SetValue(NewProp_Tracks, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_Tracks, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBinding.h"));
			MetaData->SetValue(NewProp_Tracks, TEXT("ToolTip"), TEXT("All tracks in this binding"));
			MetaData->SetValue(NewProp_Tracks_Inner, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_Tracks_Inner, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBinding.h"));
			MetaData->SetValue(NewProp_Tracks_Inner, TEXT("ToolTip"), TEXT("All tracks in this binding"));
			MetaData->SetValue(NewProp_BindingName, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBinding.h"));
			MetaData->SetValue(NewProp_BindingName, TEXT("ToolTip"), TEXT("Display name"));
			MetaData->SetValue(NewProp_ObjectGuid, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBinding.h"));
			MetaData->SetValue(NewProp_ObjectGuid, TEXT("ToolTip"), TEXT("Object binding guid for runtime objects"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneBinding_CRC() { return 2550069718U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieScenePossessable()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieScenePossessable_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieScenePossessable"), sizeof(FMovieScenePossessable), Get_Z_Construct_UScriptStruct_FMovieScenePossessable_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieScenePossessable"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieScenePossessable>, EStructFlags(0x00000001));
			UProperty* NewProp_ParentGuid = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParentGuid"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ParentGuid, FMovieScenePossessable), 0x0040000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_PossessedObjectClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PossessedObjectClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(PossessedObjectClass, FMovieScenePossessable), 0x0040000000000000, Z_Construct_UClass_UObject_NoRegister(), UClass::StaticClass());
			UProperty* NewProp_Name = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Name"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Name, FMovieScenePossessable), 0x0040000000000000);
			UProperty* NewProp_Guid = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Guid"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Guid, FMovieScenePossessable), 0x0040000000000000, Z_Construct_UScriptStruct_FGuid());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieScenePossessable.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("MovieScenePossessable is a \"typed slot\" used to allow the MovieScene to control an already-existing object"));
			MetaData->SetValue(NewProp_ParentGuid, TEXT("ModuleRelativePath"), TEXT("Public/MovieScenePossessable.h"));
			MetaData->SetValue(NewProp_ParentGuid, TEXT("ToolTip"), TEXT("GUID relating to this possessable's parent, if applicable."));
			MetaData->SetValue(NewProp_PossessedObjectClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieScenePossessable.h"));
			MetaData->SetValue(NewProp_PossessedObjectClass, TEXT("ToolTip"), TEXT("Type of the object we'll be possessing // @todo sequencer: Might be able to be editor-only.  We'll see.\n// @todo sequencer: This isn't used for anything yet.  We could use it to gate which types of objects can be bound to a\n// possessable \"slot\" though.  Or we could use it to generate a \"preview\" spawnable puppet when previewing with no\n// possessable object available."));
			MetaData->SetValue(NewProp_Name, TEXT("ModuleRelativePath"), TEXT("Public/MovieScenePossessable.h"));
			MetaData->SetValue(NewProp_Name, TEXT("ToolTip"), TEXT("Name label for this slot // @todo sequencer: Should be editor-only probably"));
			MetaData->SetValue(NewProp_Guid, TEXT("ModuleRelativePath"), TEXT("Public/MovieScenePossessable.h"));
			MetaData->SetValue(NewProp_Guid, TEXT("ToolTip"), TEXT("Unique identifier of the possessable object. // @todo sequencer: Guids need to be handled carefully when the asset is duplicated (or loaded after being copied on disk).\n//                                     Sometimes we'll need to generate fresh Guids."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieScenePossessable_CRC() { return 3137730718U; }
	UClass* Z_Construct_UClass_UMovieSceneSignedObject_NoRegister()
	{
		return UMovieSceneSignedObject::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneSignedObject()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneSignedObject::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_Signature = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Signature"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Signature, UMovieSceneSignedObject), 0x0040000000000000, Z_Construct_UScriptStruct_FGuid());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneSignedObject.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSignedObject.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(NewProp_Signature, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSignedObject.h"));
				MetaData->SetValue(NewProp_Signature, TEXT("ToolTip"), TEXT("Unique generation signature"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneSignedObject(Z_Construct_UClass_UMovieSceneSignedObject, &UMovieSceneSignedObject::StaticClass, TEXT("UMovieSceneSignedObject"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneSignedObject);
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackLabels()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackLabels_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneTrackLabels"), sizeof(FMovieSceneTrackLabels), Get_Z_Construct_UScriptStruct_FMovieSceneTrackLabels_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneTrackLabels"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneTrackLabels>, EStructFlags(0x00000001));
			UProperty* NewProp_Strings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Strings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Strings, FMovieSceneTrackLabels), 0x0010000000000000);
			UProperty* NewProp_Strings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Strings, TEXT("Strings"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure for labels that can be assigned to movie scene tracks."));
			MetaData->SetValue(NewProp_Strings, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackLabels_CRC() { return 3051670501U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEditorData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEditorData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEditorData"), sizeof(FMovieSceneEditorData), Get_Z_Construct_UScriptStruct_FMovieSceneEditorData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEditorData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEditorData>, EStructFlags(0x00000001));
			UProperty* NewProp_ViewRange = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ViewRange"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ViewRange, FMovieSceneEditorData), 0x0010000000000000, Z_Construct_UScriptStruct_FFloatRange());
			UProperty* NewProp_WorkingRange = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WorkingRange"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(WorkingRange, FMovieSceneEditorData), 0x0010000000000000, Z_Construct_UScriptStruct_FFloatRange());
			UProperty* NewProp_ExpansionStates = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExpansionStates"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(ExpansionStates, FMovieSceneEditorData), 0x0010000000000000);
			UProperty* NewProp_ExpansionStates_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_ExpansionStates, TEXT("ExpansionStates_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_ExpansionStates_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_ExpansionStates, TEXT("ExpansionStates"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneExpansionState());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Editor only data that needs to be saved between sessions for editing but has no runtime purpose"));
			MetaData->SetValue(NewProp_ViewRange, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
			MetaData->SetValue(NewProp_ViewRange, TEXT("ToolTip"), TEXT("The last view-range that the user was observing"));
			MetaData->SetValue(NewProp_WorkingRange, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
			MetaData->SetValue(NewProp_WorkingRange, TEXT("ToolTip"), TEXT("User-defined working range in which the entire sequence should reside."));
			MetaData->SetValue(NewProp_ExpansionStates, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
			MetaData->SetValue(NewProp_ExpansionStates, TEXT("ToolTip"), TEXT("Map of node path -> expansion state."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEditorData_CRC() { return 3758477867U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneExpansionState()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneExpansionState_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneExpansionState"), sizeof(FMovieSceneExpansionState), Get_Z_Construct_UScriptStruct_FMovieSceneExpansionState_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneExpansionState"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneExpansionState>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bExpanded, FMovieSceneExpansionState, bool);
			UProperty* NewProp_bExpanded = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bExpanded"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bExpanded, FMovieSceneExpansionState), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bExpanded, FMovieSceneExpansionState), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("@todo: remove this type when support for intrinsics on TMap values is added?"));
			MetaData->SetValue(NewProp_bExpanded, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneExpansionState_CRC() { return 715214340U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneObjectBindingPtr"), sizeof(FMovieSceneObjectBindingPtr), Get_Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneObjectBindingPtr"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneObjectBindingPtr>, EStructFlags(0x00000001));
			UProperty* NewProp_Guid = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Guid"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Guid, FMovieSceneObjectBindingPtr), 0x0010000000000001, Z_Construct_UScriptStruct_FGuid());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
			MetaData->SetValue(NewProp_Guid, TEXT("Category"), TEXT("Binding"));
			MetaData->SetValue(NewProp_Guid, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr_CRC() { return 63423614U; }
	UClass* Z_Construct_UClass_UMovieScene_NoRegister()
	{
		return UMovieScene::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieScene()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSignedObject();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieScene::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_EndTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EndTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EndTime_DEPRECATED, UMovieScene), 0x0040000020000000);
				UProperty* NewProp_StartTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StartTime_DEPRECATED, UMovieScene), 0x0040000020000000);
				UProperty* NewProp_OutTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OutTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(OutTime_DEPRECATED, UMovieScene), 0x0040000020000000);
				UProperty* NewProp_InTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("InTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InTime_DEPRECATED, UMovieScene), 0x0040000020000000);
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_RootFolders = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RootFolders"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(RootFolders, UMovieScene), 0x0040000800000000);
				UProperty* NewProp_RootFolders_Inner = new(EC_InternalUseOnlyConstructor, NewProp_RootFolders, TEXT("RootFolders"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000800000000, Z_Construct_UClass_UMovieSceneFolder_NoRegister());
				UProperty* NewProp_EditorData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EditorData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(EditorData, UMovieScene), 0x0040000800000000, Z_Construct_UScriptStruct_FMovieSceneEditorData());
				UProperty* NewProp_ObjectsToLabels = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ObjectsToLabels"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(ObjectsToLabels, UMovieScene), 0x0040000800000000);
				UProperty* NewProp_ObjectsToLabels_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_ObjectsToLabels, TEXT("ObjectsToLabels_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000800000000);
				UProperty* NewProp_ObjectsToLabels_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_ObjectsToLabels, TEXT("ObjectsToLabels"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000800000000, Z_Construct_UScriptStruct_FMovieSceneTrackLabels());
				UProperty* NewProp_ObjectsToDisplayNames = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ObjectsToDisplayNames"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(ObjectsToDisplayNames, UMovieScene), 0x0040000800000000);
				UProperty* NewProp_ObjectsToDisplayNames_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_ObjectsToDisplayNames, TEXT("ObjectsToDisplayNames_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000800000000);
				UProperty* NewProp_ObjectsToDisplayNames_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_ObjectsToDisplayNames, TEXT("ObjectsToDisplayNames"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000800000000);
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_FixedFrameInterval = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FixedFrameInterval"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(FixedFrameInterval, UMovieScene), 0x0040000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bForceFixedFrameIntervalPlayback, UMovieScene, bool);
				UProperty* NewProp_bForceFixedFrameIntervalPlayback = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bForceFixedFrameIntervalPlayback"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bForceFixedFrameIntervalPlayback, UMovieScene), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(bForceFixedFrameIntervalPlayback, UMovieScene), sizeof(bool), true);
#if WITH_EDITORONLY_DATA
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPlaybackRangeLocked, UMovieScene, bool);
				UProperty* NewProp_bPlaybackRangeLocked = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPlaybackRangeLocked"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPlaybackRangeLocked, UMovieScene), 0x0040000800000000, CPP_BOOL_PROPERTY_BITMASK(bPlaybackRangeLocked, UMovieScene), sizeof(bool), true);
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_PlaybackRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlaybackRange"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PlaybackRange, UMovieScene), 0x0040000000000000, Z_Construct_UScriptStruct_FFloatRange());
				UProperty* NewProp_SelectionRange = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SelectionRange"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SelectionRange, UMovieScene), 0x0040000000000000, Z_Construct_UScriptStruct_FFloatRange());
				UProperty* NewProp_CameraCutTrack = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CameraCutTrack"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(CameraCutTrack, UMovieScene), 0x0042000000080008, Z_Construct_UClass_UMovieSceneTrack_NoRegister());
				UProperty* NewProp_MasterTracks = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("MasterTracks"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MasterTracks, UMovieScene), 0x0040008000000008);
				UProperty* NewProp_MasterTracks_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MasterTracks, TEXT("MasterTracks"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0002000000080008, Z_Construct_UClass_UMovieSceneTrack_NoRegister());
				UProperty* NewProp_ObjectBindings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ObjectBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ObjectBindings, UMovieScene), 0x0040008000000000);
				UProperty* NewProp_ObjectBindings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ObjectBindings, TEXT("ObjectBindings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000008000000000, Z_Construct_UScriptStruct_FMovieSceneBinding());
				UProperty* NewProp_Possessables = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Possessables"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Possessables, UMovieScene), 0x0040000000000000);
				UProperty* NewProp_Possessables_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Possessables, TEXT("Possessables"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieScenePossessable());
				UProperty* NewProp_Spawnables = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Spawnables"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Spawnables, UMovieScene), 0x0040000000000000);
				UProperty* NewProp_Spawnables_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Spawnables, TEXT("Spawnables"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneSpawnable());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieScene.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Implements a movie scene asset."));
				MetaData->SetValue(NewProp_EndTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_StartTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_OutTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_InTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_RootFolders, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_RootFolders, TEXT("ToolTip"), TEXT("The root folders for this movie scene."));
				MetaData->SetValue(NewProp_EditorData, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_EditorData, TEXT("ToolTip"), TEXT("Editor only data that needs to be saved between sessions for editing but has no runtime purpose"));
				MetaData->SetValue(NewProp_ObjectsToLabels, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_ObjectsToLabels, TEXT("ToolTip"), TEXT("Maps object GUIDs to user defined labels."));
				MetaData->SetValue(NewProp_ObjectsToDisplayNames, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_ObjectsToDisplayNames, TEXT("ToolTip"), TEXT("Maps object GUIDs to user defined display names."));
				MetaData->SetValue(NewProp_FixedFrameInterval, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_bForceFixedFrameIntervalPlayback, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_bPlaybackRangeLocked, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_PlaybackRange, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_PlaybackRange, TEXT("ToolTip"), TEXT("User-defined playback range for this movie scene. Must be a finite range. Relative to this movie-scene's 0-time origin."));
				MetaData->SetValue(NewProp_SelectionRange, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_SelectionRange, TEXT("ToolTip"), TEXT("User-defined selection range."));
				MetaData->SetValue(NewProp_CameraCutTrack, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_CameraCutTrack, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_CameraCutTrack, TEXT("ToolTip"), TEXT("The camera cut track is a specialized track for switching between cameras on a cinematic"));
				MetaData->SetValue(NewProp_MasterTracks, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MasterTracks, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_MasterTracks, TEXT("ToolTip"), TEXT("Master tracks which are not bound to spawned or possessed objects"));
				MetaData->SetValue(NewProp_MasterTracks_Inner, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_MasterTracks_Inner, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_MasterTracks_Inner, TEXT("ToolTip"), TEXT("Master tracks which are not bound to spawned or possessed objects"));
				MetaData->SetValue(NewProp_ObjectBindings, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_ObjectBindings, TEXT("ToolTip"), TEXT("Tracks bound to possessed or spawned objects"));
				MetaData->SetValue(NewProp_Possessables, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_Possessables, TEXT("ToolTip"), TEXT("Typed slots for already-spawned objects that we are able to control with this MovieScene"));
				MetaData->SetValue(NewProp_Spawnables, TEXT("ModuleRelativePath"), TEXT("Public/MovieScene.h"));
				MetaData->SetValue(NewProp_Spawnables, TEXT("ToolTip"), TEXT("Data-only blueprints for all of the objects that we we're able to spawn.\nThese describe objects and actors that we may instantiate at runtime,\nor create proxy objects for previewing in the editor."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieScene(Z_Construct_UClass_UMovieScene, &UMovieScene::StaticClass, TEXT("UMovieScene"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieScene);
	UClass* Z_Construct_UClass_UMovieSceneBindingOverridesInterface_NoRegister()
	{
		return UMovieSceneBindingOverridesInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneBindingOverridesInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneBindingOverridesInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20104081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBindingOverridesInterface.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneBindingOverridesInterface(Z_Construct_UClass_UMovieSceneBindingOverridesInterface, &UMovieSceneBindingOverridesInterface::StaticClass, TEXT("UMovieSceneBindingOverridesInterface"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneBindingOverridesInterface);
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneBindingOverrideData"), sizeof(FMovieSceneBindingOverrideData), Get_Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneBindingOverrideData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneBindingOverrideData>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOverridesDefault, FMovieSceneBindingOverrideData, bool);
			UProperty* NewProp_bOverridesDefault = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bOverridesDefault"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOverridesDefault, FMovieSceneBindingOverrideData), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bOverridesDefault, FMovieSceneBindingOverrideData), sizeof(bool), true);
			UProperty* NewProp_Object = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Object"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(Object, FMovieSceneBindingOverrideData), 0x0014000000000001, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_ObjectBindingId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ObjectBindingId"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ObjectBindingId, FMovieSceneBindingOverrideData), 0x0010000000000001, Z_Construct_UScriptStruct_FMovieSceneObjectBindingPtr());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBindingOverrides.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Movie scene binding override data"));
			MetaData->SetValue(NewProp_bOverridesDefault, TEXT("Category"), TEXT("Binding"));
			MetaData->SetValue(NewProp_bOverridesDefault, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBindingOverrides.h"));
			MetaData->SetValue(NewProp_bOverridesDefault, TEXT("ToolTip"), TEXT("Specifies whether the default assignment should remain bound (false) or if this should completely override the default binding (false)."));
			MetaData->SetValue(NewProp_Object, TEXT("Category"), TEXT("Binding"));
			MetaData->SetValue(NewProp_Object, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBindingOverrides.h"));
			MetaData->SetValue(NewProp_Object, TEXT("ToolTip"), TEXT("Specifies the object to override the binding with."));
			MetaData->SetValue(NewProp_ObjectBindingId, TEXT("Category"), TEXT("Binding"));
			MetaData->SetValue(NewProp_ObjectBindingId, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBindingOverrides.h"));
			MetaData->SetValue(NewProp_ObjectBindingId, TEXT("ToolTip"), TEXT("Specifies the object binding to override."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData_CRC() { return 2531445100U; }
	UClass* Z_Construct_UClass_UMovieSceneBindingOverrides_NoRegister()
	{
		return UMovieSceneBindingOverrides::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneBindingOverrides()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneBindingOverrides::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20301080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_BindingData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("BindingData"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BindingData, UMovieSceneBindingOverrides), 0x0040000000000001);
				UProperty* NewProp_BindingData_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BindingData, TEXT("BindingData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneBindingOverrideData());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UMovieSceneBindingOverridesInterface_NoRegister(), VTABLE_OFFSET(UMovieSceneBindingOverrides, IMovieSceneBindingOverridesInterface), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneBindingOverrides.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBindingOverrides.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("A one-to-many definition of movie scene object binding IDs to overridden objects that should be bound to that binding."));
				MetaData->SetValue(NewProp_BindingData, TEXT("Category"), TEXT("General"));
				MetaData->SetValue(NewProp_BindingData, TEXT("DisplayName"), TEXT("Binding Overrides"));
				MetaData->SetValue(NewProp_BindingData, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBindingOverrides.h"));
				MetaData->SetValue(NewProp_BindingData, TEXT("ToolTip"), TEXT("The actual binding data"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneBindingOverrides(Z_Construct_UClass_UMovieSceneBindingOverrides, &UMovieSceneBindingOverrides::StaticClass, TEXT("UMovieSceneBindingOverrides"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneBindingOverrides);
	UClass* Z_Construct_UClass_UMovieSceneBindingOwnerInterface_NoRegister()
	{
		return UMovieSceneBindingOwnerInterface::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneBindingOwnerInterface()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneBindingOwnerInterface::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20104081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneBindingOwnerInterface.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneBindingOwnerInterface(Z_Construct_UClass_UMovieSceneBindingOwnerInterface, &UMovieSceneBindingOwnerInterface::StaticClass, TEXT("UMovieSceneBindingOwnerInterface"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneBindingOwnerInterface);
	UClass* Z_Construct_UClass_UMovieSceneFolder_NoRegister()
	{
		return UMovieSceneFolder::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneFolder()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneFolder::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_FolderColor = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FolderColor"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(FolderColor, UMovieSceneFolder), 0x0040000800000001, Z_Construct_UScriptStruct_FColor());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_ChildObjectBindingStrings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChildObjectBindingStrings"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChildObjectBindingStrings, UMovieSceneFolder), 0x0040000000000000);
				UProperty* NewProp_ChildObjectBindingStrings_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChildObjectBindingStrings, TEXT("ChildObjectBindingStrings"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_ChildMasterTracks = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChildMasterTracks"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChildMasterTracks, UMovieSceneFolder), 0x0040008000000008);
				UProperty* NewProp_ChildMasterTracks_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChildMasterTracks, TEXT("ChildMasterTracks"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080008, Z_Construct_UClass_UMovieSceneTrack_NoRegister());
				UProperty* NewProp_ChildFolders = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ChildFolders"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChildFolders, UMovieSceneFolder), 0x0040000000000000);
				UProperty* NewProp_ChildFolders_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChildFolders, TEXT("ChildFolders"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UMovieSceneFolder_NoRegister());
				UProperty* NewProp_FolderName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("FolderName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(FolderName, UMovieSceneFolder), 0x0040000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneFolder.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneFolder.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Reprents a folder used for organizing objects in tracks in a movie scene."));
				MetaData->SetValue(NewProp_FolderColor, TEXT("Category"), TEXT("General"));
				MetaData->SetValue(NewProp_FolderColor, TEXT("DisplayName"), TEXT("Color"));
				MetaData->SetValue(NewProp_FolderColor, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneFolder.h"));
				MetaData->SetValue(NewProp_FolderColor, TEXT("ToolTip"), TEXT("This folder's color"));
				MetaData->SetValue(NewProp_ChildObjectBindingStrings, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneFolder.h"));
				MetaData->SetValue(NewProp_ChildObjectBindingStrings, TEXT("ToolTip"), TEXT("The guid strings used to serialize the guids for the object bindings contained by this folder."));
				MetaData->SetValue(NewProp_ChildMasterTracks, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_ChildMasterTracks, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneFolder.h"));
				MetaData->SetValue(NewProp_ChildMasterTracks, TEXT("ToolTip"), TEXT("The master tracks contained by this folder."));
				MetaData->SetValue(NewProp_ChildFolders, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneFolder.h"));
				MetaData->SetValue(NewProp_ChildFolders, TEXT("ToolTip"), TEXT("The folders contained by this folder."));
				MetaData->SetValue(NewProp_FolderName, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneFolder.h"));
				MetaData->SetValue(NewProp_FolderName, TEXT("ToolTip"), TEXT("The name of this folder."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneFolder(Z_Construct_UClass_UMovieSceneFolder, &UMovieSceneFolder::StaticClass, TEXT("UMovieSceneFolder"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneFolder);
	UFunction* Z_Construct_UDelegateFunction_MovieScene_OnMovieSceneSequencePlayerEvent__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage__Script_MovieScene();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OnMovieSceneSequencePlayerEvent__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
#endif
		}
		return ReturnFunction;
	}
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSequencePlaybackSettings"), sizeof(FMovieSceneSequencePlaybackSettings), Get_Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSequencePlaybackSettings"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSequencePlaybackSettings>, EStructFlags(0x00000001));
			UProperty* NewProp_BindingOverrides = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BindingOverrides"), RF_Public|RF_Transient|RF_MarkAsNative) UInterfaceProperty(CPP_PROPERTY_BASE(BindingOverrides, FMovieSceneSequencePlaybackSettings), 0x0014000000000000, Z_Construct_UClass_UMovieSceneBindingOverridesInterface_NoRegister());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRestoreState, FMovieSceneSequencePlaybackSettings, bool);
			UProperty* NewProp_bRestoreState = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bRestoreState"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRestoreState, FMovieSceneSequencePlaybackSettings), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bRestoreState, FMovieSceneSequencePlaybackSettings), sizeof(bool), true);
			UProperty* NewProp_StartTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("StartTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StartTime, FMovieSceneSequencePlaybackSettings), 0x0010000000000005);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRandomStartTime, FMovieSceneSequencePlaybackSettings, bool);
			UProperty* NewProp_bRandomStartTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bRandomStartTime"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRandomStartTime, FMovieSceneSequencePlaybackSettings), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bRandomStartTime, FMovieSceneSequencePlaybackSettings), sizeof(bool), true);
			UProperty* NewProp_PlayRate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PlayRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PlayRate, FMovieSceneSequencePlaybackSettings), 0x0010000000000005);
			UProperty* NewProp_LoopCount = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LoopCount"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(LoopCount, FMovieSceneSequencePlaybackSettings), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Settings for the level sequence player actor."));
			MetaData->SetValue(NewProp_BindingOverrides, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(NewProp_BindingOverrides, TEXT("ToolTip"), TEXT("Interface that defines overridden bindings for this sequence"));
			MetaData->SetValue(NewProp_bRestoreState, TEXT("Category"), TEXT("Playback"));
			MetaData->SetValue(NewProp_bRestoreState, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(NewProp_bRestoreState, TEXT("ToolTip"), TEXT("Flag used to specify whether actor states should be restored on stop"));
			MetaData->SetValue(NewProp_StartTime, TEXT("Category"), TEXT("Playback"));
			MetaData->SetValue(NewProp_StartTime, TEXT("EditCondition"), TEXT("!bRandomStartTime"));
			MetaData->SetValue(NewProp_StartTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(NewProp_StartTime, TEXT("ToolTip"), TEXT("Start playback at the specified time"));
			MetaData->SetValue(NewProp_StartTime, TEXT("Units"), TEXT("s"));
			MetaData->SetValue(NewProp_bRandomStartTime, TEXT("Category"), TEXT("Playback"));
			MetaData->SetValue(NewProp_bRandomStartTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(NewProp_bRandomStartTime, TEXT("ToolTip"), TEXT("Start playback at a random time"));
			MetaData->SetValue(NewProp_PlayRate, TEXT("Category"), TEXT("Playback"));
			MetaData->SetValue(NewProp_PlayRate, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(NewProp_PlayRate, TEXT("ToolTip"), TEXT("The rate at which to playback the animation"));
			MetaData->SetValue(NewProp_PlayRate, TEXT("Units"), TEXT("Multiplier"));
			MetaData->SetValue(NewProp_LoopCount, TEXT("Category"), TEXT("Playback"));
			MetaData->SetValue(NewProp_LoopCount, TEXT("DisplayName"), TEXT("Loop"));
			MetaData->SetValue(NewProp_LoopCount, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(NewProp_LoopCount, TEXT("ToolTip"), TEXT("Number of times to loop playback. -1 for infinite, else the number of times to loop before stopping"));
			MetaData->SetValue(NewProp_LoopCount, TEXT("UIMin"), TEXT("1"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings_CRC() { return 3496313367U; }
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_ChangePlaybackDirection()
	{
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ChangePlaybackDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Changes the direction of playback (go in reverse if it was going forward, or vice versa)"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetLength()
	{
		struct MovieSceneSequencePlayer_eventGetLength_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetLength"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(MovieSceneSequencePlayer_eventGetLength_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, MovieSceneSequencePlayer_eventGetLength_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the playback length of the sequence"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackEnd()
	{
		struct MovieSceneSequencePlayer_eventGetPlaybackEnd_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlaybackEnd"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(MovieSceneSequencePlayer_eventGetPlaybackEnd_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, MovieSceneSequencePlayer_eventGetPlaybackEnd_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the offset within the level sequence to finish playing"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackPosition()
	{
		struct MovieSceneSequencePlayer_eventGetPlaybackPosition_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlaybackPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(MovieSceneSequencePlayer_eventGetPlaybackPosition_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, MovieSceneSequencePlayer_eventGetPlaybackPosition_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the current playback position"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackStart()
	{
		struct MovieSceneSequencePlayer_eventGetPlaybackStart_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlaybackStart"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(MovieSceneSequencePlayer_eventGetPlaybackStart_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, MovieSceneSequencePlayer_eventGetPlaybackStart_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the offset within the level sequence to start playing"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlayRate()
	{
		struct MovieSceneSequencePlayer_eventGetPlayRate_Parms
		{
			float ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("GetPlayRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(MovieSceneSequencePlayer_eventGetPlayRate_Parms));
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ReturnValue, MovieSceneSequencePlayer_eventGetPlayRate_Parms), 0x0010000000000580);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Get the playback rate of this player."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_IsPlaying()
	{
		struct MovieSceneSequencePlayer_eventIsPlaying_Parms
		{
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("IsPlaying"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(MovieSceneSequencePlayer_eventIsPlaying_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, MovieSceneSequencePlayer_eventIsPlaying_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, MovieSceneSequencePlayer_eventIsPlaying_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, MovieSceneSequencePlayer_eventIsPlaying_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Check whether the sequence is actively playing."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_Pause()
	{
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Pause"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Pause playback."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_Play()
	{
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Play"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Start playback forwards from the current time cursor position, using the current play rate."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_PlayLooping()
	{
		struct MovieSceneSequencePlayer_eventPlayLooping_Parms
		{
			int32 NumLoops;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayLooping"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MovieSceneSequencePlayer_eventPlayLooping_Parms));
			UProperty* NewProp_NumLoops = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NumLoops"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumLoops, MovieSceneSequencePlayer_eventPlayLooping_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_NumLoops"), TEXT("-1"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Start playback from the current time cursor position, looping the specified number of times.\n@param NumLoops - The number of loops to play. -1 indicates infinite looping."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_PlayReverse()
	{
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PlayReverse"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Reverse playback."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlaybackPosition()
	{
		struct MovieSceneSequencePlayer_eventSetPlaybackPosition_Parms
		{
			float NewPlaybackPosition;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPlaybackPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MovieSceneSequencePlayer_eventSetPlaybackPosition_Parms));
			UProperty* NewProp_NewPlaybackPosition = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewPlaybackPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NewPlaybackPosition, MovieSceneSequencePlayer_eventSetPlaybackPosition_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set the current playback position\n@param NewPlaybackPosition - The new playback position to set.\nIf the animation is currently playing, it will continue to do so from the new position"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlaybackRange()
	{
		struct MovieSceneSequencePlayer_eventSetPlaybackRange_Parms
		{
			float NewStartTime;
			float NewEndTime;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPlaybackRange"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MovieSceneSequencePlayer_eventSetPlaybackRange_Parms));
			UProperty* NewProp_NewEndTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewEndTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NewEndTime, MovieSceneSequencePlayer_eventSetPlaybackRange_Parms), 0x0010000000000082);
			UProperty* NewProp_NewStartTime = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("NewStartTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(NewStartTime, MovieSceneSequencePlayer_eventSetPlaybackRange_Parms), 0x0010000000000082);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Sets the range in time to be played back by this player, overriding the default range stored in the asset\n\n@param       NewStartTime    The new starting time for playback\n@param       NewEndTime              The new ending time for playback.  Must be larger than the start time."));
			MetaData->SetValue(NewProp_NewEndTime, TEXT("NativeConst"), TEXT(""));
			MetaData->SetValue(NewProp_NewStartTime, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlayRate()
	{
		struct MovieSceneSequencePlayer_eventSetPlayRate_Parms
		{
			float PlayRate;
		};
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SetPlayRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535, sizeof(MovieSceneSequencePlayer_eventSetPlayRate_Parms));
			UProperty* NewProp_PlayRate = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PlayRate"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PlayRate, MovieSceneSequencePlayer_eventSetPlayRate_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Set the playback rate of this player. Negative values will play the animation in reverse.\n@param PlayRate - The new rate of playback for the animation."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_StartPlayingNextTick()
	{
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("StartPlayingNextTick"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Start playback from the current time cursor position, using the current play rate. Does not update the animation until next tick."));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UMovieSceneSequencePlayer_Stop()
	{
		UObject* Outer=Z_Construct_UClass_UMovieSceneSequencePlayer();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Stop"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020401, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Game|Cinematic"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Stop playback."));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UMovieSceneSequencePlayer_NoRegister()
	{
		return UMovieSceneSequencePlayer::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneSequencePlayer()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneSequencePlayer::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20900081;

				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_ChangePlaybackDirection());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetLength());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackEnd());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackStart());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlayRate());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_IsPlaying());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_Pause());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_Play());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_PlayLooping());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_PlayReverse());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlaybackPosition());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlaybackRange());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlayRate());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_StartPlayingNextTick());
				OuterClass->LinkChild(Z_Construct_UFunction_UMovieSceneSequencePlayer_Stop());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_PlaybackSettings = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PlaybackSettings"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PlaybackSettings, UMovieSceneSequencePlayer), 0x0020080000000000, Z_Construct_UScriptStruct_FMovieSceneSequencePlaybackSettings());
				UProperty* NewProp_CurrentNumLoops = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CurrentNumLoops"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(CurrentNumLoops, UMovieSceneSequencePlayer), 0x0020080000002000);
				UProperty* NewProp_EndTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EndTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EndTime, UMovieSceneSequencePlayer), 0x0020080000000000);
				UProperty* NewProp_StartTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StartTime, UMovieSceneSequencePlayer), 0x0020080000000000);
				UProperty* NewProp_TimeCursorPosition = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TimeCursorPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TimeCursorPosition, UMovieSceneSequencePlayer), 0x0020080000000000);
				UProperty* NewProp_Sequence = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Sequence"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Sequence, UMovieSceneSequencePlayer), 0x0020080000002000, Z_Construct_UClass_UMovieSceneSequence_NoRegister());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPendingFirstUpdate, UMovieSceneSequencePlayer, uint8);
				UProperty* NewProp_bPendingFirstUpdate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bPendingFirstUpdate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPendingFirstUpdate, UMovieSceneSequencePlayer), 0x0020080000000000, CPP_BOOL_PROPERTY_BITMASK(bPendingFirstUpdate, UMovieSceneSequencePlayer), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bReversePlayback, UMovieSceneSequencePlayer, uint8);
				UProperty* NewProp_bReversePlayback = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bReversePlayback"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bReversePlayback, UMovieSceneSequencePlayer), 0x0020080000000000, CPP_BOOL_PROPERTY_BITMASK(bReversePlayback, UMovieSceneSequencePlayer), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsPlaying, UMovieSceneSequencePlayer, uint8);
				UProperty* NewProp_bIsPlaying = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsPlaying"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsPlaying, UMovieSceneSequencePlayer), 0x0020080000000000, CPP_BOOL_PROPERTY_BITMASK(bIsPlaying, UMovieSceneSequencePlayer), sizeof(uint8), false);
				UProperty* NewProp_OnPause = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnPause"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnPause, UMovieSceneSequencePlayer), 0x0010000010080000, Z_Construct_UDelegateFunction_MovieScene_OnMovieSceneSequencePlayerEvent__DelegateSignature());
				UProperty* NewProp_OnStop = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnStop"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnStop, UMovieSceneSequencePlayer), 0x0010000010080000, Z_Construct_UDelegateFunction_MovieScene_OnMovieSceneSequencePlayerEvent__DelegateSignature());
				UProperty* NewProp_OnPlay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnPlay"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnPlay, UMovieSceneSequencePlayer), 0x0010000010080000, Z_Construct_UDelegateFunction_MovieScene_OnMovieSceneSequencePlayerEvent__DelegateSignature());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_ChangePlaybackDirection(), "ChangePlaybackDirection"); // 266701893
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetLength(), "GetLength"); // 3813189704
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackEnd(), "GetPlaybackEnd"); // 92803803
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackPosition(), "GetPlaybackPosition"); // 1618546550
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlaybackStart(), "GetPlaybackStart"); // 405085679
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_GetPlayRate(), "GetPlayRate"); // 3982758096
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_IsPlaying(), "IsPlaying"); // 3876497821
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_Pause(), "Pause"); // 1369692799
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_Play(), "Play"); // 3180653860
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_PlayLooping(), "PlayLooping"); // 462331545
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_PlayReverse(), "PlayReverse"); // 1728171120
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlaybackPosition(), "SetPlaybackPosition"); // 499968051
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlaybackRange(), "SetPlaybackRange"); // 1895567799
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_SetPlayRate(), "SetPlayRate"); // 305454288
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_StartPlayingNextTick(), "StartPlayingNextTick"); // 735686206
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UMovieSceneSequencePlayer_Stop(), "Stop"); // 1098376966
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneSequencePlayer.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Abstract class that provides consistent player behaviour for various animation players"));
				MetaData->SetValue(NewProp_PlaybackSettings, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_PlaybackSettings, TEXT("ToolTip"), TEXT("Specific playback settings for the animation."));
				MetaData->SetValue(NewProp_CurrentNumLoops, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_CurrentNumLoops, TEXT("ToolTip"), TEXT("The number of times we have looped in the current playback"));
				MetaData->SetValue(NewProp_EndTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_EndTime, TEXT("ToolTip"), TEXT("Time time at which to end playing the sequence (defaults to the upper bound of the sequence's play range)"));
				MetaData->SetValue(NewProp_StartTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_StartTime, TEXT("ToolTip"), TEXT("Time time at which to start playing the sequence (defaults to the lower bound of the sequence's play range)"));
				MetaData->SetValue(NewProp_TimeCursorPosition, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_TimeCursorPosition, TEXT("ToolTip"), TEXT("The current time cursor position within the sequence (in seconds)"));
				MetaData->SetValue(NewProp_Sequence, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_Sequence, TEXT("ToolTip"), TEXT("The sequence to play back"));
				MetaData->SetValue(NewProp_bPendingFirstUpdate, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_bPendingFirstUpdate, TEXT("ToolTip"), TEXT("True where we're waiting for the first update of the sequence after calling StartPlayingNextTick."));
				MetaData->SetValue(NewProp_bReversePlayback, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_bReversePlayback, TEXT("ToolTip"), TEXT("Whether we're currently playing in reverse."));
				MetaData->SetValue(NewProp_bIsPlaying, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_bIsPlaying, TEXT("ToolTip"), TEXT("Whether we're currently playing. If false, then sequence playback is paused or was never started."));
				MetaData->SetValue(NewProp_OnPause, TEXT("Category"), TEXT("Game|Cinematic"));
				MetaData->SetValue(NewProp_OnPause, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_OnPause, TEXT("ToolTip"), TEXT("Event triggered when the level sequence player is paused"));
				MetaData->SetValue(NewProp_OnStop, TEXT("Category"), TEXT("Game|Cinematic"));
				MetaData->SetValue(NewProp_OnStop, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_OnStop, TEXT("ToolTip"), TEXT("Event triggered when the level sequence player is stopped"));
				MetaData->SetValue(NewProp_OnPlay, TEXT("Category"), TEXT("Game|Cinematic"));
				MetaData->SetValue(NewProp_OnPlay, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequencePlayer.h"));
				MetaData->SetValue(NewProp_OnPlay, TEXT("ToolTip"), TEXT("Event triggered when the level sequence player is played"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneSequencePlayer(Z_Construct_UClass_UMovieSceneSequencePlayer, &UMovieSceneSequencePlayer::StaticClass, TEXT("UMovieSceneSequencePlayer"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneSequencePlayer);
	UEnum* Z_Construct_UEnum_MovieScene_EMovieSceneKeyInterpolation()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UEnum_MovieScene_EMovieSceneKeyInterpolation_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMovieSceneKeyInterpolation"), 0, Get_Z_Construct_UEnum_MovieScene_EMovieSceneKeyInterpolation_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMovieSceneKeyInterpolation"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMovieSceneKeyInterpolation::Auto")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMovieSceneKeyInterpolation::User")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMovieSceneKeyInterpolation::Break")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMovieSceneKeyInterpolation::Linear")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMovieSceneKeyInterpolation::Constant")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMovieSceneKeyInterpolation::EMovieSceneKeyInterpolation_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EMovieSceneKeyInterpolation");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Auto.DisplayName"), TEXT("Auto"));
			MetaData->SetValue(ReturnEnum, TEXT("Auto.ToolTip"), TEXT("Auto."));
			MetaData->SetValue(ReturnEnum, TEXT("Break.DisplayName"), TEXT("Break"));
			MetaData->SetValue(ReturnEnum, TEXT("Break.ToolTip"), TEXT("Break."));
			MetaData->SetValue(ReturnEnum, TEXT("Constant.DisplayName"), TEXT("Constant"));
			MetaData->SetValue(ReturnEnum, TEXT("Constant.ToolTip"), TEXT("Constant."));
			MetaData->SetValue(ReturnEnum, TEXT("Linear.DisplayName"), TEXT("Linear"));
			MetaData->SetValue(ReturnEnum, TEXT("Linear.ToolTip"), TEXT("Linear."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/KeyParams.h"));
			MetaData->SetValue(ReturnEnum, TEXT("User.DisplayName"), TEXT("User"));
			MetaData->SetValue(ReturnEnum, TEXT("User.ToolTip"), TEXT("User."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MovieScene_EMovieSceneKeyInterpolation_CRC() { return 3076034195U; }
	UEnum* Z_Construct_UEnum_MovieScene_EMovieSceneCompletionMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UEnum_MovieScene_EMovieSceneCompletionMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMovieSceneCompletionMode"), 0, Get_Z_Construct_UEnum_MovieScene_EMovieSceneCompletionMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMovieSceneCompletionMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMovieSceneCompletionMode::KeepState")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMovieSceneCompletionMode::RestoreState")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMovieSceneCompletionMode::EMovieSceneCompletionMode_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EMovieSceneCompletionMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enumeration specifying how to handle state when this section is no longer evaluated"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MovieScene_EMovieSceneCompletionMode_CRC() { return 2824793644U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSectionEvalOptions"), sizeof(FMovieSceneSectionEvalOptions), Get_Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSectionEvalOptions"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSectionEvalOptions>, EStructFlags(0x00000001));
			UProperty* NewProp_CompletionMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CompletionMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(CompletionMode, FMovieSceneSectionEvalOptions), 0x0010000000000001, Z_Construct_UEnum_MovieScene_EMovieSceneCompletionMode());
			UProperty* NewProp_CompletionMode_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_CompletionMode, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanEditCompletionMode, FMovieSceneSectionEvalOptions, bool);
			UProperty* NewProp_bCanEditCompletionMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCanEditCompletionMode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanEditCompletionMode, FMovieSceneSectionEvalOptions), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bCanEditCompletionMode, FMovieSceneSectionEvalOptions), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
			MetaData->SetValue(NewProp_CompletionMode, TEXT("Category"), TEXT("Section"));
			MetaData->SetValue(NewProp_CompletionMode, TEXT("DisplayName"), TEXT("When Finished"));
			MetaData->SetValue(NewProp_CompletionMode, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
			MetaData->SetValue(NewProp_CompletionMode, TEXT("ToolTip"), TEXT("When set to \"RestoreState\", this section will restore any animation back to its previous state"));
			MetaData->SetValue(NewProp_bCanEditCompletionMode, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions_CRC() { return 986340641U; }
	UClass* Z_Construct_UClass_UMovieSceneSection_NoRegister()
	{
		return UMovieSceneSection::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneSection()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSignedObject();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneSection::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20280081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsInfinite, UMovieSceneSection, uint8);
				UProperty* NewProp_bIsInfinite = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsInfinite"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsInfinite, UMovieSceneSection), 0x0040000000000001, CPP_BOOL_PROPERTY_BITMASK(bIsInfinite, UMovieSceneSection), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsLocked, UMovieSceneSection, uint8);
				UProperty* NewProp_bIsLocked = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsLocked"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsLocked, UMovieSceneSection), 0x0040000000000001, CPP_BOOL_PROPERTY_BITMASK(bIsLocked, UMovieSceneSection), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsActive, UMovieSceneSection, uint8);
				UProperty* NewProp_bIsActive = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsActive"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsActive, UMovieSceneSection), 0x0040000000000001, CPP_BOOL_PROPERTY_BITMASK(bIsActive, UMovieSceneSection), sizeof(uint8), false);
				UProperty* NewProp_OverlapPriority = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OverlapPriority"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(OverlapPriority, UMovieSceneSection), 0x0040000000000000);
				UProperty* NewProp_RowIndex = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("RowIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(RowIndex, UMovieSceneSection), 0x0040000000000000);
				UProperty* NewProp_EndTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EndTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EndTime, UMovieSceneSection), 0x0040000000000001);
				UProperty* NewProp_StartTime = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("StartTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StartTime, UMovieSceneSection), 0x0040000000000001);
				UProperty* NewProp_EvalOptions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EvalOptions"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(EvalOptions, UMovieSceneSection), 0x0010000000000001, Z_Construct_UScriptStruct_FMovieSceneSectionEvalOptions());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for movie scene sections"));
				MetaData->SetValue(NewProp_bIsInfinite, TEXT("Category"), TEXT("Section"));
				MetaData->SetValue(NewProp_bIsInfinite, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
				MetaData->SetValue(NewProp_bIsInfinite, TEXT("ToolTip"), TEXT("Toggle to set this section to be infinite"));
				MetaData->SetValue(NewProp_bIsLocked, TEXT("Category"), TEXT("Section"));
				MetaData->SetValue(NewProp_bIsLocked, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
				MetaData->SetValue(NewProp_bIsLocked, TEXT("ToolTip"), TEXT("Toggle whether this section is locked/unlocked"));
				MetaData->SetValue(NewProp_bIsActive, TEXT("Category"), TEXT("Section"));
				MetaData->SetValue(NewProp_bIsActive, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
				MetaData->SetValue(NewProp_bIsActive, TEXT("ToolTip"), TEXT("Toggle whether this section is active/inactive"));
				MetaData->SetValue(NewProp_OverlapPriority, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
				MetaData->SetValue(NewProp_OverlapPriority, TEXT("ToolTip"), TEXT("This section's priority over overlapping sections"));
				MetaData->SetValue(NewProp_RowIndex, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
				MetaData->SetValue(NewProp_RowIndex, TEXT("ToolTip"), TEXT("The row index that this section sits on"));
				MetaData->SetValue(NewProp_EndTime, TEXT("Category"), TEXT("Section"));
				MetaData->SetValue(NewProp_EndTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
				MetaData->SetValue(NewProp_EndTime, TEXT("ToolTip"), TEXT("The end time of the section"));
				MetaData->SetValue(NewProp_StartTime, TEXT("Category"), TEXT("Section"));
				MetaData->SetValue(NewProp_StartTime, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
				MetaData->SetValue(NewProp_StartTime, TEXT("ToolTip"), TEXT("The start time of the section"));
				MetaData->SetValue(NewProp_EvalOptions, TEXT("Category"), TEXT("Section"));
				MetaData->SetValue(NewProp_EvalOptions, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSection.h"));
				MetaData->SetValue(NewProp_EvalOptions, TEXT("ShowOnlyInnerProperties"), TEXT(""));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneSection(Z_Construct_UClass_UMovieSceneSection, &UMovieSceneSection::StaticClass, TEXT("UMovieSceneSection"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneSection);
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneTrackEvalOptions"), sizeof(FMovieSceneTrackEvalOptions), Get_Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneTrackEvalOptions"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneTrackEvalOptions>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEvaluateInPostroll, FMovieSceneTrackEvalOptions, uint8);
			UProperty* NewProp_bEvaluateInPostroll = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEvaluateInPostroll"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEvaluateInPostroll, FMovieSceneTrackEvalOptions), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bEvaluateInPostroll, FMovieSceneTrackEvalOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEvaluateInPreroll, FMovieSceneTrackEvalOptions, uint8);
			UProperty* NewProp_bEvaluateInPreroll = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEvaluateInPreroll"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEvaluateInPreroll, FMovieSceneTrackEvalOptions), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bEvaluateInPreroll, FMovieSceneTrackEvalOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEvaluateNearestSection, FMovieSceneTrackEvalOptions, uint8);
			UProperty* NewProp_bEvaluateNearestSection = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEvaluateNearestSection"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEvaluateNearestSection, FMovieSceneTrackEvalOptions), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bEvaluateNearestSection, FMovieSceneTrackEvalOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanEvaluateNearestSection, FMovieSceneTrackEvalOptions, uint8);
			UProperty* NewProp_bCanEvaluateNearestSection = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCanEvaluateNearestSection"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanEvaluateNearestSection, FMovieSceneTrackEvalOptions), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bCanEvaluateNearestSection, FMovieSceneTrackEvalOptions), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Generic evaluation options for any track"));
			MetaData->SetValue(NewProp_bEvaluateInPostroll, TEXT("Category"), TEXT("General"));
			MetaData->SetValue(NewProp_bEvaluateInPostroll, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
			MetaData->SetValue(NewProp_bEvaluateInPostroll, TEXT("ToolTip"), TEXT("Evaluate this track as part of its parent sub-section's post-roll, if applicable"));
			MetaData->SetValue(NewProp_bEvaluateInPreroll, TEXT("Category"), TEXT("General"));
			MetaData->SetValue(NewProp_bEvaluateInPreroll, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
			MetaData->SetValue(NewProp_bEvaluateInPreroll, TEXT("ToolTip"), TEXT("Evaluate this track as part of its parent sub-section's pre-roll, if applicable"));
			MetaData->SetValue(NewProp_bEvaluateNearestSection, TEXT("Category"), TEXT("General"));
			MetaData->SetValue(NewProp_bEvaluateNearestSection, TEXT("EditCondition"), TEXT("bCanEvaluateNearestSection"));
			MetaData->SetValue(NewProp_bEvaluateNearestSection, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
			MetaData->SetValue(NewProp_bEvaluateNearestSection, TEXT("ToolTip"), TEXT("When evaluating empty space on a track, will evaluate the last position of the previous section (if possible), or the first position of the next section, in that order of preference."));
			MetaData->SetValue(NewProp_bCanEvaluateNearestSection, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
			MetaData->SetValue(NewProp_bCanEvaluateNearestSection, TEXT("ToolTip"), TEXT("true when the value of bEvaluateNearestSection is to be considered for the track"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions_CRC() { return 3827249379U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneTrackCompilationParams"), sizeof(FMovieSceneTrackCompilationParams), Get_Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneTrackCompilationParams"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneTrackCompilationParams>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bForEditorPreview, FMovieSceneTrackCompilationParams, bool);
			UProperty* NewProp_bForEditorPreview = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bForEditorPreview"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bForEditorPreview, FMovieSceneTrackCompilationParams), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bForEditorPreview, FMovieSceneTrackCompilationParams), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Movie scene compilation parameters. Serialized items contribute to a compiled template's cached hash"));
			MetaData->SetValue(NewProp_bForEditorPreview, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
			MetaData->SetValue(NewProp_bForEditorPreview, TEXT("ToolTip"), TEXT("Whether we're generating for an editor preview, or for efficient runtime evaluation"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams_CRC() { return 3637595388U; }
	UClass* Z_Construct_UClass_UMovieSceneTrack_NoRegister()
	{
		return UMovieSceneTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSignedObject();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20280081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_TrackTint = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TrackTint"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TrackTint, UMovieSceneTrack), 0x0020080800000001, Z_Construct_UScriptStruct_FColor());
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_EvalOptions = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EvalOptions"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(EvalOptions, UMovieSceneTrack), 0x0010000000000001, Z_Construct_UScriptStruct_FMovieSceneTrackEvalOptions());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for a track in a Movie Scene"));
				MetaData->SetValue(NewProp_TrackTint, TEXT("Category"), TEXT("General"));
				MetaData->SetValue(NewProp_TrackTint, TEXT("DisplayName"), TEXT("Color"));
				MetaData->SetValue(NewProp_TrackTint, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
				MetaData->SetValue(NewProp_TrackTint, TEXT("ToolTip"), TEXT("This track's tint color"));
				MetaData->SetValue(NewProp_EvalOptions, TEXT("Category"), TEXT("General"));
				MetaData->SetValue(NewProp_EvalOptions, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneTrack.h"));
				MetaData->SetValue(NewProp_EvalOptions, TEXT("ShowOnlyInnerProperties"), TEXT(""));
				MetaData->SetValue(NewProp_EvalOptions, TEXT("ToolTip"), TEXT("General evaluation options for a given track"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneTrack(Z_Construct_UClass_UMovieSceneTrack, &UMovieSceneTrack::StaticClass, TEXT("UMovieSceneTrack"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneTrack);
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneTrackIdentifier"), sizeof(FMovieSceneTrackIdentifier), Get_Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneTrackIdentifier"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneTrackIdentifier>, EStructFlags(0x00000001));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UUInt32Property(CPP_PROPERTY_BASE(Value, FMovieSceneTrackIdentifier), 0x0040000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneTrackIdentifier.h"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneTrackIdentifier.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier_CRC() { return 3744942503U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceID()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceID_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSequenceID"), sizeof(FMovieSceneSequenceID), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceID_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSequenceID"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSequenceID>, EStructFlags(0x00000001));
			UProperty* NewProp_Value = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Value"), RF_Public|RF_Transient|RF_MarkAsNative) UUInt32Property(CPP_PROPERTY_BASE(Value, FMovieSceneSequenceID), 0x0040000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequenceID.h"));
			MetaData->SetValue(NewProp_Value, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequenceID.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceID_CRC() { return 727795703U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationField()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationField_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvaluationField"), sizeof(FMovieSceneEvaluationField), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationField_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvaluationField"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEvaluationField>, EStructFlags(0x00000001));
			UProperty* NewProp_MetaData = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MetaData"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(MetaData, FMovieSceneEvaluationField), 0x0010000000000000);
			UProperty* NewProp_MetaData_Inner = new(EC_InternalUseOnlyConstructor, NewProp_MetaData, TEXT("MetaData"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData());
			UProperty* NewProp_Groups = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Groups"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Groups, FMovieSceneEvaluationField), 0x0010000000000000);
			UProperty* NewProp_Groups_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Groups, TEXT("Groups"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup());
			UProperty* NewProp_Ranges = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Ranges"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Ranges, FMovieSceneEvaluationField), 0x0010000000000000);
			UProperty* NewProp_Ranges_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Ranges, TEXT("Ranges"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FFloatRange());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Memory layout optimized primarily for speed of searching the applicable ranges"));
			MetaData->SetValue(NewProp_MetaData, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_MetaData, TEXT("ToolTip"), TEXT("Meta data that maps to entries in the 'Ranges' array."));
			MetaData->SetValue(NewProp_Groups, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_Groups, TEXT("ToolTip"), TEXT("Groups that store segment pointers for each of the above ranges. Each index has a corresponding entry in FMovieSceneEvaluationField::Ranges."));
			MetaData->SetValue(NewProp_Ranges, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_Ranges, TEXT("ToolTip"), TEXT("Ranges stored separately for fast (cache efficient) lookup. Each index has a corresponding entry in FMovieSceneEvaluationField::Groups."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationField_CRC() { return 617420115U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvaluationMetaData"), sizeof(FMovieSceneEvaluationMetaData), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvaluationMetaData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEvaluationMetaData>, EStructFlags(0x00000001));
			UProperty* NewProp_ActiveSequences = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ActiveSequences"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ActiveSequences, FMovieSceneEvaluationMetaData), 0x0010000000000000);
			UProperty* NewProp_ActiveSequences_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ActiveSequences, TEXT("ActiveSequences"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneSequenceID());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Informational meta data that applies to a given time range"));
			MetaData->SetValue(NewProp_ActiveSequences, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_ActiveSequences, TEXT("ToolTip"), TEXT("Array of sequences that are active in this time range."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationMetaData_CRC() { return 2610184287U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvaluationGroup"), sizeof(FMovieSceneEvaluationGroup), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvaluationGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEvaluationGroup>, EStructFlags(0x00000001));
			UProperty* NewProp_SegmentPtrLUT = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SegmentPtrLUT"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(SegmentPtrLUT, FMovieSceneEvaluationGroup), 0x0010000000000000);
			UProperty* NewProp_SegmentPtrLUT_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SegmentPtrLUT, TEXT("SegmentPtrLUT"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr());
			UProperty* NewProp_LUTIndices = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LUTIndices"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(LUTIndices, FMovieSceneEvaluationGroup), 0x0010000000000000);
			UProperty* NewProp_LUTIndices_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LUTIndices, TEXT("LUTIndices"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Holds segment pointers for all segments that are active for a given range of the sequence"));
			MetaData->SetValue(NewProp_SegmentPtrLUT, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_SegmentPtrLUT, TEXT("ToolTip"), TEXT("A grouping of evaluation pointers that occur in this range of the sequence"));
			MetaData->SetValue(NewProp_LUTIndices, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_LUTIndices, TEXT("ToolTip"), TEXT("Array of indices that define all the flush groups in the range."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroup_CRC() { return 532193653U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvaluationGroupLUTIndex"), sizeof(FMovieSceneEvaluationGroupLUTIndex), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvaluationGroupLUTIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEvaluationGroupLUTIndex>, EStructFlags(0x00000001));
			UProperty* NewProp_NumEvalPtrs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NumEvalPtrs"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumEvalPtrs, FMovieSceneEvaluationGroupLUTIndex), 0x0010000000000000);
			UProperty* NewProp_NumInitPtrs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NumInitPtrs"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumInitPtrs, FMovieSceneEvaluationGroupLUTIndex), 0x0010000000000000);
			UProperty* NewProp_LUTOffset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LUTOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(LUTOffset, FMovieSceneEvaluationGroupLUTIndex), 0x0010000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRequiresImmediateFlush, FMovieSceneEvaluationGroupLUTIndex, bool);
			UProperty* NewProp_bRequiresImmediateFlush = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bRequiresImmediateFlush"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRequiresImmediateFlush, FMovieSceneEvaluationGroupLUTIndex), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bRequiresImmediateFlush, FMovieSceneEvaluationGroupLUTIndex), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Lookup table index for a group of evaluation templates"));
			MetaData->SetValue(NewProp_NumEvalPtrs, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_NumEvalPtrs, TEXT("ToolTip"), TEXT("The number of evaluation pointers are stored after &FMovieSceneEvaluationGroup::SegmentPtrLUT[0] + LUTOffset + NumInitPtrs."));
			MetaData->SetValue(NewProp_NumInitPtrs, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_NumInitPtrs, TEXT("ToolTip"), TEXT("The number of initialization pointers are stored after &FMovieSceneEvaluationGroup::SegmentPtrLUT[0] + LUTOffset."));
			MetaData->SetValue(NewProp_LUTOffset, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_LUTOffset, TEXT("ToolTip"), TEXT("The offset within FMovieSceneEvaluationGroup::SegmentPtrLUT that this index starts"));
			MetaData->SetValue(NewProp_bRequiresImmediateFlush, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_bRequiresImmediateFlush, TEXT("ToolTip"), TEXT("Whether this group requires a flush of the execution stack immediately or not (generally false)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationGroupLUTIndex_CRC() { return 258118926U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvaluationFieldSegmentPtr"), sizeof(FMovieSceneEvaluationFieldSegmentPtr), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvaluationFieldSegmentPtr"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr(), new UScriptStruct::TCppStructOps<FMovieSceneEvaluationFieldSegmentPtr>, EStructFlags(0x00000001));
			UProperty* NewProp_SegmentIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SegmentIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SegmentIndex, FMovieSceneEvaluationFieldSegmentPtr), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A pointer to a particular segment of a track held within an evaluation template"));
			MetaData->SetValue(NewProp_SegmentIndex, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_SegmentIndex, TEXT("ToolTip"), TEXT("The index of the segment within the track (see FMovieSceneEvaluationTrack::Segments)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldSegmentPtr_CRC() { return 3870370015U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvaluationFieldTrackPtr"), sizeof(FMovieSceneEvaluationFieldTrackPtr), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvaluationFieldTrackPtr"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEvaluationFieldTrackPtr>, EStructFlags(0x00000001));
			UProperty* NewProp_TrackIdentifier = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrackIdentifier"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TrackIdentifier, FMovieSceneEvaluationFieldTrackPtr), 0x0010000000000000, Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier());
			UProperty* NewProp_SequenceID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SequenceID"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SequenceID, FMovieSceneEvaluationFieldTrackPtr), 0x0010000000000000, Z_Construct_UScriptStruct_FMovieSceneSequenceID());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A pointer to a track held within an evaluation template"));
			MetaData->SetValue(NewProp_TrackIdentifier, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_TrackIdentifier, TEXT("ToolTip"), TEXT("The Identifier of the track inside the track map (see FMovieSceneEvaluationTemplate::Tracks)"));
			MetaData->SetValue(NewProp_SequenceID, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationField.h"));
			MetaData->SetValue(NewProp_SequenceID, TEXT("ToolTip"), TEXT("The sequence ID that identifies to which sequence the track belongs"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationFieldTrackPtr_CRC() { return 2998339141U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSegment()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSegment_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSegment"), sizeof(FMovieSceneSegment), Get_Z_Construct_UScriptStruct_FMovieSceneSegment_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSegment"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSegment>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSegment.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Information about a singe segment of an evaluation track"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSegment_CRC() { return 1330418251U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSectionEvaluationData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FSectionEvaluationData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SectionEvaluationData"), sizeof(FSectionEvaluationData), Get_Z_Construct_UScriptStruct_FSectionEvaluationData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SectionEvaluationData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSectionEvaluationData>, EStructFlags(0x00000001));
			UProperty* NewProp_ForcedTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ForcedTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ForcedTime, FSectionEvaluationData), 0x0010000000000000);
			UProperty* NewProp_ImplIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ImplIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ImplIndex, FSectionEvaluationData), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSegment.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Evaluation data that specifies information about what to evaluate for a given template"));
			MetaData->SetValue(NewProp_ForcedTime, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSegment.h"));
			MetaData->SetValue(NewProp_ForcedTime, TEXT("ToolTip"), TEXT("A forced time to evaluate this section at"));
			MetaData->SetValue(NewProp_ImplIndex, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSegment.h"));
			MetaData->SetValue(NewProp_ImplIndex, TEXT("ToolTip"), TEXT("The implementation index we should evaluation (index into FMovieSceneEvaluationTrack::ChildTemplates)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSectionEvaluationData_CRC() { return 3706874533U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvalTemplateBase"), sizeof(FMovieSceneEvalTemplateBase), Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvalTemplateBase"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEvalTemplateBase>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvalTemplateBase.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Base structure used for all movie scene evaluation templates"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase_CRC() { return 2168509180U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEmptyStruct()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEmptyStruct_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEmptyStruct"), sizeof(FMovieSceneEmptyStruct), Get_Z_Construct_UScriptStruct_FMovieSceneEmptyStruct_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEmptyStruct"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEmptyStruct>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvalTemplateBase.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Empty struct used for serialization"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEmptyStruct_CRC() { return 3983903591U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvalTemplatePtr"), sizeof(FMovieSceneEvalTemplatePtr), Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvalTemplatePtr"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEvalTemplatePtr>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvalTemplate.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Custom serialized type that allows serializing structs derived from FMovieSceneEvalTemplate, and attempts to store an evaluation template in inline memory if possible"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr_CRC() { return 2496793767U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvalTemplate()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplate_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvalTemplate"), sizeof(FMovieSceneEvalTemplate), Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplate_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvalTemplate"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase(), new UScriptStruct::TCppStructOps<FMovieSceneEvalTemplate>, EStructFlags(0x00000001));
			UProperty* NewProp_CompletionMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CompletionMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(CompletionMode, FMovieSceneEvalTemplate), 0x0020080000000000, Z_Construct_UEnum_MovieScene_EMovieSceneCompletionMode());
			UProperty* NewProp_CompletionMode_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_CompletionMode, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvalTemplate.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure used for movie scene evaluation templates contained within a track. Typically these are defined as one per-section.\nSerialized into a FMovieSceneEvaluationTemplate contained within the sequence itself (for fast initialization at runtime).\nTemplates are executed in a 3-phase algorithm:\n            1) Initialize: (opt-in) Called at the start of the frame. Able to access mutable state from the playback context. Used to initialize any persistent state required for the evaluation pass.\n            2) Evaluate: Potentially called on a thread. Should (where possible) perform all costly evaluation logic, accumulating into execution tokens which will be executed at a later time on the game thread.\n            3) Execute: Called on all previously submitted execution tokens to apply the evaluated state to the movie scene player"));
			MetaData->SetValue(NewProp_CompletionMode, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvalTemplate.h"));
			MetaData->SetValue(NewProp_CompletionMode, TEXT("ToolTip"), TEXT("Enumeration value signifying whether we should restore any animated state stored by this entity when this eval tempalte is no longer evaluated"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvalTemplate_CRC() { return 1941118197U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneTrackImplementationPtr"), sizeof(FMovieSceneTrackImplementationPtr), Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneTrackImplementationPtr"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneTrackImplementationPtr>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneTrackImplementation.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Custom serialized type that attempts to store a track implementation template in inline memory if possible"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr_CRC() { return 1234032689U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneTrackImplementation()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementation_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneTrackImplementation"), sizeof(FMovieSceneTrackImplementation), Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementation_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneTrackImplementation"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FMovieSceneEvalTemplateBase(), new UScriptStruct::TCppStructOps<FMovieSceneTrackImplementation>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneTrackImplementation.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure that allows the implementation of setup/teardown/initialization/evaluation logic at the track level."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneTrackImplementation_CRC() { return 1004031463U; }
	UEnum* Z_Construct_UEnum_MovieScene_EEvaluationMethod()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UEnum_MovieScene_EEvaluationMethod_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EEvaluationMethod"), 0, Get_Z_Construct_UEnum_MovieScene_EEvaluationMethod_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEvaluationMethod"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EEvaluationMethod::Static")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EEvaluationMethod::Swept")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EEvaluationMethod::EEvaluationMethod_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EEvaluationMethod");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Static.ToolTip"), TEXT("Evaluation only ever occurs at a single time. Delta is irrelevant. Example: Basic curve eval, animation"));
			MetaData->SetValue(ReturnEnum, TEXT("Swept.ToolTip"), TEXT("Evaluation from one frame to the next must consider the entire swept delta range on the track. Example: Events"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enumeration to determine how a track should be evaluated"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_MovieScene_EEvaluationMethod_CRC() { return 1248484727U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvaluationTrack"), sizeof(FMovieSceneEvaluationTrack), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvaluationTrack"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEvaluationTrack>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEvaluateInPostroll, FMovieSceneEvaluationTrack, uint8);
			UProperty* NewProp_bEvaluateInPostroll = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEvaluateInPostroll"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEvaluateInPostroll, FMovieSceneEvaluationTrack), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(bEvaluateInPostroll, FMovieSceneEvaluationTrack), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEvaluateInPreroll, FMovieSceneEvaluationTrack, uint8);
			UProperty* NewProp_bEvaluateInPreroll = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEvaluateInPreroll"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEvaluateInPreroll, FMovieSceneEvaluationTrack), 0x0040000000000000, CPP_BOOL_PROPERTY_BITMASK(bEvaluateInPreroll, FMovieSceneEvaluationTrack), sizeof(uint8), false);
			UProperty* NewProp_EvaluationGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EvaluationGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(EvaluationGroup, FMovieSceneEvaluationTrack), 0x0040000000000000);
			UProperty* NewProp_TrackTemplate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TrackTemplate"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TrackTemplate, FMovieSceneEvaluationTrack), 0x0040000000000000, Z_Construct_UScriptStruct_FMovieSceneTrackImplementationPtr());
			UProperty* NewProp_ChildTemplates = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChildTemplates"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChildTemplates, FMovieSceneEvaluationTrack), 0x0040000000000000);
			UProperty* NewProp_ChildTemplates_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChildTemplates, TEXT("ChildTemplates"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneEvalTemplatePtr());
			UProperty* NewProp_Segments = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Segments, FMovieSceneEvaluationTrack), 0x0040000000000000);
			UProperty* NewProp_Segments_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Segments, TEXT("Segments"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneSegment());
			UProperty* NewProp_EvaluationMethod = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EvaluationMethod"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(EvaluationMethod, FMovieSceneEvaluationTrack), 0x0040000000000000, Z_Construct_UEnum_MovieScene_EEvaluationMethod());
			UProperty* NewProp_EvaluationMethod_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_EvaluationMethod, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_EvaluationPriority = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EvaluationPriority"), RF_Public|RF_Transient|RF_MarkAsNative) UUInt16Property(CPP_PROPERTY_BASE(EvaluationPriority, FMovieSceneEvaluationTrack), 0x0040000000000000);
			UProperty* NewProp_ObjectBindingID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ObjectBindingID"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ObjectBindingID, FMovieSceneEvaluationTrack), 0x0040000000000000, Z_Construct_UScriptStruct_FGuid());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Evaluation track that is stored within an evaluation template for a sequence.\nContains user-defined evaluation templates, and an optional track implementation"));
			MetaData->SetValue(NewProp_bEvaluateInPostroll, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(NewProp_bEvaluateInPostroll, TEXT("ToolTip"), TEXT("Whether this track is evaluated in postroll"));
			MetaData->SetValue(NewProp_bEvaluateInPreroll, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(NewProp_bEvaluateInPreroll, TEXT("ToolTip"), TEXT("Whether this track is evaluated in preroll"));
			MetaData->SetValue(NewProp_EvaluationGroup, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(NewProp_EvaluationGroup, TEXT("ToolTip"), TEXT("Flush group that determines whether this track belongs to a group of tracks"));
			MetaData->SetValue(NewProp_TrackTemplate, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(NewProp_TrackTemplate, TEXT("ToolTip"), TEXT("Domain-specific track implementation override."));
			MetaData->SetValue(NewProp_ChildTemplates, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(NewProp_ChildTemplates, TEXT("ToolTip"), TEXT("Domain-specific evaluation templates (normally 1 per section)"));
			MetaData->SetValue(NewProp_Segments, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(NewProp_Segments, TEXT("ToolTip"), TEXT("Array of segmented ranges contained within the track."));
			MetaData->SetValue(NewProp_EvaluationMethod, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(NewProp_EvaluationMethod, TEXT("ToolTip"), TEXT("Evaluation method - static or swept"));
			MetaData->SetValue(NewProp_EvaluationPriority, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(NewProp_EvaluationPriority, TEXT("ToolTip"), TEXT("Evaluation priority. Highest is evaluated first"));
			MetaData->SetValue(NewProp_ObjectBindingID, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTrack.h"));
			MetaData->SetValue(NewProp_ObjectBindingID, TEXT("ToolTip"), TEXT("ID of the possessable or spawnable within the UMovieScene this track belongs to, if any. Zero guid where this relates to a master track."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack_CRC() { return 450036260U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceTransform()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceTransform_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSequenceTransform"), sizeof(FMovieSceneSequenceTransform), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceTransform_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSequenceTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSequenceTransform>, EStructFlags(0x00000001));
			UProperty* NewProp_Offset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Offset"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Offset, FMovieSceneSequenceTransform), 0x0010000000000000);
			UProperty* NewProp_TimeScale = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TimeScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TimeScale, FMovieSceneSequenceTransform), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceTransform.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Movie scene sequence transform class that transforms from one time-space to another.\n\n@note The transform can be thought of as the top row of a 2x2 matrix, where the bottom row is the identity:\n                    | TimeScale     Offset  |\n                    | 0                     1               |\n\nAs such, traditional matrix mathematics can be applied to transform between different sequence's time-spaces.\nTransforms apply offset first, then time scale."));
			MetaData->SetValue(NewProp_Offset, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceTransform.h"));
			MetaData->SetValue(NewProp_Offset, TEXT("ToolTip"), TEXT("Scalar time offset applied before the scale"));
			MetaData->SetValue(NewProp_TimeScale, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceTransform.h"));
			MetaData->SetValue(NewProp_TimeScale, TEXT("ToolTip"), TEXT("The sequence's time scale (or play rate)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceTransform_CRC() { return 2264281298U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSectionParameters()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSectionParameters_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSectionParameters"), sizeof(FMovieSceneSectionParameters), Get_Z_Construct_UScriptStruct_FMovieSceneSectionParameters_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSectionParameters"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSectionParameters>, EStructFlags(0x00000001));
			UProperty* NewProp_PostrollTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PostrollTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PostrollTime, FMovieSceneSectionParameters), 0x0010000000000001);
			UProperty* NewProp_PrerollTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PrerollTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PrerollTime, FMovieSceneSectionParameters), 0x0010000000000001);
			UProperty* NewProp_TimeScale = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TimeScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TimeScale, FMovieSceneSectionParameters), 0x0010000000000001);
			UProperty* NewProp_StartOffset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("StartOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(StartOffset, FMovieSceneSectionParameters), 0x0010000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSectionParameters.h"));
			MetaData->SetValue(NewProp_PostrollTime, TEXT("Category"), TEXT("Timing"));
			MetaData->SetValue(NewProp_PostrollTime, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSectionParameters.h"));
			MetaData->SetValue(NewProp_PostrollTime, TEXT("ToolTip"), TEXT("Amount of time to evaluate the section after its actual physical end time."));
			MetaData->SetValue(NewProp_PrerollTime, TEXT("Category"), TEXT("Timing"));
			MetaData->SetValue(NewProp_PrerollTime, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSectionParameters.h"));
			MetaData->SetValue(NewProp_PrerollTime, TEXT("ToolTip"), TEXT("Amount of time to evaluate the section before its actual physical start time."));
			MetaData->SetValue(NewProp_TimeScale, TEXT("Category"), TEXT("Timing"));
			MetaData->SetValue(NewProp_TimeScale, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSectionParameters.h"));
			MetaData->SetValue(NewProp_TimeScale, TEXT("ToolTip"), TEXT("Playback time scaling factor."));
			MetaData->SetValue(NewProp_StartOffset, TEXT("Category"), TEXT("Clipping"));
			MetaData->SetValue(NewProp_StartOffset, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSectionParameters.h"));
			MetaData->SetValue(NewProp_StartOffset, TEXT("ToolTip"), TEXT("Number of seconds to skip at the beginning of the sub-sequence."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSectionParameters_CRC() { return 1486249941U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSequenceHierarchy"), sizeof(FMovieSceneSequenceHierarchy), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSequenceHierarchy"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSequenceHierarchy>, EStructFlags(0x00000001));
			UProperty* NewProp_Hierarchy = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Hierarchy"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(Hierarchy, FMovieSceneSequenceHierarchy), 0x0040000000000000);
			UProperty* NewProp_Hierarchy_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_Hierarchy, TEXT("Hierarchy_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UUInt32Property(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Hierarchy_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_Hierarchy, TEXT("Hierarchy"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode());
			UProperty* NewProp_SubSequences = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SubSequences"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(SubSequences, FMovieSceneSequenceHierarchy), 0x0040000000000000);
			UProperty* NewProp_SubSequences_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_SubSequences, TEXT("SubSequences_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UUInt32Property(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_SubSequences_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_SubSequences, TEXT("SubSequences"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneSubSequenceData());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure that stores hierarchical information pertaining to all sequences contained within a master sequence"));
			MetaData->SetValue(NewProp_Hierarchy, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_Hierarchy, TEXT("ToolTip"), TEXT("Structural information describing the structure of the sequence"));
			MetaData->SetValue(NewProp_SubSequences, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_SubSequences, TEXT("ToolTip"), TEXT("Map of all (recursive) sub sequences found in this template, keyed on sequence ID"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy_CRC() { return 2818019192U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSequenceHierarchyNode"), sizeof(FMovieSceneSequenceHierarchyNode), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSequenceHierarchyNode"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSequenceHierarchyNode>, EStructFlags(0x00000001));
			UProperty* NewProp_Children = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Children"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Children, FMovieSceneSequenceHierarchyNode), 0x0010000000000000);
			UProperty* NewProp_Children_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Children, TEXT("Children"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneSequenceID());
			UProperty* NewProp_ParentID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParentID"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ParentID, FMovieSceneSequenceHierarchyNode), 0x0010000000000000, Z_Construct_UScriptStruct_FMovieSceneSequenceID());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Simple structure specifying parent and child sequence IDs for any given sequences"));
			MetaData->SetValue(NewProp_Children, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_Children, TEXT("ToolTip"), TEXT("Array of child sequences contained within this sequence"));
			MetaData->SetValue(NewProp_ParentID, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_ParentID, TEXT("ToolTip"), TEXT("Movie scene sequence ID of this node's parent sequence"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchyNode_CRC() { return 1679643653U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSubSequenceData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSubSequenceData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSubSequenceData"), sizeof(FMovieSceneSubSequenceData), Get_Z_Construct_UScriptStruct_FMovieSceneSubSequenceData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSubSequenceData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSubSequenceData>, EStructFlags(0x00000001));
#if WITH_EDITORONLY_DATA
			UProperty* NewProp_ValidPlayRange = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ValidPlayRange"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ValidPlayRange, FMovieSceneSubSequenceData), 0x0010000800000000, Z_Construct_UScriptStruct_FFloatRange());
			UProperty* NewProp_SectionPath = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SectionPath"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(SectionPath, FMovieSceneSubSequenceData), 0x0010000800000000);
#endif // WITH_EDITORONLY_DATA
			UProperty* NewProp_DeterministicSequenceID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DeterministicSequenceID"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(DeterministicSequenceID, FMovieSceneSubSequenceData), 0x0010000000000000, Z_Construct_UScriptStruct_FMovieSceneSequenceID());
			UProperty* NewProp_SourceSequenceSignature = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SourceSequenceSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(SourceSequenceSignature, FMovieSceneSubSequenceData), 0x0010000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_RootToSequenceTransform = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RootToSequenceTransform"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RootToSequenceTransform, FMovieSceneSubSequenceData), 0x0010000000000000, Z_Construct_UScriptStruct_FMovieSceneSequenceTransform());
			UProperty* NewProp_Sequence = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Sequence"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Sequence, FMovieSceneSubSequenceData), 0x0010000000000000, Z_Construct_UClass_UMovieSceneSequence_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Sub sequence data that is stored within an evaluation template as a backreference to the originating sequence, and section"));
			MetaData->SetValue(NewProp_ValidPlayRange, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_ValidPlayRange, TEXT("ToolTip"), TEXT("This sub sequence's valid bounds according to its parent sub section. Clamped recursively during template generation"));
			MetaData->SetValue(NewProp_SectionPath, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_SectionPath, TEXT("ToolTip"), TEXT("This sequence's path within its movie scene"));
			MetaData->SetValue(NewProp_DeterministicSequenceID, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_DeterministicSequenceID, TEXT("ToolTip"), TEXT("This sequence's deterministic sequence ID. Used in editor to reduce the risk of collisions on recompilation"));
			MetaData->SetValue(NewProp_SourceSequenceSignature, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_SourceSequenceSignature, TEXT("ToolTip"), TEXT("Cached signature of the evaluation template"));
			MetaData->SetValue(NewProp_RootToSequenceTransform, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_RootToSequenceTransform, TEXT("ToolTip"), TEXT("Transform that transforms a given time from the sequences outer space, to its authored space."));
			MetaData->SetValue(NewProp_Sequence, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneSequenceHierarchy.h"));
			MetaData->SetValue(NewProp_Sequence, TEXT("ToolTip"), TEXT("The sequence that the sub section references"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSubSequenceData_CRC() { return 258766587U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("CachedMovieSceneEvaluationTemplate"), sizeof(FCachedMovieSceneEvaluationTemplate), Get_Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CachedMovieSceneEvaluationTemplate"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate(), new UScriptStruct::TCppStructOps<FCachedMovieSceneEvaluationTemplate>, EStructFlags(0x00000001));
#if WITH_EDITORONLY_DATA
			UProperty* NewProp_CachedSignatures = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CachedSignatures"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(CachedSignatures, FCachedMovieSceneEvaluationTemplate), 0x0040000800000000);
			UProperty* NewProp_CachedSignatures_Inner = new(EC_InternalUseOnlyConstructor, NewProp_CachedSignatures, TEXT("CachedSignatures"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000800000000, Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature());
			UProperty* NewProp_CachedCompilationParams = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CachedCompilationParams"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CachedCompilationParams, FCachedMovieSceneEvaluationTemplate), 0x0040000800000000, Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams());
#endif // WITH_EDITORONLY_DATA
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_CachedSignatures, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_CachedCompilationParams, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate_CRC() { return 2104792541U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneSequenceCachedSignature"), sizeof(FMovieSceneSequenceCachedSignature), Get_Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneSequenceCachedSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneSequenceCachedSignature>, EStructFlags(0x00000001));
			UProperty* NewProp_CachedSignature = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CachedSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CachedSignature, FMovieSceneSequenceCachedSignature), 0x0010000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_Sequence = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Sequence"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(Sequence, FMovieSceneSequenceCachedSignature), 0x0014000000000000, Z_Construct_UClass_UMovieSceneSequence_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_CachedSignature, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_Sequence, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneSequenceCachedSignature_CRC() { return 378314065U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneEvaluationTemplate"), sizeof(FMovieSceneEvaluationTemplate), Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneEvaluationTemplate"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneEvaluationTemplate>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bKeepStaleTracks, FMovieSceneEvaluationTemplate, uint8);
			UProperty* NewProp_bKeepStaleTracks = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bKeepStaleTracks"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bKeepStaleTracks, FMovieSceneEvaluationTemplate), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bKeepStaleTracks, FMovieSceneEvaluationTemplate), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHasLegacyTrackInstances, FMovieSceneEvaluationTemplate, uint8);
			UProperty* NewProp_bHasLegacyTrackInstances = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bHasLegacyTrackInstances"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHasLegacyTrackInstances, FMovieSceneEvaluationTemplate), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bHasLegacyTrackInstances, FMovieSceneEvaluationTemplate), sizeof(uint8), false);
			UProperty* NewProp_Ledger = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Ledger"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Ledger, FMovieSceneEvaluationTemplate), 0x0040000000000000, Z_Construct_UScriptStruct_FMovieSceneGenerationLedger());
			UProperty* NewProp_Hierarchy = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Hierarchy"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Hierarchy, FMovieSceneEvaluationTemplate), 0x0010000000000000, Z_Construct_UScriptStruct_FMovieSceneSequenceHierarchy());
			UProperty* NewProp_EvaluationField = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EvaluationField"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(EvaluationField, FMovieSceneEvaluationTemplate), 0x0010000000000000, Z_Construct_UScriptStruct_FMovieSceneEvaluationField());
			UProperty* NewProp_Tracks = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Tracks"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(Tracks, FMovieSceneEvaluationTemplate), 0x0040000000000000);
			UProperty* NewProp_Tracks_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_Tracks, TEXT("Tracks_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UUInt32Property(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_Tracks_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_Tracks, TEXT("Tracks"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000000000000, Z_Construct_UScriptStruct_FMovieSceneEvaluationTrack());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Template that is used for efficient runtime evaluation of a movie scene sequence. Potentially serialized into the asset."));
			MetaData->SetValue(NewProp_bKeepStaleTracks, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_bKeepStaleTracks, TEXT("ToolTip"), TEXT("Primarily used in editor to keep stale tracks around during template regeneration to ensure we can call OnEndEvaluation on them."));
			MetaData->SetValue(NewProp_bHasLegacyTrackInstances, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_bHasLegacyTrackInstances, TEXT("ToolTip"), TEXT("When set, this template contains legacy track instances that require the initialization of a legacy sequence instance"));
			MetaData->SetValue(NewProp_Ledger, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_Hierarchy, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_Hierarchy, TEXT("ToolTip"), TEXT("Map of all sequences found in this template (recursively)"));
			MetaData->SetValue(NewProp_EvaluationField, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_EvaluationField, TEXT("ToolTip"), TEXT("Evaluation field for efficient runtime evaluation"));
			MetaData->SetValue(NewProp_Tracks, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_Tracks, TEXT("ToolTip"), TEXT("Map of evaluation tracks from identifier to track"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneEvaluationTemplate_CRC() { return 561649886U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneGenerationLedger()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneGenerationLedger_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneGenerationLedger"), sizeof(FMovieSceneGenerationLedger), Get_Z_Construct_UScriptStruct_FMovieSceneGenerationLedger_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneGenerationLedger"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneGenerationLedger>, EStructFlags(0x00000001));
			UProperty* NewProp_LastTrackIdentifier = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LastTrackIdentifier"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LastTrackIdentifier, FMovieSceneGenerationLedger), 0x0010000000000000, Z_Construct_UScriptStruct_FMovieSceneTrackIdentifier());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
			MetaData->SetValue(NewProp_LastTrackIdentifier, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneEvaluationTemplate.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneGenerationLedger_CRC() { return 3411879681U; }
	UClass* Z_Construct_UClass_UMovieSceneSequence_NoRegister()
	{
		return UMovieSceneSequence::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneSequence()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneSignedObject();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneSequence::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bParentContextsAreSignificant, UMovieSceneSequence, bool);
				UProperty* NewProp_bParentContextsAreSignificant = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bParentContextsAreSignificant"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bParentContextsAreSignificant, UMovieSceneSequence), 0x0020080000000000, CPP_BOOL_PROPERTY_BITMASK(bParentContextsAreSignificant, UMovieSceneSequence), sizeof(bool), true);
				UProperty* NewProp_TemplateParameters = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("TemplateParameters"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TemplateParameters, UMovieSceneSequence), 0x0010000000000000, Z_Construct_UScriptStruct_FMovieSceneTrackCompilationParams());
				UProperty* NewProp_EvaluationTemplate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EvaluationTemplate"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(EvaluationTemplate, UMovieSceneSequence), 0x0010000000000000, Z_Construct_UScriptStruct_FCachedMovieSceneEvaluationTemplate());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneSequence.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequence.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Abstract base class for movie scene animations (C++ version)."));
				MetaData->SetValue(NewProp_bParentContextsAreSignificant, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequence.h"));
				MetaData->SetValue(NewProp_bParentContextsAreSignificant, TEXT("ToolTip"), TEXT("true if the result of GetParentObject is significant in object resolution for LocateBoundObjects.\nWhen true, if GetParentObject returns nullptr, the PlaybackContext will be used for LocateBoundObjects, other wise the object's parent will be used\nWhen false, the PlaybackContext will always be used for LocateBoundObjects"));
				MetaData->SetValue(NewProp_TemplateParameters, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequence.h"));
				MetaData->SetValue(NewProp_EvaluationTemplate, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneSequence.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneSequence(Z_Construct_UClass_UMovieSceneSequence, &UMovieSceneSequence::StaticClass, TEXT("UMovieSceneSequence"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneSequence);
	UClass* Z_Construct_UClass_UMovieSceneNameableTrack_NoRegister()
	{
		return UMovieSceneNameableTrack::StaticClass();
	}
	UClass* Z_Construct_UClass_UMovieSceneNameableTrack()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UMovieSceneTrack();
			Z_Construct_UPackage__Script_MovieScene();
			OuterClass = UMovieSceneNameableTrack::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20280081;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_DisplayName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DisplayName"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(DisplayName, UMovieSceneNameableTrack), 0x0040000800000001);
#endif // WITH_EDITORONLY_DATA
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("MovieSceneNameableTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneNameableTrack.h"));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("Base class for movie scene tracks that can be renamed by the user."));
				MetaData->SetValue(NewProp_DisplayName, TEXT("Category"), TEXT("Track"));
				MetaData->SetValue(NewProp_DisplayName, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneNameableTrack.h"));
				MetaData->SetValue(NewProp_DisplayName, TEXT("ToolTip"), TEXT("The track's human readable display name."));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UMovieSceneNameableTrack(Z_Construct_UClass_UMovieSceneNameableTrack, &UMovieSceneNameableTrack::StaticClass, TEXT("UMovieSceneNameableTrack"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UMovieSceneNameableTrack);
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneLegacyTrackInstanceTemplate"), sizeof(FMovieSceneLegacyTrackInstanceTemplate), Get_Z_Construct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneLegacyTrackInstanceTemplate"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FMovieSceneEvalTemplate(), new UScriptStruct::TCppStructOps<FMovieSceneLegacyTrackInstanceTemplate>, EStructFlags(0x00000205));
			UProperty* NewProp_Track = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Track"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Track, FMovieSceneLegacyTrackInstanceTemplate), 0x0010000000080008, Z_Construct_UClass_UMovieSceneTrack_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneLegacyTrackInstanceTemplate.h"));
			MetaData->SetValue(NewProp_Track, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_Track, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieSceneLegacyTrackInstanceTemplate.h"));
			MetaData->SetValue(NewProp_Track, TEXT("NativeConst"), TEXT(""));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneLegacyTrackInstanceTemplate_CRC() { return 985728233U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieScenePropertySectionData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieScenePropertySectionData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieScenePropertySectionData"), sizeof(FMovieScenePropertySectionData), Get_Z_Construct_UScriptStruct_FMovieScenePropertySectionData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieScenePropertySectionData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieScenePropertySectionData>, EStructFlags(0x00000001));
			UProperty* NewProp_FunctionName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FunctionName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(FunctionName, FMovieScenePropertySectionData), 0x0040000000000000);
			UProperty* NewProp_PropertyPath = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PropertyPath"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PropertyPath, FMovieScenePropertySectionData), 0x0040000000000000);
			UProperty* NewProp_PropertyName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PropertyName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(PropertyName, FMovieScenePropertySectionData), 0x0040000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieScenePropertyTemplate.h"));
			MetaData->SetValue(NewProp_FunctionName, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieScenePropertyTemplate.h"));
			MetaData->SetValue(NewProp_PropertyPath, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieScenePropertyTemplate.h"));
			MetaData->SetValue(NewProp_PropertyName, TEXT("ModuleRelativePath"), TEXT("Public/Evaluation/MovieScenePropertyTemplate.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieScenePropertySectionData_CRC() { return 1575949523U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMovieSceneKeyStruct()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_MovieScene();
		extern uint32 Get_Z_Construct_UScriptStruct_FMovieSceneKeyStruct_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MovieSceneKeyStruct"), sizeof(FMovieSceneKeyStruct), Get_Z_Construct_UScriptStruct_FMovieSceneKeyStruct_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MovieSceneKeyStruct"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMovieSceneKeyStruct>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Public/MovieSceneKeyStruct.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Base class for movie scene section key structs that need to manually\nhave their changes propagated to key values."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMovieSceneKeyStruct_CRC() { return 846070137U; }
	UPackage* Z_Construct_UPackage__Script_MovieScene()
	{
		static UPackage* ReturnPackage = NULL;
		if (!ReturnPackage)
		{
			ReturnPackage = CastChecked<UPackage>(StaticFindObjectFast(UPackage::StaticClass(), NULL, FName(TEXT("/Script/MovieScene")), false, false));
			ReturnPackage->SetPackageFlags(PKG_CompiledIn | 0x00000000);
			FGuid Guid;
			Guid.A = 0x532616EA;
			Guid.B = 0x876B5357;
			Guid.C = 0x00000000;
			Guid.D = 0x00000000;
			ReturnPackage->SetGuid(Guid);

			Z_Construct_UDelegateFunction_MovieScene_OnMovieSceneSequencePlayerEvent__DelegateSignature();
		}
		return ReturnPackage;
	}
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
