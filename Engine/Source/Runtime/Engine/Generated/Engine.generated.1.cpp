// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Boilerplate C++ definitions for a single module.
	This is automatically generated by UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Engine.generated.dep.h"
PRAGMA_DISABLE_OPTIMIZATION
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCode1Engine() {}
FName ENGINE_AddDebugText = FName(TEXT("AddDebugText"));
FName ENGINE_BlueprintInitializeAnimation = FName(TEXT("BlueprintInitializeAnimation"));
FName ENGINE_BlueprintModifyCamera = FName(TEXT("BlueprintModifyCamera"));
FName ENGINE_BlueprintModifyPostProcess = FName(TEXT("BlueprintModifyPostProcess"));
FName ENGINE_BlueprintPostEvaluateAnimation = FName(TEXT("BlueprintPostEvaluateAnimation"));
FName ENGINE_BlueprintUpdateAnimation = FName(TEXT("BlueprintUpdateAnimation"));
FName ENGINE_BlueprintUpdateCamera = FName(TEXT("BlueprintUpdateCamera"));
FName ENGINE_BlueprintUpdateCameraShake = FName(TEXT("BlueprintUpdateCameraShake"));
FName ENGINE_CanJumpInternal = FName(TEXT("CanJumpInternal"));
FName ENGINE_CanSpectate = FName(TEXT("CanSpectate"));
FName ENGINE_ChoosePlayerStart = FName(TEXT("ChoosePlayerStart"));
FName ENGINE_ClientAckGoodMove = FName(TEXT("ClientAckGoodMove"));
FName ENGINE_ClientAddTextureStreamingLoc = FName(TEXT("ClientAddTextureStreamingLoc"));
FName ENGINE_ClientAdjustPosition = FName(TEXT("ClientAdjustPosition"));
FName ENGINE_ClientAdjustRootMotionPosition = FName(TEXT("ClientAdjustRootMotionPosition"));
FName ENGINE_ClientAdjustRootMotionSourcePosition = FName(TEXT("ClientAdjustRootMotionSourcePosition"));
FName ENGINE_ClientCancelPendingMapChange = FName(TEXT("ClientCancelPendingMapChange"));
FName ENGINE_ClientCapBandwidth = FName(TEXT("ClientCapBandwidth"));
FName ENGINE_ClientCheatFly = FName(TEXT("ClientCheatFly"));
FName ENGINE_ClientCheatGhost = FName(TEXT("ClientCheatGhost"));
FName ENGINE_ClientCheatWalk = FName(TEXT("ClientCheatWalk"));
FName ENGINE_ClientClearCameraLensEffects = FName(TEXT("ClientClearCameraLensEffects"));
FName ENGINE_ClientCommitMapChange = FName(TEXT("ClientCommitMapChange"));
FName ENGINE_ClientEnableNetworkVoice = FName(TEXT("ClientEnableNetworkVoice"));
FName ENGINE_ClientEndOnlineSession = FName(TEXT("ClientEndOnlineSession"));
FName ENGINE_ClientFlushLevelStreaming = FName(TEXT("ClientFlushLevelStreaming"));
FName ENGINE_ClientForceGarbageCollection = FName(TEXT("ClientForceGarbageCollection"));
FName ENGINE_ClientGameEnded = FName(TEXT("ClientGameEnded"));
FName ENGINE_ClientGotoState = FName(TEXT("ClientGotoState"));
FName ENGINE_ClientIgnoreLookInput = FName(TEXT("ClientIgnoreLookInput"));
FName ENGINE_ClientIgnoreMoveInput = FName(TEXT("ClientIgnoreMoveInput"));
FName ENGINE_ClientMessage = FName(TEXT("ClientMessage"));
FName ENGINE_ClientMutePlayer = FName(TEXT("ClientMutePlayer"));
FName ENGINE_ClientPlayCameraAnim = FName(TEXT("ClientPlayCameraAnim"));
FName ENGINE_ClientPlayCameraShake = FName(TEXT("ClientPlayCameraShake"));
FName ENGINE_ClientPlayForceFeedback = FName(TEXT("ClientPlayForceFeedback"));
FName ENGINE_ClientPlaySound = FName(TEXT("ClientPlaySound"));
FName ENGINE_ClientPlaySoundAtLocation = FName(TEXT("ClientPlaySoundAtLocation"));
FName ENGINE_ClientPrepareMapChange = FName(TEXT("ClientPrepareMapChange"));
FName ENGINE_ClientPrestreamTextures = FName(TEXT("ClientPrestreamTextures"));
FName ENGINE_ClientReceiveLocalizedMessage = FName(TEXT("ClientReceiveLocalizedMessage"));
FName ENGINE_ClientRepObjRef = FName(TEXT("ClientRepObjRef"));
FName ENGINE_ClientReset = FName(TEXT("ClientReset"));
FName ENGINE_ClientRestart = FName(TEXT("ClientRestart"));
FName ENGINE_ClientRetryClientRestart = FName(TEXT("ClientRetryClientRestart"));
FName ENGINE_ClientReturnToMainMenu = FName(TEXT("ClientReturnToMainMenu"));
FName ENGINE_ClientSetBlockOnAsyncLoading = FName(TEXT("ClientSetBlockOnAsyncLoading"));
FName ENGINE_ClientSetCameraFade = FName(TEXT("ClientSetCameraFade"));
FName ENGINE_ClientSetCameraMode = FName(TEXT("ClientSetCameraMode"));
FName ENGINE_ClientSetCinematicMode = FName(TEXT("ClientSetCinematicMode"));
FName ENGINE_ClientSetForceMipLevelsToBeResident = FName(TEXT("ClientSetForceMipLevelsToBeResident"));
FName ENGINE_ClientSetHUD = FName(TEXT("ClientSetHUD"));
FName ENGINE_ClientSetLocation = FName(TEXT("ClientSetLocation"));
FName ENGINE_ClientSetRotation = FName(TEXT("ClientSetRotation"));
FName ENGINE_ClientSetSpectatorWaiting = FName(TEXT("ClientSetSpectatorWaiting"));
FName ENGINE_ClientSetViewTarget = FName(TEXT("ClientSetViewTarget"));
FName ENGINE_ClientSpawnCameraLensEffect = FName(TEXT("ClientSpawnCameraLensEffect"));
FName ENGINE_ClientStartOnlineSession = FName(TEXT("ClientStartOnlineSession"));
FName ENGINE_ClientStopCameraAnim = FName(TEXT("ClientStopCameraAnim"));
FName ENGINE_ClientStopCameraShake = FName(TEXT("ClientStopCameraShake"));
FName ENGINE_ClientStopForceFeedback = FName(TEXT("ClientStopForceFeedback"));
FName ENGINE_ClientTeamMessage = FName(TEXT("ClientTeamMessage"));
FName ENGINE_ClientTravelInternal = FName(TEXT("ClientTravelInternal"));
FName ENGINE_ClientUnmutePlayer = FName(TEXT("ClientUnmutePlayer"));
FName ENGINE_ClientUpdateLevelStreamingStatus = FName(TEXT("ClientUpdateLevelStreamingStatus"));
FName ENGINE_ClientVeryShortAdjustPosition = FName(TEXT("ClientVeryShortAdjustPosition"));
FName ENGINE_ClientVoiceHandshakeComplete = FName(TEXT("ClientVoiceHandshakeComplete"));
FName ENGINE_ClientWasKicked = FName(TEXT("ClientWasKicked"));
FName ENGINE_FindPlayerStart = FName(TEXT("FindPlayerStart"));
FName ENGINE_GetBindingName = FName(TEXT("GetBindingName"));
FName ENGINE_GetCurves = FName(TEXT("GetCurves"));
FName ENGINE_GetCurveValue = FName(TEXT("GetCurveValue"));
FName ENGINE_GetDefaultPawnClassForController = FName(TEXT("GetDefaultPawnClassForController"));
FName ENGINE_GetNotifyName = FName(TEXT("GetNotifyName"));
FName ENGINE_HandleNetworkError = FName(TEXT("HandleNetworkError"));
FName ENGINE_HandleStartingNewPlayer = FName(TEXT("HandleStartingNewPlayer"));
FName ENGINE_HandleTravelError = FName(TEXT("HandleTravelError"));
FName ENGINE_InitializeHUDForPlayer = FName(TEXT("InitializeHUDForPlayer"));
FName ENGINE_InitStartSpot = FName(TEXT("InitStartSpot"));
FName ENGINE_K2_OnBecomeViewTarget = FName(TEXT("K2_OnBecomeViewTarget"));
FName ENGINE_K2_OnChangeName = FName(TEXT("K2_OnChangeName"));
FName ENGINE_K2_OnEndCrouch = FName(TEXT("K2_OnEndCrouch"));
FName ENGINE_K2_OnEndViewTarget = FName(TEXT("K2_OnEndViewTarget"));
FName ENGINE_K2_OnLogout = FName(TEXT("K2_OnLogout"));
FName ENGINE_K2_OnMovementModeChanged = FName(TEXT("K2_OnMovementModeChanged"));
FName ENGINE_K2_OnReset = FName(TEXT("K2_OnReset"));
FName ENGINE_K2_OnRestartPlayer = FName(TEXT("K2_OnRestartPlayer"));
FName ENGINE_K2_OnSetMatchState = FName(TEXT("K2_OnSetMatchState"));
FName ENGINE_K2_OnStartCrouch = FName(TEXT("K2_OnStartCrouch"));
FName ENGINE_K2_OnSwapPlayerControllers = FName(TEXT("K2_OnSwapPlayerControllers"));
FName ENGINE_K2_PostLogin = FName(TEXT("K2_PostLogin"));
FName ENGINE_K2_UpdateCustomMovement = FName(TEXT("K2_UpdateCustomMovement"));
FName ENGINE_LevelReset = FName(TEXT("LevelReset"));
FName ENGINE_MustSpectate = FName(TEXT("MustSpectate"));
FName ENGINE_OnJumped = FName(TEXT("OnJumped"));
FName ENGINE_OnLanded = FName(TEXT("OnLanded"));
FName ENGINE_OnLaunched = FName(TEXT("OnLaunched"));
FName ENGINE_OnPhotographyMultiPartCaptureEnd = FName(TEXT("OnPhotographyMultiPartCaptureEnd"));
FName ENGINE_OnPhotographyMultiPartCaptureStart = FName(TEXT("OnPhotographyMultiPartCaptureStart"));
FName ENGINE_OnPhotographySessionEnd = FName(TEXT("OnPhotographySessionEnd"));
FName ENGINE_OnPhotographySessionStart = FName(TEXT("OnPhotographySessionStart"));
FName ENGINE_OnServerStartedVisualLogger = FName(TEXT("OnServerStartedVisualLogger"));
FName ENGINE_OnWalkingOffLedge = FName(TEXT("OnWalkingOffLedge"));
FName ENGINE_OverridePSTemplate = FName(TEXT("OverridePSTemplate"));
FName ENGINE_PhotographyCameraModify = FName(TEXT("PhotographyCameraModify"));
FName ENGINE_PlayerCanRestart = FName(TEXT("PlayerCanRestart"));
FName ENGINE_ReadyToEndMatch = FName(TEXT("ReadyToEndMatch"));
FName ENGINE_ReadyToStartMatch = FName(TEXT("ReadyToStartMatch"));
FName ENGINE_ReceiveActorBeginCursorOver = FName(TEXT("ReceiveActorBeginCursorOver"));
FName ENGINE_ReceiveActorBeginOverlap = FName(TEXT("ReceiveActorBeginOverlap"));
FName ENGINE_ReceiveActorEndCursorOver = FName(TEXT("ReceiveActorEndCursorOver"));
FName ENGINE_ReceiveActorEndOverlap = FName(TEXT("ReceiveActorEndOverlap"));
FName ENGINE_ReceiveActorOnClicked = FName(TEXT("ReceiveActorOnClicked"));
FName ENGINE_ReceiveActorOnInputTouchBegin = FName(TEXT("ReceiveActorOnInputTouchBegin"));
FName ENGINE_ReceiveActorOnInputTouchEnd = FName(TEXT("ReceiveActorOnInputTouchEnd"));
FName ENGINE_ReceiveActorOnInputTouchEnter = FName(TEXT("ReceiveActorOnInputTouchEnter"));
FName ENGINE_ReceiveActorOnInputTouchLeave = FName(TEXT("ReceiveActorOnInputTouchLeave"));
FName ENGINE_ReceiveActorOnReleased = FName(TEXT("ReceiveActorOnReleased"));
FName ENGINE_ReceiveAnyDamage = FName(TEXT("ReceiveAnyDamage"));
FName ENGINE_ReceiveBeginPlay = FName(TEXT("ReceiveBeginPlay"));
FName ENGINE_ReceiveCopyProperties = FName(TEXT("ReceiveCopyProperties"));
FName ENGINE_Received_Notify = FName(TEXT("Received_Notify"));
FName ENGINE_Received_NotifyBegin = FName(TEXT("Received_NotifyBegin"));
FName ENGINE_Received_NotifyEnd = FName(TEXT("Received_NotifyEnd"));
FName ENGINE_Received_NotifyTick = FName(TEXT("Received_NotifyTick"));
FName ENGINE_ReceiveDestroyed = FName(TEXT("ReceiveDestroyed"));
FName ENGINE_ReceiveDrawHUD = FName(TEXT("ReceiveDrawHUD"));
FName ENGINE_ReceiveEndPlay = FName(TEXT("ReceiveEndPlay"));
FName ENGINE_ReceiveHit = FName(TEXT("ReceiveHit"));
FName ENGINE_ReceiveHitBoxBeginCursorOver = FName(TEXT("ReceiveHitBoxBeginCursorOver"));
FName ENGINE_ReceiveHitBoxClick = FName(TEXT("ReceiveHitBoxClick"));
FName ENGINE_ReceiveHitBoxEndCursorOver = FName(TEXT("ReceiveHitBoxEndCursorOver"));
FName ENGINE_ReceiveHitBoxRelease = FName(TEXT("ReceiveHitBoxRelease"));
FName ENGINE_ReceiveInit = FName(TEXT("ReceiveInit"));
FName ENGINE_ReceiveInitCheatManager = FName(TEXT("ReceiveInitCheatManager"));
FName ENGINE_ReceiveInstigatedAnyDamage = FName(TEXT("ReceiveInstigatedAnyDamage"));
FName ENGINE_ReceiveIsFinished = FName(TEXT("ReceiveIsFinished"));
FName ENGINE_ReceiveOnActivate = FName(TEXT("ReceiveOnActivate"));
FName ENGINE_ReceiveOnActorSelected = FName(TEXT("ReceiveOnActorSelected"));
FName ENGINE_ReceiveOnDeactivate = FName(TEXT("ReceiveOnDeactivate"));
FName ENGINE_ReceiveOverrideWith = FName(TEXT("ReceiveOverrideWith"));
FName ENGINE_ReceivePlayShake = FName(TEXT("ReceivePlayShake"));
FName ENGINE_ReceivePointDamage = FName(TEXT("ReceivePointDamage"));
FName ENGINE_ReceivePossessed = FName(TEXT("ReceivePossessed"));
FName ENGINE_ReceiveRadialDamage = FName(TEXT("ReceiveRadialDamage"));
FName ENGINE_ReceiveShutdown = FName(TEXT("ReceiveShutdown"));
FName ENGINE_ReceiveSmartLinkReached = FName(TEXT("ReceiveSmartLinkReached"));
FName ENGINE_ReceiveStopShake = FName(TEXT("ReceiveStopShake"));
FName ENGINE_ReceiveTick = FName(TEXT("ReceiveTick"));
FName ENGINE_ReceiveUnpossessed = FName(TEXT("ReceiveUnpossessed"));
FName ENGINE_ReceiveUpdate = FName(TEXT("ReceiveUpdate"));
FName ENGINE_RemoveAllDebugStrings = FName(TEXT("RemoveAllDebugStrings"));
FName ENGINE_RemoveDebugText = FName(TEXT("RemoveDebugText"));
FName ENGINE_ServerAcknowledgePossession = FName(TEXT("ServerAcknowledgePossession"));
FName ENGINE_ServerCamera = FName(TEXT("ServerCamera"));
FName ENGINE_ServerChangeName = FName(TEXT("ServerChangeName"));
FName ENGINE_ServerCheckClientPossession = FName(TEXT("ServerCheckClientPossession"));
FName ENGINE_ServerCheckClientPossessionReliable = FName(TEXT("ServerCheckClientPossessionReliable"));
FName ENGINE_ServerMove = FName(TEXT("ServerMove"));
FName ENGINE_ServerMoveDual = FName(TEXT("ServerMoveDual"));
FName ENGINE_ServerMoveDualHybridRootMotion = FName(TEXT("ServerMoveDualHybridRootMotion"));
FName ENGINE_ServerMoveOld = FName(TEXT("ServerMoveOld"));
FName ENGINE_ServerMutePlayer = FName(TEXT("ServerMutePlayer"));
FName ENGINE_ServerNotifyLoadedWorld = FName(TEXT("ServerNotifyLoadedWorld"));
FName ENGINE_ServerPause = FName(TEXT("ServerPause"));
FName ENGINE_ServerRestartPlayer = FName(TEXT("ServerRestartPlayer"));
FName ENGINE_ServerSetSpectatorLocation = FName(TEXT("ServerSetSpectatorLocation"));
FName ENGINE_ServerSetSpectatorWaiting = FName(TEXT("ServerSetSpectatorWaiting"));
FName ENGINE_ServerShortTimeout = FName(TEXT("ServerShortTimeout"));
FName ENGINE_ServerToggleAILogging = FName(TEXT("ServerToggleAILogging"));
FName ENGINE_ServerUnmutePlayer = FName(TEXT("ServerUnmutePlayer"));
FName ENGINE_ServerUpdateCamera = FName(TEXT("ServerUpdateCamera"));
FName ENGINE_ServerUpdateLevelVisibility = FName(TEXT("ServerUpdateLevelVisibility"));
FName ENGINE_ServerVerifyViewTarget = FName(TEXT("ServerVerifyViewTarget"));
FName ENGINE_ServerViewNextPlayer = FName(TEXT("ServerViewNextPlayer"));
FName ENGINE_ServerViewPrevPlayer = FName(TEXT("ServerViewPrevPlayer"));
FName ENGINE_ServerViewSelf = FName(TEXT("ServerViewSelf"));
FName ENGINE_ShouldReset = FName(TEXT("ShouldReset"));
FName ENGINE_SpawnDefaultPawnAtTransform = FName(TEXT("SpawnDefaultPawnAtTransform"));
FName ENGINE_SpawnDefaultPawnFor = FName(TEXT("SpawnDefaultPawnFor"));
FName ENGINE_UserConstructionScript = FName(TEXT("UserConstructionScript"));
FName ENGINE_WorldOriginLocationChanged = FName(TEXT("WorldOriginLocationChanged"));
class UScriptStruct* FVector_NetQuantizeNormal::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantizeNormal();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantizeNormal_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVector_NetQuantizeNormal, Z_Construct_UPackage__Script_Engine(), TEXT("Vector_NetQuantizeNormal"), sizeof(FVector_NetQuantizeNormal), Get_Z_Construct_UScriptStruct_FVector_NetQuantizeNormal_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVector_NetQuantizeNormal(FVector_NetQuantizeNormal::StaticStruct, TEXT("/Script/Engine"), TEXT("Vector_NetQuantizeNormal"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantizeNormal
{
	FScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantizeNormal()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Vector_NetQuantizeNormal")),new UScriptStruct::TCppStructOps<FVector_NetQuantizeNormal>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantizeNormal;
class UScriptStruct* FVector_NetQuantize100::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantize100();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantize100_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVector_NetQuantize100, Z_Construct_UPackage__Script_Engine(), TEXT("Vector_NetQuantize100"), sizeof(FVector_NetQuantize100), Get_Z_Construct_UScriptStruct_FVector_NetQuantize100_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVector_NetQuantize100(FVector_NetQuantize100::StaticStruct, TEXT("/Script/Engine"), TEXT("Vector_NetQuantize100"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantize100
{
	FScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantize100()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Vector_NetQuantize100")),new UScriptStruct::TCppStructOps<FVector_NetQuantize100>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantize100;
class UScriptStruct* FVector_NetQuantize10::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantize10();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantize10_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVector_NetQuantize10, Z_Construct_UPackage__Script_Engine(), TEXT("Vector_NetQuantize10"), sizeof(FVector_NetQuantize10), Get_Z_Construct_UScriptStruct_FVector_NetQuantize10_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVector_NetQuantize10(FVector_NetQuantize10::StaticStruct, TEXT("/Script/Engine"), TEXT("Vector_NetQuantize10"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantize10
{
	FScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantize10()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Vector_NetQuantize10")),new UScriptStruct::TCppStructOps<FVector_NetQuantize10>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantize10;
class UScriptStruct* FVector_NetQuantize::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantize();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantize_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVector_NetQuantize, Z_Construct_UPackage__Script_Engine(), TEXT("Vector_NetQuantize"), sizeof(FVector_NetQuantize), Get_Z_Construct_UScriptStruct_FVector_NetQuantize_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVector_NetQuantize(FVector_NetQuantize::StaticStruct, TEXT("/Script/Engine"), TEXT("Vector_NetQuantize"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantize
{
	FScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantize()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Vector_NetQuantize")),new UScriptStruct::TCppStructOps<FVector_NetQuantize>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVector_NetQuantize;
class UScriptStruct* FFastArraySerializer::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFastArraySerializer();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFastArraySerializer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFastArraySerializer, Z_Construct_UPackage__Script_Engine(), TEXT("FastArraySerializer"), sizeof(FFastArraySerializer), Get_Z_Construct_UScriptStruct_FFastArraySerializer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFastArraySerializer(FFastArraySerializer::StaticStruct, TEXT("/Script/Engine"), TEXT("FastArraySerializer"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFastArraySerializer
{
	FScriptStruct_Engine_StaticRegisterNativesFFastArraySerializer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FastArraySerializer")),new UScriptStruct::TCppStructOps<FFastArraySerializer>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFastArraySerializer;
class UScriptStruct* FFastArraySerializerItem::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFastArraySerializerItem();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFastArraySerializerItem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFastArraySerializerItem, Z_Construct_UPackage__Script_Engine(), TEXT("FastArraySerializerItem"), sizeof(FFastArraySerializerItem), Get_Z_Construct_UScriptStruct_FFastArraySerializerItem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFastArraySerializerItem(FFastArraySerializerItem::StaticStruct, TEXT("/Script/Engine"), TEXT("FastArraySerializerItem"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFastArraySerializerItem
{
	FScriptStruct_Engine_StaticRegisterNativesFFastArraySerializerItem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FastArraySerializerItem")),new UScriptStruct::TCppStructOps<FFastArraySerializerItem>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFastArraySerializerItem;
static class UEnum* EMeshBufferAccess_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshBufferAccess();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMeshBufferAccess, Z_Construct_UPackage__Script_Engine(), TEXT("EMeshBufferAccess"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMeshBufferAccess(EMeshBufferAccess_StaticEnum, TEXT("/Script/Engine"), TEXT("EMeshBufferAccess"), false, nullptr, nullptr);
static class UEnum* ESpawnActorCollisionHandlingMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESpawnActorCollisionHandlingMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESpawnActorCollisionHandlingMethod, Z_Construct_UPackage__Script_Engine(), TEXT("ESpawnActorCollisionHandlingMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESpawnActorCollisionHandlingMethod(ESpawnActorCollisionHandlingMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("ESpawnActorCollisionHandlingMethod"), false, nullptr, nullptr);
static class UEnum* EConstraintFrame_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EConstraintFrame();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EConstraintFrame, Z_Construct_UPackage__Script_Engine(), TEXT("EConstraintFrame"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EConstraintFrame(EConstraintFrame_StaticEnum, TEXT("/Script/Engine"), TEXT("EConstraintFrame"), false, nullptr, nullptr);
static class UEnum* EAngularConstraintMotion_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAngularConstraintMotion();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAngularConstraintMotion, Z_Construct_UPackage__Script_Engine(), TEXT("EAngularConstraintMotion"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAngularConstraintMotion(EAngularConstraintMotion_StaticEnum, TEXT("/Script/Engine"), TEXT("EAngularConstraintMotion"), false, nullptr, nullptr);
static class UEnum* EComponentSocketType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EComponentSocketType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EComponentSocketType, Z_Construct_UPackage__Script_Engine(), TEXT("EComponentSocketType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EComponentSocketType(EComponentSocketType_StaticEnum, TEXT("/Script/Engine"), TEXT("EComponentSocketType"), false, nullptr, nullptr);
static class UEnum* EComponentMobility_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EComponentMobility();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EComponentMobility, Z_Construct_UPackage__Script_Engine(), TEXT("EComponentMobility"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EComponentMobility(EComponentMobility_StaticEnum, TEXT("/Script/Engine"), TEXT("EComponentMobility"), false, nullptr, nullptr);
static class UEnum* EPhysicalSurface_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysicalSurface();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EPhysicalSurface, Z_Construct_UPackage__Script_Engine(), TEXT("EPhysicalSurface"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPhysicalSurface(EPhysicalSurface_StaticEnum, TEXT("/Script/Engine"), TEXT("EPhysicalSurface"), false, nullptr, nullptr);
static class UEnum* EWalkableSlopeBehavior_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EWalkableSlopeBehavior();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EWalkableSlopeBehavior, Z_Construct_UPackage__Script_Engine(), TEXT("EWalkableSlopeBehavior"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EWalkableSlopeBehavior(EWalkableSlopeBehavior_StaticEnum, TEXT("/Script/Engine"), TEXT("EWalkableSlopeBehavior"), false, nullptr, nullptr);
static class UEnum* ERotatorQuantization_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERotatorQuantization();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERotatorQuantization, Z_Construct_UPackage__Script_Engine(), TEXT("ERotatorQuantization"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERotatorQuantization(ERotatorQuantization_StaticEnum, TEXT("/Script/Engine"), TEXT("ERotatorQuantization"), false, nullptr, nullptr);
static class UEnum* EVectorQuantization_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVectorQuantization();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EVectorQuantization, Z_Construct_UPackage__Script_Engine(), TEXT("EVectorQuantization"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVectorQuantization(EVectorQuantization_StaticEnum, TEXT("/Script/Engine"), TEXT("EVectorQuantization"), false, nullptr, nullptr);
static class UEnum* EEndPlayReason_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEndPlayReason();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEndPlayReason, Z_Construct_UPackage__Script_Engine(), TEXT("EEndPlayReason"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEndPlayReason(EEndPlayReason_StaticEnum, TEXT("/Script/Engine"), TEXT("EEndPlayReason"), false, nullptr, nullptr);
static class UEnum* EAutoPossessAI_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAutoPossessAI();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAutoPossessAI, Z_Construct_UPackage__Script_Engine(), TEXT("EAutoPossessAI"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAutoPossessAI(EAutoPossessAI_StaticEnum, TEXT("/Script/Engine"), TEXT("EAutoPossessAI"), false, nullptr, nullptr);
static class UEnum* EAutoReceiveInput_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAutoReceiveInput();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAutoReceiveInput, Z_Construct_UPackage__Script_Engine(), TEXT("EAutoReceiveInput"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAutoReceiveInput(EAutoReceiveInput_StaticEnum, TEXT("/Script/Engine"), TEXT("EAutoReceiveInput"), false, nullptr, nullptr);
static class UEnum* ENetDormancy_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetDormancy();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENetDormancy, Z_Construct_UPackage__Script_Engine(), TEXT("ENetDormancy"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENetDormancy(ENetDormancy_StaticEnum, TEXT("/Script/Engine"), TEXT("ENetDormancy"), false, nullptr, nullptr);
static class UEnum* ENetRole_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetRole();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENetRole, Z_Construct_UPackage__Script_Engine(), TEXT("ENetRole"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENetRole(ENetRole_StaticEnum, TEXT("/Script/Engine"), TEXT("ENetRole"), false, nullptr, nullptr);
static class UEnum* EUpdateRateShiftBucket_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EUpdateRateShiftBucket();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EUpdateRateShiftBucket, Z_Construct_UPackage__Script_Engine(), TEXT("EUpdateRateShiftBucket"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EUpdateRateShiftBucket(EUpdateRateShiftBucket_StaticEnum, TEXT("/Script/Engine"), TEXT("EUpdateRateShiftBucket"), false, nullptr, nullptr);
static class UEnum* EShadowMapFlags_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EShadowMapFlags();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EShadowMapFlags, Z_Construct_UPackage__Script_Engine(), TEXT("EShadowMapFlags"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EShadowMapFlags(EShadowMapFlags_StaticEnum, TEXT("/Script/Engine"), TEXT("EShadowMapFlags"), false, nullptr, nullptr);
static class UEnum* ELightMapPaddingType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELightMapPaddingType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELightMapPaddingType, Z_Construct_UPackage__Script_Engine(), TEXT("ELightMapPaddingType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELightMapPaddingType(ELightMapPaddingType_StaticEnum, TEXT("/Script/Engine"), TEXT("ELightMapPaddingType"), false, nullptr, nullptr);
static class UEnum* ECollisionEnabled_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionEnabled();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECollisionEnabled, Z_Construct_UPackage__Script_Engine(), TEXT("ECollisionEnabled"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECollisionEnabled(ECollisionEnabled_StaticEnum, TEXT("/Script/Engine"), TEXT("ECollisionEnabled"), false, nullptr, nullptr);
static class UEnum* ETimelineSigType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETimelineSigType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETimelineSigType, Z_Construct_UPackage__Script_Engine(), TEXT("ETimelineSigType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETimelineSigType(ETimelineSigType_StaticEnum, TEXT("/Script/Engine"), TEXT("ETimelineSigType"), false, nullptr, nullptr);
static class UEnum* ESleepFamily_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESleepFamily();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESleepFamily, Z_Construct_UPackage__Script_Engine(), TEXT("ESleepFamily"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESleepFamily(ESleepFamily_StaticEnum, TEXT("/Script/Engine"), TEXT("ESleepFamily"), false, nullptr, nullptr);
static class UEnum* ERadialImpulseFalloff_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERadialImpulseFalloff();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERadialImpulseFalloff, Z_Construct_UPackage__Script_Engine(), TEXT("ERadialImpulseFalloff"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERadialImpulseFalloff(ERadialImpulseFalloff_StaticEnum, TEXT("/Script/Engine"), TEXT("ERadialImpulseFalloff"), false, nullptr, nullptr);
static class UEnum* EInputConsumeOptions_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInputConsumeOptions();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EInputConsumeOptions, Z_Construct_UPackage__Script_Engine(), TEXT("EInputConsumeOptions"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EInputConsumeOptions(EInputConsumeOptions_StaticEnum, TEXT("/Script/Engine"), TEXT("EInputConsumeOptions"), false, nullptr, nullptr);
static class UEnum* EFilterInterpolationType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFilterInterpolationType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EFilterInterpolationType, Z_Construct_UPackage__Script_Engine(), TEXT("EFilterInterpolationType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFilterInterpolationType(EFilterInterpolationType_StaticEnum, TEXT("/Script/Engine"), TEXT("EFilterInterpolationType"), false, nullptr, nullptr);
static class UEnum* ECollisionResponse_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionResponse();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECollisionResponse, Z_Construct_UPackage__Script_Engine(), TEXT("ECollisionResponse"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECollisionResponse(ECollisionResponse_StaticEnum, TEXT("/Script/Engine"), TEXT("ECollisionResponse"), false, nullptr, nullptr);
static class UEnum* EPhysicsSceneType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysicsSceneType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EPhysicsSceneType, Z_Construct_UPackage__Script_Engine(), TEXT("EPhysicsSceneType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPhysicsSceneType(EPhysicsSceneType_StaticEnum, TEXT("/Script/Engine"), TEXT("EPhysicsSceneType"), false, nullptr, nullptr);
static class UEnum* ETraceTypeQuery_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETraceTypeQuery();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETraceTypeQuery, Z_Construct_UPackage__Script_Engine(), TEXT("ETraceTypeQuery"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETraceTypeQuery(ETraceTypeQuery_StaticEnum, TEXT("/Script/Engine"), TEXT("ETraceTypeQuery"), false, nullptr, nullptr);
static class UEnum* EObjectTypeQuery_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EObjectTypeQuery();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EObjectTypeQuery, Z_Construct_UPackage__Script_Engine(), TEXT("EObjectTypeQuery"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EObjectTypeQuery(EObjectTypeQuery_StaticEnum, TEXT("/Script/Engine"), TEXT("EObjectTypeQuery"), false, nullptr, nullptr);
static class UEnum* EOverlapFilterOption_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOverlapFilterOption();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EOverlapFilterOption, Z_Construct_UPackage__Script_Engine(), TEXT("EOverlapFilterOption"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EOverlapFilterOption(EOverlapFilterOption_StaticEnum, TEXT("/Script/Engine"), TEXT("EOverlapFilterOption"), false, nullptr, nullptr);
static class UEnum* ECollisionChannel_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionChannel();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECollisionChannel, Z_Construct_UPackage__Script_Engine(), TEXT("ECollisionChannel"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECollisionChannel(ECollisionChannel_StaticEnum, TEXT("/Script/Engine"), TEXT("ECollisionChannel"), false, nullptr, nullptr);
static class UEnum* ENetworkSmoothingMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetworkSmoothingMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENetworkSmoothingMode, Z_Construct_UPackage__Script_Engine(), TEXT("ENetworkSmoothingMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENetworkSmoothingMode(ENetworkSmoothingMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ENetworkSmoothingMode"), false, nullptr, nullptr);
static class UEnum* EMovementMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMovementMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMovementMode, Z_Construct_UPackage__Script_Engine(), TEXT("EMovementMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMovementMode(EMovementMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EMovementMode"), false, nullptr, nullptr);
static class UEnum* ETriangleSortAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETriangleSortAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETriangleSortAxis, Z_Construct_UPackage__Script_Engine(), TEXT("ETriangleSortAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETriangleSortAxis(ETriangleSortAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("ETriangleSortAxis"), false, nullptr, nullptr);
static class UEnum* ETriangleSortOption_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETriangleSortOption();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETriangleSortOption, Z_Construct_UPackage__Script_Engine(), TEXT("ETriangleSortOption"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETriangleSortOption(ETriangleSortOption_StaticEnum, TEXT("/Script/Engine"), TEXT("ETriangleSortOption"), false, nullptr, nullptr);
static class UEnum* ELightingBuildQuality_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELightingBuildQuality();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELightingBuildQuality, Z_Construct_UPackage__Script_Engine(), TEXT("ELightingBuildQuality"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELightingBuildQuality(ELightingBuildQuality_StaticEnum, TEXT("/Script/Engine"), TEXT("ELightingBuildQuality"), false, nullptr, nullptr);
static class UEnum* EMaterialSamplerType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialSamplerType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialSamplerType, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialSamplerType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialSamplerType(EMaterialSamplerType_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialSamplerType"), false, nullptr, nullptr);
static class UEnum* EMaterialTessellationMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialTessellationMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialTessellationMode, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialTessellationMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialTessellationMode(EMaterialTessellationMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialTessellationMode"), false, nullptr, nullptr);
static class UEnum* EMaterialShadingModel_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialShadingModel();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialShadingModel, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialShadingModel"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialShadingModel(EMaterialShadingModel_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialShadingModel"), false, nullptr, nullptr);
static class UEnum* EParticleCollisionMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleCollisionMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleCollisionMode, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleCollisionMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleCollisionMode(EParticleCollisionMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleCollisionMode"), false, nullptr, nullptr);
static class UEnum* ETrailWidthMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrailWidthMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETrailWidthMode, Z_Construct_UPackage__Script_Engine(), TEXT("ETrailWidthMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETrailWidthMode(ETrailWidthMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ETrailWidthMode"), false, nullptr, nullptr);
static class UEnum* EGBufferFormat_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGBufferFormat();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EGBufferFormat, Z_Construct_UPackage__Script_Engine(), TEXT("EGBufferFormat"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGBufferFormat(EGBufferFormat_StaticEnum, TEXT("/Script/Engine"), TEXT("EGBufferFormat"), false, nullptr, nullptr);
static class UEnum* ESceneCaptureCompositeMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESceneCaptureCompositeMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESceneCaptureCompositeMode, Z_Construct_UPackage__Script_Engine(), TEXT("ESceneCaptureCompositeMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESceneCaptureCompositeMode(ESceneCaptureCompositeMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ESceneCaptureCompositeMode"), false, nullptr, nullptr);
static class UEnum* ESceneCaptureSource_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESceneCaptureSource();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESceneCaptureSource, Z_Construct_UPackage__Script_Engine(), TEXT("ESceneCaptureSource"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESceneCaptureSource(ESceneCaptureSource_StaticEnum, TEXT("/Script/Engine"), TEXT("ESceneCaptureSource"), false, nullptr, nullptr);
static class UEnum* ETranslucentSortPolicy_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETranslucentSortPolicy();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETranslucentSortPolicy, Z_Construct_UPackage__Script_Engine(), TEXT("ETranslucentSortPolicy"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETranslucentSortPolicy(ETranslucentSortPolicy_StaticEnum, TEXT("/Script/Engine"), TEXT("ETranslucentSortPolicy"), false, nullptr, nullptr);
static class UEnum* ERefractionMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERefractionMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERefractionMode, Z_Construct_UPackage__Script_Engine(), TEXT("ERefractionMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERefractionMode(ERefractionMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ERefractionMode"), false, nullptr, nullptr);
static class UEnum* ETranslucencyLightingMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETranslucencyLightingMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETranslucencyLightingMode, Z_Construct_UPackage__Script_Engine(), TEXT("ETranslucencyLightingMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETranslucencyLightingMode(ETranslucencyLightingMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ETranslucencyLightingMode"), false, nullptr, nullptr);
static class UEnum* ESamplerSourceMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESamplerSourceMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESamplerSourceMode, Z_Construct_UPackage__Script_Engine(), TEXT("ESamplerSourceMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESamplerSourceMode(ESamplerSourceMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ESamplerSourceMode"), false, nullptr, nullptr);
static class UEnum* EBlendMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlendMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBlendMode, Z_Construct_UPackage__Script_Engine(), TEXT("EBlendMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlendMode(EBlendMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EBlendMode"), false, nullptr, nullptr);
static class UEnum* EIndirectLightingCacheQuality_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EIndirectLightingCacheQuality();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EIndirectLightingCacheQuality, Z_Construct_UPackage__Script_Engine(), TEXT("EIndirectLightingCacheQuality"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EIndirectLightingCacheQuality(EIndirectLightingCacheQuality_StaticEnum, TEXT("/Script/Engine"), TEXT("EIndirectLightingCacheQuality"), false, nullptr, nullptr);
static class UEnum* ESceneDepthPriorityGroup_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESceneDepthPriorityGroup();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESceneDepthPriorityGroup, Z_Construct_UPackage__Script_Engine(), TEXT("ESceneDepthPriorityGroup"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESceneDepthPriorityGroup(ESceneDepthPriorityGroup_StaticEnum, TEXT("/Script/Engine"), TEXT("ESceneDepthPriorityGroup"), false, nullptr, nullptr);
static class UEnum* EAttachLocation_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttachLocation();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAttachLocation, Z_Construct_UPackage__Script_Engine(), TEXT("EAttachLocation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAttachLocation(EAttachLocation_StaticEnum, TEXT("/Script/Engine"), TEXT("EAttachLocation"), false, nullptr, nullptr);
static class UEnum* EDetachmentRule_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDetachmentRule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDetachmentRule, Z_Construct_UPackage__Script_Engine(), TEXT("EDetachmentRule"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDetachmentRule(EDetachmentRule_StaticEnum, TEXT("/Script/Engine"), TEXT("EDetachmentRule"), false, nullptr, nullptr);
static class UEnum* EAttachmentRule_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttachmentRule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAttachmentRule, Z_Construct_UPackage__Script_Engine(), TEXT("EAttachmentRule"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAttachmentRule(EAttachmentRule_StaticEnum, TEXT("/Script/Engine"), TEXT("EAttachmentRule"), false, nullptr, nullptr);
static class UEnum* EActorMetricsType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EActorMetricsType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EActorMetricsType, Z_Construct_UPackage__Script_Engine(), TEXT("EActorMetricsType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EActorMetricsType(EActorMetricsType_StaticEnum, TEXT("/Script/Engine"), TEXT("EActorMetricsType"), false, nullptr, nullptr);
static class UEnum* EAspectRatioAxisConstraint_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAspectRatioAxisConstraint();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAspectRatioAxisConstraint, Z_Construct_UPackage__Script_Engine(), TEXT("EAspectRatioAxisConstraint"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAspectRatioAxisConstraint(EAspectRatioAxisConstraint_StaticEnum, TEXT("/Script/Engine"), TEXT("EAspectRatioAxisConstraint"), false, nullptr, nullptr);
class UScriptStruct* FUserActivity::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FUserActivity();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FUserActivity_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FUserActivity, Z_Construct_UPackage__Script_Engine(), TEXT("UserActivity"), sizeof(FUserActivity), Get_Z_Construct_UScriptStruct_FUserActivity_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FUserActivity(FUserActivity::StaticStruct, TEXT("/Script/Engine"), TEXT("UserActivity"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFUserActivity
{
	FScriptStruct_Engine_StaticRegisterNativesFUserActivity()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("UserActivity")),new UScriptStruct::TCppStructOps<FUserActivity>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFUserActivity;
class UScriptStruct* FCanvasUVTri::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCanvasUVTri();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCanvasUVTri_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCanvasUVTri, Z_Construct_UPackage__Script_Engine(), TEXT("CanvasUVTri"), sizeof(FCanvasUVTri), Get_Z_Construct_UScriptStruct_FCanvasUVTri_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCanvasUVTri(FCanvasUVTri::StaticStruct, TEXT("/Script/Engine"), TEXT("CanvasUVTri"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCanvasUVTri
{
	FScriptStruct_Engine_StaticRegisterNativesFCanvasUVTri()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CanvasUVTri")),new UScriptStruct::TCppStructOps<FCanvasUVTri>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCanvasUVTri;
class UScriptStruct* FFontRenderInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFontRenderInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFontRenderInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFontRenderInfo, Z_Construct_UPackage__Script_Engine(), TEXT("FontRenderInfo"), sizeof(FFontRenderInfo), Get_Z_Construct_UScriptStruct_FFontRenderInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFontRenderInfo(FFontRenderInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("FontRenderInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFontRenderInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFFontRenderInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FontRenderInfo")),new UScriptStruct::TCppStructOps<FFontRenderInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFontRenderInfo;
class UScriptStruct* FDepthFieldGlowInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDepthFieldGlowInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDepthFieldGlowInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDepthFieldGlowInfo, Z_Construct_UPackage__Script_Engine(), TEXT("DepthFieldGlowInfo"), sizeof(FDepthFieldGlowInfo), Get_Z_Construct_UScriptStruct_FDepthFieldGlowInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDepthFieldGlowInfo(FDepthFieldGlowInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("DepthFieldGlowInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDepthFieldGlowInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFDepthFieldGlowInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DepthFieldGlowInfo")),new UScriptStruct::TCppStructOps<FDepthFieldGlowInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDepthFieldGlowInfo;
class UScriptStruct* FDebugFloatHistory::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDebugFloatHistory();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDebugFloatHistory_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDebugFloatHistory, Z_Construct_UPackage__Script_Engine(), TEXT("DebugFloatHistory"), sizeof(FDebugFloatHistory), Get_Z_Construct_UScriptStruct_FDebugFloatHistory_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDebugFloatHistory(FDebugFloatHistory::StaticStruct, TEXT("/Script/Engine"), TEXT("DebugFloatHistory"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDebugFloatHistory
{
	FScriptStruct_Engine_StaticRegisterNativesFDebugFloatHistory()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DebugFloatHistory")),new UScriptStruct::TCppStructOps<FDebugFloatHistory>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDebugFloatHistory;
class UScriptStruct* FRedirector::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRedirector();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRedirector_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRedirector, Z_Construct_UPackage__Script_Engine(), TEXT("Redirector"), sizeof(FRedirector), Get_Z_Construct_UScriptStruct_FRedirector_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRedirector(FRedirector::StaticStruct, TEXT("/Script/Engine"), TEXT("Redirector"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRedirector
{
	FScriptStruct_Engine_StaticRegisterNativesFRedirector()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Redirector")),new UScriptStruct::TCppStructOps<FRedirector>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRedirector;
class UScriptStruct* FDirectoryPath::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDirectoryPath();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDirectoryPath_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDirectoryPath, Z_Construct_UPackage__Script_Engine(), TEXT("DirectoryPath"), sizeof(FDirectoryPath), Get_Z_Construct_UScriptStruct_FDirectoryPath_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDirectoryPath(FDirectoryPath::StaticStruct, TEXT("/Script/Engine"), TEXT("DirectoryPath"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDirectoryPath
{
	FScriptStruct_Engine_StaticRegisterNativesFDirectoryPath()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DirectoryPath")),new UScriptStruct::TCppStructOps<FDirectoryPath>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDirectoryPath;
class UScriptStruct* FFilePath::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFilePath();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFilePath_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFilePath, Z_Construct_UPackage__Script_Engine(), TEXT("FilePath"), sizeof(FFilePath), Get_Z_Construct_UScriptStruct_FFilePath_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFilePath(FFilePath::StaticStruct, TEXT("/Script/Engine"), TEXT("FilePath"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFilePath
{
	FScriptStruct_Engine_StaticRegisterNativesFFilePath()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FilePath")),new UScriptStruct::TCppStructOps<FFilePath>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFilePath;
class UScriptStruct* FComponentReference::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentReference();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FComponentReference_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FComponentReference, Z_Construct_UPackage__Script_Engine(), TEXT("ComponentReference"), sizeof(FComponentReference), Get_Z_Construct_UScriptStruct_FComponentReference_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FComponentReference(FComponentReference::StaticStruct, TEXT("/Script/Engine"), TEXT("ComponentReference"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFComponentReference
{
	FScriptStruct_Engine_StaticRegisterNativesFComponentReference()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ComponentReference")),new UScriptStruct::TCppStructOps<FComponentReference>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFComponentReference;
class UScriptStruct* FConstrainComponentPropName::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstrainComponentPropName();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FConstrainComponentPropName_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FConstrainComponentPropName, Z_Construct_UPackage__Script_Engine(), TEXT("ConstrainComponentPropName"), sizeof(FConstrainComponentPropName), Get_Z_Construct_UScriptStruct_FConstrainComponentPropName_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FConstrainComponentPropName(FConstrainComponentPropName::StaticStruct, TEXT("/Script/Engine"), TEXT("ConstrainComponentPropName"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFConstrainComponentPropName
{
	FScriptStruct_Engine_StaticRegisterNativesFConstrainComponentPropName()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ConstrainComponentPropName")),new UScriptStruct::TCppStructOps<FConstrainComponentPropName>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFConstrainComponentPropName;
class UScriptStruct* FWalkableSlopeOverride::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWalkableSlopeOverride();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FWalkableSlopeOverride_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FWalkableSlopeOverride, Z_Construct_UPackage__Script_Engine(), TEXT("WalkableSlopeOverride"), sizeof(FWalkableSlopeOverride), Get_Z_Construct_UScriptStruct_FWalkableSlopeOverride_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FWalkableSlopeOverride(FWalkableSlopeOverride::StaticStruct, TEXT("/Script/Engine"), TEXT("WalkableSlopeOverride"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFWalkableSlopeOverride
{
	FScriptStruct_Engine_StaticRegisterNativesFWalkableSlopeOverride()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("WalkableSlopeOverride")),new UScriptStruct::TCppStructOps<FWalkableSlopeOverride>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFWalkableSlopeOverride;
class UScriptStruct* FRepAttachment::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRepAttachment();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRepAttachment_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRepAttachment, Z_Construct_UPackage__Script_Engine(), TEXT("RepAttachment"), sizeof(FRepAttachment), Get_Z_Construct_UScriptStruct_FRepAttachment_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRepAttachment(FRepAttachment::StaticStruct, TEXT("/Script/Engine"), TEXT("RepAttachment"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRepAttachment
{
	FScriptStruct_Engine_StaticRegisterNativesFRepAttachment()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RepAttachment")),new UScriptStruct::TCppStructOps<FRepAttachment>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRepAttachment;
class UScriptStruct* FRepMovement::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRepMovement();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRepMovement_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRepMovement, Z_Construct_UPackage__Script_Engine(), TEXT("RepMovement"), sizeof(FRepMovement), Get_Z_Construct_UScriptStruct_FRepMovement_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRepMovement(FRepMovement::StaticStruct, TEXT("/Script/Engine"), TEXT("RepMovement"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRepMovement
{
	FScriptStruct_Engine_StaticRegisterNativesFRepMovement()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RepMovement")),new UScriptStruct::TCppStructOps<FRepMovement>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRepMovement;
class UScriptStruct* FTimerHandle::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimerHandle();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTimerHandle_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTimerHandle, Z_Construct_UPackage__Script_Engine(), TEXT("TimerHandle"), sizeof(FTimerHandle), Get_Z_Construct_UScriptStruct_FTimerHandle_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTimerHandle(FTimerHandle::StaticStruct, TEXT("/Script/Engine"), TEXT("TimerHandle"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTimerHandle
{
	FScriptStruct_Engine_StaticRegisterNativesFTimerHandle()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TimerHandle")),new UScriptStruct::TCppStructOps<FTimerHandle>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTimerHandle;
class UScriptStruct* FRadialDamageEvent::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRadialDamageEvent();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRadialDamageEvent_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRadialDamageEvent, Z_Construct_UPackage__Script_Engine(), TEXT("RadialDamageEvent"), sizeof(FRadialDamageEvent), Get_Z_Construct_UScriptStruct_FRadialDamageEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRadialDamageEvent(FRadialDamageEvent::StaticStruct, TEXT("/Script/Engine"), TEXT("RadialDamageEvent"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRadialDamageEvent
{
	FScriptStruct_Engine_StaticRegisterNativesFRadialDamageEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RadialDamageEvent")),new UScriptStruct::TCppStructOps<FRadialDamageEvent>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRadialDamageEvent;
class UScriptStruct* FRadialDamageParams::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRadialDamageParams();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRadialDamageParams_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRadialDamageParams, Z_Construct_UPackage__Script_Engine(), TEXT("RadialDamageParams"), sizeof(FRadialDamageParams), Get_Z_Construct_UScriptStruct_FRadialDamageParams_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRadialDamageParams(FRadialDamageParams::StaticStruct, TEXT("/Script/Engine"), TEXT("RadialDamageParams"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRadialDamageParams
{
	FScriptStruct_Engine_StaticRegisterNativesFRadialDamageParams()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RadialDamageParams")),new UScriptStruct::TCppStructOps<FRadialDamageParams>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRadialDamageParams;
class UScriptStruct* FPointDamageEvent::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPointDamageEvent();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPointDamageEvent_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPointDamageEvent, Z_Construct_UPackage__Script_Engine(), TEXT("PointDamageEvent"), sizeof(FPointDamageEvent), Get_Z_Construct_UScriptStruct_FPointDamageEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPointDamageEvent(FPointDamageEvent::StaticStruct, TEXT("/Script/Engine"), TEXT("PointDamageEvent"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPointDamageEvent
{
	FScriptStruct_Engine_StaticRegisterNativesFPointDamageEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PointDamageEvent")),new UScriptStruct::TCppStructOps<FPointDamageEvent>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPointDamageEvent;
class UScriptStruct* FDamageEvent::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDamageEvent();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDamageEvent_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDamageEvent, Z_Construct_UPackage__Script_Engine(), TEXT("DamageEvent"), sizeof(FDamageEvent), Get_Z_Construct_UScriptStruct_FDamageEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDamageEvent(FDamageEvent::StaticStruct, TEXT("/Script/Engine"), TEXT("DamageEvent"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDamageEvent
{
	FScriptStruct_Engine_StaticRegisterNativesFDamageEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DamageEvent")),new UScriptStruct::TCppStructOps<FDamageEvent>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDamageEvent;
class UScriptStruct* FMeshBuildSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshBuildSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMeshBuildSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMeshBuildSettings, Z_Construct_UPackage__Script_Engine(), TEXT("MeshBuildSettings"), sizeof(FMeshBuildSettings), Get_Z_Construct_UScriptStruct_FMeshBuildSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMeshBuildSettings(FMeshBuildSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("MeshBuildSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMeshBuildSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFMeshBuildSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MeshBuildSettings")),new UScriptStruct::TCppStructOps<FMeshBuildSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMeshBuildSettings;
class UScriptStruct* FPOV::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPOV();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPOV_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPOV, Z_Construct_UPackage__Script_Engine(), TEXT("POV"), sizeof(FPOV), Get_Z_Construct_UScriptStruct_FPOV_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPOV(FPOV::StaticStruct, TEXT("/Script/Engine"), TEXT("POV"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPOV
{
	FScriptStruct_Engine_StaticRegisterNativesFPOV()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("POV")),new UScriptStruct::TCppStructOps<FPOV>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPOV;
class UScriptStruct* FAnimUpdateRateParameters::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimUpdateRateParameters();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimUpdateRateParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimUpdateRateParameters, Z_Construct_UPackage__Script_Engine(), TEXT("AnimUpdateRateParameters"), sizeof(FAnimUpdateRateParameters), Get_Z_Construct_UScriptStruct_FAnimUpdateRateParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimUpdateRateParameters(FAnimUpdateRateParameters::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimUpdateRateParameters"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimUpdateRateParameters
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimUpdateRateParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimUpdateRateParameters")),new UScriptStruct::TCppStructOps<FAnimUpdateRateParameters>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimUpdateRateParameters;
class UScriptStruct* FAnimSlotDesc::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSlotDesc();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimSlotDesc_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimSlotDesc, Z_Construct_UPackage__Script_Engine(), TEXT("AnimSlotDesc"), sizeof(FAnimSlotDesc), Get_Z_Construct_UScriptStruct_FAnimSlotDesc_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimSlotDesc(FAnimSlotDesc::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimSlotDesc"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimSlotDesc
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimSlotDesc()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimSlotDesc")),new UScriptStruct::TCppStructOps<FAnimSlotDesc>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimSlotDesc;
class UScriptStruct* FAnimSlotInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSlotInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimSlotInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimSlotInfo, Z_Construct_UPackage__Script_Engine(), TEXT("AnimSlotInfo"), sizeof(FAnimSlotInfo), Get_Z_Construct_UScriptStruct_FAnimSlotInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimSlotInfo(FAnimSlotInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimSlotInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimSlotInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimSlotInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimSlotInfo")),new UScriptStruct::TCppStructOps<FAnimSlotInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimSlotInfo;
class UScriptStruct* FMTDResult::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMTDResult();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMTDResult_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMTDResult, Z_Construct_UPackage__Script_Engine(), TEXT("MTDResult"), sizeof(FMTDResult), Get_Z_Construct_UScriptStruct_FMTDResult_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMTDResult(FMTDResult::StaticStruct, TEXT("/Script/Engine"), TEXT("MTDResult"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMTDResult
{
	FScriptStruct_Engine_StaticRegisterNativesFMTDResult()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MTDResult")),new UScriptStruct::TCppStructOps<FMTDResult>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMTDResult;
class UScriptStruct* FOverlapResult::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FOverlapResult();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FOverlapResult_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FOverlapResult, Z_Construct_UPackage__Script_Engine(), TEXT("OverlapResult"), sizeof(FOverlapResult), Get_Z_Construct_UScriptStruct_FOverlapResult_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FOverlapResult(FOverlapResult::StaticStruct, TEXT("/Script/Engine"), TEXT("OverlapResult"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFOverlapResult
{
	FScriptStruct_Engine_StaticRegisterNativesFOverlapResult()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("OverlapResult")),new UScriptStruct::TCppStructOps<FOverlapResult>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFOverlapResult;
class UScriptStruct* FHitResult::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FHitResult_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FHitResult, Z_Construct_UPackage__Script_Engine(), TEXT("HitResult"), sizeof(FHitResult), Get_Z_Construct_UScriptStruct_FHitResult_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FHitResult(FHitResult::StaticStruct, TEXT("/Script/Engine"), TEXT("HitResult"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFHitResult
{
	FScriptStruct_Engine_StaticRegisterNativesFHitResult()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("HitResult")),new UScriptStruct::TCppStructOps<FHitResult>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFHitResult;
class UScriptStruct* FPrimitiveMaterialRef::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPrimitiveMaterialRef();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPrimitiveMaterialRef_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPrimitiveMaterialRef, Z_Construct_UPackage__Script_Engine(), TEXT("PrimitiveMaterialRef"), sizeof(FPrimitiveMaterialRef), Get_Z_Construct_UScriptStruct_FPrimitiveMaterialRef_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPrimitiveMaterialRef(FPrimitiveMaterialRef::StaticStruct, TEXT("/Script/Engine"), TEXT("PrimitiveMaterialRef"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPrimitiveMaterialRef
{
	FScriptStruct_Engine_StaticRegisterNativesFPrimitiveMaterialRef()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PrimitiveMaterialRef")),new UScriptStruct::TCppStructOps<FPrimitiveMaterialRef>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPrimitiveMaterialRef;
class UScriptStruct* FSwarmDebugOptions::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSwarmDebugOptions();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSwarmDebugOptions_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSwarmDebugOptions, Z_Construct_UPackage__Script_Engine(), TEXT("SwarmDebugOptions"), sizeof(FSwarmDebugOptions), Get_Z_Construct_UScriptStruct_FSwarmDebugOptions_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSwarmDebugOptions(FSwarmDebugOptions::StaticStruct, TEXT("/Script/Engine"), TEXT("SwarmDebugOptions"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSwarmDebugOptions
{
	FScriptStruct_Engine_StaticRegisterNativesFSwarmDebugOptions()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SwarmDebugOptions")),new UScriptStruct::TCppStructOps<FSwarmDebugOptions>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSwarmDebugOptions;
class UScriptStruct* FLightmassDebugOptions::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassDebugOptions();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLightmassDebugOptions_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassDebugOptions, Z_Construct_UPackage__Script_Engine(), TEXT("LightmassDebugOptions"), sizeof(FLightmassDebugOptions), Get_Z_Construct_UScriptStruct_FLightmassDebugOptions_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassDebugOptions(FLightmassDebugOptions::StaticStruct, TEXT("/Script/Engine"), TEXT("LightmassDebugOptions"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLightmassDebugOptions
{
	FScriptStruct_Engine_StaticRegisterNativesFLightmassDebugOptions()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassDebugOptions")),new UScriptStruct::TCppStructOps<FLightmassDebugOptions>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLightmassDebugOptions;
class UScriptStruct* FLightmassPrimitiveSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassPrimitiveSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLightmassPrimitiveSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassPrimitiveSettings, Z_Construct_UPackage__Script_Engine(), TEXT("LightmassPrimitiveSettings"), sizeof(FLightmassPrimitiveSettings), Get_Z_Construct_UScriptStruct_FLightmassPrimitiveSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassPrimitiveSettings(FLightmassPrimitiveSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("LightmassPrimitiveSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLightmassPrimitiveSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFLightmassPrimitiveSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassPrimitiveSettings")),new UScriptStruct::TCppStructOps<FLightmassPrimitiveSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLightmassPrimitiveSettings;
class UScriptStruct* FLightmassDirectionalLightSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassDirectionalLightSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLightmassDirectionalLightSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassDirectionalLightSettings, Z_Construct_UPackage__Script_Engine(), TEXT("LightmassDirectionalLightSettings"), sizeof(FLightmassDirectionalLightSettings), Get_Z_Construct_UScriptStruct_FLightmassDirectionalLightSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassDirectionalLightSettings(FLightmassDirectionalLightSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("LightmassDirectionalLightSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLightmassDirectionalLightSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFLightmassDirectionalLightSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassDirectionalLightSettings")),new UScriptStruct::TCppStructOps<FLightmassDirectionalLightSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLightmassDirectionalLightSettings;
class UScriptStruct* FLightmassPointLightSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassPointLightSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLightmassPointLightSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassPointLightSettings, Z_Construct_UPackage__Script_Engine(), TEXT("LightmassPointLightSettings"), sizeof(FLightmassPointLightSettings), Get_Z_Construct_UScriptStruct_FLightmassPointLightSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassPointLightSettings(FLightmassPointLightSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("LightmassPointLightSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLightmassPointLightSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFLightmassPointLightSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassPointLightSettings")),new UScriptStruct::TCppStructOps<FLightmassPointLightSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLightmassPointLightSettings;
class UScriptStruct* FLightmassLightSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassLightSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLightmassLightSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassLightSettings, Z_Construct_UPackage__Script_Engine(), TEXT("LightmassLightSettings"), sizeof(FLightmassLightSettings), Get_Z_Construct_UScriptStruct_FLightmassLightSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassLightSettings(FLightmassLightSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("LightmassLightSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLightmassLightSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFLightmassLightSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassLightSettings")),new UScriptStruct::TCppStructOps<FLightmassLightSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLightmassLightSettings;
class UScriptStruct* FLocalizedSubtitle::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLocalizedSubtitle();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLocalizedSubtitle_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLocalizedSubtitle, Z_Construct_UPackage__Script_Engine(), TEXT("LocalizedSubtitle"), sizeof(FLocalizedSubtitle), Get_Z_Construct_UScriptStruct_FLocalizedSubtitle_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLocalizedSubtitle(FLocalizedSubtitle::StaticStruct, TEXT("/Script/Engine"), TEXT("LocalizedSubtitle"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLocalizedSubtitle
{
	FScriptStruct_Engine_StaticRegisterNativesFLocalizedSubtitle()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LocalizedSubtitle")),new UScriptStruct::TCppStructOps<FLocalizedSubtitle>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLocalizedSubtitle;
class UScriptStruct* FSubtitleCue::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSubtitleCue();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSubtitleCue_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSubtitleCue, Z_Construct_UPackage__Script_Engine(), TEXT("SubtitleCue"), sizeof(FSubtitleCue), Get_Z_Construct_UScriptStruct_FSubtitleCue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSubtitleCue(FSubtitleCue::StaticStruct, TEXT("/Script/Engine"), TEXT("SubtitleCue"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSubtitleCue
{
	FScriptStruct_Engine_StaticRegisterNativesFSubtitleCue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SubtitleCue")),new UScriptStruct::TCppStructOps<FSubtitleCue>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSubtitleCue;
class UScriptStruct* FBasedPosition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBasedPosition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBasedPosition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBasedPosition, Z_Construct_UPackage__Script_Engine(), TEXT("BasedPosition"), sizeof(FBasedPosition), Get_Z_Construct_UScriptStruct_FBasedPosition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBasedPosition(FBasedPosition::StaticStruct, TEXT("/Script/Engine"), TEXT("BasedPosition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBasedPosition
{
	FScriptStruct_Engine_StaticRegisterNativesFBasedPosition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BasedPosition")),new UScriptStruct::TCppStructOps<FBasedPosition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBasedPosition;
class UScriptStruct* FFractureEffect::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFractureEffect();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFractureEffect_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFractureEffect, Z_Construct_UPackage__Script_Engine(), TEXT("FractureEffect"), sizeof(FFractureEffect), Get_Z_Construct_UScriptStruct_FFractureEffect_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFractureEffect(FFractureEffect::StaticStruct, TEXT("/Script/Engine"), TEXT("FractureEffect"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFractureEffect
{
	FScriptStruct_Engine_StaticRegisterNativesFFractureEffect()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FractureEffect")),new UScriptStruct::TCppStructOps<FFractureEffect>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFractureEffect;
class UScriptStruct* FCollisionImpactData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionImpactData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCollisionImpactData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollisionImpactData, Z_Construct_UPackage__Script_Engine(), TEXT("CollisionImpactData"), sizeof(FCollisionImpactData), Get_Z_Construct_UScriptStruct_FCollisionImpactData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollisionImpactData(FCollisionImpactData::StaticStruct, TEXT("/Script/Engine"), TEXT("CollisionImpactData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCollisionImpactData
{
	FScriptStruct_Engine_StaticRegisterNativesFCollisionImpactData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollisionImpactData")),new UScriptStruct::TCppStructOps<FCollisionImpactData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCollisionImpactData;
class UScriptStruct* FRigidBodyContactInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigidBodyContactInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRigidBodyContactInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRigidBodyContactInfo, Z_Construct_UPackage__Script_Engine(), TEXT("RigidBodyContactInfo"), sizeof(FRigidBodyContactInfo), Get_Z_Construct_UScriptStruct_FRigidBodyContactInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRigidBodyContactInfo(FRigidBodyContactInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("RigidBodyContactInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRigidBodyContactInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFRigidBodyContactInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RigidBodyContactInfo")),new UScriptStruct::TCppStructOps<FRigidBodyContactInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRigidBodyContactInfo;
class UScriptStruct* FRigidBodyErrorCorrection::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigidBodyErrorCorrection();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRigidBodyErrorCorrection_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRigidBodyErrorCorrection, Z_Construct_UPackage__Script_Engine(), TEXT("RigidBodyErrorCorrection"), sizeof(FRigidBodyErrorCorrection), Get_Z_Construct_UScriptStruct_FRigidBodyErrorCorrection_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRigidBodyErrorCorrection(FRigidBodyErrorCorrection::StaticStruct, TEXT("/Script/Engine"), TEXT("RigidBodyErrorCorrection"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRigidBodyErrorCorrection
{
	FScriptStruct_Engine_StaticRegisterNativesFRigidBodyErrorCorrection()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RigidBodyErrorCorrection")),new UScriptStruct::TCppStructOps<FRigidBodyErrorCorrection>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRigidBodyErrorCorrection;
class UScriptStruct* FRigidBodyState::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigidBodyState();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRigidBodyState_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRigidBodyState, Z_Construct_UPackage__Script_Engine(), TEXT("RigidBodyState"), sizeof(FRigidBodyState), Get_Z_Construct_UScriptStruct_FRigidBodyState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRigidBodyState(FRigidBodyState::StaticStruct, TEXT("/Script/Engine"), TEXT("RigidBodyState"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRigidBodyState
{
	FScriptStruct_Engine_StaticRegisterNativesFRigidBodyState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RigidBodyState")),new UScriptStruct::TCppStructOps<FRigidBodyState>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRigidBodyState;
class UScriptStruct* FCollisionResponseContainer::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionResponseContainer();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCollisionResponseContainer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollisionResponseContainer, Z_Construct_UPackage__Script_Engine(), TEXT("CollisionResponseContainer"), sizeof(FCollisionResponseContainer), Get_Z_Construct_UScriptStruct_FCollisionResponseContainer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollisionResponseContainer(FCollisionResponseContainer::StaticStruct, TEXT("/Script/Engine"), TEXT("CollisionResponseContainer"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCollisionResponseContainer
{
	FScriptStruct_Engine_StaticRegisterNativesFCollisionResponseContainer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollisionResponseContainer")),new UScriptStruct::TCppStructOps<FCollisionResponseContainer>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCollisionResponseContainer;
class UScriptStruct* FResponseChannel::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FResponseChannel();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FResponseChannel_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FResponseChannel, Z_Construct_UPackage__Script_Engine(), TEXT("ResponseChannel"), sizeof(FResponseChannel), Get_Z_Construct_UScriptStruct_FResponseChannel_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FResponseChannel(FResponseChannel::StaticStruct, TEXT("/Script/Engine"), TEXT("ResponseChannel"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFResponseChannel
{
	FScriptStruct_Engine_StaticRegisterNativesFResponseChannel()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ResponseChannel")),new UScriptStruct::TCppStructOps<FResponseChannel>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFResponseChannel;
class UScriptStruct* FLightingChannels::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightingChannels();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLightingChannels_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightingChannels, Z_Construct_UPackage__Script_Engine(), TEXT("LightingChannels"), sizeof(FLightingChannels), Get_Z_Construct_UScriptStruct_FLightingChannels_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightingChannels(FLightingChannels::StaticStruct, TEXT("/Script/Engine"), TEXT("LightingChannels"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLightingChannels
{
	FScriptStruct_Engine_StaticRegisterNativesFLightingChannels()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightingChannels")),new UScriptStruct::TCppStructOps<FLightingChannels>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLightingChannels;
	void UEngineTypes::StaticRegisterNativesUEngineTypes()
	{
	}
	IMPLEMENT_CLASS(UEngineTypes, 2683423706);
static class UEnum* EViewModeIndex_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EViewModeIndex();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EViewModeIndex, Z_Construct_UPackage__Script_Engine(), TEXT("EViewModeIndex"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EViewModeIndex(EViewModeIndex_StaticEnum, TEXT("/Script/Engine"), TEXT("EViewModeIndex"), false, nullptr, nullptr);
static class UEnum* EDemoPlayFailure_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDemoPlayFailure();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDemoPlayFailure, Z_Construct_UPackage__Script_Engine(), TEXT("EDemoPlayFailure"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDemoPlayFailure(EDemoPlayFailure_StaticEnum, TEXT("/Script/Engine"), TEXT("EDemoPlayFailure"), false, nullptr, nullptr);
static class UEnum* ETravelType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETravelType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETravelType, Z_Construct_UPackage__Script_Engine(), TEXT("ETravelType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETravelType(ETravelType_StaticEnum, TEXT("/Script/Engine"), TEXT("ETravelType"), false, nullptr, nullptr);
static class UEnum* ETravelFailure_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETravelFailure();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETravelFailure, Z_Construct_UPackage__Script_Engine(), TEXT("ETravelFailure"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETravelFailure(ETravelFailure_StaticEnum, TEXT("/Script/Engine"), TEXT("ETravelFailure"), false, nullptr, nullptr);
static class UEnum* ENetworkLagState_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetworkLagState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENetworkLagState, Z_Construct_UPackage__Script_Engine(), TEXT("ENetworkLagState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENetworkLagState(ENetworkLagState_StaticEnum, TEXT("/Script/Engine"), TEXT("ENetworkLagState"), false, nullptr, nullptr);
static class UEnum* ENetworkFailure_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetworkFailure();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENetworkFailure, Z_Construct_UPackage__Script_Engine(), TEXT("ENetworkFailure"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENetworkFailure(ENetworkFailure_StaticEnum, TEXT("/Script/Engine"), TEXT("ENetworkFailure"), false, nullptr, nullptr);
static class UEnum* ETickingGroup_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETickingGroup();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETickingGroup, Z_Construct_UPackage__Script_Engine(), TEXT("ETickingGroup"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETickingGroup(ETickingGroup_StaticEnum, TEXT("/Script/Engine"), TEXT("ETickingGroup"), false, nullptr, nullptr);
static class UEnum* EMouseLockMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMouseLockMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMouseLockMode, Z_Construct_UPackage__Script_Engine(), TEXT("EMouseLockMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMouseLockMode(EMouseLockMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EMouseLockMode"), false, nullptr, nullptr);
static class UEnum* EMouseCaptureMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMouseCaptureMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMouseCaptureMode, Z_Construct_UPackage__Script_Engine(), TEXT("EMouseCaptureMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMouseCaptureMode(EMouseCaptureMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EMouseCaptureMode"), false, nullptr, nullptr);
static class UEnum* EInputEvent_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInputEvent();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EInputEvent, Z_Construct_UPackage__Script_Engine(), TEXT("EInputEvent"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EInputEvent(EInputEvent_StaticEnum, TEXT("/Script/Engine"), TEXT("EInputEvent"), false, nullptr, nullptr);
class UScriptStruct* FExposureSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExposureSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FExposureSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FExposureSettings, Z_Construct_UPackage__Script_Engine(), TEXT("ExposureSettings"), sizeof(FExposureSettings), Get_Z_Construct_UScriptStruct_FExposureSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FExposureSettings(FExposureSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("ExposureSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFExposureSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFExposureSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ExposureSettings")),new UScriptStruct::TCppStructOps<FExposureSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFExposureSettings;
class UScriptStruct* FURL::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FURL();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FURL_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FURL, Z_Construct_UPackage__Script_Engine(), TEXT("URL"), sizeof(FURL), Get_Z_Construct_UScriptStruct_FURL_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FURL(FURL::StaticStruct, TEXT("/Script/Engine"), TEXT("URL"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFURL
{
	FScriptStruct_Engine_StaticRegisterNativesFURL()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("URL")),new UScriptStruct::TCppStructOps<FURL>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFURL;
class UScriptStruct* FPrimitiveComponentPostPhysicsTickFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction, Z_Construct_UPackage__Script_Engine(), TEXT("PrimitiveComponentPostPhysicsTickFunction"), sizeof(FPrimitiveComponentPostPhysicsTickFunction), Get_Z_Construct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction(FPrimitiveComponentPostPhysicsTickFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("PrimitiveComponentPostPhysicsTickFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPrimitiveComponentPostPhysicsTickFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFPrimitiveComponentPostPhysicsTickFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PrimitiveComponentPostPhysicsTickFunction")),new UScriptStruct::TCppStructOps<FPrimitiveComponentPostPhysicsTickFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPrimitiveComponentPostPhysicsTickFunction;
class UScriptStruct* FActorComponentTickFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FActorComponentTickFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FActorComponentTickFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FActorComponentTickFunction, Z_Construct_UPackage__Script_Engine(), TEXT("ActorComponentTickFunction"), sizeof(FActorComponentTickFunction), Get_Z_Construct_UScriptStruct_FActorComponentTickFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FActorComponentTickFunction(FActorComponentTickFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("ActorComponentTickFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFActorComponentTickFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFActorComponentTickFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ActorComponentTickFunction")),new UScriptStruct::TCppStructOps<FActorComponentTickFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFActorComponentTickFunction;
class UScriptStruct* FActorTickFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FActorTickFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FActorTickFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FActorTickFunction, Z_Construct_UPackage__Script_Engine(), TEXT("ActorTickFunction"), sizeof(FActorTickFunction), Get_Z_Construct_UScriptStruct_FActorTickFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FActorTickFunction(FActorTickFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("ActorTickFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFActorTickFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFActorTickFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ActorTickFunction")),new UScriptStruct::TCppStructOps<FActorTickFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFActorTickFunction;
class UScriptStruct* FTickFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTickFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTickFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTickFunction, Z_Construct_UPackage__Script_Engine(), TEXT("TickFunction"), sizeof(FTickFunction), Get_Z_Construct_UScriptStruct_FTickFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTickFunction(FTickFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("TickFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTickFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFTickFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TickFunction")),new UScriptStruct::TCppStructOps<FTickFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTickFunction;
class UScriptStruct* FTickPrerequisite::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTickPrerequisite();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTickPrerequisite_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTickPrerequisite, Z_Construct_UPackage__Script_Engine(), TEXT("TickPrerequisite"), sizeof(FTickPrerequisite), Get_Z_Construct_UScriptStruct_FTickPrerequisite_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTickPrerequisite(FTickPrerequisite::StaticStruct, TEXT("/Script/Engine"), TEXT("TickPrerequisite"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTickPrerequisite
{
	FScriptStruct_Engine_StaticRegisterNativesFTickPrerequisite()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TickPrerequisite")),new UScriptStruct::TCppStructOps<FTickPrerequisite>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTickPrerequisite;
	void UEngineBaseTypes::StaticRegisterNativesUEngineBaseTypes()
	{
	}
	IMPLEMENT_CLASS(UEngineBaseTypes, 315329621);
static class UEnum* ENodeEnabledState_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENodeEnabledState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENodeEnabledState, Z_Construct_UPackage__Script_Engine(), TEXT("ENodeEnabledState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENodeEnabledState(ENodeEnabledState_StaticEnum, TEXT("/Script/Engine"), TEXT("ENodeEnabledState"), false, nullptr, nullptr);
static class UEnum* ENodeAdvancedPins_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENodeAdvancedPins();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENodeAdvancedPins, Z_Construct_UPackage__Script_Engine(), TEXT("ENodeAdvancedPins"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENodeAdvancedPins(ENodeAdvancedPins_StaticEnum, TEXT("/Script/Engine"), TEXT("ENodeAdvancedPins"), false, nullptr, nullptr);
static class UEnum* ENodeTitleType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENodeTitleType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENodeTitleType, Z_Construct_UPackage__Script_Engine(), TEXT("ENodeTitleType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENodeTitleType(ENodeTitleType_StaticEnum, TEXT("/Script/Engine"), TEXT("ENodeTitleType"), false, nullptr, nullptr);
static class UEnum* EEdGraphPinDirection_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEdGraphPinDirection();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEdGraphPinDirection, Z_Construct_UPackage__Script_Engine(), TEXT("EEdGraphPinDirection"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEdGraphPinDirection(EEdGraphPinDirection_StaticEnum, TEXT("/Script/Engine"), TEXT("EEdGraphPinDirection"), false, nullptr, nullptr);
class UScriptStruct* FEdGraphTerminalType::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphTerminalType();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEdGraphTerminalType_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEdGraphTerminalType, Z_Construct_UPackage__Script_Engine(), TEXT("EdGraphTerminalType"), sizeof(FEdGraphTerminalType), Get_Z_Construct_UScriptStruct_FEdGraphTerminalType_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEdGraphTerminalType(FEdGraphTerminalType::StaticStruct, TEXT("/Script/Engine"), TEXT("EdGraphTerminalType"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEdGraphTerminalType
{
	FScriptStruct_Engine_StaticRegisterNativesFEdGraphTerminalType()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EdGraphTerminalType")),new UScriptStruct::TCppStructOps<FEdGraphTerminalType>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEdGraphTerminalType;
	void UEdGraphNode::StaticRegisterNativesUEdGraphNode()
	{
	}
	IMPLEMENT_CLASS(UEdGraphNode, 1096325898);
static class UEnum* EBlueprintPinStyleType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintPinStyleType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBlueprintPinStyleType, Z_Construct_UPackage__Script_Engine(), TEXT("EBlueprintPinStyleType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlueprintPinStyleType(EBlueprintPinStyleType_StaticEnum, TEXT("/Script/Engine"), TEXT("EBlueprintPinStyleType"), false, nullptr, nullptr);
class UScriptStruct* FEdGraphPinReference::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphPinReference();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEdGraphPinReference_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEdGraphPinReference, Z_Construct_UPackage__Script_Engine(), TEXT("EdGraphPinReference"), sizeof(FEdGraphPinReference), Get_Z_Construct_UScriptStruct_FEdGraphPinReference_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEdGraphPinReference(FEdGraphPinReference::StaticStruct, TEXT("/Script/Engine"), TEXT("EdGraphPinReference"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEdGraphPinReference
{
	FScriptStruct_Engine_StaticRegisterNativesFEdGraphPinReference()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EdGraphPinReference")),new UScriptStruct::TCppStructOps<FEdGraphPinReference>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEdGraphPinReference;
class UScriptStruct* FEdGraphPinType::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphPinType();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEdGraphPinType_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEdGraphPinType, Z_Construct_UPackage__Script_Engine(), TEXT("EdGraphPinType"), sizeof(FEdGraphPinType), Get_Z_Construct_UScriptStruct_FEdGraphPinType_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEdGraphPinType(FEdGraphPinType::StaticStruct, TEXT("/Script/Engine"), TEXT("EdGraphPinType"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEdGraphPinType
{
	FScriptStruct_Engine_StaticRegisterNativesFEdGraphPinType()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EdGraphPinType")),new UScriptStruct::TCppStructOps<FEdGraphPinType>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEdGraphPinType;
class UScriptStruct* FSimpleMemberReference::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSimpleMemberReference();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSimpleMemberReference_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSimpleMemberReference, Z_Construct_UPackage__Script_Engine(), TEXT("SimpleMemberReference"), sizeof(FSimpleMemberReference), Get_Z_Construct_UScriptStruct_FSimpleMemberReference_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSimpleMemberReference(FSimpleMemberReference::StaticStruct, TEXT("/Script/Engine"), TEXT("SimpleMemberReference"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSimpleMemberReference
{
	FScriptStruct_Engine_StaticRegisterNativesFSimpleMemberReference()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SimpleMemberReference")),new UScriptStruct::TCppStructOps<FSimpleMemberReference>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSimpleMemberReference;
	void UEdGraphPin_Deprecated::StaticRegisterNativesUEdGraphPin_Deprecated()
	{
	}
	IMPLEMENT_CLASS(UEdGraphPin_Deprecated, 27050829);
	void UInterface_AssetUserData::StaticRegisterNativesUInterface_AssetUserData()
	{
	}
	IMPLEMENT_CLASS(UInterface_AssetUserData, 171202645);
static class UEnum* EComponentCreationMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EComponentCreationMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EComponentCreationMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EComponentCreationMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EComponentCreationMethod(EComponentCreationMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EComponentCreationMethod"), false, nullptr, nullptr);
	void UActorComponent::ReceiveBeginPlay()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveBeginPlay),NULL);
	}
	void UActorComponent::ReceiveEndPlay(EEndPlayReason::Type EndPlayReason)
	{
		ActorComponent_eventReceiveEndPlay_Parms Parms;
		Parms.EndPlayReason=EndPlayReason;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveEndPlay),&Parms);
	}
	void UActorComponent::ReceiveTick(float DeltaSeconds)
	{
		ActorComponent_eventReceiveTick_Parms Parms;
		Parms.DeltaSeconds=DeltaSeconds;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveTick),&Parms);
	}
	void UActorComponent::StaticRegisterNativesUActorComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "Activate",(Native)&UActorComponent::execActivate);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "AddTickPrerequisiteActor",(Native)&UActorComponent::execAddTickPrerequisiteActor);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "AddTickPrerequisiteComponent",(Native)&UActorComponent::execAddTickPrerequisiteComponent);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "ComponentHasTag",(Native)&UActorComponent::execComponentHasTag);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "Deactivate",(Native)&UActorComponent::execDeactivate);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "GetComponentTickInterval",(Native)&UActorComponent::execGetComponentTickInterval);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "GetOwner",(Native)&UActorComponent::execGetOwner);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "IsActive",(Native)&UActorComponent::execIsActive);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "IsBeingDestroyed",(Native)&UActorComponent::execIsBeingDestroyed);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "IsComponentTickEnabled",(Native)&UActorComponent::execIsComponentTickEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "K2_DestroyComponent",(Native)&UActorComponent::execK2_DestroyComponent);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "OnRep_IsActive",(Native)&UActorComponent::execOnRep_IsActive);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "RemoveTickPrerequisiteActor",(Native)&UActorComponent::execRemoveTickPrerequisiteActor);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "RemoveTickPrerequisiteComponent",(Native)&UActorComponent::execRemoveTickPrerequisiteComponent);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "SetActive",(Native)&UActorComponent::execSetActive);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "SetAutoActivate",(Native)&UActorComponent::execSetAutoActivate);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "SetComponentTickEnabled",(Native)&UActorComponent::execSetComponentTickEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "SetComponentTickInterval",(Native)&UActorComponent::execSetComponentTickInterval);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "SetIsReplicated",(Native)&UActorComponent::execSetIsReplicated);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "SetTickableWhenPaused",(Native)&UActorComponent::execSetTickableWhenPaused);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "SetTickGroup",(Native)&UActorComponent::execSetTickGroup);
		FNativeFunctionRegistrar::RegisterFunction(UActorComponent::StaticClass(), "ToggleActive",(Native)&UActorComponent::execToggleActive);
	}
	IMPLEMENT_CLASS(UActorComponent, 1546532388);
static class UEnum* ERelativeTransformSpace_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERelativeTransformSpace();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERelativeTransformSpace, Z_Construct_UPackage__Script_Engine(), TEXT("ERelativeTransformSpace"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERelativeTransformSpace(ERelativeTransformSpace_StaticEnum, TEXT("/Script/Engine"), TEXT("ERelativeTransformSpace"), false, nullptr, nullptr);
static class UEnum* EDetailMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDetailMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDetailMode, Z_Construct_UPackage__Script_Engine(), TEXT("EDetailMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDetailMode(EDetailMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EDetailMode"), false, nullptr, nullptr);
class UScriptStruct* FOverlapInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FOverlapInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FOverlapInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FOverlapInfo, Z_Construct_UPackage__Script_Engine(), TEXT("OverlapInfo"), sizeof(FOverlapInfo), Get_Z_Construct_UScriptStruct_FOverlapInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FOverlapInfo(FOverlapInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("OverlapInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFOverlapInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFOverlapInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("OverlapInfo")),new UScriptStruct::TCppStructOps<FOverlapInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFOverlapInfo;
	void USceneComponent::StaticRegisterNativesUSceneComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "DetachFromParent",(Native)&USceneComponent::execDetachFromParent);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "DoesSocketExist",(Native)&USceneComponent::execDoesSocketExist);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetAllSocketNames",(Native)&USceneComponent::execGetAllSocketNames);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetAttachParent",(Native)&USceneComponent::execGetAttachParent);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetAttachSocketName",(Native)&USceneComponent::execGetAttachSocketName);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetChildComponent",(Native)&USceneComponent::execGetChildComponent);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetChildrenComponents",(Native)&USceneComponent::execGetChildrenComponents);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetComponentVelocity",(Native)&USceneComponent::execGetComponentVelocity);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetForwardVector",(Native)&USceneComponent::execGetForwardVector);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetNumChildrenComponents",(Native)&USceneComponent::execGetNumChildrenComponents);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetParentComponents",(Native)&USceneComponent::execGetParentComponents);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetPhysicsVolume",(Native)&USceneComponent::execGetPhysicsVolume);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetRelativeTransform",(Native)&USceneComponent::execGetRelativeTransform);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetRightVector",(Native)&USceneComponent::execGetRightVector);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetSocketLocation",(Native)&USceneComponent::execGetSocketLocation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetSocketQuaternion",(Native)&USceneComponent::execGetSocketQuaternion);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetSocketRotation",(Native)&USceneComponent::execGetSocketRotation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetSocketTransform",(Native)&USceneComponent::execGetSocketTransform);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "GetUpVector",(Native)&USceneComponent::execGetUpVector);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "IsAnySimulatingPhysics",(Native)&USceneComponent::execIsAnySimulatingPhysics);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "IsSimulatingPhysics",(Native)&USceneComponent::execIsSimulatingPhysics);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "IsVisible",(Native)&USceneComponent::execIsVisible);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AddLocalOffset",(Native)&USceneComponent::execK2_AddLocalOffset);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AddLocalRotation",(Native)&USceneComponent::execK2_AddLocalRotation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AddLocalTransform",(Native)&USceneComponent::execK2_AddLocalTransform);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AddRelativeLocation",(Native)&USceneComponent::execK2_AddRelativeLocation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AddRelativeRotation",(Native)&USceneComponent::execK2_AddRelativeRotation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AddWorldOffset",(Native)&USceneComponent::execK2_AddWorldOffset);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AddWorldRotation",(Native)&USceneComponent::execK2_AddWorldRotation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AddWorldTransform",(Native)&USceneComponent::execK2_AddWorldTransform);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AttachTo",(Native)&USceneComponent::execK2_AttachTo);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_AttachToComponent",(Native)&USceneComponent::execK2_AttachToComponent);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_DetachFromComponent",(Native)&USceneComponent::execK2_DetachFromComponent);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_GetComponentLocation",(Native)&USceneComponent::execK2_GetComponentLocation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_GetComponentRotation",(Native)&USceneComponent::execK2_GetComponentRotation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_GetComponentScale",(Native)&USceneComponent::execK2_GetComponentScale);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_GetComponentToWorld",(Native)&USceneComponent::execK2_GetComponentToWorld);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_SetRelativeLocation",(Native)&USceneComponent::execK2_SetRelativeLocation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_SetRelativeLocationAndRotation",(Native)&USceneComponent::execK2_SetRelativeLocationAndRotation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_SetRelativeRotation",(Native)&USceneComponent::execK2_SetRelativeRotation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_SetRelativeTransform",(Native)&USceneComponent::execK2_SetRelativeTransform);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_SetWorldLocation",(Native)&USceneComponent::execK2_SetWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_SetWorldLocationAndRotation",(Native)&USceneComponent::execK2_SetWorldLocationAndRotation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_SetWorldRotation",(Native)&USceneComponent::execK2_SetWorldRotation);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "K2_SetWorldTransform",(Native)&USceneComponent::execK2_SetWorldTransform);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "OnRep_AttachChildren",(Native)&USceneComponent::execOnRep_AttachChildren);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "OnRep_AttachParent",(Native)&USceneComponent::execOnRep_AttachParent);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "OnRep_AttachSocketName",(Native)&USceneComponent::execOnRep_AttachSocketName);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "OnRep_Transform",(Native)&USceneComponent::execOnRep_Transform);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "OnRep_Visibility",(Native)&USceneComponent::execOnRep_Visibility);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "ResetRelativeTransform",(Native)&USceneComponent::execResetRelativeTransform);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "SetAbsolute",(Native)&USceneComponent::execSetAbsolute);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "SetHiddenInGame",(Native)&USceneComponent::execSetHiddenInGame);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "SetRelativeScale3D",(Native)&USceneComponent::execSetRelativeScale3D);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "SetVisibility",(Native)&USceneComponent::execSetVisibility);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "SetWorldScale3D",(Native)&USceneComponent::execSetWorldScale3D);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "SnapTo",(Native)&USceneComponent::execSnapTo);
		FNativeFunctionRegistrar::RegisterFunction(USceneComponent::StaticClass(), "ToggleVisibility",(Native)&USceneComponent::execToggleVisibility);
	}
	IMPLEMENT_CLASS(USceneComponent, 1923600893);
	void UChildActorComponent::StaticRegisterNativesUChildActorComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UChildActorComponent::StaticClass(), "SetChildActorClass",(Native)&UChildActorComponent::execSetChildActorClass);
	}
	IMPLEMENT_CLASS(UChildActorComponent, 2414575638);
static class UEnum* EMaterialMergeType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialMergeType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialMergeType, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialMergeType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialMergeType(EMaterialMergeType_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialMergeType"), false, nullptr, nullptr);
static class UEnum* ETextureSizingType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureSizingType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETextureSizingType, Z_Construct_UPackage__Script_Engine(), TEXT("ETextureSizingType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETextureSizingType(ETextureSizingType_StaticEnum, TEXT("/Script/Engine"), TEXT("ETextureSizingType"), false, nullptr, nullptr);
class UScriptStruct* FMaterialProxySettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialProxySettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMaterialProxySettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialProxySettings, Z_Construct_UPackage__Script_Engine(), TEXT("MaterialProxySettings"), sizeof(FMaterialProxySettings), Get_Z_Construct_UScriptStruct_FMaterialProxySettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialProxySettings(FMaterialProxySettings::StaticStruct, TEXT("/Script/Engine"), TEXT("MaterialProxySettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMaterialProxySettings
{
	FScriptStruct_Engine_StaticRegisterNativesFMaterialProxySettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialProxySettings")),new UScriptStruct::TCppStructOps<FMaterialProxySettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMaterialProxySettings;
class UScriptStruct* FMaterialSimplificationSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialSimplificationSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMaterialSimplificationSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialSimplificationSettings, Z_Construct_UPackage__Script_Engine(), TEXT("MaterialSimplificationSettings"), sizeof(FMaterialSimplificationSettings), Get_Z_Construct_UScriptStruct_FMaterialSimplificationSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialSimplificationSettings(FMaterialSimplificationSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("MaterialSimplificationSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMaterialSimplificationSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFMaterialSimplificationSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialSimplificationSettings")),new UScriptStruct::TCppStructOps<FMaterialSimplificationSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMaterialSimplificationSettings;
class UScriptStruct* FLevelSimplificationDetails::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelSimplificationDetails();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLevelSimplificationDetails_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLevelSimplificationDetails, Z_Construct_UPackage__Script_Engine(), TEXT("LevelSimplificationDetails"), sizeof(FLevelSimplificationDetails), Get_Z_Construct_UScriptStruct_FLevelSimplificationDetails_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLevelSimplificationDetails(FLevelSimplificationDetails::StaticStruct, TEXT("/Script/Engine"), TEXT("LevelSimplificationDetails"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLevelSimplificationDetails
{
	FScriptStruct_Engine_StaticRegisterNativesFLevelSimplificationDetails()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LevelSimplificationDetails")),new UScriptStruct::TCppStructOps<FLevelSimplificationDetails>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLevelSimplificationDetails;
class UScriptStruct* FDynamicTextureInstance::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDynamicTextureInstance();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDynamicTextureInstance_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDynamicTextureInstance, Z_Construct_UPackage__Script_Engine(), TEXT("DynamicTextureInstance"), sizeof(FDynamicTextureInstance), Get_Z_Construct_UScriptStruct_FDynamicTextureInstance_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDynamicTextureInstance(FDynamicTextureInstance::StaticStruct, TEXT("/Script/Engine"), TEXT("DynamicTextureInstance"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDynamicTextureInstance
{
	FScriptStruct_Engine_StaticRegisterNativesFDynamicTextureInstance()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DynamicTextureInstance")),new UScriptStruct::TCppStructOps<FDynamicTextureInstance>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDynamicTextureInstance;
class UScriptStruct* FStreamableTextureInstance::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamableTextureInstance();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStreamableTextureInstance_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStreamableTextureInstance, Z_Construct_UPackage__Script_Engine(), TEXT("StreamableTextureInstance"), sizeof(FStreamableTextureInstance), Get_Z_Construct_UScriptStruct_FStreamableTextureInstance_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStreamableTextureInstance(FStreamableTextureInstance::StaticStruct, TEXT("/Script/Engine"), TEXT("StreamableTextureInstance"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStreamableTextureInstance
{
	FScriptStruct_Engine_StaticRegisterNativesFStreamableTextureInstance()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StreamableTextureInstance")),new UScriptStruct::TCppStructOps<FStreamableTextureInstance>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStreamableTextureInstance;
	void ULevel::StaticRegisterNativesULevel()
	{
	}
	IMPLEMENT_CLASS(ULevel, 3582157261);
	void AActor::K2_OnBecomeViewTarget(APlayerController* PC)
	{
		Actor_eventK2_OnBecomeViewTarget_Parms Parms;
		Parms.PC=PC;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnBecomeViewTarget),&Parms);
	}
	void AActor::K2_OnEndViewTarget(APlayerController* PC)
	{
		Actor_eventK2_OnEndViewTarget_Parms Parms;
		Parms.PC=PC;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnEndViewTarget),&Parms);
	}
	void AActor::K2_OnReset()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnReset),NULL);
	}
	void AActor::ReceiveActorBeginCursorOver()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorBeginCursorOver),NULL);
	}
	void AActor::ReceiveActorBeginOverlap(AActor* OtherActor)
	{
		Actor_eventReceiveActorBeginOverlap_Parms Parms;
		Parms.OtherActor=OtherActor;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorBeginOverlap),&Parms);
	}
	void AActor::ReceiveActorEndCursorOver()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorEndCursorOver),NULL);
	}
	void AActor::ReceiveActorEndOverlap(AActor* OtherActor)
	{
		Actor_eventReceiveActorEndOverlap_Parms Parms;
		Parms.OtherActor=OtherActor;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorEndOverlap),&Parms);
	}
	void AActor::ReceiveActorOnClicked(FKey ButtonPressed)
	{
		Actor_eventReceiveActorOnClicked_Parms Parms;
		Parms.ButtonPressed=ButtonPressed;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorOnClicked),&Parms);
	}
	void AActor::ReceiveActorOnInputTouchBegin(const ETouchIndex::Type FingerIndex)
	{
		Actor_eventReceiveActorOnInputTouchBegin_Parms Parms;
		Parms.FingerIndex=FingerIndex;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorOnInputTouchBegin),&Parms);
	}
	void AActor::ReceiveActorOnInputTouchEnd(const ETouchIndex::Type FingerIndex)
	{
		Actor_eventReceiveActorOnInputTouchEnd_Parms Parms;
		Parms.FingerIndex=FingerIndex;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorOnInputTouchEnd),&Parms);
	}
	void AActor::ReceiveActorOnInputTouchEnter(const ETouchIndex::Type FingerIndex)
	{
		Actor_eventReceiveActorOnInputTouchEnter_Parms Parms;
		Parms.FingerIndex=FingerIndex;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorOnInputTouchEnter),&Parms);
	}
	void AActor::ReceiveActorOnInputTouchLeave(const ETouchIndex::Type FingerIndex)
	{
		Actor_eventReceiveActorOnInputTouchLeave_Parms Parms;
		Parms.FingerIndex=FingerIndex;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorOnInputTouchLeave),&Parms);
	}
	void AActor::ReceiveActorOnReleased(FKey ButtonReleased)
	{
		Actor_eventReceiveActorOnReleased_Parms Parms;
		Parms.ButtonReleased=ButtonReleased;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveActorOnReleased),&Parms);
	}
	void AActor::ReceiveAnyDamage(float Damage, const UDamageType* DamageType, AController* InstigatedBy, AActor* DamageCauser)
	{
		Actor_eventReceiveAnyDamage_Parms Parms;
		Parms.Damage=Damage;
		Parms.DamageType=DamageType;
		Parms.InstigatedBy=InstigatedBy;
		Parms.DamageCauser=DamageCauser;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveAnyDamage),&Parms);
	}
	void AActor::ReceiveBeginPlay()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveBeginPlay),NULL);
	}
	void AActor::ReceiveDestroyed()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveDestroyed),NULL);
	}
	void AActor::ReceiveEndPlay(EEndPlayReason::Type EndPlayReason)
	{
		Actor_eventReceiveEndPlay_Parms Parms;
		Parms.EndPlayReason=EndPlayReason;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveEndPlay),&Parms);
	}
	void AActor::ReceiveHit(UPrimitiveComponent* MyComp, AActor* Other, UPrimitiveComponent* OtherComp, bool bSelfMoved, FVector HitLocation, FVector HitNormal, FVector NormalImpulse, FHitResult const& Hit)
	{
		Actor_eventReceiveHit_Parms Parms;
		Parms.MyComp=MyComp;
		Parms.Other=Other;
		Parms.OtherComp=OtherComp;
		Parms.bSelfMoved=bSelfMoved ? true : false;
		Parms.HitLocation=HitLocation;
		Parms.HitNormal=HitNormal;
		Parms.NormalImpulse=NormalImpulse;
		Parms.Hit=Hit;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveHit),&Parms);
	}
	void AActor::ReceivePointDamage(float Damage, const UDamageType* DamageType, FVector HitLocation, FVector HitNormal, UPrimitiveComponent* HitComponent, FName BoneName, FVector ShotFromDirection, AController* InstigatedBy, AActor* DamageCauser, FHitResult const& HitInfo)
	{
		Actor_eventReceivePointDamage_Parms Parms;
		Parms.Damage=Damage;
		Parms.DamageType=DamageType;
		Parms.HitLocation=HitLocation;
		Parms.HitNormal=HitNormal;
		Parms.HitComponent=HitComponent;
		Parms.BoneName=BoneName;
		Parms.ShotFromDirection=ShotFromDirection;
		Parms.InstigatedBy=InstigatedBy;
		Parms.DamageCauser=DamageCauser;
		Parms.HitInfo=HitInfo;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceivePointDamage),&Parms);
	}
	void AActor::ReceiveRadialDamage(float DamageReceived, const UDamageType* DamageType, FVector Origin, FHitResult const& HitInfo, AController* InstigatedBy, AActor* DamageCauser)
	{
		Actor_eventReceiveRadialDamage_Parms Parms;
		Parms.DamageReceived=DamageReceived;
		Parms.DamageType=DamageType;
		Parms.Origin=Origin;
		Parms.HitInfo=HitInfo;
		Parms.InstigatedBy=InstigatedBy;
		Parms.DamageCauser=DamageCauser;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveRadialDamage),&Parms);
	}
	void AActor::ReceiveTick(float DeltaSeconds)
	{
		Actor_eventReceiveTick_Parms Parms;
		Parms.DeltaSeconds=DeltaSeconds;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveTick),&Parms);
	}
	void AActor::UserConstructionScript()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_UserConstructionScript),NULL);
	}
	void AActor::StaticRegisterNativesAActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "ActorHasTag",(Native)&AActor::execActorHasTag);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "AddComponent",(Native)&AActor::execAddComponent);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "AddTickPrerequisiteActor",(Native)&AActor::execAddTickPrerequisiteActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "AddTickPrerequisiteComponent",(Native)&AActor::execAddTickPrerequisiteComponent);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "DetachRootComponentFromParent",(Native)&AActor::execDetachRootComponentFromParent);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "DisableInput",(Native)&AActor::execDisableInput);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "EnableInput",(Native)&AActor::execEnableInput);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "FlushNetDormancy",(Native)&AActor::execFlushNetDormancy);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "ForceNetUpdate",(Native)&AActor::execForceNetUpdate);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorBounds",(Native)&AActor::execGetActorBounds);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorEnableCollision",(Native)&AActor::execGetActorEnableCollision);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorEyesViewPoint",(Native)&AActor::execGetActorEyesViewPoint);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorForwardVector",(Native)&AActor::execGetActorForwardVector);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorRelativeScale3D",(Native)&AActor::execGetActorRelativeScale3D);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorRightVector",(Native)&AActor::execGetActorRightVector);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorScale3D",(Native)&AActor::execGetActorScale3D);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorTickInterval",(Native)&AActor::execGetActorTickInterval);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorTimeDilation",(Native)&AActor::execGetActorTimeDilation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetActorUpVector",(Native)&AActor::execGetActorUpVector);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetAllChildActors",(Native)&AActor::execGetAllChildActors);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetAttachedActors",(Native)&AActor::execGetAttachedActors);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetAttachParentActor",(Native)&AActor::execGetAttachParentActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetAttachParentSocketName",(Native)&AActor::execGetAttachParentSocketName);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetComponentByClass",(Native)&AActor::execGetComponentByClass);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetComponentsByClass",(Native)&AActor::execGetComponentsByClass);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetComponentsByTag",(Native)&AActor::execGetComponentsByTag);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetDistanceTo",(Native)&AActor::execGetDistanceTo);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetDotProductTo",(Native)&AActor::execGetDotProductTo);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetGameTimeSinceCreation",(Native)&AActor::execGetGameTimeSinceCreation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetHorizontalDistanceTo",(Native)&AActor::execGetHorizontalDistanceTo);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetHorizontalDotProductTo",(Native)&AActor::execGetHorizontalDotProductTo);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetInputAxisKeyValue",(Native)&AActor::execGetInputAxisKeyValue);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetInputAxisValue",(Native)&AActor::execGetInputAxisValue);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetInputVectorAxisValue",(Native)&AActor::execGetInputVectorAxisValue);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetInstigator",(Native)&AActor::execGetInstigator);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetInstigatorController",(Native)&AActor::execGetInstigatorController);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetLifeSpan",(Native)&AActor::execGetLifeSpan);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetOverlappingActors",(Native)&AActor::execGetOverlappingActors);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetOverlappingComponents",(Native)&AActor::execGetOverlappingComponents);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetOwner",(Native)&AActor::execGetOwner);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetParentActor",(Native)&AActor::execGetParentActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetParentComponent",(Native)&AActor::execGetParentComponent);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetRemoteRole",(Native)&AActor::execGetRemoteRole);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetSquaredDistanceTo",(Native)&AActor::execGetSquaredDistanceTo);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetTickableWhenPaused",(Native)&AActor::execGetTickableWhenPaused);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetTransform",(Native)&AActor::execGetTransform);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetVelocity",(Native)&AActor::execGetVelocity);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "GetVerticalDistanceTo",(Native)&AActor::execGetVerticalDistanceTo);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "HasAuthority",(Native)&AActor::execHasAuthority);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "IsActorBeingDestroyed",(Native)&AActor::execIsActorBeingDestroyed);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "IsActorTickEnabled",(Native)&AActor::execIsActorTickEnabled);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "IsChildActor",(Native)&AActor::execIsChildActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "IsOverlappingActor",(Native)&AActor::execIsOverlappingActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AddActorLocalOffset",(Native)&AActor::execK2_AddActorLocalOffset);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AddActorLocalRotation",(Native)&AActor::execK2_AddActorLocalRotation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AddActorLocalTransform",(Native)&AActor::execK2_AddActorLocalTransform);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AddActorWorldOffset",(Native)&AActor::execK2_AddActorWorldOffset);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AddActorWorldRotation",(Native)&AActor::execK2_AddActorWorldRotation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AddActorWorldTransform",(Native)&AActor::execK2_AddActorWorldTransform);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AttachRootComponentTo",(Native)&AActor::execK2_AttachRootComponentTo);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AttachRootComponentToActor",(Native)&AActor::execK2_AttachRootComponentToActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AttachToActor",(Native)&AActor::execK2_AttachToActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_AttachToComponent",(Native)&AActor::execK2_AttachToComponent);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_DestroyActor",(Native)&AActor::execK2_DestroyActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_DestroyComponent",(Native)&AActor::execK2_DestroyComponent);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_DetachFromActor",(Native)&AActor::execK2_DetachFromActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_GetActorLocation",(Native)&AActor::execK2_GetActorLocation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_GetActorRotation",(Native)&AActor::execK2_GetActorRotation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_GetRootComponent",(Native)&AActor::execK2_GetRootComponent);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_SetActorLocation",(Native)&AActor::execK2_SetActorLocation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_SetActorLocationAndRotation",(Native)&AActor::execK2_SetActorLocationAndRotation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_SetActorRelativeLocation",(Native)&AActor::execK2_SetActorRelativeLocation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_SetActorRelativeRotation",(Native)&AActor::execK2_SetActorRelativeRotation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_SetActorRelativeTransform",(Native)&AActor::execK2_SetActorRelativeTransform);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_SetActorRotation",(Native)&AActor::execK2_SetActorRotation);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_SetActorTransform",(Native)&AActor::execK2_SetActorTransform);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "K2_TeleportTo",(Native)&AActor::execK2_TeleportTo);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "MakeMIDForMaterial",(Native)&AActor::execMakeMIDForMaterial);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "MakeNoise",(Native)&AActor::execMakeNoise);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "OnRep_AttachmentReplication",(Native)&AActor::execOnRep_AttachmentReplication);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "OnRep_Instigator",(Native)&AActor::execOnRep_Instigator);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "OnRep_Owner",(Native)&AActor::execOnRep_Owner);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "OnRep_ReplicatedMovement",(Native)&AActor::execOnRep_ReplicatedMovement);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "OnRep_ReplicateMovement",(Native)&AActor::execOnRep_ReplicateMovement);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "RemoveTickPrerequisiteActor",(Native)&AActor::execRemoveTickPrerequisiteActor);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "RemoveTickPrerequisiteComponent",(Native)&AActor::execRemoveTickPrerequisiteComponent);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetActorEnableCollision",(Native)&AActor::execSetActorEnableCollision);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetActorHiddenInGame",(Native)&AActor::execSetActorHiddenInGame);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetActorRelativeScale3D",(Native)&AActor::execSetActorRelativeScale3D);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetActorScale3D",(Native)&AActor::execSetActorScale3D);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetActorTickEnabled",(Native)&AActor::execSetActorTickEnabled);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetActorTickInterval",(Native)&AActor::execSetActorTickInterval);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetLifeSpan",(Native)&AActor::execSetLifeSpan);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetOwner",(Native)&AActor::execSetOwner);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetReplicateMovement",(Native)&AActor::execSetReplicateMovement);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetReplicates",(Native)&AActor::execSetReplicates);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetTickableWhenPaused",(Native)&AActor::execSetTickableWhenPaused);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SetTickGroup",(Native)&AActor::execSetTickGroup);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "SnapRootComponentTo",(Native)&AActor::execSnapRootComponentTo);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "TearOff",(Native)&AActor::execTearOff);
		FNativeFunctionRegistrar::RegisterFunction(AActor::StaticClass(), "WasRecentlyRendered",(Native)&AActor::execWasRecentlyRendered);
	}
	IMPLEMENT_CLASS(AActor, 2722311405);
	void AAmbientSound::StaticRegisterNativesAAmbientSound()
	{
		FNativeFunctionRegistrar::RegisterFunction(AAmbientSound::StaticClass(), "AdjustVolume",(Native)&AAmbientSound::execAdjustVolume);
		FNativeFunctionRegistrar::RegisterFunction(AAmbientSound::StaticClass(), "FadeIn",(Native)&AAmbientSound::execFadeIn);
		FNativeFunctionRegistrar::RegisterFunction(AAmbientSound::StaticClass(), "FadeOut",(Native)&AAmbientSound::execFadeOut);
		FNativeFunctionRegistrar::RegisterFunction(AAmbientSound::StaticClass(), "Play",(Native)&AAmbientSound::execPlay);
		FNativeFunctionRegistrar::RegisterFunction(AAmbientSound::StaticClass(), "Stop",(Native)&AAmbientSound::execStop);
	}
	IMPLEMENT_CLASS(AAmbientSound, 70911398);
static class UEnum* EBrushType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBrushType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBrushType, Z_Construct_UPackage__Script_Engine(), TEXT("EBrushType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBrushType(EBrushType_StaticEnum, TEXT("/Script/Engine"), TEXT("EBrushType"), false, nullptr, nullptr);
static class UEnum* ECsgOper_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECsgOper();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECsgOper, Z_Construct_UPackage__Script_Engine(), TEXT("ECsgOper"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECsgOper(ECsgOper_StaticEnum, TEXT("/Script/Engine"), TEXT("ECsgOper"), false, nullptr, nullptr);
class UScriptStruct* FGeomSelection::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGeomSelection();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FGeomSelection_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGeomSelection, Z_Construct_UPackage__Script_Engine(), TEXT("GeomSelection"), sizeof(FGeomSelection), Get_Z_Construct_UScriptStruct_FGeomSelection_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGeomSelection(FGeomSelection::StaticStruct, TEXT("/Script/Engine"), TEXT("GeomSelection"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFGeomSelection
{
	FScriptStruct_Engine_StaticRegisterNativesFGeomSelection()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GeomSelection")),new UScriptStruct::TCppStructOps<FGeomSelection>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFGeomSelection;
	void ABrush::StaticRegisterNativesABrush()
	{
	}
	IMPLEMENT_CLASS(ABrush, 1444644522);
	void ABrushShape::StaticRegisterNativesABrushShape()
	{
	}
	IMPLEMENT_CLASS(ABrushShape, 503633548);
	void AVolume::StaticRegisterNativesAVolume()
	{
	}
	IMPLEMENT_CLASS(AVolume, 1532240849);
static class UEnum* ReverbPreset_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ReverbPreset();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ReverbPreset, Z_Construct_UPackage__Script_Engine(), TEXT("ReverbPreset"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ReverbPreset(ReverbPreset_StaticEnum, TEXT("/Script/Engine"), TEXT("ReverbPreset"), false, nullptr, nullptr);
class UScriptStruct* FInteriorSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInteriorSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInteriorSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInteriorSettings, Z_Construct_UPackage__Script_Engine(), TEXT("InteriorSettings"), sizeof(FInteriorSettings), Get_Z_Construct_UScriptStruct_FInteriorSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInteriorSettings(FInteriorSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("InteriorSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInteriorSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFInteriorSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InteriorSettings")),new UScriptStruct::TCppStructOps<FInteriorSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInteriorSettings;
class UScriptStruct* FReverbSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FReverbSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FReverbSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FReverbSettings, Z_Construct_UPackage__Script_Engine(), TEXT("ReverbSettings"), sizeof(FReverbSettings), Get_Z_Construct_UScriptStruct_FReverbSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FReverbSettings(FReverbSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("ReverbSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFReverbSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFReverbSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ReverbSettings")),new UScriptStruct::TCppStructOps<FReverbSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFReverbSettings;
	void AAudioVolume::StaticRegisterNativesAAudioVolume()
	{
		FNativeFunctionRegistrar::RegisterFunction(AAudioVolume::StaticClass(), "OnRep_bEnabled",(Native)&AAudioVolume::execOnRep_bEnabled);
		FNativeFunctionRegistrar::RegisterFunction(AAudioVolume::StaticClass(), "SetEnabled",(Native)&AAudioVolume::execSetEnabled);
		FNativeFunctionRegistrar::RegisterFunction(AAudioVolume::StaticClass(), "SetInteriorSettings",(Native)&AAudioVolume::execSetInteriorSettings);
		FNativeFunctionRegistrar::RegisterFunction(AAudioVolume::StaticClass(), "SetPriority",(Native)&AAudioVolume::execSetPriority);
		FNativeFunctionRegistrar::RegisterFunction(AAudioVolume::StaticClass(), "SetReverbSettings",(Native)&AAudioVolume::execSetReverbSettings);
	}
	IMPLEMENT_CLASS(AAudioVolume, 2898573626);
	void ABlockingVolume::StaticRegisterNativesABlockingVolume()
	{
	}
	IMPLEMENT_CLASS(ABlockingVolume, 1465917267);
	void ACameraBlockingVolume::StaticRegisterNativesACameraBlockingVolume()
	{
	}
	IMPLEMENT_CLASS(ACameraBlockingVolume, 3278566408);
class UScriptStruct* FCullDistanceSizePair::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCullDistanceSizePair();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCullDistanceSizePair_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCullDistanceSizePair, Z_Construct_UPackage__Script_Engine(), TEXT("CullDistanceSizePair"), sizeof(FCullDistanceSizePair), Get_Z_Construct_UScriptStruct_FCullDistanceSizePair_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCullDistanceSizePair(FCullDistanceSizePair::StaticStruct, TEXT("/Script/Engine"), TEXT("CullDistanceSizePair"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCullDistanceSizePair
{
	FScriptStruct_Engine_StaticRegisterNativesFCullDistanceSizePair()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CullDistanceSizePair")),new UScriptStruct::TCppStructOps<FCullDistanceSizePair>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCullDistanceSizePair;
	void ACullDistanceVolume::StaticRegisterNativesACullDistanceVolume()
	{
	}
	IMPLEMENT_CLASS(ACullDistanceVolume, 103405960);
static class UEnum* EStreamingVolumeUsage_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EStreamingVolumeUsage();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EStreamingVolumeUsage, Z_Construct_UPackage__Script_Engine(), TEXT("EStreamingVolumeUsage"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EStreamingVolumeUsage(EStreamingVolumeUsage_StaticEnum, TEXT("/Script/Engine"), TEXT("EStreamingVolumeUsage"), false, nullptr, nullptr);
	void ALevelStreamingVolume::StaticRegisterNativesALevelStreamingVolume()
	{
	}
	IMPLEMENT_CLASS(ALevelStreamingVolume, 1228396937);
	void ALightmassCharacterIndirectDetailVolume::StaticRegisterNativesALightmassCharacterIndirectDetailVolume()
	{
	}
	IMPLEMENT_CLASS(ALightmassCharacterIndirectDetailVolume, 2837583349);
	void ALightmassImportanceVolume::StaticRegisterNativesALightmassImportanceVolume()
	{
	}
	IMPLEMENT_CLASS(ALightmassImportanceVolume, 3466940441);
	void AMeshMergeCullingVolume::StaticRegisterNativesAMeshMergeCullingVolume()
	{
	}
	IMPLEMENT_CLASS(AMeshMergeCullingVolume, 2204398343);
class UScriptStruct* FNavigationFilterFlags::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationFilterFlags();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavigationFilterFlags_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavigationFilterFlags, Z_Construct_UPackage__Script_Engine(), TEXT("NavigationFilterFlags"), sizeof(FNavigationFilterFlags), Get_Z_Construct_UScriptStruct_FNavigationFilterFlags_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavigationFilterFlags(FNavigationFilterFlags::StaticStruct, TEXT("/Script/Engine"), TEXT("NavigationFilterFlags"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavigationFilterFlags
{
	FScriptStruct_Engine_StaticRegisterNativesFNavigationFilterFlags()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavigationFilterFlags")),new UScriptStruct::TCppStructOps<FNavigationFilterFlags>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavigationFilterFlags;
class UScriptStruct* FNavigationFilterArea::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationFilterArea();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavigationFilterArea_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavigationFilterArea, Z_Construct_UPackage__Script_Engine(), TEXT("NavigationFilterArea"), sizeof(FNavigationFilterArea), Get_Z_Construct_UScriptStruct_FNavigationFilterArea_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavigationFilterArea(FNavigationFilterArea::StaticStruct, TEXT("/Script/Engine"), TEXT("NavigationFilterArea"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavigationFilterArea
{
	FScriptStruct_Engine_StaticRegisterNativesFNavigationFilterArea()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavigationFilterArea")),new UScriptStruct::TCppStructOps<FNavigationFilterArea>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavigationFilterArea;
	void UNavigationQueryFilter::StaticRegisterNativesUNavigationQueryFilter()
	{
	}
	IMPLEMENT_CLASS(UNavigationQueryFilter, 2299703961);
static class UEnum* ENavigationQueryResult_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavigationQueryResult();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENavigationQueryResult, Z_Construct_UPackage__Script_Engine(), TEXT("ENavigationQueryResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENavigationQueryResult(ENavigationQueryResult_StaticEnum, TEXT("/Script/Engine"), TEXT("ENavigationQueryResult"), false, nullptr, nullptr);
static class UEnum* ENavPathEvent_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavPathEvent();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENavPathEvent, Z_Construct_UPackage__Script_Engine(), TEXT("ENavPathEvent"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENavPathEvent(ENavPathEvent_StaticEnum, TEXT("/Script/Engine"), TEXT("ENavPathEvent"), false, nullptr, nullptr);
static class UEnum* ENavDataGatheringModeConfig_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavDataGatheringModeConfig();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENavDataGatheringModeConfig, Z_Construct_UPackage__Script_Engine(), TEXT("ENavDataGatheringModeConfig"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENavDataGatheringModeConfig(ENavDataGatheringModeConfig_StaticEnum, TEXT("/Script/Engine"), TEXT("ENavDataGatheringModeConfig"), false, nullptr, nullptr);
static class UEnum* ENavDataGatheringMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavDataGatheringMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENavDataGatheringMode, Z_Construct_UPackage__Script_Engine(), TEXT("ENavDataGatheringMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENavDataGatheringMode(ENavDataGatheringMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ENavDataGatheringMode"), false, nullptr, nullptr);
static class UEnum* ENavigationOptionFlag_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavigationOptionFlag();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENavigationOptionFlag, Z_Construct_UPackage__Script_Engine(), TEXT("ENavigationOptionFlag"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENavigationOptionFlag(ENavigationOptionFlag_StaticEnum, TEXT("/Script/Engine"), TEXT("ENavigationOptionFlag"), false, nullptr, nullptr);
class UScriptStruct* FNavDataConfig::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavDataConfig();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavDataConfig_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavDataConfig, Z_Construct_UPackage__Script_Engine(), TEXT("NavDataConfig"), sizeof(FNavDataConfig), Get_Z_Construct_UScriptStruct_FNavDataConfig_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavDataConfig(FNavDataConfig::StaticStruct, TEXT("/Script/Engine"), TEXT("NavDataConfig"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavDataConfig
{
	FScriptStruct_Engine_StaticRegisterNativesFNavDataConfig()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavDataConfig")),new UScriptStruct::TCppStructOps<FNavDataConfig>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavDataConfig;
class UScriptStruct* FNavAgentProperties::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavAgentProperties();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavAgentProperties_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavAgentProperties, Z_Construct_UPackage__Script_Engine(), TEXT("NavAgentProperties"), sizeof(FNavAgentProperties), Get_Z_Construct_UScriptStruct_FNavAgentProperties_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavAgentProperties(FNavAgentProperties::StaticStruct, TEXT("/Script/Engine"), TEXT("NavAgentProperties"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavAgentProperties
{
	FScriptStruct_Engine_StaticRegisterNativesFNavAgentProperties()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavAgentProperties")),new UScriptStruct::TCppStructOps<FNavAgentProperties>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavAgentProperties;
class UScriptStruct* FMovementProperties::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovementProperties();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMovementProperties_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMovementProperties, Z_Construct_UPackage__Script_Engine(), TEXT("MovementProperties"), sizeof(FMovementProperties), Get_Z_Construct_UScriptStruct_FMovementProperties_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMovementProperties(FMovementProperties::StaticStruct, TEXT("/Script/Engine"), TEXT("MovementProperties"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMovementProperties
{
	FScriptStruct_Engine_StaticRegisterNativesFMovementProperties()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MovementProperties")),new UScriptStruct::TCppStructOps<FMovementProperties>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMovementProperties;
class UScriptStruct* FNavAgentSelector::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavAgentSelector();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavAgentSelector_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavAgentSelector, Z_Construct_UPackage__Script_Engine(), TEXT("NavAgentSelector"), sizeof(FNavAgentSelector), Get_Z_Construct_UScriptStruct_FNavAgentSelector_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavAgentSelector(FNavAgentSelector::StaticStruct, TEXT("/Script/Engine"), TEXT("NavAgentSelector"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavAgentSelector
{
	FScriptStruct_Engine_StaticRegisterNativesFNavAgentSelector()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavAgentSelector")),new UScriptStruct::TCppStructOps<FNavAgentSelector>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavAgentSelector;
	void UNavigationTypes::StaticRegisterNativesUNavigationTypes()
	{
	}
	IMPLEMENT_CLASS(UNavigationTypes, 3035772059);
	void ANavMeshBoundsVolume::StaticRegisterNativesANavMeshBoundsVolume()
	{
	}
	IMPLEMENT_CLASS(ANavMeshBoundsVolume, 1142969178);
	void UNavRelevantInterface::StaticRegisterNativesUNavRelevantInterface()
	{
	}
	IMPLEMENT_CLASS(UNavRelevantInterface, 3450468489);
	void UNavArea::StaticRegisterNativesUNavArea()
	{
	}
	IMPLEMENT_CLASS(UNavArea, 861890529);
	void ANavModifierVolume::StaticRegisterNativesANavModifierVolume()
	{
		FNativeFunctionRegistrar::RegisterFunction(ANavModifierVolume::StaticClass(), "SetAreaClass",(Native)&ANavModifierVolume::execSetAreaClass);
	}
	IMPLEMENT_CLASS(ANavModifierVolume, 2698679380);
	void APhysicsVolume::StaticRegisterNativesAPhysicsVolume()
	{
	}
	IMPLEMENT_CLASS(APhysicsVolume, 531445288);
	void ADefaultPhysicsVolume::StaticRegisterNativesADefaultPhysicsVolume()
	{
	}
	IMPLEMENT_CLASS(ADefaultPhysicsVolume, 409291262);
	void AKillZVolume::StaticRegisterNativesAKillZVolume()
	{
	}
	IMPLEMENT_CLASS(AKillZVolume, 2806378055);
	void UDamageType::StaticRegisterNativesUDamageType()
	{
	}
	IMPLEMENT_CLASS(UDamageType, 2848282948);
	void APainCausingVolume::StaticRegisterNativesAPainCausingVolume()
	{
	}
	IMPLEMENT_CLASS(APainCausingVolume, 664302184);
static class UEnum* EBlendableLocation_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlendableLocation();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBlendableLocation, Z_Construct_UPackage__Script_Engine(), TEXT("EBlendableLocation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlendableLocation(EBlendableLocation_StaticEnum, TEXT("/Script/Engine"), TEXT("EBlendableLocation"), false, nullptr, nullptr);
	void UBlendableInterface::StaticRegisterNativesUBlendableInterface()
	{
	}
	IMPLEMENT_CLASS(UBlendableInterface, 973825631);
static class UEnum* EAutoExposureMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAutoExposureMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAutoExposureMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EAutoExposureMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAutoExposureMethod(EAutoExposureMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EAutoExposureMethod"), false, nullptr, nullptr);
static class UEnum* EAntiAliasingMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAntiAliasingMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAntiAliasingMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EAntiAliasingMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAntiAliasingMethod(EAntiAliasingMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EAntiAliasingMethod"), false, nullptr, nullptr);
static class UEnum* EDepthOfFieldMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDepthOfFieldMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDepthOfFieldMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EDepthOfFieldMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDepthOfFieldMethod(EDepthOfFieldMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EDepthOfFieldMethod"), false, nullptr, nullptr);
class UScriptStruct* FPostProcessSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPostProcessSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPostProcessSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPostProcessSettings, Z_Construct_UPackage__Script_Engine(), TEXT("PostProcessSettings"), sizeof(FPostProcessSettings), Get_Z_Construct_UScriptStruct_FPostProcessSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPostProcessSettings(FPostProcessSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("PostProcessSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPostProcessSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFPostProcessSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PostProcessSettings")),new UScriptStruct::TCppStructOps<FPostProcessSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPostProcessSettings;
class UScriptStruct* FWeightedBlendables::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWeightedBlendables();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FWeightedBlendables_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FWeightedBlendables, Z_Construct_UPackage__Script_Engine(), TEXT("WeightedBlendables"), sizeof(FWeightedBlendables), Get_Z_Construct_UScriptStruct_FWeightedBlendables_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FWeightedBlendables(FWeightedBlendables::StaticStruct, TEXT("/Script/Engine"), TEXT("WeightedBlendables"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFWeightedBlendables
{
	FScriptStruct_Engine_StaticRegisterNativesFWeightedBlendables()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("WeightedBlendables")),new UScriptStruct::TCppStructOps<FWeightedBlendables>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFWeightedBlendables;
class UScriptStruct* FWeightedBlendable::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWeightedBlendable();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FWeightedBlendable_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FWeightedBlendable, Z_Construct_UPackage__Script_Engine(), TEXT("WeightedBlendable"), sizeof(FWeightedBlendable), Get_Z_Construct_UScriptStruct_FWeightedBlendable_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FWeightedBlendable(FWeightedBlendable::StaticStruct, TEXT("/Script/Engine"), TEXT("WeightedBlendable"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFWeightedBlendable
{
	FScriptStruct_Engine_StaticRegisterNativesFWeightedBlendable()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("WeightedBlendable")),new UScriptStruct::TCppStructOps<FWeightedBlendable>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFWeightedBlendable;
	void UScene::StaticRegisterNativesUScene()
	{
	}
	IMPLEMENT_CLASS(UScene, 635606019);
	void UInterface_PostProcessVolume::StaticRegisterNativesUInterface_PostProcessVolume()
	{
	}
	IMPLEMENT_CLASS(UInterface_PostProcessVolume, 673946378);
	void APostProcessVolume::StaticRegisterNativesAPostProcessVolume()
	{
		FNativeFunctionRegistrar::RegisterFunction(APostProcessVolume::StaticClass(), "AddOrUpdateBlendable",(Native)&APostProcessVolume::execAddOrUpdateBlendable);
	}
	IMPLEMENT_CLASS(APostProcessVolume, 450465531);
	void APrecomputedVisibilityOverrideVolume::StaticRegisterNativesAPrecomputedVisibilityOverrideVolume()
	{
	}
	IMPLEMENT_CLASS(APrecomputedVisibilityOverrideVolume, 3139378271);
	void APrecomputedVisibilityVolume::StaticRegisterNativesAPrecomputedVisibilityVolume()
	{
	}
	IMPLEMENT_CLASS(APrecomputedVisibilityVolume, 3158348967);
	void APreCullTrianglesVolume::StaticRegisterNativesAPreCullTrianglesVolume()
	{
	}
	IMPLEMENT_CLASS(APreCullTrianglesVolume, 399273305);
	void ATriggerVolume::StaticRegisterNativesATriggerVolume()
	{
	}
	IMPLEMENT_CLASS(ATriggerVolume, 1696323387);
	void ACameraActor::StaticRegisterNativesACameraActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(ACameraActor::StaticClass(), "GetAutoActivatePlayerIndex",(Native)&ACameraActor::execGetAutoActivatePlayerIndex);
	}
	IMPLEMENT_CLASS(ACameraActor, 1992734612);
	void UNavAgentInterface::StaticRegisterNativesUNavAgentInterface()
	{
	}
	IMPLEMENT_CLASS(UNavAgentInterface, 2416410996);
	void AController::ClientSetLocation(FVector NewLocation, FRotator NewRotation)
	{
		Controller_eventClientSetLocation_Parms Parms;
		Parms.NewLocation=NewLocation;
		Parms.NewRotation=NewRotation;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetLocation),&Parms);
	}
	void AController::ClientSetRotation(FRotator NewRotation, bool bResetCamera)
	{
		Controller_eventClientSetRotation_Parms Parms;
		Parms.NewRotation=NewRotation;
		Parms.bResetCamera=bResetCamera ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetRotation),&Parms);
	}
	void AController::ReceiveInstigatedAnyDamage(float Damage, const UDamageType* DamageType, AActor* DamagedActor, AActor* DamageCauser)
	{
		Controller_eventReceiveInstigatedAnyDamage_Parms Parms;
		Parms.Damage=Damage;
		Parms.DamageType=DamageType;
		Parms.DamagedActor=DamagedActor;
		Parms.DamageCauser=DamageCauser;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveInstigatedAnyDamage),&Parms);
	}
	void AController::StaticRegisterNativesAController()
	{
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "CastToPlayerController",(Native)&AController::execCastToPlayerController);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "ClientSetLocation",(Native)&AController::execClientSetLocation);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "ClientSetRotation",(Native)&AController::execClientSetRotation);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "GetControlRotation",(Native)&AController::execGetControlRotation);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "GetDesiredRotation",(Native)&AController::execGetDesiredRotation);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "GetViewTarget",(Native)&AController::execGetViewTarget);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "IsLocalController",(Native)&AController::execIsLocalController);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "IsLocalPlayerController",(Native)&AController::execIsLocalPlayerController);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "IsLookInputIgnored",(Native)&AController::execIsLookInputIgnored);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "IsMoveInputIgnored",(Native)&AController::execIsMoveInputIgnored);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "IsPlayerController",(Native)&AController::execIsPlayerController);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "K2_GetPawn",(Native)&AController::execK2_GetPawn);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "LineOfSightTo",(Native)&AController::execLineOfSightTo);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "OnRep_Pawn",(Native)&AController::execOnRep_Pawn);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "OnRep_PlayerState",(Native)&AController::execOnRep_PlayerState);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "Possess",(Native)&AController::execPossess);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "ResetIgnoreInputFlags",(Native)&AController::execResetIgnoreInputFlags);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "ResetIgnoreLookInput",(Native)&AController::execResetIgnoreLookInput);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "ResetIgnoreMoveInput",(Native)&AController::execResetIgnoreMoveInput);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "SetControlRotation",(Native)&AController::execSetControlRotation);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "SetIgnoreLookInput",(Native)&AController::execSetIgnoreLookInput);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "SetIgnoreMoveInput",(Native)&AController::execSetIgnoreMoveInput);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "SetInitialLocationAndRotation",(Native)&AController::execSetInitialLocationAndRotation);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "StopMovement",(Native)&AController::execStopMovement);
		FNativeFunctionRegistrar::RegisterFunction(AController::StaticClass(), "UnPossess",(Native)&AController::execUnPossess);
	}
	IMPLEMENT_CLASS(AController, 3214492075);
class UScriptStruct* FLatentActionManager::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLatentActionManager();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLatentActionManager_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLatentActionManager, Z_Construct_UPackage__Script_Engine(), TEXT("LatentActionManager"), sizeof(FLatentActionManager), Get_Z_Construct_UScriptStruct_FLatentActionManager_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLatentActionManager(FLatentActionManager::StaticStruct, TEXT("/Script/Engine"), TEXT("LatentActionManager"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLatentActionManager
{
	FScriptStruct_Engine_StaticRegisterNativesFLatentActionManager()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LatentActionManager")),new UScriptStruct::TCppStructOps<FLatentActionManager>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLatentActionManager;
class UScriptStruct* FLatentActionInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLatentActionInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLatentActionInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLatentActionInfo, Z_Construct_UPackage__Script_Engine(), TEXT("LatentActionInfo"), sizeof(FLatentActionInfo), Get_Z_Construct_UScriptStruct_FLatentActionInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLatentActionInfo(FLatentActionInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("LatentActionInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLatentActionInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFLatentActionInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LatentActionInfo")),new UScriptStruct::TCppStructOps<FLatentActionInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLatentActionInfo;
class UScriptStruct* FUniqueNetIdRepl::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FUniqueNetIdRepl();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FUniqueNetIdRepl_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FUniqueNetIdRepl, Z_Construct_UPackage__Script_Engine(), TEXT("UniqueNetIdRepl"), sizeof(FUniqueNetIdRepl), Get_Z_Construct_UScriptStruct_FUniqueNetIdRepl_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FUniqueNetIdRepl(FUniqueNetIdRepl::StaticStruct, TEXT("/Script/Engine"), TEXT("UniqueNetIdRepl"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFUniqueNetIdRepl
{
	FScriptStruct_Engine_StaticRegisterNativesFUniqueNetIdRepl()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("UniqueNetIdRepl")),new UScriptStruct::TCppStructOps<FUniqueNetIdRepl>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFUniqueNetIdRepl;
class UScriptStruct* FPlayerMuteList::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPlayerMuteList();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPlayerMuteList_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPlayerMuteList, Z_Construct_UPackage__Script_Engine(), TEXT("PlayerMuteList"), sizeof(FPlayerMuteList), Get_Z_Construct_UScriptStruct_FPlayerMuteList_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPlayerMuteList(FPlayerMuteList::StaticStruct, TEXT("/Script/Engine"), TEXT("PlayerMuteList"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPlayerMuteList
{
	FScriptStruct_Engine_StaticRegisterNativesFPlayerMuteList()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PlayerMuteList")),new UScriptStruct::TCppStructOps<FPlayerMuteList>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPlayerMuteList;
static class UEnum* ECameraAnimPlaySpace_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECameraAnimPlaySpace();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECameraAnimPlaySpace, Z_Construct_UPackage__Script_Engine(), TEXT("ECameraAnimPlaySpace"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECameraAnimPlaySpace(ECameraAnimPlaySpace_StaticEnum, TEXT("/Script/Engine"), TEXT("ECameraAnimPlaySpace"), false, nullptr, nullptr);
static class UEnum* ECameraProjectionMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECameraProjectionMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECameraProjectionMode, Z_Construct_UPackage__Script_Engine(), TEXT("ECameraProjectionMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECameraProjectionMode(ECameraProjectionMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ECameraProjectionMode"), false, nullptr, nullptr);
class UScriptStruct* FMinimalViewInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMinimalViewInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMinimalViewInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMinimalViewInfo, Z_Construct_UPackage__Script_Engine(), TEXT("MinimalViewInfo"), sizeof(FMinimalViewInfo), Get_Z_Construct_UScriptStruct_FMinimalViewInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMinimalViewInfo(FMinimalViewInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("MinimalViewInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMinimalViewInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFMinimalViewInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MinimalViewInfo")),new UScriptStruct::TCppStructOps<FMinimalViewInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMinimalViewInfo;
static class UEnum* EInitialOscillatorOffset_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInitialOscillatorOffset();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EInitialOscillatorOffset, Z_Construct_UPackage__Script_Engine(), TEXT("EInitialOscillatorOffset"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EInitialOscillatorOffset(EInitialOscillatorOffset_StaticEnum, TEXT("/Script/Engine"), TEXT("EInitialOscillatorOffset"), false, nullptr, nullptr);
class UScriptStruct* FVOscillator::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVOscillator();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVOscillator_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVOscillator, Z_Construct_UPackage__Script_Engine(), TEXT("VOscillator"), sizeof(FVOscillator), Get_Z_Construct_UScriptStruct_FVOscillator_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVOscillator(FVOscillator::StaticStruct, TEXT("/Script/Engine"), TEXT("VOscillator"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVOscillator
{
	FScriptStruct_Engine_StaticRegisterNativesFVOscillator()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("VOscillator")),new UScriptStruct::TCppStructOps<FVOscillator>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVOscillator;
class UScriptStruct* FROscillator::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FROscillator();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FROscillator_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FROscillator, Z_Construct_UPackage__Script_Engine(), TEXT("ROscillator"), sizeof(FROscillator), Get_Z_Construct_UScriptStruct_FROscillator_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FROscillator(FROscillator::StaticStruct, TEXT("/Script/Engine"), TEXT("ROscillator"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFROscillator
{
	FScriptStruct_Engine_StaticRegisterNativesFROscillator()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ROscillator")),new UScriptStruct::TCppStructOps<FROscillator>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFROscillator;
class UScriptStruct* FFOscillator::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFOscillator();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFOscillator_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFOscillator, Z_Construct_UPackage__Script_Engine(), TEXT("FOscillator"), sizeof(FFOscillator), Get_Z_Construct_UScriptStruct_FFOscillator_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFOscillator(FFOscillator::StaticStruct, TEXT("/Script/Engine"), TEXT("FOscillator"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFOscillator
{
	FScriptStruct_Engine_StaticRegisterNativesFFOscillator()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FOscillator")),new UScriptStruct::TCppStructOps<FFOscillator>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFOscillator;
	void UCameraShake::BlueprintUpdateCameraShake(float DeltaTime, float Alpha, FMinimalViewInfo const& POV, FMinimalViewInfo& ModifiedPOV)
	{
		CameraShake_eventBlueprintUpdateCameraShake_Parms Parms;
		Parms.DeltaTime=DeltaTime;
		Parms.Alpha=Alpha;
		Parms.POV=POV;
		Parms.ModifiedPOV=ModifiedPOV;
		ProcessEvent(FindFunctionChecked(ENGINE_BlueprintUpdateCameraShake),&Parms);
		ModifiedPOV=Parms.ModifiedPOV;
	}
	bool UCameraShake::ReceiveIsFinished() const
	{
		CameraShake_eventReceiveIsFinished_Parms Parms;
		const_cast<UCameraShake*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_ReceiveIsFinished),&Parms);
		return !!Parms.ReturnValue;
	}
	void UCameraShake::ReceivePlayShake(float Scale)
	{
		CameraShake_eventReceivePlayShake_Parms Parms;
		Parms.Scale=Scale;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceivePlayShake),&Parms);
	}
	void UCameraShake::ReceiveStopShake(bool bImmediately)
	{
		CameraShake_eventReceiveStopShake_Parms Parms;
		Parms.bImmediately=bImmediately ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveStopShake),&Parms);
	}
	void UCameraShake::StaticRegisterNativesUCameraShake()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCameraShake::StaticClass(), "ReceiveIsFinished",(Native)&UCameraShake::execReceiveIsFinished);
	}
	IMPLEMENT_CLASS(UCameraShake, 3224894383);
static class UEnum* EViewTargetBlendFunction_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EViewTargetBlendFunction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EViewTargetBlendFunction, Z_Construct_UPackage__Script_Engine(), TEXT("EViewTargetBlendFunction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EViewTargetBlendFunction(EViewTargetBlendFunction_StaticEnum, TEXT("/Script/Engine"), TEXT("EViewTargetBlendFunction"), false, nullptr, nullptr);
class UScriptStruct* FViewTargetTransitionParams::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FViewTargetTransitionParams();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FViewTargetTransitionParams_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FViewTargetTransitionParams, Z_Construct_UPackage__Script_Engine(), TEXT("ViewTargetTransitionParams"), sizeof(FViewTargetTransitionParams), Get_Z_Construct_UScriptStruct_FViewTargetTransitionParams_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FViewTargetTransitionParams(FViewTargetTransitionParams::StaticStruct, TEXT("/Script/Engine"), TEXT("ViewTargetTransitionParams"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFViewTargetTransitionParams
{
	FScriptStruct_Engine_StaticRegisterNativesFViewTargetTransitionParams()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ViewTargetTransitionParams")),new UScriptStruct::TCppStructOps<FViewTargetTransitionParams>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFViewTargetTransitionParams;
class UScriptStruct* FTViewTarget::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTViewTarget();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTViewTarget_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTViewTarget, Z_Construct_UPackage__Script_Engine(), TEXT("TViewTarget"), sizeof(FTViewTarget), Get_Z_Construct_UScriptStruct_FTViewTarget_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTViewTarget(FTViewTarget::StaticStruct, TEXT("/Script/Engine"), TEXT("TViewTarget"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTViewTarget
{
	FScriptStruct_Engine_StaticRegisterNativesFTViewTarget()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TViewTarget")),new UScriptStruct::TCppStructOps<FTViewTarget>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTViewTarget;
class UScriptStruct* FCameraCacheEntry::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCameraCacheEntry();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCameraCacheEntry_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCameraCacheEntry, Z_Construct_UPackage__Script_Engine(), TEXT("CameraCacheEntry"), sizeof(FCameraCacheEntry), Get_Z_Construct_UScriptStruct_FCameraCacheEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCameraCacheEntry(FCameraCacheEntry::StaticStruct, TEXT("/Script/Engine"), TEXT("CameraCacheEntry"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCameraCacheEntry
{
	FScriptStruct_Engine_StaticRegisterNativesFCameraCacheEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CameraCacheEntry")),new UScriptStruct::TCppStructOps<FCameraCacheEntry>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCameraCacheEntry;
	bool APlayerCameraManager::BlueprintUpdateCamera(AActor* CameraTarget, FVector& NewCameraLocation, FRotator& NewCameraRotation, float& NewCameraFOV)
	{
		PlayerCameraManager_eventBlueprintUpdateCamera_Parms Parms;
		Parms.CameraTarget=CameraTarget;
		Parms.NewCameraLocation=NewCameraLocation;
		Parms.NewCameraRotation=NewCameraRotation;
		Parms.NewCameraFOV=NewCameraFOV;
		ProcessEvent(FindFunctionChecked(ENGINE_BlueprintUpdateCamera),&Parms);
		NewCameraLocation=Parms.NewCameraLocation;
		NewCameraRotation=Parms.NewCameraRotation;
		NewCameraFOV=Parms.NewCameraFOV;
		return !!Parms.ReturnValue;
	}
	void APlayerCameraManager::OnPhotographyMultiPartCaptureEnd()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_OnPhotographyMultiPartCaptureEnd),NULL);
	}
	void APlayerCameraManager::OnPhotographyMultiPartCaptureStart()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_OnPhotographyMultiPartCaptureStart),NULL);
	}
	void APlayerCameraManager::OnPhotographySessionEnd()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_OnPhotographySessionEnd),NULL);
	}
	void APlayerCameraManager::OnPhotographySessionStart()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_OnPhotographySessionStart),NULL);
	}
	void APlayerCameraManager::PhotographyCameraModify(const FVector NewCameraLocation, const FVector PreviousCameraLocation, const FVector OriginalCameraLocation, FVector& ResultCameraLocation)
	{
		PlayerCameraManager_eventPhotographyCameraModify_Parms Parms;
		Parms.NewCameraLocation=NewCameraLocation;
		Parms.PreviousCameraLocation=PreviousCameraLocation;
		Parms.OriginalCameraLocation=OriginalCameraLocation;
		Parms.ResultCameraLocation=ResultCameraLocation;
		ProcessEvent(FindFunctionChecked(ENGINE_PhotographyCameraModify),&Parms);
		ResultCameraLocation=Parms.ResultCameraLocation;
	}
	void APlayerCameraManager::StaticRegisterNativesAPlayerCameraManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "AddCameraLensEffect",(Native)&APlayerCameraManager::execAddCameraLensEffect);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "AddNewCameraModifier",(Native)&APlayerCameraManager::execAddNewCameraModifier);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "ClearCameraLensEffects",(Native)&APlayerCameraManager::execClearCameraLensEffects);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "FindCameraModifierByClass",(Native)&APlayerCameraManager::execFindCameraModifierByClass);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "GetCameraLocation",(Native)&APlayerCameraManager::execGetCameraLocation);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "GetCameraRotation",(Native)&APlayerCameraManager::execGetCameraRotation);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "GetFOVAngle",(Native)&APlayerCameraManager::execGetFOVAngle);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "GetOwningPlayerController",(Native)&APlayerCameraManager::execGetOwningPlayerController);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "OnPhotographyMultiPartCaptureEnd",(Native)&APlayerCameraManager::execOnPhotographyMultiPartCaptureEnd);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "OnPhotographyMultiPartCaptureStart",(Native)&APlayerCameraManager::execOnPhotographyMultiPartCaptureStart);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "OnPhotographySessionEnd",(Native)&APlayerCameraManager::execOnPhotographySessionEnd);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "OnPhotographySessionStart",(Native)&APlayerCameraManager::execOnPhotographySessionStart);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "PhotographyCameraModify",(Native)&APlayerCameraManager::execPhotographyCameraModify);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "PlayCameraAnim",(Native)&APlayerCameraManager::execPlayCameraAnim);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "PlayCameraShake",(Native)&APlayerCameraManager::execPlayCameraShake);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "RemoveCameraLensEffect",(Native)&APlayerCameraManager::execRemoveCameraLensEffect);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "RemoveCameraModifier",(Native)&APlayerCameraManager::execRemoveCameraModifier);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "SetManualCameraFade",(Native)&APlayerCameraManager::execSetManualCameraFade);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "StartCameraFade",(Native)&APlayerCameraManager::execStartCameraFade);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "StopAllCameraAnims",(Native)&APlayerCameraManager::execStopAllCameraAnims);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "StopAllCameraShakes",(Native)&APlayerCameraManager::execStopAllCameraShakes);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "StopAllInstancesOfCameraAnim",(Native)&APlayerCameraManager::execStopAllInstancesOfCameraAnim);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "StopAllInstancesOfCameraShake",(Native)&APlayerCameraManager::execStopAllInstancesOfCameraShake);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "StopCameraAnimInst",(Native)&APlayerCameraManager::execStopCameraAnimInst);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "StopCameraFade",(Native)&APlayerCameraManager::execStopCameraFade);
		FNativeFunctionRegistrar::RegisterFunction(APlayerCameraManager::StaticClass(), "StopCameraShake",(Native)&APlayerCameraManager::execStopCameraShake);
	}
	IMPLEMENT_CLASS(APlayerCameraManager, 1899344195);
static class UEnum* EControllerAnalogStick_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EControllerAnalogStick();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EControllerAnalogStick, Z_Construct_UPackage__Script_Engine(), TEXT("EControllerAnalogStick"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EControllerAnalogStick(EControllerAnalogStick_StaticEnum, TEXT("/Script/Engine"), TEXT("EControllerAnalogStick"), false, nullptr, nullptr);
	void UInputComponent::StaticRegisterNativesUInputComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UInputComponent::StaticClass(), "GetControllerAnalogKeyState",(Native)&UInputComponent::execGetControllerAnalogKeyState);
		FNativeFunctionRegistrar::RegisterFunction(UInputComponent::StaticClass(), "GetControllerAnalogStickState",(Native)&UInputComponent::execGetControllerAnalogStickState);
		FNativeFunctionRegistrar::RegisterFunction(UInputComponent::StaticClass(), "GetControllerKeyTimeDown",(Native)&UInputComponent::execGetControllerKeyTimeDown);
		FNativeFunctionRegistrar::RegisterFunction(UInputComponent::StaticClass(), "GetControllerMouseDelta",(Native)&UInputComponent::execGetControllerMouseDelta);
		FNativeFunctionRegistrar::RegisterFunction(UInputComponent::StaticClass(), "GetControllerVectorKeyState",(Native)&UInputComponent::execGetControllerVectorKeyState);
		FNativeFunctionRegistrar::RegisterFunction(UInputComponent::StaticClass(), "GetTouchState",(Native)&UInputComponent::execGetTouchState);
		FNativeFunctionRegistrar::RegisterFunction(UInputComponent::StaticClass(), "IsControllerKeyDown",(Native)&UInputComponent::execIsControllerKeyDown);
		FNativeFunctionRegistrar::RegisterFunction(UInputComponent::StaticClass(), "WasControllerKeyJustPressed",(Native)&UInputComponent::execWasControllerKeyJustPressed);
		FNativeFunctionRegistrar::RegisterFunction(UInputComponent::StaticClass(), "WasControllerKeyJustReleased",(Native)&UInputComponent::execWasControllerKeyJustReleased);
	}
	IMPLEMENT_CLASS(UInputComponent, 187858881);
class UScriptStruct* FKeyHandleMap::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKeyHandleMap();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FKeyHandleMap_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FKeyHandleMap, Z_Construct_UPackage__Script_Engine(), TEXT("KeyHandleMap"), sizeof(FKeyHandleMap), Get_Z_Construct_UScriptStruct_FKeyHandleMap_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FKeyHandleMap(FKeyHandleMap::StaticStruct, TEXT("/Script/Engine"), TEXT("KeyHandleMap"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFKeyHandleMap
{
	FScriptStruct_Engine_StaticRegisterNativesFKeyHandleMap()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("KeyHandleMap")),new UScriptStruct::TCppStructOps<FKeyHandleMap>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFKeyHandleMap;
class UScriptStruct* FIndexedCurve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FIndexedCurve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FIndexedCurve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FIndexedCurve, Z_Construct_UPackage__Script_Engine(), TEXT("IndexedCurve"), sizeof(FIndexedCurve), Get_Z_Construct_UScriptStruct_FIndexedCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FIndexedCurve(FIndexedCurve::StaticStruct, TEXT("/Script/Engine"), TEXT("IndexedCurve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFIndexedCurve
{
	FScriptStruct_Engine_StaticRegisterNativesFIndexedCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("IndexedCurve")),new UScriptStruct::TCppStructOps<FIndexedCurve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFIndexedCurve;
static class UEnum* ERichCurveExtrapolation_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERichCurveExtrapolation();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERichCurveExtrapolation, Z_Construct_UPackage__Script_Engine(), TEXT("ERichCurveExtrapolation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERichCurveExtrapolation(ERichCurveExtrapolation_StaticEnum, TEXT("/Script/Engine"), TEXT("ERichCurveExtrapolation"), false, nullptr, nullptr);
static class UEnum* ERichCurveTangentWeightMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERichCurveTangentWeightMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERichCurveTangentWeightMode, Z_Construct_UPackage__Script_Engine(), TEXT("ERichCurveTangentWeightMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERichCurveTangentWeightMode(ERichCurveTangentWeightMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ERichCurveTangentWeightMode"), false, nullptr, nullptr);
static class UEnum* ERichCurveTangentMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERichCurveTangentMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERichCurveTangentMode, Z_Construct_UPackage__Script_Engine(), TEXT("ERichCurveTangentMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERichCurveTangentMode(ERichCurveTangentMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ERichCurveTangentMode"), false, nullptr, nullptr);
static class UEnum* ERichCurveInterpMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERichCurveInterpMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERichCurveInterpMode, Z_Construct_UPackage__Script_Engine(), TEXT("ERichCurveInterpMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERichCurveInterpMode(ERichCurveInterpMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ERichCurveInterpMode"), false, nullptr, nullptr);
class UScriptStruct* FRichCurve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRichCurve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRichCurve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRichCurve, Z_Construct_UPackage__Script_Engine(), TEXT("RichCurve"), sizeof(FRichCurve), Get_Z_Construct_UScriptStruct_FRichCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRichCurve(FRichCurve::StaticStruct, TEXT("/Script/Engine"), TEXT("RichCurve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRichCurve
{
	FScriptStruct_Engine_StaticRegisterNativesFRichCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RichCurve")),new UScriptStruct::TCppStructOps<FRichCurve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRichCurve;
class UScriptStruct* FRichCurveKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRichCurveKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRichCurveKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRichCurveKey, Z_Construct_UPackage__Script_Engine(), TEXT("RichCurveKey"), sizeof(FRichCurveKey), Get_Z_Construct_UScriptStruct_FRichCurveKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRichCurveKey(FRichCurveKey::StaticStruct, TEXT("/Script/Engine"), TEXT("RichCurveKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRichCurveKey
{
	FScriptStruct_Engine_StaticRegisterNativesFRichCurveKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RichCurveKey")),new UScriptStruct::TCppStructOps<FRichCurveKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRichCurveKey;
	void UCurveBase::StaticRegisterNativesUCurveBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCurveBase::StaticClass(), "GetTimeRange",(Native)&UCurveBase::execGetTimeRange);
		FNativeFunctionRegistrar::RegisterFunction(UCurveBase::StaticClass(), "GetValueRange",(Native)&UCurveBase::execGetValueRange);
	}
	IMPLEMENT_CLASS(UCurveBase, 3132781964);
class UScriptStruct* FRuntimeFloatCurve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRuntimeFloatCurve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRuntimeFloatCurve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRuntimeFloatCurve, Z_Construct_UPackage__Script_Engine(), TEXT("RuntimeFloatCurve"), sizeof(FRuntimeFloatCurve), Get_Z_Construct_UScriptStruct_FRuntimeFloatCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRuntimeFloatCurve(FRuntimeFloatCurve::StaticStruct, TEXT("/Script/Engine"), TEXT("RuntimeFloatCurve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRuntimeFloatCurve
{
	FScriptStruct_Engine_StaticRegisterNativesFRuntimeFloatCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RuntimeFloatCurve")),new UScriptStruct::TCppStructOps<FRuntimeFloatCurve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRuntimeFloatCurve;
	void UCurveFloat::StaticRegisterNativesUCurveFloat()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCurveFloat::StaticClass(), "GetFloatValue",(Native)&UCurveFloat::execGetFloatValue);
	}
	IMPLEMENT_CLASS(UCurveFloat, 903750770);
class UScriptStruct* FActiveForceFeedbackEffect::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FActiveForceFeedbackEffect();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FActiveForceFeedbackEffect_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FActiveForceFeedbackEffect, Z_Construct_UPackage__Script_Engine(), TEXT("ActiveForceFeedbackEffect"), sizeof(FActiveForceFeedbackEffect), Get_Z_Construct_UScriptStruct_FActiveForceFeedbackEffect_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FActiveForceFeedbackEffect(FActiveForceFeedbackEffect::StaticStruct, TEXT("/Script/Engine"), TEXT("ActiveForceFeedbackEffect"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFActiveForceFeedbackEffect
{
	FScriptStruct_Engine_StaticRegisterNativesFActiveForceFeedbackEffect()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ActiveForceFeedbackEffect")),new UScriptStruct::TCppStructOps<FActiveForceFeedbackEffect>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFActiveForceFeedbackEffect;
class UScriptStruct* FForceFeedbackChannelDetails::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FForceFeedbackChannelDetails();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FForceFeedbackChannelDetails_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FForceFeedbackChannelDetails, Z_Construct_UPackage__Script_Engine(), TEXT("ForceFeedbackChannelDetails"), sizeof(FForceFeedbackChannelDetails), Get_Z_Construct_UScriptStruct_FForceFeedbackChannelDetails_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FForceFeedbackChannelDetails(FForceFeedbackChannelDetails::StaticStruct, TEXT("/Script/Engine"), TEXT("ForceFeedbackChannelDetails"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFForceFeedbackChannelDetails
{
	FScriptStruct_Engine_StaticRegisterNativesFForceFeedbackChannelDetails()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ForceFeedbackChannelDetails")),new UScriptStruct::TCppStructOps<FForceFeedbackChannelDetails>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFForceFeedbackChannelDetails;
	void UForceFeedbackEffect::StaticRegisterNativesUForceFeedbackEffect()
	{
	}
	IMPLEMENT_CLASS(UForceFeedbackEffect, 1096680718);
static class UEnum* EDynamicForceFeedbackAction_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDynamicForceFeedbackAction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDynamicForceFeedbackAction, Z_Construct_UPackage__Script_Engine(), TEXT("EDynamicForceFeedbackAction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDynamicForceFeedbackAction(EDynamicForceFeedbackAction_StaticEnum, TEXT("/Script/Engine"), TEXT("EDynamicForceFeedbackAction"), false, nullptr, nullptr);
	void APlayerController::ClientAddTextureStreamingLoc(FVector InLoc, float Duration, bool bOverrideLocation)
	{
		PlayerController_eventClientAddTextureStreamingLoc_Parms Parms;
		Parms.InLoc=InLoc;
		Parms.Duration=Duration;
		Parms.bOverrideLocation=bOverrideLocation ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientAddTextureStreamingLoc),&Parms);
	}
	void APlayerController::ClientCancelPendingMapChange()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientCancelPendingMapChange),NULL);
	}
	void APlayerController::ClientCapBandwidth(int32 Cap)
	{
		PlayerController_eventClientCapBandwidth_Parms Parms;
		Parms.Cap=Cap;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientCapBandwidth),&Parms);
	}
	void APlayerController::ClientClearCameraLensEffects()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientClearCameraLensEffects),NULL);
	}
	void APlayerController::ClientCommitMapChange()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientCommitMapChange),NULL);
	}
	void APlayerController::ClientEnableNetworkVoice(bool bEnable)
	{
		PlayerController_eventClientEnableNetworkVoice_Parms Parms;
		Parms.bEnable=bEnable ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientEnableNetworkVoice),&Parms);
	}
	void APlayerController::ClientEndOnlineSession()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientEndOnlineSession),NULL);
	}
	void APlayerController::ClientFlushLevelStreaming()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientFlushLevelStreaming),NULL);
	}
	void APlayerController::ClientForceGarbageCollection()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientForceGarbageCollection),NULL);
	}
	void APlayerController::ClientGameEnded(AActor* EndGameFocus, bool bIsWinner)
	{
		PlayerController_eventClientGameEnded_Parms Parms;
		Parms.EndGameFocus=EndGameFocus;
		Parms.bIsWinner=bIsWinner ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientGameEnded),&Parms);
	}
	void APlayerController::ClientGotoState(FName NewState)
	{
		PlayerController_eventClientGotoState_Parms Parms;
		Parms.NewState=NewState;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientGotoState),&Parms);
	}
	void APlayerController::ClientIgnoreLookInput(bool bIgnore)
	{
		PlayerController_eventClientIgnoreLookInput_Parms Parms;
		Parms.bIgnore=bIgnore ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientIgnoreLookInput),&Parms);
	}
	void APlayerController::ClientIgnoreMoveInput(bool bIgnore)
	{
		PlayerController_eventClientIgnoreMoveInput_Parms Parms;
		Parms.bIgnore=bIgnore ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientIgnoreMoveInput),&Parms);
	}
	void APlayerController::ClientMessage(const FString& S, FName Type, float MsgLifeTime)
	{
		PlayerController_eventClientMessage_Parms Parms;
		Parms.S=S;
		Parms.Type=Type;
		Parms.MsgLifeTime=MsgLifeTime;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientMessage),&Parms);
	}
	void APlayerController::ClientMutePlayer(FUniqueNetIdRepl PlayerId)
	{
		PlayerController_eventClientMutePlayer_Parms Parms;
		Parms.PlayerId=PlayerId;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientMutePlayer),&Parms);
	}
	void APlayerController::ClientPlayCameraAnim(UCameraAnim* AnimToPlay, float Scale, float Rate, float BlendInTime, float BlendOutTime, bool bLoop, bool bRandomStartTime, ECameraAnimPlaySpace::Type Space, FRotator CustomPlaySpace)
	{
		PlayerController_eventClientPlayCameraAnim_Parms Parms;
		Parms.AnimToPlay=AnimToPlay;
		Parms.Scale=Scale;
		Parms.Rate=Rate;
		Parms.BlendInTime=BlendInTime;
		Parms.BlendOutTime=BlendOutTime;
		Parms.bLoop=bLoop ? true : false;
		Parms.bRandomStartTime=bRandomStartTime ? true : false;
		Parms.Space=Space;
		Parms.CustomPlaySpace=CustomPlaySpace;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientPlayCameraAnim),&Parms);
	}
	void APlayerController::ClientPlayCameraShake(TSubclassOf<UCameraShake>  Shake, float Scale, ECameraAnimPlaySpace::Type PlaySpace, FRotator UserPlaySpaceRot)
	{
		PlayerController_eventClientPlayCameraShake_Parms Parms;
		Parms.Shake=Shake;
		Parms.Scale=Scale;
		Parms.PlaySpace=PlaySpace;
		Parms.UserPlaySpaceRot=UserPlaySpaceRot;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientPlayCameraShake),&Parms);
	}
	void APlayerController::ClientPlayForceFeedback(UForceFeedbackEffect* ForceFeedbackEffect, bool bLooping, FName Tag)
	{
		PlayerController_eventClientPlayForceFeedback_Parms Parms;
		Parms.ForceFeedbackEffect=ForceFeedbackEffect;
		Parms.bLooping=bLooping ? true : false;
		Parms.Tag=Tag;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientPlayForceFeedback),&Parms);
	}
	void APlayerController::ClientPlaySound(USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier)
	{
		PlayerController_eventClientPlaySound_Parms Parms;
		Parms.Sound=Sound;
		Parms.VolumeMultiplier=VolumeMultiplier;
		Parms.PitchMultiplier=PitchMultiplier;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientPlaySound),&Parms);
	}
	void APlayerController::ClientPlaySoundAtLocation(USoundBase* Sound, FVector Location, float VolumeMultiplier, float PitchMultiplier)
	{
		PlayerController_eventClientPlaySoundAtLocation_Parms Parms;
		Parms.Sound=Sound;
		Parms.Location=Location;
		Parms.VolumeMultiplier=VolumeMultiplier;
		Parms.PitchMultiplier=PitchMultiplier;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientPlaySoundAtLocation),&Parms);
	}
	void APlayerController::ClientPrepareMapChange(FName LevelName, bool bFirst, bool bLast)
	{
		PlayerController_eventClientPrepareMapChange_Parms Parms;
		Parms.LevelName=LevelName;
		Parms.bFirst=bFirst ? true : false;
		Parms.bLast=bLast ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientPrepareMapChange),&Parms);
	}
	void APlayerController::ClientPrestreamTextures(AActor* ForcedActor, float ForceDuration, bool bEnableStreaming, int32 CinematicTextureGroups)
	{
		PlayerController_eventClientPrestreamTextures_Parms Parms;
		Parms.ForcedActor=ForcedActor;
		Parms.ForceDuration=ForceDuration;
		Parms.bEnableStreaming=bEnableStreaming ? true : false;
		Parms.CinematicTextureGroups=CinematicTextureGroups;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientPrestreamTextures),&Parms);
	}
	void APlayerController::ClientReceiveLocalizedMessage(TSubclassOf<ULocalMessage>  Message, int32 Switch, APlayerState* RelatedPlayerState_1, APlayerState* RelatedPlayerState_2, UObject* OptionalObject)
	{
		PlayerController_eventClientReceiveLocalizedMessage_Parms Parms;
		Parms.Message=Message;
		Parms.Switch=Switch;
		Parms.RelatedPlayerState_1=RelatedPlayerState_1;
		Parms.RelatedPlayerState_2=RelatedPlayerState_2;
		Parms.OptionalObject=OptionalObject;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientReceiveLocalizedMessage),&Parms);
	}
	void APlayerController::ClientRepObjRef(UObject* Object)
	{
		PlayerController_eventClientRepObjRef_Parms Parms;
		Parms.Object=Object;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientRepObjRef),&Parms);
	}
	void APlayerController::ClientReset()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientReset),NULL);
	}
	void APlayerController::ClientRestart(APawn* NewPawn)
	{
		PlayerController_eventClientRestart_Parms Parms;
		Parms.NewPawn=NewPawn;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientRestart),&Parms);
	}
	void APlayerController::ClientRetryClientRestart(APawn* NewPawn)
	{
		PlayerController_eventClientRetryClientRestart_Parms Parms;
		Parms.NewPawn=NewPawn;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientRetryClientRestart),&Parms);
	}
	void APlayerController::ClientReturnToMainMenu(const FString& ReturnReason)
	{
		PlayerController_eventClientReturnToMainMenu_Parms Parms;
		Parms.ReturnReason=ReturnReason;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientReturnToMainMenu),&Parms);
	}
	void APlayerController::ClientSetBlockOnAsyncLoading()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetBlockOnAsyncLoading),NULL);
	}
	void APlayerController::ClientSetCameraFade(bool bEnableFading, FColor FadeColor, FVector2D FadeAlpha, float FadeTime, bool bFadeAudio)
	{
		PlayerController_eventClientSetCameraFade_Parms Parms;
		Parms.bEnableFading=bEnableFading ? true : false;
		Parms.FadeColor=FadeColor;
		Parms.FadeAlpha=FadeAlpha;
		Parms.FadeTime=FadeTime;
		Parms.bFadeAudio=bFadeAudio ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetCameraFade),&Parms);
	}
	void APlayerController::ClientSetCameraMode(FName NewCamMode)
	{
		PlayerController_eventClientSetCameraMode_Parms Parms;
		Parms.NewCamMode=NewCamMode;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetCameraMode),&Parms);
	}
	void APlayerController::ClientSetCinematicMode(bool bInCinematicMode, bool bAffectsMovement, bool bAffectsTurning, bool bAffectsHUD)
	{
		PlayerController_eventClientSetCinematicMode_Parms Parms;
		Parms.bInCinematicMode=bInCinematicMode ? true : false;
		Parms.bAffectsMovement=bAffectsMovement ? true : false;
		Parms.bAffectsTurning=bAffectsTurning ? true : false;
		Parms.bAffectsHUD=bAffectsHUD ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetCinematicMode),&Parms);
	}
	void APlayerController::ClientSetForceMipLevelsToBeResident(UMaterialInterface* Material, float ForceDuration, int32 CinematicTextureGroups)
	{
		PlayerController_eventClientSetForceMipLevelsToBeResident_Parms Parms;
		Parms.Material=Material;
		Parms.ForceDuration=ForceDuration;
		Parms.CinematicTextureGroups=CinematicTextureGroups;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetForceMipLevelsToBeResident),&Parms);
	}
	void APlayerController::ClientSetHUD(TSubclassOf<AHUD>  NewHUDClass)
	{
		PlayerController_eventClientSetHUD_Parms Parms;
		Parms.NewHUDClass=NewHUDClass;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetHUD),&Parms);
	}
	void APlayerController::ClientSetSpectatorWaiting(bool bWaiting)
	{
		PlayerController_eventClientSetSpectatorWaiting_Parms Parms;
		Parms.bWaiting=bWaiting ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetSpectatorWaiting),&Parms);
	}
	void APlayerController::ClientSetViewTarget(AActor* A, FViewTargetTransitionParams TransitionParams)
	{
		PlayerController_eventClientSetViewTarget_Parms Parms;
		Parms.A=A;
		Parms.TransitionParams=TransitionParams;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSetViewTarget),&Parms);
	}
	void APlayerController::ClientSpawnCameraLensEffect(TSubclassOf<AEmitterCameraLensEffectBase>  LensEffectEmitterClass)
	{
		PlayerController_eventClientSpawnCameraLensEffect_Parms Parms;
		Parms.LensEffectEmitterClass=LensEffectEmitterClass;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientSpawnCameraLensEffect),&Parms);
	}
	void APlayerController::ClientStartOnlineSession()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientStartOnlineSession),NULL);
	}
	void APlayerController::ClientStopCameraAnim(UCameraAnim* AnimToStop)
	{
		PlayerController_eventClientStopCameraAnim_Parms Parms;
		Parms.AnimToStop=AnimToStop;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientStopCameraAnim),&Parms);
	}
	void APlayerController::ClientStopCameraShake(TSubclassOf<UCameraShake>  Shake, bool bImmediately)
	{
		PlayerController_eventClientStopCameraShake_Parms Parms;
		Parms.Shake=Shake;
		Parms.bImmediately=bImmediately ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientStopCameraShake),&Parms);
	}
	void APlayerController::ClientStopForceFeedback(UForceFeedbackEffect* ForceFeedbackEffect, FName Tag)
	{
		PlayerController_eventClientStopForceFeedback_Parms Parms;
		Parms.ForceFeedbackEffect=ForceFeedbackEffect;
		Parms.Tag=Tag;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientStopForceFeedback),&Parms);
	}
	void APlayerController::ClientTeamMessage(APlayerState* SenderPlayerState, const FString& S, FName Type, float MsgLifeTime)
	{
		PlayerController_eventClientTeamMessage_Parms Parms;
		Parms.SenderPlayerState=SenderPlayerState;
		Parms.S=S;
		Parms.Type=Type;
		Parms.MsgLifeTime=MsgLifeTime;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientTeamMessage),&Parms);
	}
	void APlayerController::ClientTravelInternal(const FString& URL, ETravelType TravelType, bool bSeamless, FGuid MapPackageGuid)
	{
		PlayerController_eventClientTravelInternal_Parms Parms;
		Parms.URL=URL;
		Parms.TravelType=TravelType;
		Parms.bSeamless=bSeamless ? true : false;
		Parms.MapPackageGuid=MapPackageGuid;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientTravelInternal),&Parms);
	}
	void APlayerController::ClientUnmutePlayer(FUniqueNetIdRepl PlayerId)
	{
		PlayerController_eventClientUnmutePlayer_Parms Parms;
		Parms.PlayerId=PlayerId;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientUnmutePlayer),&Parms);
	}
	void APlayerController::ClientUpdateLevelStreamingStatus(FName PackageName, bool bNewShouldBeLoaded, bool bNewShouldBeVisible, bool bNewShouldBlockOnLoad, int32 LODIndex)
	{
		PlayerController_eventClientUpdateLevelStreamingStatus_Parms Parms;
		Parms.PackageName=PackageName;
		Parms.bNewShouldBeLoaded=bNewShouldBeLoaded ? true : false;
		Parms.bNewShouldBeVisible=bNewShouldBeVisible ? true : false;
		Parms.bNewShouldBlockOnLoad=bNewShouldBlockOnLoad ? true : false;
		Parms.LODIndex=LODIndex;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientUpdateLevelStreamingStatus),&Parms);
	}
	void APlayerController::ClientVoiceHandshakeComplete()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientVoiceHandshakeComplete),NULL);
	}
	void APlayerController::ClientWasKicked(FText const& KickReason)
	{
		PlayerController_eventClientWasKicked_Parms Parms;
		Parms.KickReason=KickReason;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientWasKicked),&Parms);
	}
	void APlayerController::OnServerStartedVisualLogger(bool bIsLogging)
	{
		PlayerController_eventOnServerStartedVisualLogger_Parms Parms;
		Parms.bIsLogging=bIsLogging ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_OnServerStartedVisualLogger),&Parms);
	}
	void APlayerController::ServerAcknowledgePossession(APawn* P)
	{
		PlayerController_eventServerAcknowledgePossession_Parms Parms;
		Parms.P=P;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerAcknowledgePossession),&Parms);
	}
	void APlayerController::ServerCamera(FName NewMode)
	{
		PlayerController_eventServerCamera_Parms Parms;
		Parms.NewMode=NewMode;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerCamera),&Parms);
	}
	void APlayerController::ServerChangeName(const FString& S)
	{
		PlayerController_eventServerChangeName_Parms Parms;
		Parms.S=S;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerChangeName),&Parms);
	}
	void APlayerController::ServerCheckClientPossession()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerCheckClientPossession),NULL);
	}
	void APlayerController::ServerCheckClientPossessionReliable()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerCheckClientPossessionReliable),NULL);
	}
	void APlayerController::ServerMutePlayer(FUniqueNetIdRepl PlayerId)
	{
		PlayerController_eventServerMutePlayer_Parms Parms;
		Parms.PlayerId=PlayerId;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerMutePlayer),&Parms);
	}
	void APlayerController::ServerNotifyLoadedWorld(FName WorldPackageName)
	{
		PlayerController_eventServerNotifyLoadedWorld_Parms Parms;
		Parms.WorldPackageName=WorldPackageName;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerNotifyLoadedWorld),&Parms);
	}
	void APlayerController::ServerPause()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerPause),NULL);
	}
	void APlayerController::ServerRestartPlayer()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerRestartPlayer),NULL);
	}
	void APlayerController::ServerSetSpectatorLocation(FVector NewLoc, FRotator NewRot)
	{
		PlayerController_eventServerSetSpectatorLocation_Parms Parms;
		Parms.NewLoc=NewLoc;
		Parms.NewRot=NewRot;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerSetSpectatorLocation),&Parms);
	}
	void APlayerController::ServerSetSpectatorWaiting(bool bWaiting)
	{
		PlayerController_eventServerSetSpectatorWaiting_Parms Parms;
		Parms.bWaiting=bWaiting ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerSetSpectatorWaiting),&Parms);
	}
	void APlayerController::ServerShortTimeout()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerShortTimeout),NULL);
	}
	void APlayerController::ServerToggleAILogging()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerToggleAILogging),NULL);
	}
	void APlayerController::ServerUnmutePlayer(FUniqueNetIdRepl PlayerId)
	{
		PlayerController_eventServerUnmutePlayer_Parms Parms;
		Parms.PlayerId=PlayerId;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerUnmutePlayer),&Parms);
	}
	void APlayerController::ServerUpdateCamera(FVector_NetQuantize CamLoc, int32 CamPitchAndYaw)
	{
		PlayerController_eventServerUpdateCamera_Parms Parms;
		Parms.CamLoc=CamLoc;
		Parms.CamPitchAndYaw=CamPitchAndYaw;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerUpdateCamera),&Parms);
	}
	void APlayerController::ServerUpdateLevelVisibility(FName PackageName, bool bIsVisible)
	{
		PlayerController_eventServerUpdateLevelVisibility_Parms Parms;
		Parms.PackageName=PackageName;
		Parms.bIsVisible=bIsVisible ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerUpdateLevelVisibility),&Parms);
	}
	void APlayerController::ServerVerifyViewTarget()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerVerifyViewTarget),NULL);
	}
	void APlayerController::ServerViewNextPlayer()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerViewNextPlayer),NULL);
	}
	void APlayerController::ServerViewPrevPlayer()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerViewPrevPlayer),NULL);
	}
	void APlayerController::ServerViewSelf(FViewTargetTransitionParams TransitionParams)
	{
		PlayerController_eventServerViewSelf_Parms Parms;
		Parms.TransitionParams=TransitionParams;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerViewSelf),&Parms);
	}
	void APlayerController::StaticRegisterNativesAPlayerController()
	{
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ActivateTouchInterface",(Native)&APlayerController::execActivateTouchInterface);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "AddPitchInput",(Native)&APlayerController::execAddPitchInput);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "AddRollInput",(Native)&APlayerController::execAddRollInput);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "AddYawInput",(Native)&APlayerController::execAddYawInput);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "Camera",(Native)&APlayerController::execCamera);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClearAudioListenerOverride",(Native)&APlayerController::execClearAudioListenerOverride);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientAddTextureStreamingLoc",(Native)&APlayerController::execClientAddTextureStreamingLoc);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientCancelPendingMapChange",(Native)&APlayerController::execClientCancelPendingMapChange);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientCapBandwidth",(Native)&APlayerController::execClientCapBandwidth);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientClearCameraLensEffects",(Native)&APlayerController::execClientClearCameraLensEffects);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientCommitMapChange",(Native)&APlayerController::execClientCommitMapChange);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientEnableNetworkVoice",(Native)&APlayerController::execClientEnableNetworkVoice);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientEndOnlineSession",(Native)&APlayerController::execClientEndOnlineSession);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientFlushLevelStreaming",(Native)&APlayerController::execClientFlushLevelStreaming);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientForceGarbageCollection",(Native)&APlayerController::execClientForceGarbageCollection);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientGameEnded",(Native)&APlayerController::execClientGameEnded);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientGotoState",(Native)&APlayerController::execClientGotoState);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientIgnoreLookInput",(Native)&APlayerController::execClientIgnoreLookInput);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientIgnoreMoveInput",(Native)&APlayerController::execClientIgnoreMoveInput);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientMessage",(Native)&APlayerController::execClientMessage);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientMutePlayer",(Native)&APlayerController::execClientMutePlayer);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientPlayCameraAnim",(Native)&APlayerController::execClientPlayCameraAnim);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientPlayCameraShake",(Native)&APlayerController::execClientPlayCameraShake);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientPlayForceFeedback",(Native)&APlayerController::execClientPlayForceFeedback);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientPlaySound",(Native)&APlayerController::execClientPlaySound);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientPlaySoundAtLocation",(Native)&APlayerController::execClientPlaySoundAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientPrepareMapChange",(Native)&APlayerController::execClientPrepareMapChange);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientPrestreamTextures",(Native)&APlayerController::execClientPrestreamTextures);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientReceiveLocalizedMessage",(Native)&APlayerController::execClientReceiveLocalizedMessage);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientRepObjRef",(Native)&APlayerController::execClientRepObjRef);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientReset",(Native)&APlayerController::execClientReset);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientRestart",(Native)&APlayerController::execClientRestart);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientRetryClientRestart",(Native)&APlayerController::execClientRetryClientRestart);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientReturnToMainMenu",(Native)&APlayerController::execClientReturnToMainMenu);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientSetBlockOnAsyncLoading",(Native)&APlayerController::execClientSetBlockOnAsyncLoading);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientSetCameraFade",(Native)&APlayerController::execClientSetCameraFade);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientSetCameraMode",(Native)&APlayerController::execClientSetCameraMode);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientSetCinematicMode",(Native)&APlayerController::execClientSetCinematicMode);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientSetForceMipLevelsToBeResident",(Native)&APlayerController::execClientSetForceMipLevelsToBeResident);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientSetHUD",(Native)&APlayerController::execClientSetHUD);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientSetSpectatorWaiting",(Native)&APlayerController::execClientSetSpectatorWaiting);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientSetViewTarget",(Native)&APlayerController::execClientSetViewTarget);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientSpawnCameraLensEffect",(Native)&APlayerController::execClientSpawnCameraLensEffect);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientStartOnlineSession",(Native)&APlayerController::execClientStartOnlineSession);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientStopCameraAnim",(Native)&APlayerController::execClientStopCameraAnim);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientStopCameraShake",(Native)&APlayerController::execClientStopCameraShake);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientStopForceFeedback",(Native)&APlayerController::execClientStopForceFeedback);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientTeamMessage",(Native)&APlayerController::execClientTeamMessage);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientTravel",(Native)&APlayerController::execClientTravel);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientTravelInternal",(Native)&APlayerController::execClientTravelInternal);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientUnmutePlayer",(Native)&APlayerController::execClientUnmutePlayer);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientUpdateLevelStreamingStatus",(Native)&APlayerController::execClientUpdateLevelStreamingStatus);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientVoiceHandshakeComplete",(Native)&APlayerController::execClientVoiceHandshakeComplete);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ClientWasKicked",(Native)&APlayerController::execClientWasKicked);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ConsoleKey",(Native)&APlayerController::execConsoleKey);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "DeprojectMousePositionToWorld",(Native)&APlayerController::execDeprojectMousePositionToWorld);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "DeprojectScreenPositionToWorld",(Native)&APlayerController::execDeprojectScreenPositionToWorld);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "EnableCheats",(Native)&APlayerController::execEnableCheats);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "FOV",(Native)&APlayerController::execFOV);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetFocalLocation",(Native)&APlayerController::execGetFocalLocation);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetHitResultUnderCursor",(Native)&APlayerController::execGetHitResultUnderCursor);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetHitResultUnderCursorByChannel",(Native)&APlayerController::execGetHitResultUnderCursorByChannel);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetHitResultUnderCursorForObjects",(Native)&APlayerController::execGetHitResultUnderCursorForObjects);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetHitResultUnderFinger",(Native)&APlayerController::execGetHitResultUnderFinger);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetHitResultUnderFingerByChannel",(Native)&APlayerController::execGetHitResultUnderFingerByChannel);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetHitResultUnderFingerForObjects",(Native)&APlayerController::execGetHitResultUnderFingerForObjects);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetHUD",(Native)&APlayerController::execGetHUD);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetInputAnalogKeyState",(Native)&APlayerController::execGetInputAnalogKeyState);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetInputAnalogStickState",(Native)&APlayerController::execGetInputAnalogStickState);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetInputKeyTimeDown",(Native)&APlayerController::execGetInputKeyTimeDown);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetInputMotionState",(Native)&APlayerController::execGetInputMotionState);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetInputMouseDelta",(Native)&APlayerController::execGetInputMouseDelta);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetInputTouchState",(Native)&APlayerController::execGetInputTouchState);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetInputVectorKeyState",(Native)&APlayerController::execGetInputVectorKeyState);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetMousePosition",(Native)&APlayerController::execGetMousePosition);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetSpectatorPawn",(Native)&APlayerController::execGetSpectatorPawn);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "GetViewportSize",(Native)&APlayerController::execGetViewportSize);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "IsInputKeyDown",(Native)&APlayerController::execIsInputKeyDown);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "LocalTravel",(Native)&APlayerController::execLocalTravel);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "OnServerStartedVisualLogger",(Native)&APlayerController::execOnServerStartedVisualLogger);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "Pause",(Native)&APlayerController::execPause);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "PlayDynamicForceFeedback",(Native)&APlayerController::execPlayDynamicForceFeedback);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "PlayHapticEffect",(Native)&APlayerController::execPlayHapticEffect);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ProjectWorldLocationToScreen",(Native)&APlayerController::execProjectWorldLocationToScreen);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "RestartLevel",(Native)&APlayerController::execRestartLevel);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SendToConsole",(Native)&APlayerController::execSendToConsole);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerAcknowledgePossession",(Native)&APlayerController::execServerAcknowledgePossession);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerCamera",(Native)&APlayerController::execServerCamera);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerChangeName",(Native)&APlayerController::execServerChangeName);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerCheckClientPossession",(Native)&APlayerController::execServerCheckClientPossession);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerCheckClientPossessionReliable",(Native)&APlayerController::execServerCheckClientPossessionReliable);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerMutePlayer",(Native)&APlayerController::execServerMutePlayer);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerNotifyLoadedWorld",(Native)&APlayerController::execServerNotifyLoadedWorld);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerPause",(Native)&APlayerController::execServerPause);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerRestartPlayer",(Native)&APlayerController::execServerRestartPlayer);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerSetSpectatorLocation",(Native)&APlayerController::execServerSetSpectatorLocation);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerSetSpectatorWaiting",(Native)&APlayerController::execServerSetSpectatorWaiting);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerShortTimeout",(Native)&APlayerController::execServerShortTimeout);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerToggleAILogging",(Native)&APlayerController::execServerToggleAILogging);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerUnmutePlayer",(Native)&APlayerController::execServerUnmutePlayer);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerUpdateCamera",(Native)&APlayerController::execServerUpdateCamera);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerUpdateLevelVisibility",(Native)&APlayerController::execServerUpdateLevelVisibility);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerVerifyViewTarget",(Native)&APlayerController::execServerVerifyViewTarget);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerViewNextPlayer",(Native)&APlayerController::execServerViewNextPlayer);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerViewPrevPlayer",(Native)&APlayerController::execServerViewPrevPlayer);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ServerViewSelf",(Native)&APlayerController::execServerViewSelf);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SetAudioListenerOverride",(Native)&APlayerController::execSetAudioListenerOverride);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SetCinematicMode",(Native)&APlayerController::execSetCinematicMode);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SetControllerLightColor",(Native)&APlayerController::execSetControllerLightColor);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SetHapticsByValue",(Native)&APlayerController::execSetHapticsByValue);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SetMouseLocation",(Native)&APlayerController::execSetMouseLocation);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SetName",(Native)&APlayerController::execSetName);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SetViewTargetWithBlend",(Native)&APlayerController::execSetViewTargetWithBlend);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SetVirtualJoystickVisibility",(Native)&APlayerController::execSetVirtualJoystickVisibility);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "StartFire",(Native)&APlayerController::execStartFire);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "StopHapticEffect",(Native)&APlayerController::execStopHapticEffect);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "SwitchLevel",(Native)&APlayerController::execSwitchLevel);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "ToggleSpeaking",(Native)&APlayerController::execToggleSpeaking);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "WasInputKeyJustPressed",(Native)&APlayerController::execWasInputKeyJustPressed);
		FNativeFunctionRegistrar::RegisterFunction(APlayerController::StaticClass(), "WasInputKeyJustReleased",(Native)&APlayerController::execWasInputKeyJustReleased);
	}
	IMPLEMENT_CLASS(APlayerController, 3900672733);
	void ADebugCameraController::ReceiveOnActivate(APlayerController* OriginalPC)
	{
		DebugCameraController_eventReceiveOnActivate_Parms Parms;
		Parms.OriginalPC=OriginalPC;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveOnActivate),&Parms);
	}
	void ADebugCameraController::ReceiveOnActorSelected(AActor* NewSelectedActor, FVector const& SelectHitLocation, FVector const& SelectHitNormal, FHitResult const& Hit)
	{
		DebugCameraController_eventReceiveOnActorSelected_Parms Parms;
		Parms.NewSelectedActor=NewSelectedActor;
		Parms.SelectHitLocation=SelectHitLocation;
		Parms.SelectHitNormal=SelectHitNormal;
		Parms.Hit=Hit;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveOnActorSelected),&Parms);
	}
	void ADebugCameraController::ReceiveOnDeactivate(APlayerController* RestoredPC)
	{
		DebugCameraController_eventReceiveOnDeactivate_Parms Parms;
		Parms.RestoredPC=RestoredPC;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveOnDeactivate),&Parms);
	}
	void ADebugCameraController::StaticRegisterNativesADebugCameraController()
	{
		FNativeFunctionRegistrar::RegisterFunction(ADebugCameraController::StaticClass(), "GetSelectedActor",(Native)&ADebugCameraController::execGetSelectedActor);
		FNativeFunctionRegistrar::RegisterFunction(ADebugCameraController::StaticClass(), "SetPawnMovementSpeedScale",(Native)&ADebugCameraController::execSetPawnMovementSpeedScale);
		FNativeFunctionRegistrar::RegisterFunction(ADebugCameraController::StaticClass(), "ShowDebugSelectedInfo",(Native)&ADebugCameraController::execShowDebugSelectedInfo);
		FNativeFunctionRegistrar::RegisterFunction(ADebugCameraController::StaticClass(), "ToggleDisplay",(Native)&ADebugCameraController::execToggleDisplay);
	}
	IMPLEMENT_CLASS(ADebugCameraController, 980697831);
	void ADecalActor::StaticRegisterNativesADecalActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(ADecalActor::StaticClass(), "CreateDynamicMaterialInstance",(Native)&ADecalActor::execCreateDynamicMaterialInstance);
		FNativeFunctionRegistrar::RegisterFunction(ADecalActor::StaticClass(), "GetDecalMaterial",(Native)&ADecalActor::execGetDecalMaterial);
		FNativeFunctionRegistrar::RegisterFunction(ADecalActor::StaticClass(), "SetDecalMaterial",(Native)&ADecalActor::execSetDecalMaterial);
	}
	IMPLEMENT_CLASS(ADecalActor, 3318113426);
	void ADestructibleActor::StaticRegisterNativesADestructibleActor()
	{
	}
	IMPLEMENT_CLASS(ADestructibleActor, 706118356);
	void ADocumentationActor::StaticRegisterNativesADocumentationActor()
	{
	}
	IMPLEMENT_CLASS(ADocumentationActor, 1425900820);
	void AEmitter::StaticRegisterNativesAEmitter()
	{
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "Activate",(Native)&AEmitter::execActivate);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "Deactivate",(Native)&AEmitter::execDeactivate);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "IsActive",(Native)&AEmitter::execIsActive);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "OnParticleSystemFinished",(Native)&AEmitter::execOnParticleSystemFinished);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "OnRep_bCurrentlyActive",(Native)&AEmitter::execOnRep_bCurrentlyActive);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "SetActorParameter",(Native)&AEmitter::execSetActorParameter);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "SetColorParameter",(Native)&AEmitter::execSetColorParameter);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "SetFloatParameter",(Native)&AEmitter::execSetFloatParameter);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "SetMaterialParameter",(Native)&AEmitter::execSetMaterialParameter);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "SetTemplate",(Native)&AEmitter::execSetTemplate);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "SetVectorParameter",(Native)&AEmitter::execSetVectorParameter);
		FNativeFunctionRegistrar::RegisterFunction(AEmitter::StaticClass(), "ToggleActive",(Native)&AEmitter::execToggleActive);
	}
	IMPLEMENT_CLASS(AEmitter, 3752069572);
	void AEmitterCameraLensEffectBase::StaticRegisterNativesAEmitterCameraLensEffectBase()
	{
	}
	IMPLEMENT_CLASS(AEmitterCameraLensEffectBase, 4177105351);
class UScriptStruct* FDebugTextInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDebugTextInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDebugTextInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDebugTextInfo, Z_Construct_UPackage__Script_Engine(), TEXT("DebugTextInfo"), sizeof(FDebugTextInfo), Get_Z_Construct_UScriptStruct_FDebugTextInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDebugTextInfo(FDebugTextInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("DebugTextInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDebugTextInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFDebugTextInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DebugTextInfo")),new UScriptStruct::TCppStructOps<FDebugTextInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDebugTextInfo;
	void AHUD::AddDebugText(const FString& DebugText, AActor* SrcActor, float Duration, FVector Offset, FVector DesiredOffset, FColor TextColor, bool bSkipOverwriteCheck, bool bAbsoluteLocation, bool bKeepAttachedToActor, UFont* InFont, float FontScale, bool bDrawShadow)
	{
		HUD_eventAddDebugText_Parms Parms;
		Parms.DebugText=DebugText;
		Parms.SrcActor=SrcActor;
		Parms.Duration=Duration;
		Parms.Offset=Offset;
		Parms.DesiredOffset=DesiredOffset;
		Parms.TextColor=TextColor;
		Parms.bSkipOverwriteCheck=bSkipOverwriteCheck ? true : false;
		Parms.bAbsoluteLocation=bAbsoluteLocation ? true : false;
		Parms.bKeepAttachedToActor=bKeepAttachedToActor ? true : false;
		Parms.InFont=InFont;
		Parms.FontScale=FontScale;
		Parms.bDrawShadow=bDrawShadow ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_AddDebugText),&Parms);
	}
	void AHUD::ReceiveDrawHUD(int32 SizeX, int32 SizeY)
	{
		HUD_eventReceiveDrawHUD_Parms Parms;
		Parms.SizeX=SizeX;
		Parms.SizeY=SizeY;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveDrawHUD),&Parms);
	}
	void AHUD::ReceiveHitBoxBeginCursorOver(const FName BoxName)
	{
		HUD_eventReceiveHitBoxBeginCursorOver_Parms Parms;
		Parms.BoxName=BoxName;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveHitBoxBeginCursorOver),&Parms);
	}
	void AHUD::ReceiveHitBoxClick(const FName BoxName)
	{
		HUD_eventReceiveHitBoxClick_Parms Parms;
		Parms.BoxName=BoxName;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveHitBoxClick),&Parms);
	}
	void AHUD::ReceiveHitBoxEndCursorOver(const FName BoxName)
	{
		HUD_eventReceiveHitBoxEndCursorOver_Parms Parms;
		Parms.BoxName=BoxName;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveHitBoxEndCursorOver),&Parms);
	}
	void AHUD::ReceiveHitBoxRelease(const FName BoxName)
	{
		HUD_eventReceiveHitBoxRelease_Parms Parms;
		Parms.BoxName=BoxName;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveHitBoxRelease),&Parms);
	}
	void AHUD::RemoveAllDebugStrings()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_RemoveAllDebugStrings),NULL);
	}
	void AHUD::RemoveDebugText(AActor* SrcActor, bool bLeaveDurationText)
	{
		HUD_eventRemoveDebugText_Parms Parms;
		Parms.SrcActor=SrcActor;
		Parms.bLeaveDurationText=bLeaveDurationText ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_RemoveDebugText),&Parms);
	}
	void AHUD::StaticRegisterNativesAHUD()
	{
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "AddDebugText",(Native)&AHUD::execAddDebugText);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "AddHitBox",(Native)&AHUD::execAddHitBox);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "Deproject",(Native)&AHUD::execDeproject);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "DrawLine",(Native)&AHUD::execDrawLine);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "DrawMaterial",(Native)&AHUD::execDrawMaterial);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "DrawMaterialSimple",(Native)&AHUD::execDrawMaterialSimple);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "DrawMaterialTriangle",(Native)&AHUD::execDrawMaterialTriangle);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "DrawRect",(Native)&AHUD::execDrawRect);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "DrawText",(Native)&AHUD::execDrawText);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "DrawTexture",(Native)&AHUD::execDrawTexture);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "DrawTextureSimple",(Native)&AHUD::execDrawTextureSimple);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "GetActorsInSelectionRectangle",(Native)&AHUD::execGetActorsInSelectionRectangle);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "GetOwningPawn",(Native)&AHUD::execGetOwningPawn);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "GetOwningPlayerController",(Native)&AHUD::execGetOwningPlayerController);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "GetTextSize",(Native)&AHUD::execGetTextSize);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "Project",(Native)&AHUD::execProject);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "RemoveAllDebugStrings",(Native)&AHUD::execRemoveAllDebugStrings);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "RemoveDebugText",(Native)&AHUD::execRemoveDebugText);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "ShowDebug",(Native)&AHUD::execShowDebug);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "ShowDebugForReticleTargetToggle",(Native)&AHUD::execShowDebugForReticleTargetToggle);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "ShowDebugToggleSubCategory",(Native)&AHUD::execShowDebugToggleSubCategory);
		FNativeFunctionRegistrar::RegisterFunction(AHUD::StaticClass(), "ShowHUD",(Native)&AHUD::execShowHUD);
	}
	IMPLEMENT_CLASS(AHUD, 2610669998);
	void ADebugCameraHUD::StaticRegisterNativesADebugCameraHUD()
	{
	}
	IMPLEMENT_CLASS(ADebugCameraHUD, 1813816164);
	void AInfo::StaticRegisterNativesAInfo()
	{
	}
	IMPLEMENT_CLASS(AInfo, 2239197161);
	void AAtmosphericFog::StaticRegisterNativesAAtmosphericFog()
	{
	}
	IMPLEMENT_CLASS(AAtmosphericFog, 2076128518);
	void AExponentialHeightFog::StaticRegisterNativesAExponentialHeightFog()
	{
		FNativeFunctionRegistrar::RegisterFunction(AExponentialHeightFog::StaticClass(), "OnRep_bEnabled",(Native)&AExponentialHeightFog::execOnRep_bEnabled);
	}
	IMPLEMENT_CLASS(AExponentialHeightFog, 353478295);
	void APawn::ReceivePossessed(AController* NewController)
	{
		Pawn_eventReceivePossessed_Parms Parms;
		Parms.NewController=NewController;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceivePossessed),&Parms);
	}
	void APawn::ReceiveUnpossessed(AController* OldController)
	{
		Pawn_eventReceiveUnpossessed_Parms Parms;
		Parms.OldController=OldController;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveUnpossessed),&Parms);
	}
	void APawn::StaticRegisterNativesAPawn()
	{
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "AddControllerPitchInput",(Native)&APawn::execAddControllerPitchInput);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "AddControllerRollInput",(Native)&APawn::execAddControllerRollInput);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "AddControllerYawInput",(Native)&APawn::execAddControllerYawInput);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "AddMovementInput",(Native)&APawn::execAddMovementInput);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "ConsumeMovementInputVector",(Native)&APawn::execConsumeMovementInputVector);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "DetachFromControllerPendingDestroy",(Native)&APawn::execDetachFromControllerPendingDestroy);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "GetBaseAimRotation",(Native)&APawn::execGetBaseAimRotation);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "GetController",(Native)&APawn::execGetController);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "GetControlRotation",(Native)&APawn::execGetControlRotation);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "GetLastMovementInputVector",(Native)&APawn::execGetLastMovementInputVector);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "GetMovementBaseActor",(Native)&APawn::execGetMovementBaseActor);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "GetMovementComponent",(Native)&APawn::execGetMovementComponent);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "GetNavAgentLocation",(Native)&APawn::execGetNavAgentLocation);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "GetPendingMovementInputVector",(Native)&APawn::execGetPendingMovementInputVector);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "IsControlled",(Native)&APawn::execIsControlled);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "IsLocallyControlled",(Native)&APawn::execIsLocallyControlled);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "IsMoveInputIgnored",(Native)&APawn::execIsMoveInputIgnored);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "IsPlayerControlled",(Native)&APawn::execIsPlayerControlled);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "K2_GetMovementInputVector",(Native)&APawn::execK2_GetMovementInputVector);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "LaunchPawn",(Native)&APawn::execLaunchPawn);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "OnRep_Controller",(Native)&APawn::execOnRep_Controller);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "OnRep_PlayerState",(Native)&APawn::execOnRep_PlayerState);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "PawnMakeNoise",(Native)&APawn::execPawnMakeNoise);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "SetCanAffectNavigationGeneration",(Native)&APawn::execSetCanAffectNavigationGeneration);
		FNativeFunctionRegistrar::RegisterFunction(APawn::StaticClass(), "SpawnDefaultController",(Native)&APawn::execSpawnDefaultController);
	}
	IMPLEMENT_CLASS(APawn, 2445919229);
	bool AGameModeBase::CanSpectate(APlayerController* Viewer, APlayerState* ViewTarget)
	{
		GameModeBase_eventCanSpectate_Parms Parms;
		Parms.Viewer=Viewer;
		Parms.ViewTarget=ViewTarget;
		ProcessEvent(FindFunctionChecked(ENGINE_CanSpectate),&Parms);
		return !!Parms.ReturnValue;
	}
	AActor* AGameModeBase::ChoosePlayerStart(AController* Player)
	{
		GameModeBase_eventChoosePlayerStart_Parms Parms;
		Parms.Player=Player;
		ProcessEvent(FindFunctionChecked(ENGINE_ChoosePlayerStart),&Parms);
		return Parms.ReturnValue;
	}
	AActor* AGameModeBase::FindPlayerStart(AController* Player, const FString& IncomingName)
	{
		GameModeBase_eventFindPlayerStart_Parms Parms;
		Parms.Player=Player;
		Parms.IncomingName=IncomingName;
		ProcessEvent(FindFunctionChecked(ENGINE_FindPlayerStart),&Parms);
		return Parms.ReturnValue;
	}
	UClass* AGameModeBase::GetDefaultPawnClassForController(AController* InController)
	{
		GameModeBase_eventGetDefaultPawnClassForController_Parms Parms;
		Parms.InController=InController;
		ProcessEvent(FindFunctionChecked(ENGINE_GetDefaultPawnClassForController),&Parms);
		return Parms.ReturnValue;
	}
	void AGameModeBase::HandleStartingNewPlayer(APlayerController* NewPlayer)
	{
		GameModeBase_eventHandleStartingNewPlayer_Parms Parms;
		Parms.NewPlayer=NewPlayer;
		ProcessEvent(FindFunctionChecked(ENGINE_HandleStartingNewPlayer),&Parms);
	}
	void AGameModeBase::InitializeHUDForPlayer(APlayerController* NewPlayer)
	{
		GameModeBase_eventInitializeHUDForPlayer_Parms Parms;
		Parms.NewPlayer=NewPlayer;
		ProcessEvent(FindFunctionChecked(ENGINE_InitializeHUDForPlayer),&Parms);
	}
	void AGameModeBase::InitStartSpot(AActor* StartSpot, AController* NewPlayer)
	{
		GameModeBase_eventInitStartSpot_Parms Parms;
		Parms.StartSpot=StartSpot;
		Parms.NewPlayer=NewPlayer;
		ProcessEvent(FindFunctionChecked(ENGINE_InitStartSpot),&Parms);
	}
	void AGameModeBase::K2_OnChangeName(AController* Other, const FString& NewName, bool bNameChange)
	{
		GameModeBase_eventK2_OnChangeName_Parms Parms;
		Parms.Other=Other;
		Parms.NewName=NewName;
		Parms.bNameChange=bNameChange ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnChangeName),&Parms);
	}
	void AGameModeBase::K2_OnLogout(AController* ExitingController)
	{
		GameModeBase_eventK2_OnLogout_Parms Parms;
		Parms.ExitingController=ExitingController;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnLogout),&Parms);
	}
	void AGameModeBase::K2_OnRestartPlayer(AController* NewPlayer)
	{
		GameModeBase_eventK2_OnRestartPlayer_Parms Parms;
		Parms.NewPlayer=NewPlayer;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnRestartPlayer),&Parms);
	}
	void AGameModeBase::K2_OnSwapPlayerControllers(APlayerController* OldPC, APlayerController* NewPC)
	{
		GameModeBase_eventK2_OnSwapPlayerControllers_Parms Parms;
		Parms.OldPC=OldPC;
		Parms.NewPC=NewPC;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnSwapPlayerControllers),&Parms);
	}
	void AGameModeBase::K2_PostLogin(APlayerController* NewPlayer)
	{
		GameModeBase_eventK2_PostLogin_Parms Parms;
		Parms.NewPlayer=NewPlayer;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_PostLogin),&Parms);
	}
	bool AGameModeBase::MustSpectate(APlayerController* NewPlayerController) const
	{
		GameModeBase_eventMustSpectate_Parms Parms;
		Parms.NewPlayerController=NewPlayerController;
		const_cast<AGameModeBase*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_MustSpectate),&Parms);
		return !!Parms.ReturnValue;
	}
	bool AGameModeBase::PlayerCanRestart(APlayerController* Player)
	{
		GameModeBase_eventPlayerCanRestart_Parms Parms;
		Parms.Player=Player;
		ProcessEvent(FindFunctionChecked(ENGINE_PlayerCanRestart),&Parms);
		return !!Parms.ReturnValue;
	}
	bool AGameModeBase::ShouldReset(AActor* ActorToReset)
	{
		GameModeBase_eventShouldReset_Parms Parms;
		Parms.ActorToReset=ActorToReset;
		ProcessEvent(FindFunctionChecked(ENGINE_ShouldReset),&Parms);
		return !!Parms.ReturnValue;
	}
	APawn* AGameModeBase::SpawnDefaultPawnAtTransform(AController* NewPlayer, FTransform const& SpawnTransform)
	{
		GameModeBase_eventSpawnDefaultPawnAtTransform_Parms Parms;
		Parms.NewPlayer=NewPlayer;
		Parms.SpawnTransform=SpawnTransform;
		ProcessEvent(FindFunctionChecked(ENGINE_SpawnDefaultPawnAtTransform),&Parms);
		return Parms.ReturnValue;
	}
	APawn* AGameModeBase::SpawnDefaultPawnFor(AController* NewPlayer, AActor* StartSpot)
	{
		GameModeBase_eventSpawnDefaultPawnFor_Parms Parms;
		Parms.NewPlayer=NewPlayer;
		Parms.StartSpot=StartSpot;
		ProcessEvent(FindFunctionChecked(ENGINE_SpawnDefaultPawnFor),&Parms);
		return Parms.ReturnValue;
	}
	void AGameModeBase::StaticRegisterNativesAGameModeBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "CanSpectate",(Native)&AGameModeBase::execCanSpectate);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "ChangeName",(Native)&AGameModeBase::execChangeName);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "ChoosePlayerStart",(Native)&AGameModeBase::execChoosePlayerStart);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "FindPlayerStart",(Native)&AGameModeBase::execFindPlayerStart);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "GetDefaultPawnClassForController",(Native)&AGameModeBase::execGetDefaultPawnClassForController);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "GetNumPlayers",(Native)&AGameModeBase::execGetNumPlayers);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "GetNumSpectators",(Native)&AGameModeBase::execGetNumSpectators);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "HandleStartingNewPlayer",(Native)&AGameModeBase::execHandleStartingNewPlayer);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "HasMatchStarted",(Native)&AGameModeBase::execHasMatchStarted);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "InitializeHUDForPlayer",(Native)&AGameModeBase::execInitializeHUDForPlayer);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "InitStartSpot",(Native)&AGameModeBase::execInitStartSpot);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "K2_FindPlayerStart",(Native)&AGameModeBase::execK2_FindPlayerStart);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "MustSpectate",(Native)&AGameModeBase::execMustSpectate);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "PlayerCanRestart",(Native)&AGameModeBase::execPlayerCanRestart);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "ResetLevel",(Native)&AGameModeBase::execResetLevel);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "RestartPlayer",(Native)&AGameModeBase::execRestartPlayer);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "RestartPlayerAtPlayerStart",(Native)&AGameModeBase::execRestartPlayerAtPlayerStart);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "RestartPlayerAtTransform",(Native)&AGameModeBase::execRestartPlayerAtTransform);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "ReturnToMainMenuHost",(Native)&AGameModeBase::execReturnToMainMenuHost);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "ShouldReset",(Native)&AGameModeBase::execShouldReset);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "SpawnDefaultPawnAtTransform",(Native)&AGameModeBase::execSpawnDefaultPawnAtTransform);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "SpawnDefaultPawnFor",(Native)&AGameModeBase::execSpawnDefaultPawnFor);
		FNativeFunctionRegistrar::RegisterFunction(AGameModeBase::StaticClass(), "StartPlay",(Native)&AGameModeBase::execStartPlay);
	}
	IMPLEMENT_CLASS(AGameModeBase, 300880836);
	void AGameMode::K2_OnSetMatchState(FName NewState)
	{
		GameMode_eventK2_OnSetMatchState_Parms Parms;
		Parms.NewState=NewState;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnSetMatchState),&Parms);
	}
	bool AGameMode::ReadyToEndMatch()
	{
		GameMode_eventReadyToEndMatch_Parms Parms;
		ProcessEvent(FindFunctionChecked(ENGINE_ReadyToEndMatch),&Parms);
		return !!Parms.ReturnValue;
	}
	bool AGameMode::ReadyToStartMatch()
	{
		GameMode_eventReadyToStartMatch_Parms Parms;
		ProcessEvent(FindFunctionChecked(ENGINE_ReadyToStartMatch),&Parms);
		return !!Parms.ReturnValue;
	}
	void AGameMode::StaticRegisterNativesAGameMode()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "AbortMatch",(Native)&AGameMode::execAbortMatch);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "EndMatch",(Native)&AGameMode::execEndMatch);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "GetMatchState",(Native)&AGameMode::execGetMatchState);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "HasMatchEnded",(Native)&AGameMode::execHasMatchEnded);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "IsMatchInProgress",(Native)&AGameMode::execIsMatchInProgress);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "ReadyToEndMatch",(Native)&AGameMode::execReadyToEndMatch);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "ReadyToStartMatch",(Native)&AGameMode::execReadyToStartMatch);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "RestartGame",(Native)&AGameMode::execRestartGame);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "Say",(Native)&AGameMode::execSay);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "SetBandwidthLimit",(Native)&AGameMode::execSetBandwidthLimit);
		FNativeFunctionRegistrar::RegisterFunction(AGameMode::StaticClass(), "StartMatch",(Native)&AGameMode::execStartMatch);
	}
	IMPLEMENT_CLASS(AGameMode, 137203900);
static class UEnum* EStandbyType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EStandbyType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EStandbyType, Z_Construct_UPackage__Script_Engine(), TEXT("EStandbyType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EStandbyType(EStandbyType_StaticEnum, TEXT("/Script/Engine"), TEXT("EStandbyType"), false, nullptr, nullptr);
	void AGameNetworkManager::StaticRegisterNativesAGameNetworkManager()
	{
	}
	IMPLEMENT_CLASS(AGameNetworkManager, 2294593273);
	void AGameSession::StaticRegisterNativesAGameSession()
	{
	}
	IMPLEMENT_CLASS(AGameSession, 3038166136);
	void AGameStateBase::StaticRegisterNativesAGameStateBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGameStateBase::StaticClass(), "GetPlayerRespawnDelay",(Native)&AGameStateBase::execGetPlayerRespawnDelay);
		FNativeFunctionRegistrar::RegisterFunction(AGameStateBase::StaticClass(), "GetPlayerStartTime",(Native)&AGameStateBase::execGetPlayerStartTime);
		FNativeFunctionRegistrar::RegisterFunction(AGameStateBase::StaticClass(), "GetServerWorldTimeSeconds",(Native)&AGameStateBase::execGetServerWorldTimeSeconds);
		FNativeFunctionRegistrar::RegisterFunction(AGameStateBase::StaticClass(), "HasBegunPlay",(Native)&AGameStateBase::execHasBegunPlay);
		FNativeFunctionRegistrar::RegisterFunction(AGameStateBase::StaticClass(), "HasMatchStarted",(Native)&AGameStateBase::execHasMatchStarted);
		FNativeFunctionRegistrar::RegisterFunction(AGameStateBase::StaticClass(), "OnRep_GameModeClass",(Native)&AGameStateBase::execOnRep_GameModeClass);
		FNativeFunctionRegistrar::RegisterFunction(AGameStateBase::StaticClass(), "OnRep_ReplicatedHasBegunPlay",(Native)&AGameStateBase::execOnRep_ReplicatedHasBegunPlay);
		FNativeFunctionRegistrar::RegisterFunction(AGameStateBase::StaticClass(), "OnRep_ReplicatedWorldTimeSeconds",(Native)&AGameStateBase::execOnRep_ReplicatedWorldTimeSeconds);
		FNativeFunctionRegistrar::RegisterFunction(AGameStateBase::StaticClass(), "OnRep_SpectatorClass",(Native)&AGameStateBase::execOnRep_SpectatorClass);
	}
	IMPLEMENT_CLASS(AGameStateBase, 3600116673);
	void AGameState::StaticRegisterNativesAGameState()
	{
		FNativeFunctionRegistrar::RegisterFunction(AGameState::StaticClass(), "OnRep_ElapsedTime",(Native)&AGameState::execOnRep_ElapsedTime);
		FNativeFunctionRegistrar::RegisterFunction(AGameState::StaticClass(), "OnRep_MatchState",(Native)&AGameState::execOnRep_MatchState);
	}
	IMPLEMENT_CLASS(AGameState, 2061917957);
	void APlayerState::ReceiveCopyProperties(APlayerState* NewPlayerState)
	{
		PlayerState_eventReceiveCopyProperties_Parms Parms;
		Parms.NewPlayerState=NewPlayerState;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveCopyProperties),&Parms);
	}
	void APlayerState::ReceiveOverrideWith(APlayerState* OldPlayerState)
	{
		PlayerState_eventReceiveOverrideWith_Parms Parms;
		Parms.OldPlayerState=OldPlayerState;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveOverrideWith),&Parms);
	}
	void APlayerState::StaticRegisterNativesAPlayerState()
	{
		FNativeFunctionRegistrar::RegisterFunction(APlayerState::StaticClass(), "OnRep_bIsInactive",(Native)&APlayerState::execOnRep_bIsInactive);
		FNativeFunctionRegistrar::RegisterFunction(APlayerState::StaticClass(), "OnRep_PlayerName",(Native)&APlayerState::execOnRep_PlayerName);
		FNativeFunctionRegistrar::RegisterFunction(APlayerState::StaticClass(), "OnRep_Score",(Native)&APlayerState::execOnRep_Score);
		FNativeFunctionRegistrar::RegisterFunction(APlayerState::StaticClass(), "OnRep_UniqueId",(Native)&APlayerState::execOnRep_UniqueId);
	}
	IMPLEMENT_CLASS(APlayerState, 2498296551);
	void ASkyLight::StaticRegisterNativesASkyLight()
	{
		FNativeFunctionRegistrar::RegisterFunction(ASkyLight::StaticClass(), "OnRep_bEnabled",(Native)&ASkyLight::execOnRep_bEnabled);
	}
	IMPLEMENT_CLASS(ASkyLight, 3308441939);
	void AWindDirectionalSource::StaticRegisterNativesAWindDirectionalSource()
	{
	}
	IMPLEMENT_CLASS(AWindDirectionalSource, 3983306995);
static class UEnum* EMeshMergeType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshMergeType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMeshMergeType, Z_Construct_UPackage__Script_Engine(), TEXT("EMeshMergeType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMeshMergeType(EMeshMergeType_StaticEnum, TEXT("/Script/Engine"), TEXT("EMeshMergeType"), false, nullptr, nullptr);
static class UEnum* EMeshLODSelectionType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshLODSelectionType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMeshLODSelectionType, Z_Construct_UPackage__Script_Engine(), TEXT("EMeshLODSelectionType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMeshLODSelectionType(EMeshLODSelectionType_StaticEnum, TEXT("/Script/Engine"), TEXT("EMeshLODSelectionType"), false, nullptr, nullptr);
static class UEnum* ELandscapeCullingPrecision_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELandscapeCullingPrecision();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELandscapeCullingPrecision, Z_Construct_UPackage__Script_Engine(), TEXT("ELandscapeCullingPrecision"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELandscapeCullingPrecision(ELandscapeCullingPrecision_StaticEnum, TEXT("/Script/Engine"), TEXT("ELandscapeCullingPrecision"), false, nullptr, nullptr);
static class UEnum* EMeshFeatureImportance_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshFeatureImportance();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMeshFeatureImportance, Z_Construct_UPackage__Script_Engine(), TEXT("EMeshFeatureImportance"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMeshFeatureImportance(EMeshFeatureImportance_StaticEnum, TEXT("/Script/Engine"), TEXT("EMeshFeatureImportance"), false, nullptr, nullptr);
class UScriptStruct* FMeshMergingSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshMergingSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMeshMergingSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMeshMergingSettings, Z_Construct_UPackage__Script_Engine(), TEXT("MeshMergingSettings"), sizeof(FMeshMergingSettings), Get_Z_Construct_UScriptStruct_FMeshMergingSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMeshMergingSettings(FMeshMergingSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("MeshMergingSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMeshMergingSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFMeshMergingSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MeshMergingSettings")),new UScriptStruct::TCppStructOps<FMeshMergingSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMeshMergingSettings;
class UScriptStruct* FMeshProxySettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshProxySettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMeshProxySettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMeshProxySettings, Z_Construct_UPackage__Script_Engine(), TEXT("MeshProxySettings"), sizeof(FMeshProxySettings), Get_Z_Construct_UScriptStruct_FMeshProxySettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMeshProxySettings(FMeshProxySettings::StaticStruct, TEXT("/Script/Engine"), TEXT("MeshProxySettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMeshProxySettings
{
	FScriptStruct_Engine_StaticRegisterNativesFMeshProxySettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MeshProxySettings")),new UScriptStruct::TCppStructOps<FMeshProxySettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMeshProxySettings;
class UScriptStruct* FMeshReductionSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshReductionSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMeshReductionSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMeshReductionSettings, Z_Construct_UPackage__Script_Engine(), TEXT("MeshReductionSettings"), sizeof(FMeshReductionSettings), Get_Z_Construct_UScriptStruct_FMeshReductionSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMeshReductionSettings(FMeshReductionSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("MeshReductionSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMeshReductionSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFMeshReductionSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MeshReductionSettings")),new UScriptStruct::TCppStructOps<FMeshReductionSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMeshReductionSettings;
static class UEnum* EVisibilityAggressiveness_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVisibilityAggressiveness();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EVisibilityAggressiveness, Z_Construct_UPackage__Script_Engine(), TEXT("EVisibilityAggressiveness"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVisibilityAggressiveness(EVisibilityAggressiveness_StaticEnum, TEXT("/Script/Engine"), TEXT("EVisibilityAggressiveness"), false, nullptr, nullptr);
class UScriptStruct* FHierarchicalSimplification::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHierarchicalSimplification();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FHierarchicalSimplification_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FHierarchicalSimplification, Z_Construct_UPackage__Script_Engine(), TEXT("HierarchicalSimplification"), sizeof(FHierarchicalSimplification), Get_Z_Construct_UScriptStruct_FHierarchicalSimplification_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FHierarchicalSimplification(FHierarchicalSimplification::StaticStruct, TEXT("/Script/Engine"), TEXT("HierarchicalSimplification"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFHierarchicalSimplification
{
	FScriptStruct_Engine_StaticRegisterNativesFHierarchicalSimplification()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("HierarchicalSimplification")),new UScriptStruct::TCppStructOps<FHierarchicalSimplification>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFHierarchicalSimplification;
class UScriptStruct* FNetViewer::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNetViewer();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNetViewer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNetViewer, Z_Construct_UPackage__Script_Engine(), TEXT("NetViewer"), sizeof(FNetViewer), Get_Z_Construct_UScriptStruct_FNetViewer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNetViewer(FNetViewer::StaticStruct, TEXT("/Script/Engine"), TEXT("NetViewer"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNetViewer
{
	FScriptStruct_Engine_StaticRegisterNativesFNetViewer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NetViewer")),new UScriptStruct::TCppStructOps<FNetViewer>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNetViewer;
class UScriptStruct* FLightmassWorldInfoSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassWorldInfoSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLightmassWorldInfoSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassWorldInfoSettings, Z_Construct_UPackage__Script_Engine(), TEXT("LightmassWorldInfoSettings"), sizeof(FLightmassWorldInfoSettings), Get_Z_Construct_UScriptStruct_FLightmassWorldInfoSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassWorldInfoSettings(FLightmassWorldInfoSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("LightmassWorldInfoSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLightmassWorldInfoSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFLightmassWorldInfoSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassWorldInfoSettings")),new UScriptStruct::TCppStructOps<FLightmassWorldInfoSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLightmassWorldInfoSettings;
	void AWorldSettings::StaticRegisterNativesAWorldSettings()
	{
		FNativeFunctionRegistrar::RegisterFunction(AWorldSettings::StaticClass(), "OnRep_WorldGravityZ",(Native)&AWorldSettings::execOnRep_WorldGravityZ);
	}
	IMPLEMENT_CLASS(AWorldSettings, 3362032406);
	void ALevelBounds::StaticRegisterNativesALevelBounds()
	{
	}
	IMPLEMENT_CLASS(ALevelBounds, 2035530031);
	void ALevelScriptActor::LevelReset()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_LevelReset),NULL);
	}
	void ALevelScriptActor::WorldOriginLocationChanged(FIntVector OldOriginLocation, FIntVector NewOriginLocation)
	{
		LevelScriptActor_eventWorldOriginLocationChanged_Parms Parms;
		Parms.OldOriginLocation=OldOriginLocation;
		Parms.NewOriginLocation=NewOriginLocation;
		ProcessEvent(FindFunctionChecked(ENGINE_WorldOriginLocationChanged),&Parms);
	}
	void ALevelScriptActor::StaticRegisterNativesALevelScriptActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(ALevelScriptActor::StaticClass(), "RemoteEvent",(Native)&ALevelScriptActor::execRemoteEvent);
		FNativeFunctionRegistrar::RegisterFunction(ALevelScriptActor::StaticClass(), "SetCinematicMode",(Native)&ALevelScriptActor::execSetCinematicMode);
	}
	IMPLEMENT_CLASS(ALevelScriptActor, 729045615);
	void ALight::StaticRegisterNativesALight()
	{
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "GetBrightness",(Native)&ALight::execGetBrightness);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "GetLightColor",(Native)&ALight::execGetLightColor);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "IsEnabled",(Native)&ALight::execIsEnabled);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "OnRep_bEnabled",(Native)&ALight::execOnRep_bEnabled);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "SetAffectTranslucentLighting",(Native)&ALight::execSetAffectTranslucentLighting);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "SetBrightness",(Native)&ALight::execSetBrightness);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "SetCastShadows",(Native)&ALight::execSetCastShadows);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "SetEnabled",(Native)&ALight::execSetEnabled);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "SetLightColor",(Native)&ALight::execSetLightColor);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "SetLightFunctionFadeDistance",(Native)&ALight::execSetLightFunctionFadeDistance);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "SetLightFunctionMaterial",(Native)&ALight::execSetLightFunctionMaterial);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "SetLightFunctionScale",(Native)&ALight::execSetLightFunctionScale);
		FNativeFunctionRegistrar::RegisterFunction(ALight::StaticClass(), "ToggleEnabled",(Native)&ALight::execToggleEnabled);
	}
	IMPLEMENT_CLASS(ALight, 2104628181);
	void ADirectionalLight::StaticRegisterNativesADirectionalLight()
	{
	}
	IMPLEMENT_CLASS(ADirectionalLight, 427389715);
	void APointLight::StaticRegisterNativesAPointLight()
	{
		FNativeFunctionRegistrar::RegisterFunction(APointLight::StaticClass(), "SetLightFalloffExponent",(Native)&APointLight::execSetLightFalloffExponent);
		FNativeFunctionRegistrar::RegisterFunction(APointLight::StaticClass(), "SetRadius",(Native)&APointLight::execSetRadius);
	}
	IMPLEMENT_CLASS(APointLight, 4177198109);
	void ASpotLight::StaticRegisterNativesASpotLight()
	{
		FNativeFunctionRegistrar::RegisterFunction(ASpotLight::StaticClass(), "SetInnerConeAngle",(Native)&ASpotLight::execSetInnerConeAngle);
		FNativeFunctionRegistrar::RegisterFunction(ASpotLight::StaticClass(), "SetOuterConeAngle",(Native)&ASpotLight::execSetOuterConeAngle);
	}
	IMPLEMENT_CLASS(ASpotLight, 4213481249);
	void AGeneratedMeshAreaLight::StaticRegisterNativesAGeneratedMeshAreaLight()
	{
	}
	IMPLEMENT_CLASS(AGeneratedMeshAreaLight, 807493984);
	void ALightmassPortal::StaticRegisterNativesALightmassPortal()
	{
	}
	IMPLEMENT_CLASS(ALightmassPortal, 709219910);
class UScriptStruct* FStreamingTextureBuildInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamingTextureBuildInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStreamingTextureBuildInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStreamingTextureBuildInfo, Z_Construct_UPackage__Script_Engine(), TEXT("StreamingTextureBuildInfo"), sizeof(FStreamingTextureBuildInfo), Get_Z_Construct_UScriptStruct_FStreamingTextureBuildInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStreamingTextureBuildInfo(FStreamingTextureBuildInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("StreamingTextureBuildInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStreamingTextureBuildInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFStreamingTextureBuildInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StreamingTextureBuildInfo")),new UScriptStruct::TCppStructOps<FStreamingTextureBuildInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStreamingTextureBuildInfo;
class UScriptStruct* FStreamingTexturePrimitiveInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamingTexturePrimitiveInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStreamingTexturePrimitiveInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStreamingTexturePrimitiveInfo, Z_Construct_UPackage__Script_Engine(), TEXT("StreamingTexturePrimitiveInfo"), sizeof(FStreamingTexturePrimitiveInfo), Get_Z_Construct_UScriptStruct_FStreamingTexturePrimitiveInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStreamingTexturePrimitiveInfo(FStreamingTexturePrimitiveInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("StreamingTexturePrimitiveInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStreamingTexturePrimitiveInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFStreamingTexturePrimitiveInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StreamingTexturePrimitiveInfo")),new UScriptStruct::TCppStructOps<FStreamingTexturePrimitiveInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStreamingTexturePrimitiveInfo;
static class UEnum* EDOFMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDOFMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDOFMode, Z_Construct_UPackage__Script_Engine(), TEXT("EDOFMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDOFMode(EDOFMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EDOFMode"), false, nullptr, nullptr);
class UScriptStruct* FBodyInstance::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBodyInstance();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBodyInstance_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBodyInstance, Z_Construct_UPackage__Script_Engine(), TEXT("BodyInstance"), sizeof(FBodyInstance), Get_Z_Construct_UScriptStruct_FBodyInstance_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBodyInstance(FBodyInstance::StaticStruct, TEXT("/Script/Engine"), TEXT("BodyInstance"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBodyInstance
{
	FScriptStruct_Engine_StaticRegisterNativesFBodyInstance()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BodyInstance")),new UScriptStruct::TCppStructOps<FBodyInstance>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBodyInstance;
class UScriptStruct* FCollisionResponse::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionResponse();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCollisionResponse_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollisionResponse, Z_Construct_UPackage__Script_Engine(), TEXT("CollisionResponse"), sizeof(FCollisionResponse), Get_Z_Construct_UScriptStruct_FCollisionResponse_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollisionResponse(FCollisionResponse::StaticStruct, TEXT("/Script/Engine"), TEXT("CollisionResponse"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCollisionResponse
{
	FScriptStruct_Engine_StaticRegisterNativesFCollisionResponse()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollisionResponse")),new UScriptStruct::TCppStructOps<FCollisionResponse>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCollisionResponse;
static class UEnum* EHasCustomNavigableGeometry_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EHasCustomNavigableGeometry();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EHasCustomNavigableGeometry, Z_Construct_UPackage__Script_Engine(), TEXT("EHasCustomNavigableGeometry"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHasCustomNavigableGeometry(EHasCustomNavigableGeometry_StaticEnum, TEXT("/Script/Engine"), TEXT("EHasCustomNavigableGeometry"), false, nullptr, nullptr);
static class UEnum* ECanBeCharacterBase_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECanBeCharacterBase();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECanBeCharacterBase, Z_Construct_UPackage__Script_Engine(), TEXT("ECanBeCharacterBase"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECanBeCharacterBase(ECanBeCharacterBase_StaticEnum, TEXT("/Script/Engine"), TEXT("ECanBeCharacterBase"), false, nullptr, nullptr);
class UScriptStruct* FSpriteCategoryInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSpriteCategoryInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSpriteCategoryInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSpriteCategoryInfo, Z_Construct_UPackage__Script_Engine(), TEXT("SpriteCategoryInfo"), sizeof(FSpriteCategoryInfo), Get_Z_Construct_UScriptStruct_FSpriteCategoryInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSpriteCategoryInfo(FSpriteCategoryInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("SpriteCategoryInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSpriteCategoryInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFSpriteCategoryInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SpriteCategoryInfo")),new UScriptStruct::TCppStructOps<FSpriteCategoryInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSpriteCategoryInfo;
	void UPrimitiveComponent::StaticRegisterNativesUPrimitiveComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "AddAngularImpulse",(Native)&UPrimitiveComponent::execAddAngularImpulse);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "AddForce",(Native)&UPrimitiveComponent::execAddForce);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "AddForceAtLocation",(Native)&UPrimitiveComponent::execAddForceAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "AddImpulse",(Native)&UPrimitiveComponent::execAddImpulse);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "AddImpulseAtLocation",(Native)&UPrimitiveComponent::execAddImpulseAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "AddRadialForce",(Native)&UPrimitiveComponent::execAddRadialForce);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "AddRadialImpulse",(Native)&UPrimitiveComponent::execAddRadialImpulse);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "AddTorque",(Native)&UPrimitiveComponent::execAddTorque);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "CanCharacterStepUp",(Native)&UPrimitiveComponent::execCanCharacterStepUp);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "ClearMoveIgnoreActors",(Native)&UPrimitiveComponent::execClearMoveIgnoreActors);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "ClearMoveIgnoreComponents",(Native)&UPrimitiveComponent::execClearMoveIgnoreComponents);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "CopyArrayOfMoveIgnoreActors",(Native)&UPrimitiveComponent::execCopyArrayOfMoveIgnoreActors);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "CopyArrayOfMoveIgnoreComponents",(Native)&UPrimitiveComponent::execCopyArrayOfMoveIgnoreComponents);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "CreateAndSetMaterialInstanceDynamic",(Native)&UPrimitiveComponent::execCreateAndSetMaterialInstanceDynamic);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "CreateAndSetMaterialInstanceDynamicFromMaterial",(Native)&UPrimitiveComponent::execCreateAndSetMaterialInstanceDynamicFromMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "CreateDynamicMaterialInstance",(Native)&UPrimitiveComponent::execCreateDynamicMaterialInstance);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetAngularDamping",(Native)&UPrimitiveComponent::execGetAngularDamping);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetCenterOfMass",(Native)&UPrimitiveComponent::execGetCenterOfMass);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetClosestPointOnCollision",(Native)&UPrimitiveComponent::execGetClosestPointOnCollision);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetCollisionEnabled",(Native)&UPrimitiveComponent::execGetCollisionEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetCollisionObjectType",(Native)&UPrimitiveComponent::execGetCollisionObjectType);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetCollisionProfileName",(Native)&UPrimitiveComponent::execGetCollisionProfileName);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetCollisionResponseToChannel",(Native)&UPrimitiveComponent::execGetCollisionResponseToChannel);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetInertiaTensor",(Native)&UPrimitiveComponent::execGetInertiaTensor);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetLinearDamping",(Native)&UPrimitiveComponent::execGetLinearDamping);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetMass",(Native)&UPrimitiveComponent::execGetMass);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetMassScale",(Native)&UPrimitiveComponent::execGetMassScale);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetMaterial",(Native)&UPrimitiveComponent::execGetMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetNumMaterials",(Native)&UPrimitiveComponent::execGetNumMaterials);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetOverlapInfos",(Native)&UPrimitiveComponent::execGetOverlapInfos);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetOverlappingActors",(Native)&UPrimitiveComponent::execGetOverlappingActors);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetOverlappingComponents",(Native)&UPrimitiveComponent::execGetOverlappingComponents);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetPhysicsAngularVelocity",(Native)&UPrimitiveComponent::execGetPhysicsAngularVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetPhysicsLinearVelocity",(Native)&UPrimitiveComponent::execGetPhysicsLinearVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetPhysicsLinearVelocityAtPoint",(Native)&UPrimitiveComponent::execGetPhysicsLinearVelocityAtPoint);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "GetWalkableSlopeOverride",(Native)&UPrimitiveComponent::execGetWalkableSlopeOverride);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "IgnoreActorWhenMoving",(Native)&UPrimitiveComponent::execIgnoreActorWhenMoving);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "IgnoreComponentWhenMoving",(Native)&UPrimitiveComponent::execIgnoreComponentWhenMoving);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "IsAnyRigidBodyAwake",(Native)&UPrimitiveComponent::execIsAnyRigidBodyAwake);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "IsGravityEnabled",(Native)&UPrimitiveComponent::execIsGravityEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "IsOverlappingActor",(Native)&UPrimitiveComponent::execIsOverlappingActor);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "IsOverlappingComponent",(Native)&UPrimitiveComponent::execIsOverlappingComponent);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "K2_IsCollisionEnabled",(Native)&UPrimitiveComponent::execK2_IsCollisionEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "K2_IsPhysicsCollisionEnabled",(Native)&UPrimitiveComponent::execK2_IsPhysicsCollisionEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "K2_IsQueryCollisionEnabled",(Native)&UPrimitiveComponent::execK2_IsQueryCollisionEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "K2_LineTraceComponent",(Native)&UPrimitiveComponent::execK2_LineTraceComponent);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "PutRigidBodyToSleep",(Native)&UPrimitiveComponent::execPutRigidBodyToSleep);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "ScaleByMomentOfInertia",(Native)&UPrimitiveComponent::execScaleByMomentOfInertia);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetAllMassScale",(Native)&UPrimitiveComponent::execSetAllMassScale);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetAllPhysicsLinearVelocity",(Native)&UPrimitiveComponent::execSetAllPhysicsLinearVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetAngularDamping",(Native)&UPrimitiveComponent::execSetAngularDamping);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetBoundsScale",(Native)&UPrimitiveComponent::execSetBoundsScale);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetCastShadow",(Native)&UPrimitiveComponent::execSetCastShadow);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetCenterOfMass",(Native)&UPrimitiveComponent::execSetCenterOfMass);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetCollisionEnabled",(Native)&UPrimitiveComponent::execSetCollisionEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetCollisionObjectType",(Native)&UPrimitiveComponent::execSetCollisionObjectType);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetCollisionProfileName",(Native)&UPrimitiveComponent::execSetCollisionProfileName);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetCollisionResponseToAllChannels",(Native)&UPrimitiveComponent::execSetCollisionResponseToAllChannels);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetCollisionResponseToChannel",(Native)&UPrimitiveComponent::execSetCollisionResponseToChannel);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetConstraintMode",(Native)&UPrimitiveComponent::execSetConstraintMode);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetCullDistance",(Native)&UPrimitiveComponent::execSetCullDistance);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetCustomDepthStencilValue",(Native)&UPrimitiveComponent::execSetCustomDepthStencilValue);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetEnableGravity",(Native)&UPrimitiveComponent::execSetEnableGravity);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetLinearDamping",(Native)&UPrimitiveComponent::execSetLinearDamping);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetLockedAxis",(Native)&UPrimitiveComponent::execSetLockedAxis);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetMassOverrideInKg",(Native)&UPrimitiveComponent::execSetMassOverrideInKg);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetMassScale",(Native)&UPrimitiveComponent::execSetMassScale);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetMaterial",(Native)&UPrimitiveComponent::execSetMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetMaterialByName",(Native)&UPrimitiveComponent::execSetMaterialByName);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetNotifyRigidBodyCollision",(Native)&UPrimitiveComponent::execSetNotifyRigidBodyCollision);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetOnlyOwnerSee",(Native)&UPrimitiveComponent::execSetOnlyOwnerSee);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetOwnerNoSee",(Native)&UPrimitiveComponent::execSetOwnerNoSee);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetPhysicsAngularVelocity",(Native)&UPrimitiveComponent::execSetPhysicsAngularVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetPhysicsLinearVelocity",(Native)&UPrimitiveComponent::execSetPhysicsLinearVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetPhysicsMaxAngularVelocity",(Native)&UPrimitiveComponent::execSetPhysicsMaxAngularVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetPhysMaterialOverride",(Native)&UPrimitiveComponent::execSetPhysMaterialOverride);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetRenderCustomDepth",(Native)&UPrimitiveComponent::execSetRenderCustomDepth);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetRenderInMainPass",(Native)&UPrimitiveComponent::execSetRenderInMainPass);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetRenderInMono",(Native)&UPrimitiveComponent::execSetRenderInMono);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetSimulatePhysics",(Native)&UPrimitiveComponent::execSetSimulatePhysics);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetTranslucentSortPriority",(Native)&UPrimitiveComponent::execSetTranslucentSortPriority);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "SetWalkableSlopeOverride",(Native)&UPrimitiveComponent::execSetWalkableSlopeOverride);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "WakeAllRigidBodies",(Native)&UPrimitiveComponent::execWakeAllRigidBodies);
		FNativeFunctionRegistrar::RegisterFunction(UPrimitiveComponent::StaticClass(), "WakeRigidBody",(Native)&UPrimitiveComponent::execWakeRigidBody);
	}
	IMPLEMENT_CLASS(UPrimitiveComponent, 1312502789);
class UScriptStruct* FMaterialTextureInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialTextureInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMaterialTextureInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialTextureInfo, Z_Construct_UPackage__Script_Engine(), TEXT("MaterialTextureInfo"), sizeof(FMaterialTextureInfo), Get_Z_Construct_UScriptStruct_FMaterialTextureInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialTextureInfo(FMaterialTextureInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("MaterialTextureInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMaterialTextureInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFMaterialTextureInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialTextureInfo")),new UScriptStruct::TCppStructOps<FMaterialTextureInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMaterialTextureInfo;
class UScriptStruct* FLightmassMaterialInterfaceSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassMaterialInterfaceSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLightmassMaterialInterfaceSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLightmassMaterialInterfaceSettings, Z_Construct_UPackage__Script_Engine(), TEXT("LightmassMaterialInterfaceSettings"), sizeof(FLightmassMaterialInterfaceSettings), Get_Z_Construct_UScriptStruct_FLightmassMaterialInterfaceSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLightmassMaterialInterfaceSettings(FLightmassMaterialInterfaceSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("LightmassMaterialInterfaceSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLightmassMaterialInterfaceSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFLightmassMaterialInterfaceSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LightmassMaterialInterfaceSettings")),new UScriptStruct::TCppStructOps<FLightmassMaterialInterfaceSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLightmassMaterialInterfaceSettings;
	void UMaterialInterface::StaticRegisterNativesUMaterialInterface()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInterface::StaticClass(), "GetBaseMaterial",(Native)&UMaterialInterface::execGetBaseMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInterface::StaticClass(), "GetPhysicalMaterial",(Native)&UMaterialInterface::execGetPhysicalMaterial);
	}
	IMPLEMENT_CLASS(UMaterialInterface, 4245204893);
	void UMeshComponent::StaticRegisterNativesUMeshComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMeshComponent::StaticClass(), "GetMaterialIndex",(Native)&UMeshComponent::execGetMaterialIndex);
		FNativeFunctionRegistrar::RegisterFunction(UMeshComponent::StaticClass(), "GetMaterials",(Native)&UMeshComponent::execGetMaterials);
		FNativeFunctionRegistrar::RegisterFunction(UMeshComponent::StaticClass(), "GetMaterialSlotNames",(Native)&UMeshComponent::execGetMaterialSlotNames);
		FNativeFunctionRegistrar::RegisterFunction(UMeshComponent::StaticClass(), "IsMaterialSlotNameValid",(Native)&UMeshComponent::execIsMaterialSlotNameValid);
		FNativeFunctionRegistrar::RegisterFunction(UMeshComponent::StaticClass(), "SetScalarParameterValueOnMaterials",(Native)&UMeshComponent::execSetScalarParameterValueOnMaterials);
		FNativeFunctionRegistrar::RegisterFunction(UMeshComponent::StaticClass(), "SetVectorParameterValueOnMaterials",(Native)&UMeshComponent::execSetVectorParameterValueOnMaterials);
	}
	IMPLEMENT_CLASS(UMeshComponent, 2736011379);
class UScriptStruct* FStaticMeshComponentLODInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStaticMeshComponentLODInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStaticMeshComponentLODInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStaticMeshComponentLODInfo, Z_Construct_UPackage__Script_Engine(), TEXT("StaticMeshComponentLODInfo"), sizeof(FStaticMeshComponentLODInfo), Get_Z_Construct_UScriptStruct_FStaticMeshComponentLODInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStaticMeshComponentLODInfo(FStaticMeshComponentLODInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("StaticMeshComponentLODInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStaticMeshComponentLODInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFStaticMeshComponentLODInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StaticMeshComponentLODInfo")),new UScriptStruct::TCppStructOps<FStaticMeshComponentLODInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStaticMeshComponentLODInfo;
class UScriptStruct* FPaintedVertex::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPaintedVertex();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPaintedVertex_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPaintedVertex, Z_Construct_UPackage__Script_Engine(), TEXT("PaintedVertex"), sizeof(FPaintedVertex), Get_Z_Construct_UScriptStruct_FPaintedVertex_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPaintedVertex(FPaintedVertex::StaticStruct, TEXT("/Script/Engine"), TEXT("PaintedVertex"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPaintedVertex
{
	FScriptStruct_Engine_StaticRegisterNativesFPaintedVertex()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PaintedVertex")),new UScriptStruct::TCppStructOps<FPaintedVertex>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPaintedVertex;
	void UStaticMeshComponent::StaticRegisterNativesUStaticMeshComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UStaticMeshComponent::StaticClass(), "GetLocalBounds",(Native)&UStaticMeshComponent::execGetLocalBounds);
		FNativeFunctionRegistrar::RegisterFunction(UStaticMeshComponent::StaticClass(), "OnRep_StaticMesh",(Native)&UStaticMeshComponent::execOnRep_StaticMesh);
		FNativeFunctionRegistrar::RegisterFunction(UStaticMeshComponent::StaticClass(), "SetForcedLodModel",(Native)&UStaticMeshComponent::execSetForcedLodModel);
		FNativeFunctionRegistrar::RegisterFunction(UStaticMeshComponent::StaticClass(), "SetStaticMesh",(Native)&UStaticMeshComponent::execSetStaticMesh);
	}
	IMPLEMENT_CLASS(UStaticMeshComponent, 2298326006);
	void ALODActor::StaticRegisterNativesALODActor()
	{
	}
	IMPLEMENT_CLASS(ALODActor, 3750754748);
	void AMaterialInstanceActor::StaticRegisterNativesAMaterialInstanceActor()
	{
	}
	IMPLEMENT_CLASS(AMaterialInstanceActor, 468932018);
class UScriptStruct* FInterpGroupActorInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpGroupActorInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInterpGroupActorInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInterpGroupActorInfo, Z_Construct_UPackage__Script_Engine(), TEXT("InterpGroupActorInfo"), sizeof(FInterpGroupActorInfo), Get_Z_Construct_UScriptStruct_FInterpGroupActorInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInterpGroupActorInfo(FInterpGroupActorInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("InterpGroupActorInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInterpGroupActorInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFInterpGroupActorInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InterpGroupActorInfo")),new UScriptStruct::TCppStructOps<FInterpGroupActorInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInterpGroupActorInfo;
class UScriptStruct* FCameraCutInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCameraCutInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCameraCutInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCameraCutInfo, Z_Construct_UPackage__Script_Engine(), TEXT("CameraCutInfo"), sizeof(FCameraCutInfo), Get_Z_Construct_UScriptStruct_FCameraCutInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCameraCutInfo(FCameraCutInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("CameraCutInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCameraCutInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFCameraCutInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CameraCutInfo")),new UScriptStruct::TCppStructOps<FCameraCutInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCameraCutInfo;
	void AMatineeActor::StaticRegisterNativesAMatineeActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(AMatineeActor::StaticClass(), "ChangePlaybackDirection",(Native)&AMatineeActor::execChangePlaybackDirection);
		FNativeFunctionRegistrar::RegisterFunction(AMatineeActor::StaticClass(), "EnableGroupByName",(Native)&AMatineeActor::execEnableGroupByName);
		FNativeFunctionRegistrar::RegisterFunction(AMatineeActor::StaticClass(), "Pause",(Native)&AMatineeActor::execPause);
		FNativeFunctionRegistrar::RegisterFunction(AMatineeActor::StaticClass(), "Play",(Native)&AMatineeActor::execPlay);
		FNativeFunctionRegistrar::RegisterFunction(AMatineeActor::StaticClass(), "Reverse",(Native)&AMatineeActor::execReverse);
		FNativeFunctionRegistrar::RegisterFunction(AMatineeActor::StaticClass(), "SetLoopingState",(Native)&AMatineeActor::execSetLoopingState);
		FNativeFunctionRegistrar::RegisterFunction(AMatineeActor::StaticClass(), "SetPosition",(Native)&AMatineeActor::execSetPosition);
		FNativeFunctionRegistrar::RegisterFunction(AMatineeActor::StaticClass(), "Stop",(Native)&AMatineeActor::execStop);
	}
	IMPLEMENT_CLASS(AMatineeActor, 188875128);
	void AMatineeActorCameraAnim::StaticRegisterNativesAMatineeActorCameraAnim()
	{
	}
	IMPLEMENT_CLASS(AMatineeActorCameraAnim, 2378495680);
static class UEnum* ERuntimeGenerationType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERuntimeGenerationType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERuntimeGenerationType, Z_Construct_UPackage__Script_Engine(), TEXT("ERuntimeGenerationType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERuntimeGenerationType(ERuntimeGenerationType_StaticEnum, TEXT("/Script/Engine"), TEXT("ERuntimeGenerationType"), false, nullptr, nullptr);
class UScriptStruct* FSupportedAreaData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSupportedAreaData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSupportedAreaData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSupportedAreaData, Z_Construct_UPackage__Script_Engine(), TEXT("SupportedAreaData"), sizeof(FSupportedAreaData), Get_Z_Construct_UScriptStruct_FSupportedAreaData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSupportedAreaData(FSupportedAreaData::StaticStruct, TEXT("/Script/Engine"), TEXT("SupportedAreaData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSupportedAreaData
{
	FScriptStruct_Engine_StaticRegisterNativesFSupportedAreaData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SupportedAreaData")),new UScriptStruct::TCppStructOps<FSupportedAreaData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSupportedAreaData;
	void ANavigationData::StaticRegisterNativesANavigationData()
	{
	}
	IMPLEMENT_CLASS(ANavigationData, 2521239594);
	void AAbstractNavData::StaticRegisterNativesAAbstractNavData()
	{
	}
	IMPLEMENT_CLASS(AAbstractNavData, 1136108263);
class UScriptStruct* FNavGraphNode::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavGraphNode();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavGraphNode_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavGraphNode, Z_Construct_UPackage__Script_Engine(), TEXT("NavGraphNode"), sizeof(FNavGraphNode), Get_Z_Construct_UScriptStruct_FNavGraphNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavGraphNode(FNavGraphNode::StaticStruct, TEXT("/Script/Engine"), TEXT("NavGraphNode"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavGraphNode
{
	FScriptStruct_Engine_StaticRegisterNativesFNavGraphNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavGraphNode")),new UScriptStruct::TCppStructOps<FNavGraphNode>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavGraphNode;
class UScriptStruct* FNavGraphEdge::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavGraphEdge();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavGraphEdge_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavGraphEdge, Z_Construct_UPackage__Script_Engine(), TEXT("NavGraphEdge"), sizeof(FNavGraphEdge), Get_Z_Construct_UScriptStruct_FNavGraphEdge_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavGraphEdge(FNavGraphEdge::StaticStruct, TEXT("/Script/Engine"), TEXT("NavGraphEdge"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavGraphEdge
{
	FScriptStruct_Engine_StaticRegisterNativesFNavGraphEdge()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavGraphEdge")),new UScriptStruct::TCppStructOps<FNavGraphEdge>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavGraphEdge;
	void ANavigationGraph::StaticRegisterNativesANavigationGraph()
	{
	}
	IMPLEMENT_CLASS(ANavigationGraph, 1497760930);
static class UEnum* ERecastPartitioning_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERecastPartitioning();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERecastPartitioning, Z_Construct_UPackage__Script_Engine(), TEXT("ERecastPartitioning"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERecastPartitioning(ERecastPartitioning_StaticEnum, TEXT("/Script/Engine"), TEXT("ERecastPartitioning"), false, nullptr, nullptr);
	void ARecastNavMesh::StaticRegisterNativesARecastNavMesh()
	{
	}
	IMPLEMENT_CLASS(ARecastNavMesh, 3723062702);
	void ANavigationGraphNode::StaticRegisterNativesANavigationGraphNode()
	{
	}
	IMPLEMENT_CLASS(ANavigationGraphNode, 1127378443);
	void ANavigationObjectBase::StaticRegisterNativesANavigationObjectBase()
	{
	}
	IMPLEMENT_CLASS(ANavigationObjectBase, 2760697);
	void APlayerStart::StaticRegisterNativesAPlayerStart()
	{
	}
	IMPLEMENT_CLASS(APlayerStart, 1557966735);
	void APlayerStartPIE::StaticRegisterNativesAPlayerStartPIE()
	{
	}
	IMPLEMENT_CLASS(APlayerStartPIE, 140009542);
	void UNavPathObserverInterface::StaticRegisterNativesUNavPathObserverInterface()
	{
	}
	IMPLEMENT_CLASS(UNavPathObserverInterface, 3988869261);
static class UEnum* ENavCostDisplay_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavCostDisplay();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENavCostDisplay, Z_Construct_UPackage__Script_Engine(), TEXT("ENavCostDisplay"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENavCostDisplay(ENavCostDisplay_StaticEnum, TEXT("/Script/Engine"), TEXT("ENavCostDisplay"), false, nullptr, nullptr);
	void ANavigationTestingActor::StaticRegisterNativesANavigationTestingActor()
	{
	}
	IMPLEMENT_CLASS(ANavigationTestingActor, 139428366);
static class UEnum* ENavLinkDirection_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavLinkDirection();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENavLinkDirection, Z_Construct_UPackage__Script_Engine(), TEXT("ENavLinkDirection"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENavLinkDirection(ENavLinkDirection_StaticEnum, TEXT("/Script/Engine"), TEXT("ENavLinkDirection"), false, nullptr, nullptr);
class UScriptStruct* FNavigationSegmentLink::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationSegmentLink();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavigationSegmentLink_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavigationSegmentLink, Z_Construct_UPackage__Script_Engine(), TEXT("NavigationSegmentLink"), sizeof(FNavigationSegmentLink), Get_Z_Construct_UScriptStruct_FNavigationSegmentLink_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavigationSegmentLink(FNavigationSegmentLink::StaticStruct, TEXT("/Script/Engine"), TEXT("NavigationSegmentLink"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavigationSegmentLink
{
	FScriptStruct_Engine_StaticRegisterNativesFNavigationSegmentLink()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavigationSegmentLink")),new UScriptStruct::TCppStructOps<FNavigationSegmentLink>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavigationSegmentLink;
class UScriptStruct* FNavigationLink::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationLink();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavigationLink_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavigationLink, Z_Construct_UPackage__Script_Engine(), TEXT("NavigationLink"), sizeof(FNavigationLink), Get_Z_Construct_UScriptStruct_FNavigationLink_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavigationLink(FNavigationLink::StaticStruct, TEXT("/Script/Engine"), TEXT("NavigationLink"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavigationLink
{
	FScriptStruct_Engine_StaticRegisterNativesFNavigationLink()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavigationLink")),new UScriptStruct::TCppStructOps<FNavigationLink>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavigationLink;
class UScriptStruct* FNavigationLinkBase::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationLinkBase();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavigationLinkBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavigationLinkBase, Z_Construct_UPackage__Script_Engine(), TEXT("NavigationLinkBase"), sizeof(FNavigationLinkBase), Get_Z_Construct_UScriptStruct_FNavigationLinkBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavigationLinkBase(FNavigationLinkBase::StaticStruct, TEXT("/Script/Engine"), TEXT("NavigationLinkBase"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavigationLinkBase
{
	FScriptStruct_Engine_StaticRegisterNativesFNavigationLinkBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavigationLinkBase")),new UScriptStruct::TCppStructOps<FNavigationLinkBase>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavigationLinkBase;
	void UNavLinkDefinition::StaticRegisterNativesUNavLinkDefinition()
	{
	}
	IMPLEMENT_CLASS(UNavLinkDefinition, 2135855817);
	void UNavLinkHostInterface::StaticRegisterNativesUNavLinkHostInterface()
	{
	}
	IMPLEMENT_CLASS(UNavLinkHostInterface, 1181344910);
	void ANavLinkProxy::ReceiveSmartLinkReached(AActor* Agent, FVector const& Destination)
	{
		NavLinkProxy_eventReceiveSmartLinkReached_Parms Parms;
		Parms.Agent=Agent;
		Parms.Destination=Destination;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveSmartLinkReached),&Parms);
	}
	void ANavLinkProxy::StaticRegisterNativesANavLinkProxy()
	{
		FNativeFunctionRegistrar::RegisterFunction(ANavLinkProxy::StaticClass(), "HasMovingAgents",(Native)&ANavLinkProxy::execHasMovingAgents);
		FNativeFunctionRegistrar::RegisterFunction(ANavLinkProxy::StaticClass(), "IsSmartLinkEnabled",(Native)&ANavLinkProxy::execIsSmartLinkEnabled);
		FNativeFunctionRegistrar::RegisterFunction(ANavLinkProxy::StaticClass(), "ResumePathFollowing",(Native)&ANavLinkProxy::execResumePathFollowing);
		FNativeFunctionRegistrar::RegisterFunction(ANavLinkProxy::StaticClass(), "SetSmartLinkEnabled",(Native)&ANavLinkProxy::execSetSmartLinkEnabled);
	}
	IMPLEMENT_CLASS(ANavLinkProxy, 3256647005);
	void ANote::StaticRegisterNativesANote()
	{
	}
	IMPLEMENT_CLASS(ANote, 3339809897);
static class UEnum* EParticleSystemOcclusionBoundsMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSystemOcclusionBoundsMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleSystemOcclusionBoundsMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleSystemOcclusionBoundsMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleSystemOcclusionBoundsMethod(EParticleSystemOcclusionBoundsMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleSystemOcclusionBoundsMethod"), false, nullptr, nullptr);
static class UEnum* ParticleSystemLODMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ParticleSystemLODMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ParticleSystemLODMethod, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleSystemLODMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ParticleSystemLODMethod(ParticleSystemLODMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("ParticleSystemLODMethod"), false, nullptr, nullptr);
static class UEnum* EParticleSystemUpdateMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSystemUpdateMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleSystemUpdateMode, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleSystemUpdateMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleSystemUpdateMode(EParticleSystemUpdateMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleSystemUpdateMode"), false, nullptr, nullptr);
class UScriptStruct* FNamedEmitterMaterial::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNamedEmitterMaterial();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNamedEmitterMaterial_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNamedEmitterMaterial, Z_Construct_UPackage__Script_Engine(), TEXT("NamedEmitterMaterial"), sizeof(FNamedEmitterMaterial), Get_Z_Construct_UScriptStruct_FNamedEmitterMaterial_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNamedEmitterMaterial(FNamedEmitterMaterial::StaticStruct, TEXT("/Script/Engine"), TEXT("NamedEmitterMaterial"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNamedEmitterMaterial
{
	FScriptStruct_Engine_StaticRegisterNativesFNamedEmitterMaterial()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NamedEmitterMaterial")),new UScriptStruct::TCppStructOps<FNamedEmitterMaterial>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNamedEmitterMaterial;
class UScriptStruct* FLODSoloTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLODSoloTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLODSoloTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLODSoloTrack, Z_Construct_UPackage__Script_Engine(), TEXT("LODSoloTrack"), sizeof(FLODSoloTrack), Get_Z_Construct_UScriptStruct_FLODSoloTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLODSoloTrack(FLODSoloTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("LODSoloTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLODSoloTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFLODSoloTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LODSoloTrack")),new UScriptStruct::TCppStructOps<FLODSoloTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLODSoloTrack;
class UScriptStruct* FParticleSystemLOD::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleSystemLOD();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleSystemLOD_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleSystemLOD, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleSystemLOD"), sizeof(FParticleSystemLOD), Get_Z_Construct_UScriptStruct_FParticleSystemLOD_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleSystemLOD(FParticleSystemLOD::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleSystemLOD"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleSystemLOD
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleSystemLOD()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleSystemLOD")),new UScriptStruct::TCppStructOps<FParticleSystemLOD>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleSystemLOD;
	void UParticleSystem::StaticRegisterNativesUParticleSystem()
	{
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystem::StaticClass(), "ContainsEmitterType",(Native)&UParticleSystem::execContainsEmitterType);
	}
	IMPLEMENT_CLASS(UParticleSystem, 3794391556);
static class UEnum* EParticleEventType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleEventType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleEventType, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleEventType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleEventType(EParticleEventType_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleEventType"), false, nullptr, nullptr);
static class UEnum* ParticleReplayState_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ParticleReplayState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ParticleReplayState, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleReplayState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ParticleReplayState(ParticleReplayState_StaticEnum, TEXT("/Script/Engine"), TEXT("ParticleReplayState"), false, nullptr, nullptr);
static class UEnum* EParticleSysParamType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSysParamType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleSysParamType, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleSysParamType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleSysParamType(EParticleSysParamType_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleSysParamType"), false, nullptr, nullptr);
class UScriptStruct* FParticleSysParam::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleSysParam();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleSysParam_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleSysParam, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleSysParam"), sizeof(FParticleSysParam), Get_Z_Construct_UScriptStruct_FParticleSysParam_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleSysParam(FParticleSysParam::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleSysParam"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleSysParam
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleSysParam()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleSysParam")),new UScriptStruct::TCppStructOps<FParticleSysParam>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleSysParam;
	void UParticleSystemComponent::StaticRegisterNativesUParticleSystemComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "BeginTrails",(Native)&UParticleSystemComponent::execBeginTrails);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "CreateNamedDynamicMaterialInstance",(Native)&UParticleSystemComponent::execCreateNamedDynamicMaterialInstance);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "EndTrails",(Native)&UParticleSystemComponent::execEndTrails);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GenerateParticleEvent",(Native)&UParticleSystemComponent::execGenerateParticleEvent);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GetBeamEndPoint",(Native)&UParticleSystemComponent::execGetBeamEndPoint);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GetBeamSourcePoint",(Native)&UParticleSystemComponent::execGetBeamSourcePoint);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GetBeamSourceStrength",(Native)&UParticleSystemComponent::execGetBeamSourceStrength);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GetBeamSourceTangent",(Native)&UParticleSystemComponent::execGetBeamSourceTangent);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GetBeamTargetPoint",(Native)&UParticleSystemComponent::execGetBeamTargetPoint);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GetBeamTargetStrength",(Native)&UParticleSystemComponent::execGetBeamTargetStrength);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GetBeamTargetTangent",(Native)&UParticleSystemComponent::execGetBeamTargetTangent);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GetNamedMaterial",(Native)&UParticleSystemComponent::execGetNamedMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "GetNumActiveParticles",(Native)&UParticleSystemComponent::execGetNumActiveParticles);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetActorParameter",(Native)&UParticleSystemComponent::execSetActorParameter);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetAutoAttachmentParameters",(Native)&UParticleSystemComponent::execSetAutoAttachmentParameters);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetAutoAttachParams",(Native)&UParticleSystemComponent::execSetAutoAttachParams);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetBeamEndPoint",(Native)&UParticleSystemComponent::execSetBeamEndPoint);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetBeamSourcePoint",(Native)&UParticleSystemComponent::execSetBeamSourcePoint);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetBeamSourceStrength",(Native)&UParticleSystemComponent::execSetBeamSourceStrength);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetBeamSourceTangent",(Native)&UParticleSystemComponent::execSetBeamSourceTangent);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetBeamTargetPoint",(Native)&UParticleSystemComponent::execSetBeamTargetPoint);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetBeamTargetStrength",(Native)&UParticleSystemComponent::execSetBeamTargetStrength);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetBeamTargetTangent",(Native)&UParticleSystemComponent::execSetBeamTargetTangent);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetColorParameter",(Native)&UParticleSystemComponent::execSetColorParameter);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetEmitterEnable",(Native)&UParticleSystemComponent::execSetEmitterEnable);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetFloatParameter",(Native)&UParticleSystemComponent::execSetFloatParameter);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetMaterialParameter",(Native)&UParticleSystemComponent::execSetMaterialParameter);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetTemplate",(Native)&UParticleSystemComponent::execSetTemplate);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetTrailSourceData",(Native)&UParticleSystemComponent::execSetTrailSourceData);
		FNativeFunctionRegistrar::RegisterFunction(UParticleSystemComponent::StaticClass(), "SetVectorParameter",(Native)&UParticleSystemComponent::execSetVectorParameter);
	}
	IMPLEMENT_CLASS(UParticleSystemComponent, 2278271447);
	void AParticleEventManager::StaticRegisterNativesAParticleEventManager()
	{
	}
	IMPLEMENT_CLASS(AParticleEventManager, 207479062);
class UScriptStruct* FMeshUVChannelInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshUVChannelInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMeshUVChannelInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMeshUVChannelInfo, Z_Construct_UPackage__Script_Engine(), TEXT("MeshUVChannelInfo"), sizeof(FMeshUVChannelInfo), Get_Z_Construct_UScriptStruct_FMeshUVChannelInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMeshUVChannelInfo(FMeshUVChannelInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("MeshUVChannelInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMeshUVChannelInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFMeshUVChannelInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MeshUVChannelInfo")),new UScriptStruct::TCppStructOps<FMeshUVChannelInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMeshUVChannelInfo;
class UScriptStruct* FPreviewAssetAttachContainer::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPreviewAssetAttachContainer();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPreviewAssetAttachContainer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPreviewAssetAttachContainer, Z_Construct_UPackage__Script_Engine(), TEXT("PreviewAssetAttachContainer"), sizeof(FPreviewAssetAttachContainer), Get_Z_Construct_UScriptStruct_FPreviewAssetAttachContainer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPreviewAssetAttachContainer(FPreviewAssetAttachContainer::StaticStruct, TEXT("/Script/Engine"), TEXT("PreviewAssetAttachContainer"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPreviewAssetAttachContainer
{
	FScriptStruct_Engine_StaticRegisterNativesFPreviewAssetAttachContainer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PreviewAssetAttachContainer")),new UScriptStruct::TCppStructOps<FPreviewAssetAttachContainer>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPreviewAssetAttachContainer;
class UScriptStruct* FPreviewAttachedObjectPair::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPreviewAttachedObjectPair();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPreviewAttachedObjectPair_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPreviewAttachedObjectPair, Z_Construct_UPackage__Script_Engine(), TEXT("PreviewAttachedObjectPair"), sizeof(FPreviewAttachedObjectPair), Get_Z_Construct_UScriptStruct_FPreviewAttachedObjectPair_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPreviewAttachedObjectPair(FPreviewAttachedObjectPair::StaticStruct, TEXT("/Script/Engine"), TEXT("PreviewAttachedObjectPair"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPreviewAttachedObjectPair
{
	FScriptStruct_Engine_StaticRegisterNativesFPreviewAttachedObjectPair()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PreviewAttachedObjectPair")),new UScriptStruct::TCppStructOps<FPreviewAttachedObjectPair>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPreviewAttachedObjectPair;
static class UEnum* EAnimLinkMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimLinkMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAnimLinkMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EAnimLinkMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAnimLinkMethod(EAnimLinkMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EAnimLinkMethod"), false, nullptr, nullptr);
class UScriptStruct* FAnimLinkableElement::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimLinkableElement();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimLinkableElement_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimLinkableElement, Z_Construct_UPackage__Script_Engine(), TEXT("AnimLinkableElement"), sizeof(FAnimLinkableElement), Get_Z_Construct_UScriptStruct_FAnimLinkableElement_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimLinkableElement(FAnimLinkableElement::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimLinkableElement"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimLinkableElement
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimLinkableElement()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimLinkableElement")),new UScriptStruct::TCppStructOps<FAnimLinkableElement>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimLinkableElement;
static class UEnum* EAnimInterpolationType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimInterpolationType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAnimInterpolationType, Z_Construct_UPackage__Script_Engine(), TEXT("EAnimInterpolationType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAnimInterpolationType(EAnimInterpolationType_StaticEnum, TEXT("/Script/Engine"), TEXT("EAnimInterpolationType"), false, nullptr, nullptr);
static class UEnum* ECurveBlendOption_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECurveBlendOption();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECurveBlendOption, Z_Construct_UPackage__Script_Engine(), TEXT("ECurveBlendOption"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECurveBlendOption(ECurveBlendOption_StaticEnum, TEXT("/Script/Engine"), TEXT("ECurveBlendOption"), false, nullptr, nullptr);
static class UEnum* EAdditiveAnimationType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAdditiveAnimationType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAdditiveAnimationType, Z_Construct_UPackage__Script_Engine(), TEXT("EAdditiveAnimationType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAdditiveAnimationType(EAdditiveAnimationType_StaticEnum, TEXT("/Script/Engine"), TEXT("EAdditiveAnimationType"), false, nullptr, nullptr);
static class UEnum* ENotifyFilterType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENotifyFilterType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENotifyFilterType, Z_Construct_UPackage__Script_Engine(), TEXT("ENotifyFilterType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENotifyFilterType(ENotifyFilterType_StaticEnum, TEXT("/Script/Engine"), TEXT("ENotifyFilterType"), false, nullptr, nullptr);
static class UEnum* EMontageNotifyTickType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMontageNotifyTickType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMontageNotifyTickType, Z_Construct_UPackage__Script_Engine(), TEXT("EMontageNotifyTickType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMontageNotifyTickType(EMontageNotifyTickType_StaticEnum, TEXT("/Script/Engine"), TEXT("EMontageNotifyTickType"), false, nullptr, nullptr);
static class UEnum* EBoneRotationSource_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneRotationSource();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBoneRotationSource, Z_Construct_UPackage__Script_Engine(), TEXT("EBoneRotationSource"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBoneRotationSource(EBoneRotationSource_StaticEnum, TEXT("/Script/Engine"), TEXT("EBoneRotationSource"), false, nullptr, nullptr);
static class UEnum* EBoneControlSpace_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneControlSpace();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBoneControlSpace, Z_Construct_UPackage__Script_Engine(), TEXT("EBoneControlSpace"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBoneControlSpace(EBoneControlSpace_StaticEnum, TEXT("/Script/Engine"), TEXT("EBoneControlSpace"), false, nullptr, nullptr);
static class UEnum* EBoneAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBoneAxis, Z_Construct_UPackage__Script_Engine(), TEXT("EBoneAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBoneAxis(EBoneAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("EBoneAxis"), false, nullptr, nullptr);
class UScriptStruct* FMarkerSyncData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMarkerSyncData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMarkerSyncData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMarkerSyncData, Z_Construct_UPackage__Script_Engine(), TEXT("MarkerSyncData"), sizeof(FMarkerSyncData), Get_Z_Construct_UScriptStruct_FMarkerSyncData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMarkerSyncData(FMarkerSyncData::StaticStruct, TEXT("/Script/Engine"), TEXT("MarkerSyncData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMarkerSyncData
{
	FScriptStruct_Engine_StaticRegisterNativesFMarkerSyncData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MarkerSyncData")),new UScriptStruct::TCppStructOps<FMarkerSyncData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMarkerSyncData;
class UScriptStruct* FAnimNotifyTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNotifyTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNotifyTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNotifyTrack, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNotifyTrack"), sizeof(FAnimNotifyTrack), Get_Z_Construct_UScriptStruct_FAnimNotifyTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNotifyTrack(FAnimNotifyTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNotifyTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNotifyTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNotifyTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNotifyTrack")),new UScriptStruct::TCppStructOps<FAnimNotifyTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNotifyTrack;
class UScriptStruct* FAnimSyncMarker::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSyncMarker();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimSyncMarker_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimSyncMarker, Z_Construct_UPackage__Script_Engine(), TEXT("AnimSyncMarker"), sizeof(FAnimSyncMarker), Get_Z_Construct_UScriptStruct_FAnimSyncMarker_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimSyncMarker(FAnimSyncMarker::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimSyncMarker"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimSyncMarker
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimSyncMarker()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimSyncMarker")),new UScriptStruct::TCppStructOps<FAnimSyncMarker>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimSyncMarker;
class UScriptStruct* FAnimNotifyEvent::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNotifyEvent();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNotifyEvent_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNotifyEvent, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNotifyEvent"), sizeof(FAnimNotifyEvent), Get_Z_Construct_UScriptStruct_FAnimNotifyEvent_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNotifyEvent(FAnimNotifyEvent::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNotifyEvent"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNotifyEvent
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNotifyEvent()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNotifyEvent")),new UScriptStruct::TCppStructOps<FAnimNotifyEvent>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNotifyEvent;
class UScriptStruct* FPerBoneBlendWeights::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPerBoneBlendWeights();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPerBoneBlendWeights_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPerBoneBlendWeights, Z_Construct_UPackage__Script_Engine(), TEXT("PerBoneBlendWeights"), sizeof(FPerBoneBlendWeights), Get_Z_Construct_UScriptStruct_FPerBoneBlendWeights_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPerBoneBlendWeights(FPerBoneBlendWeights::StaticStruct, TEXT("/Script/Engine"), TEXT("PerBoneBlendWeights"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPerBoneBlendWeights
{
	FScriptStruct_Engine_StaticRegisterNativesFPerBoneBlendWeights()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PerBoneBlendWeights")),new UScriptStruct::TCppStructOps<FPerBoneBlendWeights>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPerBoneBlendWeights;
class UScriptStruct* FPerBoneBlendWeight::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPerBoneBlendWeight();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPerBoneBlendWeight_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPerBoneBlendWeight, Z_Construct_UPackage__Script_Engine(), TEXT("PerBoneBlendWeight"), sizeof(FPerBoneBlendWeight), Get_Z_Construct_UScriptStruct_FPerBoneBlendWeight_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPerBoneBlendWeight(FPerBoneBlendWeight::StaticStruct, TEXT("/Script/Engine"), TEXT("PerBoneBlendWeight"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPerBoneBlendWeight
{
	FScriptStruct_Engine_StaticRegisterNativesFPerBoneBlendWeight()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PerBoneBlendWeight")),new UScriptStruct::TCppStructOps<FPerBoneBlendWeight>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPerBoneBlendWeight;
class UScriptStruct* FBoneReference::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneReference();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBoneReference_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBoneReference, Z_Construct_UPackage__Script_Engine(), TEXT("BoneReference"), sizeof(FBoneReference), Get_Z_Construct_UScriptStruct_FBoneReference_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBoneReference(FBoneReference::StaticStruct, TEXT("/Script/Engine"), TEXT("BoneReference"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBoneReference
{
	FScriptStruct_Engine_StaticRegisterNativesFBoneReference()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BoneReference")),new UScriptStruct::TCppStructOps<FBoneReference>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBoneReference;
	void UInterface_CollisionDataProvider::StaticRegisterNativesUInterface_CollisionDataProvider()
	{
	}
	IMPLEMENT_CLASS(UInterface_CollisionDataProvider, 876438677);
static class UEnum* SkeletalMeshOptimizationType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_SkeletalMeshOptimizationType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_SkeletalMeshOptimizationType, Z_Construct_UPackage__Script_Engine(), TEXT("SkeletalMeshOptimizationType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SkeletalMeshOptimizationType(SkeletalMeshOptimizationType_StaticEnum, TEXT("/Script/Engine"), TEXT("SkeletalMeshOptimizationType"), false, nullptr, nullptr);
static class UEnum* SkeletalMeshOptimizationImportance_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_SkeletalMeshOptimizationImportance();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_SkeletalMeshOptimizationImportance, Z_Construct_UPackage__Script_Engine(), TEXT("SkeletalMeshOptimizationImportance"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_SkeletalMeshOptimizationImportance(SkeletalMeshOptimizationImportance_StaticEnum, TEXT("/Script/Engine"), TEXT("SkeletalMeshOptimizationImportance"), false, nullptr, nullptr);
class UScriptStruct* FSkeletalMaterial::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMaterial();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSkeletalMaterial_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSkeletalMaterial, Z_Construct_UPackage__Script_Engine(), TEXT("SkeletalMaterial"), sizeof(FSkeletalMaterial), Get_Z_Construct_UScriptStruct_FSkeletalMaterial_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSkeletalMaterial(FSkeletalMaterial::StaticStruct, TEXT("/Script/Engine"), TEXT("SkeletalMaterial"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSkeletalMaterial
{
	FScriptStruct_Engine_StaticRegisterNativesFSkeletalMaterial()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SkeletalMaterial")),new UScriptStruct::TCppStructOps<FSkeletalMaterial>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSkeletalMaterial;
class UScriptStruct* FClothingAssetData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClothingAssetData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FClothingAssetData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FClothingAssetData, Z_Construct_UPackage__Script_Engine(), TEXT("ClothingAssetData"), sizeof(FClothingAssetData), Get_Z_Construct_UScriptStruct_FClothingAssetData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FClothingAssetData(FClothingAssetData::StaticStruct, TEXT("/Script/Engine"), TEXT("ClothingAssetData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFClothingAssetData
{
	FScriptStruct_Engine_StaticRegisterNativesFClothingAssetData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ClothingAssetData")),new UScriptStruct::TCppStructOps<FClothingAssetData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFClothingAssetData;
class UScriptStruct* FClothPhysicsProperties::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClothPhysicsProperties();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FClothPhysicsProperties_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FClothPhysicsProperties, Z_Construct_UPackage__Script_Engine(), TEXT("ClothPhysicsProperties"), sizeof(FClothPhysicsProperties), Get_Z_Construct_UScriptStruct_FClothPhysicsProperties_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FClothPhysicsProperties(FClothPhysicsProperties::StaticStruct, TEXT("/Script/Engine"), TEXT("ClothPhysicsProperties"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFClothPhysicsProperties
{
	FScriptStruct_Engine_StaticRegisterNativesFClothPhysicsProperties()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ClothPhysicsProperties")),new UScriptStruct::TCppStructOps<FClothPhysicsProperties>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFClothPhysicsProperties;
class UScriptStruct* FSkeletalMeshLODInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshLODInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSkeletalMeshLODInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSkeletalMeshLODInfo, Z_Construct_UPackage__Script_Engine(), TEXT("SkeletalMeshLODInfo"), sizeof(FSkeletalMeshLODInfo), Get_Z_Construct_UScriptStruct_FSkeletalMeshLODInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSkeletalMeshLODInfo(FSkeletalMeshLODInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("SkeletalMeshLODInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshLODInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshLODInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SkeletalMeshLODInfo")),new UScriptStruct::TCppStructOps<FSkeletalMeshLODInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshLODInfo;
class UScriptStruct* FSkeletalMeshOptimizationSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshOptimizationSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSkeletalMeshOptimizationSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSkeletalMeshOptimizationSettings, Z_Construct_UPackage__Script_Engine(), TEXT("SkeletalMeshOptimizationSettings"), sizeof(FSkeletalMeshOptimizationSettings), Get_Z_Construct_UScriptStruct_FSkeletalMeshOptimizationSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSkeletalMeshOptimizationSettings(FSkeletalMeshOptimizationSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("SkeletalMeshOptimizationSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshOptimizationSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshOptimizationSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SkeletalMeshOptimizationSettings")),new UScriptStruct::TCppStructOps<FSkeletalMeshOptimizationSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshOptimizationSettings;
class UScriptStruct* FTriangleSortSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTriangleSortSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTriangleSortSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTriangleSortSettings, Z_Construct_UPackage__Script_Engine(), TEXT("TriangleSortSettings"), sizeof(FTriangleSortSettings), Get_Z_Construct_UScriptStruct_FTriangleSortSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTriangleSortSettings(FTriangleSortSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("TriangleSortSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTriangleSortSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFTriangleSortSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TriangleSortSettings")),new UScriptStruct::TCppStructOps<FTriangleSortSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTriangleSortSettings;
class UScriptStruct* FBoneMirrorExport::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneMirrorExport();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBoneMirrorExport_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBoneMirrorExport, Z_Construct_UPackage__Script_Engine(), TEXT("BoneMirrorExport"), sizeof(FBoneMirrorExport), Get_Z_Construct_UScriptStruct_FBoneMirrorExport_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBoneMirrorExport(FBoneMirrorExport::StaticStruct, TEXT("/Script/Engine"), TEXT("BoneMirrorExport"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBoneMirrorExport
{
	FScriptStruct_Engine_StaticRegisterNativesFBoneMirrorExport()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BoneMirrorExport")),new UScriptStruct::TCppStructOps<FBoneMirrorExport>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBoneMirrorExport;
class UScriptStruct* FBoneMirrorInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneMirrorInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBoneMirrorInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBoneMirrorInfo, Z_Construct_UPackage__Script_Engine(), TEXT("BoneMirrorInfo"), sizeof(FBoneMirrorInfo), Get_Z_Construct_UScriptStruct_FBoneMirrorInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBoneMirrorInfo(FBoneMirrorInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("BoneMirrorInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBoneMirrorInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFBoneMirrorInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BoneMirrorInfo")),new UScriptStruct::TCppStructOps<FBoneMirrorInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBoneMirrorInfo;
	void USkeletalMesh::StaticRegisterNativesUSkeletalMesh()
	{
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMesh::StaticClass(), "FindSocket",(Native)&USkeletalMesh::execFindSocket);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMesh::StaticClass(), "FindSocketAndIndex",(Native)&USkeletalMesh::execFindSocketAndIndex);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMesh::StaticClass(), "GetBounds",(Native)&USkeletalMesh::execGetBounds);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMesh::StaticClass(), "GetImportedBounds",(Native)&USkeletalMesh::execGetImportedBounds);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMesh::StaticClass(), "GetSocketByIndex",(Native)&USkeletalMesh::execGetSocketByIndex);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMesh::StaticClass(), "IsSectionUsingCloth",(Native)&USkeletalMesh::execIsSectionUsingCloth);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMesh::StaticClass(), "NumSockets",(Native)&USkeletalMesh::execNumSockets);
	}
	IMPLEMENT_CLASS(USkeletalMesh, 1571410346);
static class UEnum* EAnimGroupRole_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimGroupRole();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAnimGroupRole, Z_Construct_UPackage__Script_Engine(), TEXT("EAnimGroupRole"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAnimGroupRole(EAnimGroupRole_StaticEnum, TEXT("/Script/Engine"), TEXT("EAnimGroupRole"), false, nullptr, nullptr);
static class UEnum* ERootMotionMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERootMotionMode, Z_Construct_UPackage__Script_Engine(), TEXT("ERootMotionMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERootMotionMode(ERootMotionMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ERootMotionMode"), false, nullptr, nullptr);
static class UEnum* ERootMotionRootLock_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionRootLock();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERootMotionRootLock, Z_Construct_UPackage__Script_Engine(), TEXT("ERootMotionRootLock"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERootMotionRootLock(ERootMotionRootLock_StaticEnum, TEXT("/Script/Engine"), TEXT("ERootMotionRootLock"), false, nullptr, nullptr);
class UScriptStruct* FAnimationGroupReference::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationGroupReference();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimationGroupReference_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimationGroupReference, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationGroupReference"), sizeof(FAnimationGroupReference), Get_Z_Construct_UScriptStruct_FAnimationGroupReference_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimationGroupReference(FAnimationGroupReference::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimationGroupReference"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimationGroupReference
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimationGroupReference()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimationGroupReference")),new UScriptStruct::TCppStructOps<FAnimationGroupReference>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimationGroupReference;
class UScriptStruct* FRootMotionMovementParams::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionMovementParams();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionMovementParams_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionMovementParams, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionMovementParams"), sizeof(FRootMotionMovementParams), Get_Z_Construct_UScriptStruct_FRootMotionMovementParams_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionMovementParams(FRootMotionMovementParams::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionMovementParams"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionMovementParams
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionMovementParams()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionMovementParams")),new UScriptStruct::TCppStructOps<FRootMotionMovementParams>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionMovementParams;
class UScriptStruct* FAnimGroupInstance::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimGroupInstance();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimGroupInstance_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimGroupInstance, Z_Construct_UPackage__Script_Engine(), TEXT("AnimGroupInstance"), sizeof(FAnimGroupInstance), Get_Z_Construct_UScriptStruct_FAnimGroupInstance_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimGroupInstance(FAnimGroupInstance::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimGroupInstance"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimGroupInstance
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimGroupInstance()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimGroupInstance")),new UScriptStruct::TCppStructOps<FAnimGroupInstance>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimGroupInstance;
class UScriptStruct* FAnimTickRecord::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimTickRecord();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimTickRecord_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimTickRecord, Z_Construct_UPackage__Script_Engine(), TEXT("AnimTickRecord"), sizeof(FAnimTickRecord), Get_Z_Construct_UScriptStruct_FAnimTickRecord_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimTickRecord(FAnimTickRecord::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimTickRecord"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimTickRecord
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimTickRecord()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimTickRecord")),new UScriptStruct::TCppStructOps<FAnimTickRecord>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimTickRecord;
class UScriptStruct* FMarkerSyncAnimPosition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMarkerSyncAnimPosition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMarkerSyncAnimPosition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMarkerSyncAnimPosition, Z_Construct_UPackage__Script_Engine(), TEXT("MarkerSyncAnimPosition"), sizeof(FMarkerSyncAnimPosition), Get_Z_Construct_UScriptStruct_FMarkerSyncAnimPosition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMarkerSyncAnimPosition(FMarkerSyncAnimPosition::StaticStruct, TEXT("/Script/Engine"), TEXT("MarkerSyncAnimPosition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMarkerSyncAnimPosition
{
	FScriptStruct_Engine_StaticRegisterNativesFMarkerSyncAnimPosition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MarkerSyncAnimPosition")),new UScriptStruct::TCppStructOps<FMarkerSyncAnimPosition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMarkerSyncAnimPosition;
class UScriptStruct* FBlendFilter::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendFilter();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlendFilter_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlendFilter, Z_Construct_UPackage__Script_Engine(), TEXT("BlendFilter"), sizeof(FBlendFilter), Get_Z_Construct_UScriptStruct_FBlendFilter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlendFilter(FBlendFilter::StaticStruct, TEXT("/Script/Engine"), TEXT("BlendFilter"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlendFilter
{
	FScriptStruct_Engine_StaticRegisterNativesFBlendFilter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlendFilter")),new UScriptStruct::TCppStructOps<FBlendFilter>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlendFilter;
class UScriptStruct* FBlendSampleData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendSampleData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlendSampleData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlendSampleData, Z_Construct_UPackage__Script_Engine(), TEXT("BlendSampleData"), sizeof(FBlendSampleData), Get_Z_Construct_UScriptStruct_FBlendSampleData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlendSampleData(FBlendSampleData::StaticStruct, TEXT("/Script/Engine"), TEXT("BlendSampleData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlendSampleData
{
	FScriptStruct_Engine_StaticRegisterNativesFBlendSampleData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlendSampleData")),new UScriptStruct::TCppStructOps<FBlendSampleData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlendSampleData;
	void UAnimationAsset::StaticRegisterNativesUAnimationAsset()
	{
	}
	IMPLEMENT_CLASS(UAnimationAsset, 1265098206);
static class UEnum* ERootMotionFinishVelocityMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionFinishVelocityMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERootMotionFinishVelocityMode, Z_Construct_UPackage__Script_Engine(), TEXT("ERootMotionFinishVelocityMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERootMotionFinishVelocityMode(ERootMotionFinishVelocityMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ERootMotionFinishVelocityMode"), false, nullptr, nullptr);
static class UEnum* ERootMotionSourceSettingsFlags_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionSourceSettingsFlags();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERootMotionSourceSettingsFlags, Z_Construct_UPackage__Script_Engine(), TEXT("ERootMotionSourceSettingsFlags"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERootMotionSourceSettingsFlags(ERootMotionSourceSettingsFlags_StaticEnum, TEXT("/Script/Engine"), TEXT("ERootMotionSourceSettingsFlags"), false, nullptr, nullptr);
static class UEnum* ERootMotionSourceStatusFlags_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionSourceStatusFlags();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERootMotionSourceStatusFlags, Z_Construct_UPackage__Script_Engine(), TEXT("ERootMotionSourceStatusFlags"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERootMotionSourceStatusFlags(ERootMotionSourceStatusFlags_StaticEnum, TEXT("/Script/Engine"), TEXT("ERootMotionSourceStatusFlags"), false, nullptr, nullptr);
static class UEnum* ERootMotionAccumulateMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionAccumulateMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERootMotionAccumulateMode, Z_Construct_UPackage__Script_Engine(), TEXT("ERootMotionAccumulateMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERootMotionAccumulateMode(ERootMotionAccumulateMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ERootMotionAccumulateMode"), false, nullptr, nullptr);
class UScriptStruct* FRootMotionSourceGroup::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSourceGroup();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionSourceGroup_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionSourceGroup, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionSourceGroup"), sizeof(FRootMotionSourceGroup), Get_Z_Construct_UScriptStruct_FRootMotionSourceGroup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionSourceGroup(FRootMotionSourceGroup::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionSourceGroup"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionSourceGroup
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionSourceGroup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionSourceGroup")),new UScriptStruct::TCppStructOps<FRootMotionSourceGroup>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionSourceGroup;
class UScriptStruct* FRootMotionSource_JumpForce::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_JumpForce();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionSource_JumpForce_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionSource_JumpForce, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionSource_JumpForce"), sizeof(FRootMotionSource_JumpForce), Get_Z_Construct_UScriptStruct_FRootMotionSource_JumpForce_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionSource_JumpForce(FRootMotionSource_JumpForce::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionSource_JumpForce"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_JumpForce
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_JumpForce()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionSource_JumpForce")),new UScriptStruct::TCppStructOps<FRootMotionSource_JumpForce>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_JumpForce;
class UScriptStruct* FRootMotionSource_MoveToDynamicForce::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_MoveToDynamicForce();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionSource_MoveToDynamicForce_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionSource_MoveToDynamicForce, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionSource_MoveToDynamicForce"), sizeof(FRootMotionSource_MoveToDynamicForce), Get_Z_Construct_UScriptStruct_FRootMotionSource_MoveToDynamicForce_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionSource_MoveToDynamicForce(FRootMotionSource_MoveToDynamicForce::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionSource_MoveToDynamicForce"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_MoveToDynamicForce
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_MoveToDynamicForce()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionSource_MoveToDynamicForce")),new UScriptStruct::TCppStructOps<FRootMotionSource_MoveToDynamicForce>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_MoveToDynamicForce;
class UScriptStruct* FRootMotionSource_MoveToForce::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_MoveToForce();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionSource_MoveToForce_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionSource_MoveToForce, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionSource_MoveToForce"), sizeof(FRootMotionSource_MoveToForce), Get_Z_Construct_UScriptStruct_FRootMotionSource_MoveToForce_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionSource_MoveToForce(FRootMotionSource_MoveToForce::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionSource_MoveToForce"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_MoveToForce
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_MoveToForce()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionSource_MoveToForce")),new UScriptStruct::TCppStructOps<FRootMotionSource_MoveToForce>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_MoveToForce;
class UScriptStruct* FRootMotionSource_RadialForce::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_RadialForce();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionSource_RadialForce_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionSource_RadialForce, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionSource_RadialForce"), sizeof(FRootMotionSource_RadialForce), Get_Z_Construct_UScriptStruct_FRootMotionSource_RadialForce_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionSource_RadialForce(FRootMotionSource_RadialForce::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionSource_RadialForce"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_RadialForce
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_RadialForce()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionSource_RadialForce")),new UScriptStruct::TCppStructOps<FRootMotionSource_RadialForce>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_RadialForce;
class UScriptStruct* FRootMotionSource_ConstantForce::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_ConstantForce();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionSource_ConstantForce_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionSource_ConstantForce, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionSource_ConstantForce"), sizeof(FRootMotionSource_ConstantForce), Get_Z_Construct_UScriptStruct_FRootMotionSource_ConstantForce_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionSource_ConstantForce(FRootMotionSource_ConstantForce::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionSource_ConstantForce"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_ConstantForce
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_ConstantForce()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionSource_ConstantForce")),new UScriptStruct::TCppStructOps<FRootMotionSource_ConstantForce>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionSource_ConstantForce;
class UScriptStruct* FRootMotionSource::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionSource_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionSource, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionSource"), sizeof(FRootMotionSource), Get_Z_Construct_UScriptStruct_FRootMotionSource_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionSource(FRootMotionSource::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionSource"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionSource()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionSource")),new UScriptStruct::TCppStructOps<FRootMotionSource>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionSource;
class UScriptStruct* FRootMotionSourceSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSourceSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionSourceSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionSourceSettings, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionSourceSettings"), sizeof(FRootMotionSourceSettings), Get_Z_Construct_UScriptStruct_FRootMotionSourceSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionSourceSettings(FRootMotionSourceSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionSourceSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionSourceSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionSourceSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionSourceSettings")),new UScriptStruct::TCppStructOps<FRootMotionSourceSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionSourceSettings;
class UScriptStruct* FRootMotionSourceStatus::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSourceStatus();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionSourceStatus_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionSourceStatus, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionSourceStatus"), sizeof(FRootMotionSourceStatus), Get_Z_Construct_UScriptStruct_FRootMotionSourceStatus_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionSourceStatus(FRootMotionSourceStatus::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionSourceStatus"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionSourceStatus
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionSourceStatus()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionSourceStatus")),new UScriptStruct::TCppStructOps<FRootMotionSourceStatus>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionSourceStatus;
class UScriptStruct* FBasedMovementInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBasedMovementInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBasedMovementInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBasedMovementInfo, Z_Construct_UPackage__Script_Engine(), TEXT("BasedMovementInfo"), sizeof(FBasedMovementInfo), Get_Z_Construct_UScriptStruct_FBasedMovementInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBasedMovementInfo(FBasedMovementInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("BasedMovementInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBasedMovementInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFBasedMovementInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BasedMovementInfo")),new UScriptStruct::TCppStructOps<FBasedMovementInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBasedMovementInfo;
class UScriptStruct* FSimulatedRootMotionReplicatedMove::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSimulatedRootMotionReplicatedMove();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSimulatedRootMotionReplicatedMove_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSimulatedRootMotionReplicatedMove, Z_Construct_UPackage__Script_Engine(), TEXT("SimulatedRootMotionReplicatedMove"), sizeof(FSimulatedRootMotionReplicatedMove), Get_Z_Construct_UScriptStruct_FSimulatedRootMotionReplicatedMove_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSimulatedRootMotionReplicatedMove(FSimulatedRootMotionReplicatedMove::StaticStruct, TEXT("/Script/Engine"), TEXT("SimulatedRootMotionReplicatedMove"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSimulatedRootMotionReplicatedMove
{
	FScriptStruct_Engine_StaticRegisterNativesFSimulatedRootMotionReplicatedMove()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SimulatedRootMotionReplicatedMove")),new UScriptStruct::TCppStructOps<FSimulatedRootMotionReplicatedMove>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSimulatedRootMotionReplicatedMove;
class UScriptStruct* FRepRootMotionMontage::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRepRootMotionMontage();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRepRootMotionMontage_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRepRootMotionMontage, Z_Construct_UPackage__Script_Engine(), TEXT("RepRootMotionMontage"), sizeof(FRepRootMotionMontage), Get_Z_Construct_UScriptStruct_FRepRootMotionMontage_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRepRootMotionMontage(FRepRootMotionMontage::StaticStruct, TEXT("/Script/Engine"), TEXT("RepRootMotionMontage"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRepRootMotionMontage
{
	FScriptStruct_Engine_StaticRegisterNativesFRepRootMotionMontage()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RepRootMotionMontage")),new UScriptStruct::TCppStructOps<FRepRootMotionMontage>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRepRootMotionMontage;
	bool ACharacter::CanJumpInternal() const
	{
		Character_eventCanJumpInternal_Parms Parms;
		const_cast<ACharacter*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_CanJumpInternal),&Parms);
		return !!Parms.ReturnValue;
	}
	void ACharacter::ClientCheatFly()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientCheatFly),NULL);
	}
	void ACharacter::ClientCheatGhost()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientCheatGhost),NULL);
	}
	void ACharacter::ClientCheatWalk()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ClientCheatWalk),NULL);
	}
	void ACharacter::K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
	{
		Character_eventK2_OnEndCrouch_Parms Parms;
		Parms.HalfHeightAdjust=HalfHeightAdjust;
		Parms.ScaledHalfHeightAdjust=ScaledHalfHeightAdjust;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnEndCrouch),&Parms);
	}
	void ACharacter::K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode)
	{
		Character_eventK2_OnMovementModeChanged_Parms Parms;
		Parms.PrevMovementMode=PrevMovementMode;
		Parms.NewMovementMode=NewMovementMode;
		Parms.PrevCustomMode=PrevCustomMode;
		Parms.NewCustomMode=NewCustomMode;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnMovementModeChanged),&Parms);
	}
	void ACharacter::K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust)
	{
		Character_eventK2_OnStartCrouch_Parms Parms;
		Parms.HalfHeightAdjust=HalfHeightAdjust;
		Parms.ScaledHalfHeightAdjust=ScaledHalfHeightAdjust;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_OnStartCrouch),&Parms);
	}
	void ACharacter::K2_UpdateCustomMovement(float DeltaTime)
	{
		Character_eventK2_UpdateCustomMovement_Parms Parms;
		Parms.DeltaTime=DeltaTime;
		ProcessEvent(FindFunctionChecked(ENGINE_K2_UpdateCustomMovement),&Parms);
	}
	void ACharacter::OnJumped()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_OnJumped),NULL);
	}
	void ACharacter::OnLanded(FHitResult const& Hit)
	{
		Character_eventOnLanded_Parms Parms;
		Parms.Hit=Hit;
		ProcessEvent(FindFunctionChecked(ENGINE_OnLanded),&Parms);
	}
	void ACharacter::OnLaunched(FVector LaunchVelocity, bool bXYOverride, bool bZOverride)
	{
		Character_eventOnLaunched_Parms Parms;
		Parms.LaunchVelocity=LaunchVelocity;
		Parms.bXYOverride=bXYOverride ? true : false;
		Parms.bZOverride=bZOverride ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_OnLaunched),&Parms);
	}
	void ACharacter::OnWalkingOffLedge(FVector const& PreviousFloorImpactNormal, FVector const& PreviousFloorContactNormal, FVector const& PreviousLocation, float TimeDelta)
	{
		Character_eventOnWalkingOffLedge_Parms Parms;
		Parms.PreviousFloorImpactNormal=PreviousFloorImpactNormal;
		Parms.PreviousFloorContactNormal=PreviousFloorContactNormal;
		Parms.PreviousLocation=PreviousLocation;
		Parms.TimeDelta=TimeDelta;
		ProcessEvent(FindFunctionChecked(ENGINE_OnWalkingOffLedge),&Parms);
	}
	void ACharacter::StaticRegisterNativesACharacter()
	{
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "CanJump",(Native)&ACharacter::execCanJump);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "CanJumpInternal",(Native)&ACharacter::execCanJumpInternal);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "ClientCheatFly",(Native)&ACharacter::execClientCheatFly);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "ClientCheatGhost",(Native)&ACharacter::execClientCheatGhost);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "ClientCheatWalk",(Native)&ACharacter::execClientCheatWalk);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "Crouch",(Native)&ACharacter::execCrouch);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "GetAnimRootMotionTranslationScale",(Native)&ACharacter::execGetAnimRootMotionTranslationScale);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "GetBaseRotationOffsetRotator",(Native)&ACharacter::execGetBaseRotationOffsetRotator);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "GetBaseTranslationOffset",(Native)&ACharacter::execGetBaseTranslationOffset);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "GetCurrentMontage",(Native)&ACharacter::execGetCurrentMontage);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "IsJumpProvidingForce",(Native)&ACharacter::execIsJumpProvidingForce);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "IsPlayingNetworkedRootMotionMontage",(Native)&ACharacter::execIsPlayingNetworkedRootMotionMontage);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "IsPlayingRootMotion",(Native)&ACharacter::execIsPlayingRootMotion);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "Jump",(Native)&ACharacter::execJump);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "LaunchCharacter",(Native)&ACharacter::execLaunchCharacter);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "OnJumped",(Native)&ACharacter::execOnJumped);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "OnRep_IsCrouched",(Native)&ACharacter::execOnRep_IsCrouched);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "OnRep_ReplicatedBasedMovement",(Native)&ACharacter::execOnRep_ReplicatedBasedMovement);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "OnRep_RootMotion",(Native)&ACharacter::execOnRep_RootMotion);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "OnWalkingOffLedge",(Native)&ACharacter::execOnWalkingOffLedge);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "PlayAnimMontage",(Native)&ACharacter::execPlayAnimMontage);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "SetReplicateMovement",(Native)&ACharacter::execSetReplicateMovement);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "StopAnimMontage",(Native)&ACharacter::execStopAnimMontage);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "StopJumping",(Native)&ACharacter::execStopJumping);
		FNativeFunctionRegistrar::RegisterFunction(ACharacter::StaticClass(), "UnCrouch",(Native)&ACharacter::execUnCrouch);
	}
	IMPLEMENT_CLASS(ACharacter, 824965088);
	void ADefaultPawn::StaticRegisterNativesADefaultPawn()
	{
		FNativeFunctionRegistrar::RegisterFunction(ADefaultPawn::StaticClass(), "LookUp",(Native)&ADefaultPawn::execLookUp);
		FNativeFunctionRegistrar::RegisterFunction(ADefaultPawn::StaticClass(), "LookUpAtRate",(Native)&ADefaultPawn::execLookUpAtRate);
		FNativeFunctionRegistrar::RegisterFunction(ADefaultPawn::StaticClass(), "MoveForward",(Native)&ADefaultPawn::execMoveForward);
		FNativeFunctionRegistrar::RegisterFunction(ADefaultPawn::StaticClass(), "MoveRight",(Native)&ADefaultPawn::execMoveRight);
		FNativeFunctionRegistrar::RegisterFunction(ADefaultPawn::StaticClass(), "MoveUp_World",(Native)&ADefaultPawn::execMoveUp_World);
		FNativeFunctionRegistrar::RegisterFunction(ADefaultPawn::StaticClass(), "Turn",(Native)&ADefaultPawn::execTurn);
		FNativeFunctionRegistrar::RegisterFunction(ADefaultPawn::StaticClass(), "TurnAtRate",(Native)&ADefaultPawn::execTurnAtRate);
	}
	IMPLEMENT_CLASS(ADefaultPawn, 2409432179);
	void ASpectatorPawn::StaticRegisterNativesASpectatorPawn()
	{
	}
	IMPLEMENT_CLASS(ASpectatorPawn, 3075944934);
	void AReflectionCapture::StaticRegisterNativesAReflectionCapture()
	{
	}
	IMPLEMENT_CLASS(AReflectionCapture, 3375136906);
	void ABoxReflectionCapture::StaticRegisterNativesABoxReflectionCapture()
	{
	}
	IMPLEMENT_CLASS(ABoxReflectionCapture, 827045482);
	void APlaneReflectionCapture::StaticRegisterNativesAPlaneReflectionCapture()
	{
	}
	IMPLEMENT_CLASS(APlaneReflectionCapture, 153947717);
	void ASphereReflectionCapture::StaticRegisterNativesASphereReflectionCapture()
	{
	}
	IMPLEMENT_CLASS(ASphereReflectionCapture, 3430822234);
	void ARigidBodyBase::StaticRegisterNativesARigidBodyBase()
	{
	}
	IMPLEMENT_CLASS(ARigidBodyBase, 1941937932);
	void APhysicsConstraintActor::StaticRegisterNativesAPhysicsConstraintActor()
	{
	}
	IMPLEMENT_CLASS(APhysicsConstraintActor, 2164762);
	void APhysicsThruster::StaticRegisterNativesAPhysicsThruster()
	{
	}
	IMPLEMENT_CLASS(APhysicsThruster, 2439694154);
	void ARadialForceActor::StaticRegisterNativesARadialForceActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(ARadialForceActor::StaticClass(), "DisableForce",(Native)&ARadialForceActor::execDisableForce);
		FNativeFunctionRegistrar::RegisterFunction(ARadialForceActor::StaticClass(), "EnableForce",(Native)&ARadialForceActor::execEnableForce);
		FNativeFunctionRegistrar::RegisterFunction(ARadialForceActor::StaticClass(), "FireImpulse",(Native)&ARadialForceActor::execFireImpulse);
		FNativeFunctionRegistrar::RegisterFunction(ARadialForceActor::StaticClass(), "ToggleForce",(Native)&ARadialForceActor::execToggleForce);
	}
	IMPLEMENT_CLASS(ARadialForceActor, 753546151);
	void ASceneCapture::StaticRegisterNativesASceneCapture()
	{
	}
	IMPLEMENT_CLASS(ASceneCapture, 2696466892);
	void APlanarReflection::StaticRegisterNativesAPlanarReflection()
	{
		FNativeFunctionRegistrar::RegisterFunction(APlanarReflection::StaticClass(), "OnInterpToggle",(Native)&APlanarReflection::execOnInterpToggle);
	}
	IMPLEMENT_CLASS(APlanarReflection, 3215285500);
	void ASceneCapture2D::StaticRegisterNativesASceneCapture2D()
	{
		FNativeFunctionRegistrar::RegisterFunction(ASceneCapture2D::StaticClass(), "OnInterpToggle",(Native)&ASceneCapture2D::execOnInterpToggle);
	}
	IMPLEMENT_CLASS(ASceneCapture2D, 1224571157);
	void ASceneCaptureCube::StaticRegisterNativesASceneCaptureCube()
	{
		FNativeFunctionRegistrar::RegisterFunction(ASceneCaptureCube::StaticClass(), "OnInterpToggle",(Native)&ASceneCaptureCube::execOnInterpToggle);
	}
	IMPLEMENT_CLASS(ASceneCaptureCube, 159212571);
	void UMatineeAnimInterface::StaticRegisterNativesUMatineeAnimInterface()
	{
	}
	IMPLEMENT_CLASS(UMatineeAnimInterface, 3202083664);
	void ASkeletalMeshActor::StaticRegisterNativesASkeletalMeshActor()
	{
		FNativeFunctionRegistrar::RegisterFunction(ASkeletalMeshActor::StaticClass(), "OnRep_ReplicatedMaterial0",(Native)&ASkeletalMeshActor::execOnRep_ReplicatedMaterial0);
		FNativeFunctionRegistrar::RegisterFunction(ASkeletalMeshActor::StaticClass(), "OnRep_ReplicatedMaterial1",(Native)&ASkeletalMeshActor::execOnRep_ReplicatedMaterial1);
		FNativeFunctionRegistrar::RegisterFunction(ASkeletalMeshActor::StaticClass(), "OnRep_ReplicatedMesh",(Native)&ASkeletalMeshActor::execOnRep_ReplicatedMesh);
		FNativeFunctionRegistrar::RegisterFunction(ASkeletalMeshActor::StaticClass(), "OnRep_ReplicatedPhysAsset",(Native)&ASkeletalMeshActor::execOnRep_ReplicatedPhysAsset);
	}
	IMPLEMENT_CLASS(ASkeletalMeshActor, 4211021286);
	void ASplineMeshActor::StaticRegisterNativesASplineMeshActor()
	{
	}
	IMPLEMENT_CLASS(ASplineMeshActor, 2803060627);
	void AStaticMeshActor::StaticRegisterNativesAStaticMeshActor()
	{
	}
	IMPLEMENT_CLASS(AStaticMeshActor, 599950035);
	void ASubDSurfaceActor::StaticRegisterNativesASubDSurfaceActor()
	{
	}
	IMPLEMENT_CLASS(ASubDSurfaceActor, 3690714924);
	void ATargetPoint::StaticRegisterNativesATargetPoint()
	{
	}
	IMPLEMENT_CLASS(ATargetPoint, 809965782);
	void ATextRenderActor::StaticRegisterNativesATextRenderActor()
	{
	}
	IMPLEMENT_CLASS(ATextRenderActor, 3562443217);
	void ATriggerBase::StaticRegisterNativesATriggerBase()
	{
	}
	IMPLEMENT_CLASS(ATriggerBase, 90884099);
	void ATriggerBox::StaticRegisterNativesATriggerBox()
	{
	}
	IMPLEMENT_CLASS(ATriggerBox, 2569446691);
	void ATriggerCapsule::StaticRegisterNativesATriggerCapsule()
	{
	}
	IMPLEMENT_CLASS(ATriggerCapsule, 1473107337);
	void ATriggerSphere::StaticRegisterNativesATriggerSphere()
	{
	}
	IMPLEMENT_CLASS(ATriggerSphere, 4090368458);
	void AVectorFieldVolume::StaticRegisterNativesAVectorFieldVolume()
	{
	}
	IMPLEMENT_CLASS(AVectorFieldVolume, 405648186);
	void UApplicationLifecycleComponent::StaticRegisterNativesUApplicationLifecycleComponent()
	{
	}
	IMPLEMENT_CLASS(UApplicationLifecycleComponent, 793512877);
static class UEnum* EPlaneConstraintAxisSetting_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPlaneConstraintAxisSetting();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EPlaneConstraintAxisSetting, Z_Construct_UPackage__Script_Engine(), TEXT("EPlaneConstraintAxisSetting"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPlaneConstraintAxisSetting(EPlaneConstraintAxisSetting_StaticEnum, TEXT("/Script/Engine"), TEXT("EPlaneConstraintAxisSetting"), false, nullptr, nullptr);
	void UMovementComponent::StaticRegisterNativesUMovementComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "ConstrainDirectionToPlane",(Native)&UMovementComponent::execConstrainDirectionToPlane);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "ConstrainLocationToPlane",(Native)&UMovementComponent::execConstrainLocationToPlane);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "ConstrainNormalToPlane",(Native)&UMovementComponent::execConstrainNormalToPlane);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "GetGravityZ",(Native)&UMovementComponent::execGetGravityZ);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "GetMaxSpeed",(Native)&UMovementComponent::execGetMaxSpeed);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "GetPhysicsVolume",(Native)&UMovementComponent::execGetPhysicsVolume);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "GetPlaneConstraintAxisSetting",(Native)&UMovementComponent::execGetPlaneConstraintAxisSetting);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "GetPlaneConstraintNormal",(Native)&UMovementComponent::execGetPlaneConstraintNormal);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "GetPlaneConstraintOrigin",(Native)&UMovementComponent::execGetPlaneConstraintOrigin);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "IsExceedingMaxSpeed",(Native)&UMovementComponent::execIsExceedingMaxSpeed);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "K2_GetMaxSpeedModifier",(Native)&UMovementComponent::execK2_GetMaxSpeedModifier);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "K2_GetModifiedMaxSpeed",(Native)&UMovementComponent::execK2_GetModifiedMaxSpeed);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "K2_MoveUpdatedComponent",(Native)&UMovementComponent::execK2_MoveUpdatedComponent);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "PhysicsVolumeChanged",(Native)&UMovementComponent::execPhysicsVolumeChanged);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "SetPlaneConstraintAxisSetting",(Native)&UMovementComponent::execSetPlaneConstraintAxisSetting);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "SetPlaneConstraintEnabled",(Native)&UMovementComponent::execSetPlaneConstraintEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "SetPlaneConstraintFromVectors",(Native)&UMovementComponent::execSetPlaneConstraintFromVectors);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "SetPlaneConstraintNormal",(Native)&UMovementComponent::execSetPlaneConstraintNormal);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "SetPlaneConstraintOrigin",(Native)&UMovementComponent::execSetPlaneConstraintOrigin);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "SetUpdatedComponent",(Native)&UMovementComponent::execSetUpdatedComponent);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "SnapUpdatedComponentToPlane",(Native)&UMovementComponent::execSnapUpdatedComponentToPlane);
		FNativeFunctionRegistrar::RegisterFunction(UMovementComponent::StaticClass(), "StopMovementImmediately",(Native)&UMovementComponent::execStopMovementImmediately);
	}
	IMPLEMENT_CLASS(UMovementComponent, 155404632);
static class UEnum* EInterpToBehaviourType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInterpToBehaviourType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EInterpToBehaviourType, Z_Construct_UPackage__Script_Engine(), TEXT("EInterpToBehaviourType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EInterpToBehaviourType(EInterpToBehaviourType_StaticEnum, TEXT("/Script/Engine"), TEXT("EInterpToBehaviourType"), false, nullptr, nullptr);
class UScriptStruct* FInterpControlPoint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpControlPoint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInterpControlPoint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInterpControlPoint, Z_Construct_UPackage__Script_Engine(), TEXT("InterpControlPoint"), sizeof(FInterpControlPoint), Get_Z_Construct_UScriptStruct_FInterpControlPoint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInterpControlPoint(FInterpControlPoint::StaticStruct, TEXT("/Script/Engine"), TEXT("InterpControlPoint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInterpControlPoint
{
	FScriptStruct_Engine_StaticRegisterNativesFInterpControlPoint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InterpControlPoint")),new UScriptStruct::TCppStructOps<FInterpControlPoint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInterpControlPoint;
	void UInterpToMovementComponent::StaticRegisterNativesUInterpToMovementComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UInterpToMovementComponent::StaticClass(), "FinaliseControlPoints",(Native)&UInterpToMovementComponent::execFinaliseControlPoints);
		FNativeFunctionRegistrar::RegisterFunction(UInterpToMovementComponent::StaticClass(), "RestartMovement",(Native)&UInterpToMovementComponent::execRestartMovement);
		FNativeFunctionRegistrar::RegisterFunction(UInterpToMovementComponent::StaticClass(), "StopSimulating",(Native)&UInterpToMovementComponent::execStopSimulating);
	}
	IMPLEMENT_CLASS(UInterpToMovementComponent, 3212396375);
	void UNavMovementComponent::StaticRegisterNativesUNavMovementComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UNavMovementComponent::StaticClass(), "IsCrouching",(Native)&UNavMovementComponent::execIsCrouching);
		FNativeFunctionRegistrar::RegisterFunction(UNavMovementComponent::StaticClass(), "IsFalling",(Native)&UNavMovementComponent::execIsFalling);
		FNativeFunctionRegistrar::RegisterFunction(UNavMovementComponent::StaticClass(), "IsFlying",(Native)&UNavMovementComponent::execIsFlying);
		FNativeFunctionRegistrar::RegisterFunction(UNavMovementComponent::StaticClass(), "IsMovingOnGround",(Native)&UNavMovementComponent::execIsMovingOnGround);
		FNativeFunctionRegistrar::RegisterFunction(UNavMovementComponent::StaticClass(), "IsSwimming",(Native)&UNavMovementComponent::execIsSwimming);
		FNativeFunctionRegistrar::RegisterFunction(UNavMovementComponent::StaticClass(), "StopActiveMovement",(Native)&UNavMovementComponent::execStopActiveMovement);
		FNativeFunctionRegistrar::RegisterFunction(UNavMovementComponent::StaticClass(), "StopMovementKeepPathing",(Native)&UNavMovementComponent::execStopMovementKeepPathing);
	}
	IMPLEMENT_CLASS(UNavMovementComponent, 1085154154);
	void UPawnMovementComponent::StaticRegisterNativesUPawnMovementComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPawnMovementComponent::StaticClass(), "AddInputVector",(Native)&UPawnMovementComponent::execAddInputVector);
		FNativeFunctionRegistrar::RegisterFunction(UPawnMovementComponent::StaticClass(), "ConsumeInputVector",(Native)&UPawnMovementComponent::execConsumeInputVector);
		FNativeFunctionRegistrar::RegisterFunction(UPawnMovementComponent::StaticClass(), "GetLastInputVector",(Native)&UPawnMovementComponent::execGetLastInputVector);
		FNativeFunctionRegistrar::RegisterFunction(UPawnMovementComponent::StaticClass(), "GetPawnOwner",(Native)&UPawnMovementComponent::execGetPawnOwner);
		FNativeFunctionRegistrar::RegisterFunction(UPawnMovementComponent::StaticClass(), "GetPendingInputVector",(Native)&UPawnMovementComponent::execGetPendingInputVector);
		FNativeFunctionRegistrar::RegisterFunction(UPawnMovementComponent::StaticClass(), "IsMoveInputIgnored",(Native)&UPawnMovementComponent::execIsMoveInputIgnored);
		FNativeFunctionRegistrar::RegisterFunction(UPawnMovementComponent::StaticClass(), "K2_GetInputVector",(Native)&UPawnMovementComponent::execK2_GetInputVector);
	}
	IMPLEMENT_CLASS(UPawnMovementComponent, 3687808765);
class UScriptStruct* FSmartName::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSmartName();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSmartName_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSmartName, Z_Construct_UPackage__Script_Engine(), TEXT("SmartName"), sizeof(FSmartName), Get_Z_Construct_UScriptStruct_FSmartName_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSmartName(FSmartName::StaticStruct, TEXT("/Script/Engine"), TEXT("SmartName"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSmartName
{
	FScriptStruct_Engine_StaticRegisterNativesFSmartName()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SmartName")),new UScriptStruct::TCppStructOps<FSmartName>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSmartName;
class UScriptStruct* FSmartNameContainer::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSmartNameContainer();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSmartNameContainer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSmartNameContainer, Z_Construct_UPackage__Script_Engine(), TEXT("SmartNameContainer"), sizeof(FSmartNameContainer), Get_Z_Construct_UScriptStruct_FSmartNameContainer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSmartNameContainer(FSmartNameContainer::StaticStruct, TEXT("/Script/Engine"), TEXT("SmartNameContainer"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSmartNameContainer
{
	FScriptStruct_Engine_StaticRegisterNativesFSmartNameContainer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SmartNameContainer")),new UScriptStruct::TCppStructOps<FSmartNameContainer>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSmartNameContainer;
class UScriptStruct* FSmartNameMapping::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSmartNameMapping();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSmartNameMapping_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSmartNameMapping, Z_Construct_UPackage__Script_Engine(), TEXT("SmartNameMapping"), sizeof(FSmartNameMapping), Get_Z_Construct_UScriptStruct_FSmartNameMapping_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSmartNameMapping(FSmartNameMapping::StaticStruct, TEXT("/Script/Engine"), TEXT("SmartNameMapping"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSmartNameMapping
{
	FScriptStruct_Engine_StaticRegisterNativesFSmartNameMapping()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SmartNameMapping")),new UScriptStruct::TCppStructOps<FSmartNameMapping>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSmartNameMapping;
class UScriptStruct* FCurveMetaData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveMetaData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCurveMetaData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCurveMetaData, Z_Construct_UPackage__Script_Engine(), TEXT("CurveMetaData"), sizeof(FCurveMetaData), Get_Z_Construct_UScriptStruct_FCurveMetaData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCurveMetaData(FCurveMetaData::StaticStruct, TEXT("/Script/Engine"), TEXT("CurveMetaData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCurveMetaData
{
	FScriptStruct_Engine_StaticRegisterNativesFCurveMetaData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CurveMetaData")),new UScriptStruct::TCppStructOps<FCurveMetaData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCurveMetaData;
class UScriptStruct* FAnimCurveType::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimCurveType();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimCurveType_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimCurveType, Z_Construct_UPackage__Script_Engine(), TEXT("AnimCurveType"), sizeof(FAnimCurveType), Get_Z_Construct_UScriptStruct_FAnimCurveType_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimCurveType(FAnimCurveType::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimCurveType"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimCurveType
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimCurveType()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimCurveType")),new UScriptStruct::TCppStructOps<FAnimCurveType>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimCurveType;
static class UEnum* EBoneTranslationRetargetingMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneTranslationRetargetingMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBoneTranslationRetargetingMode, Z_Construct_UPackage__Script_Engine(), TEXT("EBoneTranslationRetargetingMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBoneTranslationRetargetingMode(EBoneTranslationRetargetingMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EBoneTranslationRetargetingMode"), false, nullptr, nullptr);
class UScriptStruct* FVirtualBone::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVirtualBone();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVirtualBone_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVirtualBone, Z_Construct_UPackage__Script_Engine(), TEXT("VirtualBone"), sizeof(FVirtualBone), Get_Z_Construct_UScriptStruct_FVirtualBone_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVirtualBone(FVirtualBone::StaticStruct, TEXT("/Script/Engine"), TEXT("VirtualBone"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVirtualBone
{
	FScriptStruct_Engine_StaticRegisterNativesFVirtualBone()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("VirtualBone")),new UScriptStruct::TCppStructOps<FVirtualBone>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVirtualBone;
class UScriptStruct* FAnimSlotGroup::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSlotGroup();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimSlotGroup_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimSlotGroup, Z_Construct_UPackage__Script_Engine(), TEXT("AnimSlotGroup"), sizeof(FAnimSlotGroup), Get_Z_Construct_UScriptStruct_FAnimSlotGroup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimSlotGroup(FAnimSlotGroup::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimSlotGroup"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimSlotGroup
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimSlotGroup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimSlotGroup")),new UScriptStruct::TCppStructOps<FAnimSlotGroup>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimSlotGroup;
class UScriptStruct* FRigConfiguration::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigConfiguration();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRigConfiguration_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRigConfiguration, Z_Construct_UPackage__Script_Engine(), TEXT("RigConfiguration"), sizeof(FRigConfiguration), Get_Z_Construct_UScriptStruct_FRigConfiguration_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRigConfiguration(FRigConfiguration::StaticStruct, TEXT("/Script/Engine"), TEXT("RigConfiguration"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRigConfiguration
{
	FScriptStruct_Engine_StaticRegisterNativesFRigConfiguration()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RigConfiguration")),new UScriptStruct::TCppStructOps<FRigConfiguration>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRigConfiguration;
class UScriptStruct* FNameMapping::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNameMapping();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNameMapping_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNameMapping, Z_Construct_UPackage__Script_Engine(), TEXT("NameMapping"), sizeof(FNameMapping), Get_Z_Construct_UScriptStruct_FNameMapping_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNameMapping(FNameMapping::StaticStruct, TEXT("/Script/Engine"), TEXT("NameMapping"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNameMapping
{
	FScriptStruct_Engine_StaticRegisterNativesFNameMapping()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NameMapping")),new UScriptStruct::TCppStructOps<FNameMapping>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNameMapping;
class UScriptStruct* FBoneReductionSetting::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneReductionSetting();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBoneReductionSetting_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBoneReductionSetting, Z_Construct_UPackage__Script_Engine(), TEXT("BoneReductionSetting"), sizeof(FBoneReductionSetting), Get_Z_Construct_UScriptStruct_FBoneReductionSetting_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBoneReductionSetting(FBoneReductionSetting::StaticStruct, TEXT("/Script/Engine"), TEXT("BoneReductionSetting"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBoneReductionSetting
{
	FScriptStruct_Engine_StaticRegisterNativesFBoneReductionSetting()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BoneReductionSetting")),new UScriptStruct::TCppStructOps<FBoneReductionSetting>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBoneReductionSetting;
class UScriptStruct* FReferencePose::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FReferencePose();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FReferencePose_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FReferencePose, Z_Construct_UPackage__Script_Engine(), TEXT("ReferencePose"), sizeof(FReferencePose), Get_Z_Construct_UScriptStruct_FReferencePose_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FReferencePose(FReferencePose::StaticStruct, TEXT("/Script/Engine"), TEXT("ReferencePose"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFReferencePose
{
	FScriptStruct_Engine_StaticRegisterNativesFReferencePose()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ReferencePose")),new UScriptStruct::TCppStructOps<FReferencePose>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFReferencePose;
class UScriptStruct* FBoneNode::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneNode();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBoneNode_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBoneNode, Z_Construct_UPackage__Script_Engine(), TEXT("BoneNode"), sizeof(FBoneNode), Get_Z_Construct_UScriptStruct_FBoneNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBoneNode(FBoneNode::StaticStruct, TEXT("/Script/Engine"), TEXT("BoneNode"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBoneNode
{
	FScriptStruct_Engine_StaticRegisterNativesFBoneNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BoneNode")),new UScriptStruct::TCppStructOps<FBoneNode>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBoneNode;
class UScriptStruct* FSkeletonToMeshLinkup::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletonToMeshLinkup();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSkeletonToMeshLinkup_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSkeletonToMeshLinkup, Z_Construct_UPackage__Script_Engine(), TEXT("SkeletonToMeshLinkup"), sizeof(FSkeletonToMeshLinkup), Get_Z_Construct_UScriptStruct_FSkeletonToMeshLinkup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSkeletonToMeshLinkup(FSkeletonToMeshLinkup::StaticStruct, TEXT("/Script/Engine"), TEXT("SkeletonToMeshLinkup"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSkeletonToMeshLinkup
{
	FScriptStruct_Engine_StaticRegisterNativesFSkeletonToMeshLinkup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SkeletonToMeshLinkup")),new UScriptStruct::TCppStructOps<FSkeletonToMeshLinkup>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSkeletonToMeshLinkup;
	void USkeleton::StaticRegisterNativesUSkeleton()
	{
	}
	IMPLEMENT_CLASS(USkeleton, 1748603729);
static class UEnum* EAlphaBlendOption_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAlphaBlendOption();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAlphaBlendOption, Z_Construct_UPackage__Script_Engine(), TEXT("EAlphaBlendOption"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAlphaBlendOption(EAlphaBlendOption_StaticEnum, TEXT("/Script/Engine"), TEXT("EAlphaBlendOption"), false, nullptr, nullptr);
class UScriptStruct* FAlphaBlend::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAlphaBlend();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAlphaBlend_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAlphaBlend, Z_Construct_UPackage__Script_Engine(), TEXT("AlphaBlend"), sizeof(FAlphaBlend), Get_Z_Construct_UScriptStruct_FAlphaBlend_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAlphaBlend(FAlphaBlend::StaticStruct, TEXT("/Script/Engine"), TEXT("AlphaBlend"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAlphaBlend
{
	FScriptStruct_Engine_StaticRegisterNativesFAlphaBlend()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AlphaBlend")),new UScriptStruct::TCppStructOps<FAlphaBlend>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAlphaBlend;
class UScriptStruct* FRawCurveTracks::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRawCurveTracks();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRawCurveTracks_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRawCurveTracks, Z_Construct_UPackage__Script_Engine(), TEXT("RawCurveTracks"), sizeof(FRawCurveTracks), Get_Z_Construct_UScriptStruct_FRawCurveTracks_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRawCurveTracks(FRawCurveTracks::StaticStruct, TEXT("/Script/Engine"), TEXT("RawCurveTracks"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRawCurveTracks
{
	FScriptStruct_Engine_StaticRegisterNativesFRawCurveTracks()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RawCurveTracks")),new UScriptStruct::TCppStructOps<FRawCurveTracks>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRawCurveTracks;
class UScriptStruct* FTransformCurve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTransformCurve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTransformCurve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTransformCurve, Z_Construct_UPackage__Script_Engine(), TEXT("TransformCurve"), sizeof(FTransformCurve), Get_Z_Construct_UScriptStruct_FTransformCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTransformCurve(FTransformCurve::StaticStruct, TEXT("/Script/Engine"), TEXT("TransformCurve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTransformCurve
{
	FScriptStruct_Engine_StaticRegisterNativesFTransformCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TransformCurve")),new UScriptStruct::TCppStructOps<FTransformCurve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTransformCurve;
class UScriptStruct* FVectorCurve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorCurve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVectorCurve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVectorCurve, Z_Construct_UPackage__Script_Engine(), TEXT("VectorCurve"), sizeof(FVectorCurve), Get_Z_Construct_UScriptStruct_FVectorCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVectorCurve(FVectorCurve::StaticStruct, TEXT("/Script/Engine"), TEXT("VectorCurve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVectorCurve
{
	FScriptStruct_Engine_StaticRegisterNativesFVectorCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("VectorCurve")),new UScriptStruct::TCppStructOps<FVectorCurve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVectorCurve;
class UScriptStruct* FFloatCurve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFloatCurve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFloatCurve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFloatCurve, Z_Construct_UPackage__Script_Engine(), TEXT("FloatCurve"), sizeof(FFloatCurve), Get_Z_Construct_UScriptStruct_FFloatCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFloatCurve(FFloatCurve::StaticStruct, TEXT("/Script/Engine"), TEXT("FloatCurve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFloatCurve
{
	FScriptStruct_Engine_StaticRegisterNativesFFloatCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FloatCurve")),new UScriptStruct::TCppStructOps<FFloatCurve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFloatCurve;
class UScriptStruct* FAnimCurveBase::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimCurveBase();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimCurveBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimCurveBase, Z_Construct_UPackage__Script_Engine(), TEXT("AnimCurveBase"), sizeof(FAnimCurveBase), Get_Z_Construct_UScriptStruct_FAnimCurveBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimCurveBase(FAnimCurveBase::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimCurveBase"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimCurveBase
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimCurveBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimCurveBase")),new UScriptStruct::TCppStructOps<FAnimCurveBase>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimCurveBase;
class UScriptStruct* FAnimCurveParam::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimCurveParam();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimCurveParam_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimCurveParam, Z_Construct_UPackage__Script_Engine(), TEXT("AnimCurveParam"), sizeof(FAnimCurveParam), Get_Z_Construct_UScriptStruct_FAnimCurveParam_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimCurveParam(FAnimCurveParam::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimCurveParam"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimCurveParam
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimCurveParam()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimCurveParam")),new UScriptStruct::TCppStructOps<FAnimCurveParam>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimCurveParam;
static class UEnum* ETypeAdvanceAnim_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETypeAdvanceAnim();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETypeAdvanceAnim, Z_Construct_UPackage__Script_Engine(), TEXT("ETypeAdvanceAnim"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETypeAdvanceAnim(ETypeAdvanceAnim_StaticEnum, TEXT("/Script/Engine"), TEXT("ETypeAdvanceAnim"), false, nullptr, nullptr);
	void UAnimSequenceBase::StaticRegisterNativesUAnimSequenceBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAnimSequenceBase::StaticClass(), "GetPlayLength",(Native)&UAnimSequenceBase::execGetPlayLength);
	}
	IMPLEMENT_CLASS(UAnimSequenceBase, 1754937392);
class UScriptStruct* FAnimTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimTrack, Z_Construct_UPackage__Script_Engine(), TEXT("AnimTrack"), sizeof(FAnimTrack), Get_Z_Construct_UScriptStruct_FAnimTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimTrack(FAnimTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimTrack")),new UScriptStruct::TCppStructOps<FAnimTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimTrack;
class UScriptStruct* FAnimSegment::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSegment();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimSegment_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimSegment, Z_Construct_UPackage__Script_Engine(), TEXT("AnimSegment"), sizeof(FAnimSegment), Get_Z_Construct_UScriptStruct_FAnimSegment_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimSegment(FAnimSegment::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimSegment"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimSegment
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimSegment()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimSegment")),new UScriptStruct::TCppStructOps<FAnimSegment>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimSegment;
class UScriptStruct* FRootMotionExtractionStep::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionExtractionStep();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRootMotionExtractionStep_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRootMotionExtractionStep, Z_Construct_UPackage__Script_Engine(), TEXT("RootMotionExtractionStep"), sizeof(FRootMotionExtractionStep), Get_Z_Construct_UScriptStruct_FRootMotionExtractionStep_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRootMotionExtractionStep(FRootMotionExtractionStep::StaticStruct, TEXT("/Script/Engine"), TEXT("RootMotionExtractionStep"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRootMotionExtractionStep
{
	FScriptStruct_Engine_StaticRegisterNativesFRootMotionExtractionStep()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RootMotionExtractionStep")),new UScriptStruct::TCppStructOps<FRootMotionExtractionStep>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRootMotionExtractionStep;
	void UAnimCompositeBase::StaticRegisterNativesUAnimCompositeBase()
	{
	}
	IMPLEMENT_CLASS(UAnimCompositeBase, 2763313563);
static class UEnum* EAnimNotifyEventType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimNotifyEventType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAnimNotifyEventType, Z_Construct_UPackage__Script_Engine(), TEXT("EAnimNotifyEventType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAnimNotifyEventType(EAnimNotifyEventType_StaticEnum, TEXT("/Script/Engine"), TEXT("EAnimNotifyEventType"), false, nullptr, nullptr);
class UScriptStruct* FAnimMontageInstance::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimMontageInstance();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimMontageInstance_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimMontageInstance, Z_Construct_UPackage__Script_Engine(), TEXT("AnimMontageInstance"), sizeof(FAnimMontageInstance), Get_Z_Construct_UScriptStruct_FAnimMontageInstance_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimMontageInstance(FAnimMontageInstance::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimMontageInstance"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimMontageInstance
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimMontageInstance()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimMontageInstance")),new UScriptStruct::TCppStructOps<FAnimMontageInstance>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimMontageInstance;
class UScriptStruct* FBranchingPointMarker::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBranchingPointMarker();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBranchingPointMarker_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBranchingPointMarker, Z_Construct_UPackage__Script_Engine(), TEXT("BranchingPointMarker"), sizeof(FBranchingPointMarker), Get_Z_Construct_UScriptStruct_FBranchingPointMarker_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBranchingPointMarker(FBranchingPointMarker::StaticStruct, TEXT("/Script/Engine"), TEXT("BranchingPointMarker"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBranchingPointMarker
{
	FScriptStruct_Engine_StaticRegisterNativesFBranchingPointMarker()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BranchingPointMarker")),new UScriptStruct::TCppStructOps<FBranchingPointMarker>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBranchingPointMarker;
class UScriptStruct* FBranchingPoint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBranchingPoint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBranchingPoint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBranchingPoint, Z_Construct_UPackage__Script_Engine(), TEXT("BranchingPoint"), sizeof(FBranchingPoint), Get_Z_Construct_UScriptStruct_FBranchingPoint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBranchingPoint(FBranchingPoint::StaticStruct, TEXT("/Script/Engine"), TEXT("BranchingPoint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBranchingPoint
{
	FScriptStruct_Engine_StaticRegisterNativesFBranchingPoint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BranchingPoint")),new UScriptStruct::TCppStructOps<FBranchingPoint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBranchingPoint;
class UScriptStruct* FSlotAnimationTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSlotAnimationTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSlotAnimationTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSlotAnimationTrack, Z_Construct_UPackage__Script_Engine(), TEXT("SlotAnimationTrack"), sizeof(FSlotAnimationTrack), Get_Z_Construct_UScriptStruct_FSlotAnimationTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSlotAnimationTrack(FSlotAnimationTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("SlotAnimationTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSlotAnimationTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFSlotAnimationTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SlotAnimationTrack")),new UScriptStruct::TCppStructOps<FSlotAnimationTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSlotAnimationTrack;
class UScriptStruct* FCompositeSection::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCompositeSection();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCompositeSection_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCompositeSection, Z_Construct_UPackage__Script_Engine(), TEXT("CompositeSection"), sizeof(FCompositeSection), Get_Z_Construct_UScriptStruct_FCompositeSection_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCompositeSection(FCompositeSection::StaticStruct, TEXT("/Script/Engine"), TEXT("CompositeSection"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCompositeSection
{
	FScriptStruct_Engine_StaticRegisterNativesFCompositeSection()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CompositeSection")),new UScriptStruct::TCppStructOps<FCompositeSection>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCompositeSection;
	void UAnimMontage::StaticRegisterNativesUAnimMontage()
	{
	}
	IMPLEMENT_CLASS(UAnimMontage, 1556241063);
class UScriptStruct* FNavAvoidanceMask::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavAvoidanceMask();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavAvoidanceMask_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavAvoidanceMask, Z_Construct_UPackage__Script_Engine(), TEXT("NavAvoidanceMask"), sizeof(FNavAvoidanceMask), Get_Z_Construct_UScriptStruct_FNavAvoidanceMask_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavAvoidanceMask(FNavAvoidanceMask::StaticStruct, TEXT("/Script/Engine"), TEXT("NavAvoidanceMask"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavAvoidanceMask
{
	FScriptStruct_Engine_StaticRegisterNativesFNavAvoidanceMask()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavAvoidanceMask")),new UScriptStruct::TCppStructOps<FNavAvoidanceMask>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavAvoidanceMask;
	void URVOAvoidanceInterface::StaticRegisterNativesURVOAvoidanceInterface()
	{
	}
	IMPLEMENT_CLASS(URVOAvoidanceInterface, 937197371);
	void UNetworkPredictionInterface::StaticRegisterNativesUNetworkPredictionInterface()
	{
	}
	IMPLEMENT_CLASS(UNetworkPredictionInterface, 4190929326);
class UScriptStruct* FCharacterMovementComponentPostPhysicsTickFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCharacterMovementComponentPostPhysicsTickFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCharacterMovementComponentPostPhysicsTickFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCharacterMovementComponentPostPhysicsTickFunction, Z_Construct_UPackage__Script_Engine(), TEXT("CharacterMovementComponentPostPhysicsTickFunction"), sizeof(FCharacterMovementComponentPostPhysicsTickFunction), Get_Z_Construct_UScriptStruct_FCharacterMovementComponentPostPhysicsTickFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCharacterMovementComponentPostPhysicsTickFunction(FCharacterMovementComponentPostPhysicsTickFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("CharacterMovementComponentPostPhysicsTickFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCharacterMovementComponentPostPhysicsTickFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFCharacterMovementComponentPostPhysicsTickFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CharacterMovementComponentPostPhysicsTickFunction")),new UScriptStruct::TCppStructOps<FCharacterMovementComponentPostPhysicsTickFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCharacterMovementComponentPostPhysicsTickFunction;
class UScriptStruct* FFindFloorResult::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFindFloorResult();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFindFloorResult_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFindFloorResult, Z_Construct_UPackage__Script_Engine(), TEXT("FindFloorResult"), sizeof(FFindFloorResult), Get_Z_Construct_UScriptStruct_FFindFloorResult_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFindFloorResult(FFindFloorResult::StaticStruct, TEXT("/Script/Engine"), TEXT("FindFloorResult"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFindFloorResult
{
	FScriptStruct_Engine_StaticRegisterNativesFFindFloorResult()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FindFloorResult")),new UScriptStruct::TCppStructOps<FFindFloorResult>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFindFloorResult;
	void UCharacterMovementComponent::ClientAckGoodMove(float TimeStamp)
	{
		CharacterMovementComponent_eventClientAckGoodMove_Parms Parms;
		Parms.TimeStamp=TimeStamp;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientAckGoodMove),&Parms);
	}
	void UCharacterMovementComponent::ClientAdjustPosition(float TimeStamp, FVector NewLoc, FVector NewVel, UPrimitiveComponent* NewBase, FName NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, uint8 ServerMovementMode)
	{
		CharacterMovementComponent_eventClientAdjustPosition_Parms Parms;
		Parms.TimeStamp=TimeStamp;
		Parms.NewLoc=NewLoc;
		Parms.NewVel=NewVel;
		Parms.NewBase=NewBase;
		Parms.NewBaseBoneName=NewBaseBoneName;
		Parms.bHasBase=bHasBase ? true : false;
		Parms.bBaseRelativePosition=bBaseRelativePosition ? true : false;
		Parms.ServerMovementMode=ServerMovementMode;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientAdjustPosition),&Parms);
	}
	void UCharacterMovementComponent::ClientAdjustRootMotionPosition(float TimeStamp, float ServerMontageTrackPosition, FVector ServerLoc, FVector_NetQuantizeNormal ServerRotation, float ServerVelZ, UPrimitiveComponent* ServerBase, FName ServerBoneName, bool bHasBase, bool bBaseRelativePosition, uint8 ServerMovementMode)
	{
		CharacterMovementComponent_eventClientAdjustRootMotionPosition_Parms Parms;
		Parms.TimeStamp=TimeStamp;
		Parms.ServerMontageTrackPosition=ServerMontageTrackPosition;
		Parms.ServerLoc=ServerLoc;
		Parms.ServerRotation=ServerRotation;
		Parms.ServerVelZ=ServerVelZ;
		Parms.ServerBase=ServerBase;
		Parms.ServerBoneName=ServerBoneName;
		Parms.bHasBase=bHasBase ? true : false;
		Parms.bBaseRelativePosition=bBaseRelativePosition ? true : false;
		Parms.ServerMovementMode=ServerMovementMode;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientAdjustRootMotionPosition),&Parms);
	}
	void UCharacterMovementComponent::ClientAdjustRootMotionSourcePosition(float TimeStamp, FRootMotionSourceGroup ServerRootMotion, bool bHasAnimRootMotion, float ServerMontageTrackPosition, FVector ServerLoc, FVector_NetQuantizeNormal ServerRotation, float ServerVelZ, UPrimitiveComponent* ServerBase, FName ServerBoneName, bool bHasBase, bool bBaseRelativePosition, uint8 ServerMovementMode)
	{
		CharacterMovementComponent_eventClientAdjustRootMotionSourcePosition_Parms Parms;
		Parms.TimeStamp=TimeStamp;
		Parms.ServerRootMotion=ServerRootMotion;
		Parms.bHasAnimRootMotion=bHasAnimRootMotion ? true : false;
		Parms.ServerMontageTrackPosition=ServerMontageTrackPosition;
		Parms.ServerLoc=ServerLoc;
		Parms.ServerRotation=ServerRotation;
		Parms.ServerVelZ=ServerVelZ;
		Parms.ServerBase=ServerBase;
		Parms.ServerBoneName=ServerBoneName;
		Parms.bHasBase=bHasBase ? true : false;
		Parms.bBaseRelativePosition=bBaseRelativePosition ? true : false;
		Parms.ServerMovementMode=ServerMovementMode;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientAdjustRootMotionSourcePosition),&Parms);
	}
	void UCharacterMovementComponent::ClientVeryShortAdjustPosition(float TimeStamp, FVector NewLoc, UPrimitiveComponent* NewBase, FName NewBaseBoneName, bool bHasBase, bool bBaseRelativePosition, uint8 ServerMovementMode)
	{
		CharacterMovementComponent_eventClientVeryShortAdjustPosition_Parms Parms;
		Parms.TimeStamp=TimeStamp;
		Parms.NewLoc=NewLoc;
		Parms.NewBase=NewBase;
		Parms.NewBaseBoneName=NewBaseBoneName;
		Parms.bHasBase=bHasBase ? true : false;
		Parms.bBaseRelativePosition=bBaseRelativePosition ? true : false;
		Parms.ServerMovementMode=ServerMovementMode;
		ProcessEvent(FindFunctionChecked(ENGINE_ClientVeryShortAdjustPosition),&Parms);
	}
	void UCharacterMovementComponent::ServerMove(float TimeStamp, FVector_NetQuantize10 InAccel, FVector_NetQuantize100 ClientLoc, uint8 CompressedMoveFlags, uint8 ClientRoll, uint32 View, UPrimitiveComponent* ClientMovementBase, FName ClientBaseBoneName, uint8 ClientMovementMode)
	{
		CharacterMovementComponent_eventServerMove_Parms Parms;
		Parms.TimeStamp=TimeStamp;
		Parms.InAccel=InAccel;
		Parms.ClientLoc=ClientLoc;
		Parms.CompressedMoveFlags=CompressedMoveFlags;
		Parms.ClientRoll=ClientRoll;
		Parms.View=View;
		Parms.ClientMovementBase=ClientMovementBase;
		Parms.ClientBaseBoneName=ClientBaseBoneName;
		Parms.ClientMovementMode=ClientMovementMode;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerMove),&Parms);
	}
	void UCharacterMovementComponent::ServerMoveDual(float TimeStamp0, FVector_NetQuantize10 InAccel0, uint8 PendingFlags, uint32 View0, float TimeStamp, FVector_NetQuantize10 InAccel, FVector_NetQuantize100 ClientLoc, uint8 NewFlags, uint8 ClientRoll, uint32 View, UPrimitiveComponent* ClientMovementBase, FName ClientBaseBoneName, uint8 ClientMovementMode)
	{
		CharacterMovementComponent_eventServerMoveDual_Parms Parms;
		Parms.TimeStamp0=TimeStamp0;
		Parms.InAccel0=InAccel0;
		Parms.PendingFlags=PendingFlags;
		Parms.View0=View0;
		Parms.TimeStamp=TimeStamp;
		Parms.InAccel=InAccel;
		Parms.ClientLoc=ClientLoc;
		Parms.NewFlags=NewFlags;
		Parms.ClientRoll=ClientRoll;
		Parms.View=View;
		Parms.ClientMovementBase=ClientMovementBase;
		Parms.ClientBaseBoneName=ClientBaseBoneName;
		Parms.ClientMovementMode=ClientMovementMode;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerMoveDual),&Parms);
	}
	void UCharacterMovementComponent::ServerMoveDualHybridRootMotion(float TimeStamp0, FVector_NetQuantize10 InAccel0, uint8 PendingFlags, uint32 View0, float TimeStamp, FVector_NetQuantize10 InAccel, FVector_NetQuantize100 ClientLoc, uint8 NewFlags, uint8 ClientRoll, uint32 View, UPrimitiveComponent* ClientMovementBase, FName ClientBaseBoneName, uint8 ClientMovementMode)
	{
		CharacterMovementComponent_eventServerMoveDualHybridRootMotion_Parms Parms;
		Parms.TimeStamp0=TimeStamp0;
		Parms.InAccel0=InAccel0;
		Parms.PendingFlags=PendingFlags;
		Parms.View0=View0;
		Parms.TimeStamp=TimeStamp;
		Parms.InAccel=InAccel;
		Parms.ClientLoc=ClientLoc;
		Parms.NewFlags=NewFlags;
		Parms.ClientRoll=ClientRoll;
		Parms.View=View;
		Parms.ClientMovementBase=ClientMovementBase;
		Parms.ClientBaseBoneName=ClientBaseBoneName;
		Parms.ClientMovementMode=ClientMovementMode;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerMoveDualHybridRootMotion),&Parms);
	}
	void UCharacterMovementComponent::ServerMoveOld(float OldTimeStamp, FVector_NetQuantize10 OldAccel, uint8 OldMoveFlags)
	{
		CharacterMovementComponent_eventServerMoveOld_Parms Parms;
		Parms.OldTimeStamp=OldTimeStamp;
		Parms.OldAccel=OldAccel;
		Parms.OldMoveFlags=OldMoveFlags;
		ProcessEvent(FindFunctionChecked(ENGINE_ServerMoveOld),&Parms);
	}
	void UCharacterMovementComponent::StaticRegisterNativesUCharacterMovementComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "AddForce",(Native)&UCharacterMovementComponent::execAddForce);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "AddImpulse",(Native)&UCharacterMovementComponent::execAddImpulse);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "CalcVelocity",(Native)&UCharacterMovementComponent::execCalcVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "CapsuleTouched",(Native)&UCharacterMovementComponent::execCapsuleTouched);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "ClientAckGoodMove",(Native)&UCharacterMovementComponent::execClientAckGoodMove);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "ClientAdjustPosition",(Native)&UCharacterMovementComponent::execClientAdjustPosition);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "ClientAdjustRootMotionPosition",(Native)&UCharacterMovementComponent::execClientAdjustRootMotionPosition);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "ClientAdjustRootMotionSourcePosition",(Native)&UCharacterMovementComponent::execClientAdjustRootMotionSourcePosition);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "ClientVeryShortAdjustPosition",(Native)&UCharacterMovementComponent::execClientVeryShortAdjustPosition);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "DisableMovement",(Native)&UCharacterMovementComponent::execDisableMovement);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetAnalogInputModifier",(Native)&UCharacterMovementComponent::execGetAnalogInputModifier);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetCharacterOwner",(Native)&UCharacterMovementComponent::execGetCharacterOwner);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetCurrentAcceleration",(Native)&UCharacterMovementComponent::execGetCurrentAcceleration);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetImpartedMovementBaseVelocity",(Native)&UCharacterMovementComponent::execGetImpartedMovementBaseVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetMaxAcceleration",(Native)&UCharacterMovementComponent::execGetMaxAcceleration);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetMaxBrakingDeceleration",(Native)&UCharacterMovementComponent::execGetMaxBrakingDeceleration);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetMaxJumpHeight",(Native)&UCharacterMovementComponent::execGetMaxJumpHeight);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetMovementBase",(Native)&UCharacterMovementComponent::execGetMovementBase);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetPerchRadiusThreshold",(Native)&UCharacterMovementComponent::execGetPerchRadiusThreshold);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "GetValidPerchRadius",(Native)&UCharacterMovementComponent::execGetValidPerchRadius);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "IsWalkable",(Native)&UCharacterMovementComponent::execIsWalkable);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "IsWalking",(Native)&UCharacterMovementComponent::execIsWalking);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "K2_ComputeFloorDist",(Native)&UCharacterMovementComponent::execK2_ComputeFloorDist);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "K2_FindFloor",(Native)&UCharacterMovementComponent::execK2_FindFloor);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "K2_GetModifiedMaxAcceleration",(Native)&UCharacterMovementComponent::execK2_GetModifiedMaxAcceleration);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "K2_GetWalkableFloorAngle",(Native)&UCharacterMovementComponent::execK2_GetWalkableFloorAngle);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "K2_GetWalkableFloorZ",(Native)&UCharacterMovementComponent::execK2_GetWalkableFloorZ);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "ServerMove",(Native)&UCharacterMovementComponent::execServerMove);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "ServerMoveDual",(Native)&UCharacterMovementComponent::execServerMoveDual);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "ServerMoveDualHybridRootMotion",(Native)&UCharacterMovementComponent::execServerMoveDualHybridRootMotion);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "ServerMoveOld",(Native)&UCharacterMovementComponent::execServerMoveOld);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetAvoidanceEnabled",(Native)&UCharacterMovementComponent::execSetAvoidanceEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetAvoidanceGroup",(Native)&UCharacterMovementComponent::execSetAvoidanceGroup);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetAvoidanceGroupMask",(Native)&UCharacterMovementComponent::execSetAvoidanceGroupMask);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetGroupsToAvoid",(Native)&UCharacterMovementComponent::execSetGroupsToAvoid);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetGroupsToAvoidMask",(Native)&UCharacterMovementComponent::execSetGroupsToAvoidMask);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetGroupsToIgnore",(Native)&UCharacterMovementComponent::execSetGroupsToIgnore);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetGroupsToIgnoreMask",(Native)&UCharacterMovementComponent::execSetGroupsToIgnoreMask);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetMovementMode",(Native)&UCharacterMovementComponent::execSetMovementMode);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetWalkableFloorAngle",(Native)&UCharacterMovementComponent::execSetWalkableFloorAngle);
		FNativeFunctionRegistrar::RegisterFunction(UCharacterMovementComponent::StaticClass(), "SetWalkableFloorZ",(Native)&UCharacterMovementComponent::execSetWalkableFloorZ);
	}
	IMPLEMENT_CLASS(UCharacterMovementComponent, 784372367);
	void UFloatingPawnMovement::StaticRegisterNativesUFloatingPawnMovement()
	{
	}
	IMPLEMENT_CLASS(UFloatingPawnMovement, 3311754312);
	void USpectatorPawnMovement::StaticRegisterNativesUSpectatorPawnMovement()
	{
	}
	IMPLEMENT_CLASS(USpectatorPawnMovement, 3411131427);
	void UProjectileMovementComponent::StaticRegisterNativesUProjectileMovementComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UProjectileMovementComponent::StaticClass(), "LimitVelocity",(Native)&UProjectileMovementComponent::execLimitVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UProjectileMovementComponent::StaticClass(), "SetVelocityInLocalSpace",(Native)&UProjectileMovementComponent::execSetVelocityInLocalSpace);
		FNativeFunctionRegistrar::RegisterFunction(UProjectileMovementComponent::StaticClass(), "StopSimulating",(Native)&UProjectileMovementComponent::execStopSimulating);
	}
	IMPLEMENT_CLASS(UProjectileMovementComponent, 2161485273);
	void URotatingMovementComponent::StaticRegisterNativesURotatingMovementComponent()
	{
	}
	IMPLEMENT_CLASS(URotatingMovementComponent, 3262244919);
	void UNavigationInvokerComponent::StaticRegisterNativesUNavigationInvokerComponent()
	{
	}
	IMPLEMENT_CLASS(UNavigationInvokerComponent, 2077839703);
	void UNavRelevantComponent::StaticRegisterNativesUNavRelevantComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UNavRelevantComponent::StaticClass(), "SetNavigationRelevancy",(Native)&UNavRelevantComponent::execSetNavigationRelevancy);
	}
	IMPLEMENT_CLASS(UNavRelevantComponent, 1439317737);
	void UNavLinkCustomInterface::StaticRegisterNativesUNavLinkCustomInterface()
	{
	}
	IMPLEMENT_CLASS(UNavLinkCustomInterface, 742585851);
	void UNavLinkCustomComponent::StaticRegisterNativesUNavLinkCustomComponent()
	{
	}
	IMPLEMENT_CLASS(UNavLinkCustomComponent, 925935351);
	void UNavModifierComponent::StaticRegisterNativesUNavModifierComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UNavModifierComponent::StaticClass(), "SetAreaClass",(Native)&UNavModifierComponent::execSetAreaClass);
	}
	IMPLEMENT_CLASS(UNavModifierComponent, 468975017);
	void UPawnNoiseEmitterComponent::StaticRegisterNativesUPawnNoiseEmitterComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPawnNoiseEmitterComponent::StaticClass(), "MakeNoise",(Native)&UPawnNoiseEmitterComponent::execMakeNoise);
	}
	IMPLEMENT_CLASS(UPawnNoiseEmitterComponent, 1272637210);
static class UEnum* ELinearConstraintMotion_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELinearConstraintMotion();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELinearConstraintMotion, Z_Construct_UPackage__Script_Engine(), TEXT("ELinearConstraintMotion"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELinearConstraintMotion(ELinearConstraintMotion_StaticEnum, TEXT("/Script/Engine"), TEXT("ELinearConstraintMotion"), false, nullptr, nullptr);
class UScriptStruct* FTwistConstraint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTwistConstraint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTwistConstraint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTwistConstraint, Z_Construct_UPackage__Script_Engine(), TEXT("TwistConstraint"), sizeof(FTwistConstraint), Get_Z_Construct_UScriptStruct_FTwistConstraint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTwistConstraint(FTwistConstraint::StaticStruct, TEXT("/Script/Engine"), TEXT("TwistConstraint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTwistConstraint
{
	FScriptStruct_Engine_StaticRegisterNativesFTwistConstraint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TwistConstraint")),new UScriptStruct::TCppStructOps<FTwistConstraint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTwistConstraint;
class UScriptStruct* FConeConstraint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConeConstraint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FConeConstraint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FConeConstraint, Z_Construct_UPackage__Script_Engine(), TEXT("ConeConstraint"), sizeof(FConeConstraint), Get_Z_Construct_UScriptStruct_FConeConstraint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FConeConstraint(FConeConstraint::StaticStruct, TEXT("/Script/Engine"), TEXT("ConeConstraint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFConeConstraint
{
	FScriptStruct_Engine_StaticRegisterNativesFConeConstraint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ConeConstraint")),new UScriptStruct::TCppStructOps<FConeConstraint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFConeConstraint;
class UScriptStruct* FLinearConstraint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearConstraint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLinearConstraint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLinearConstraint, Z_Construct_UPackage__Script_Engine(), TEXT("LinearConstraint"), sizeof(FLinearConstraint), Get_Z_Construct_UScriptStruct_FLinearConstraint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLinearConstraint(FLinearConstraint::StaticStruct, TEXT("/Script/Engine"), TEXT("LinearConstraint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLinearConstraint
{
	FScriptStruct_Engine_StaticRegisterNativesFLinearConstraint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LinearConstraint")),new UScriptStruct::TCppStructOps<FLinearConstraint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLinearConstraint;
class UScriptStruct* FConstraintBaseParams::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstraintBaseParams();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FConstraintBaseParams_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FConstraintBaseParams, Z_Construct_UPackage__Script_Engine(), TEXT("ConstraintBaseParams"), sizeof(FConstraintBaseParams), Get_Z_Construct_UScriptStruct_FConstraintBaseParams_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FConstraintBaseParams(FConstraintBaseParams::StaticStruct, TEXT("/Script/Engine"), TEXT("ConstraintBaseParams"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFConstraintBaseParams
{
	FScriptStruct_Engine_StaticRegisterNativesFConstraintBaseParams()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ConstraintBaseParams")),new UScriptStruct::TCppStructOps<FConstraintBaseParams>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFConstraintBaseParams;
static class UEnum* EAngularDriveMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAngularDriveMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAngularDriveMode, Z_Construct_UPackage__Script_Engine(), TEXT("EAngularDriveMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAngularDriveMode(EAngularDriveMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EAngularDriveMode"), false, nullptr, nullptr);
class UScriptStruct* FAngularDriveConstraint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAngularDriveConstraint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAngularDriveConstraint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAngularDriveConstraint, Z_Construct_UPackage__Script_Engine(), TEXT("AngularDriveConstraint"), sizeof(FAngularDriveConstraint), Get_Z_Construct_UScriptStruct_FAngularDriveConstraint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAngularDriveConstraint(FAngularDriveConstraint::StaticStruct, TEXT("/Script/Engine"), TEXT("AngularDriveConstraint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAngularDriveConstraint
{
	FScriptStruct_Engine_StaticRegisterNativesFAngularDriveConstraint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AngularDriveConstraint")),new UScriptStruct::TCppStructOps<FAngularDriveConstraint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAngularDriveConstraint;
class UScriptStruct* FLinearDriveConstraint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearDriveConstraint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLinearDriveConstraint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLinearDriveConstraint, Z_Construct_UPackage__Script_Engine(), TEXT("LinearDriveConstraint"), sizeof(FLinearDriveConstraint), Get_Z_Construct_UScriptStruct_FLinearDriveConstraint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLinearDriveConstraint(FLinearDriveConstraint::StaticStruct, TEXT("/Script/Engine"), TEXT("LinearDriveConstraint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLinearDriveConstraint
{
	FScriptStruct_Engine_StaticRegisterNativesFLinearDriveConstraint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LinearDriveConstraint")),new UScriptStruct::TCppStructOps<FLinearDriveConstraint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLinearDriveConstraint;
class UScriptStruct* FConstraintDrive::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstraintDrive();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FConstraintDrive_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FConstraintDrive, Z_Construct_UPackage__Script_Engine(), TEXT("ConstraintDrive"), sizeof(FConstraintDrive), Get_Z_Construct_UScriptStruct_FConstraintDrive_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FConstraintDrive(FConstraintDrive::StaticStruct, TEXT("/Script/Engine"), TEXT("ConstraintDrive"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFConstraintDrive
{
	FScriptStruct_Engine_StaticRegisterNativesFConstraintDrive()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ConstraintDrive")),new UScriptStruct::TCppStructOps<FConstraintDrive>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFConstraintDrive;
class UScriptStruct* FConstraintInstance::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstraintInstance();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FConstraintInstance_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FConstraintInstance, Z_Construct_UPackage__Script_Engine(), TEXT("ConstraintInstance"), sizeof(FConstraintInstance), Get_Z_Construct_UScriptStruct_FConstraintInstance_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FConstraintInstance(FConstraintInstance::StaticStruct, TEXT("/Script/Engine"), TEXT("ConstraintInstance"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFConstraintInstance
{
	FScriptStruct_Engine_StaticRegisterNativesFConstraintInstance()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ConstraintInstance")),new UScriptStruct::TCppStructOps<FConstraintInstance>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFConstraintInstance;
class UScriptStruct* FConstraintProfileProperties::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstraintProfileProperties();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FConstraintProfileProperties_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FConstraintProfileProperties, Z_Construct_UPackage__Script_Engine(), TEXT("ConstraintProfileProperties"), sizeof(FConstraintProfileProperties), Get_Z_Construct_UScriptStruct_FConstraintProfileProperties_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FConstraintProfileProperties(FConstraintProfileProperties::StaticStruct, TEXT("/Script/Engine"), TEXT("ConstraintProfileProperties"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFConstraintProfileProperties
{
	FScriptStruct_Engine_StaticRegisterNativesFConstraintProfileProperties()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ConstraintProfileProperties")),new UScriptStruct::TCppStructOps<FConstraintProfileProperties>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFConstraintProfileProperties;
class UScriptStruct* FPhysicalAnimationData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPhysicalAnimationData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPhysicalAnimationData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPhysicalAnimationData, Z_Construct_UPackage__Script_Engine(), TEXT("PhysicalAnimationData"), sizeof(FPhysicalAnimationData), Get_Z_Construct_UScriptStruct_FPhysicalAnimationData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPhysicalAnimationData(FPhysicalAnimationData::StaticStruct, TEXT("/Script/Engine"), TEXT("PhysicalAnimationData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPhysicalAnimationData
{
	FScriptStruct_Engine_StaticRegisterNativesFPhysicalAnimationData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PhysicalAnimationData")),new UScriptStruct::TCppStructOps<FPhysicalAnimationData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPhysicalAnimationData;
	void UPhysicalAnimationComponent::StaticRegisterNativesUPhysicalAnimationComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPhysicalAnimationComponent::StaticClass(), "ApplyPhysicalAnimationProfileBelow",(Native)&UPhysicalAnimationComponent::execApplyPhysicalAnimationProfileBelow);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicalAnimationComponent::StaticClass(), "ApplyPhysicalAnimationSettings",(Native)&UPhysicalAnimationComponent::execApplyPhysicalAnimationSettings);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicalAnimationComponent::StaticClass(), "ApplyPhysicalAnimationSettingsBelow",(Native)&UPhysicalAnimationComponent::execApplyPhysicalAnimationSettingsBelow);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicalAnimationComponent::StaticClass(), "SetSkeletalMeshComponent",(Native)&UPhysicalAnimationComponent::execSetSkeletalMeshComponent);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicalAnimationComponent::StaticClass(), "SetStrengthMultiplyer",(Native)&UPhysicalAnimationComponent::execSetStrengthMultiplyer);
	}
	IMPLEMENT_CLASS(UPhysicalAnimationComponent, 1168364343);
	void UPhysicsHandleComponent::StaticRegisterNativesUPhysicsHandleComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "GetGrabbedComponent",(Native)&UPhysicsHandleComponent::execGetGrabbedComponent);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "GetTargetLocationAndRotation",(Native)&UPhysicsHandleComponent::execGetTargetLocationAndRotation);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "GrabComponent",(Native)&UPhysicsHandleComponent::execGrabComponent);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "GrabComponentAtLocation",(Native)&UPhysicsHandleComponent::execGrabComponentAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "GrabComponentAtLocationWithRotation",(Native)&UPhysicsHandleComponent::execGrabComponentAtLocationWithRotation);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "ReleaseComponent",(Native)&UPhysicsHandleComponent::execReleaseComponent);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "SetAngularDamping",(Native)&UPhysicsHandleComponent::execSetAngularDamping);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "SetAngularStiffness",(Native)&UPhysicsHandleComponent::execSetAngularStiffness);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "SetInterpolationSpeed",(Native)&UPhysicsHandleComponent::execSetInterpolationSpeed);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "SetLinearDamping",(Native)&UPhysicsHandleComponent::execSetLinearDamping);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "SetLinearStiffness",(Native)&UPhysicsHandleComponent::execSetLinearStiffness);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "SetTargetLocation",(Native)&UPhysicsHandleComponent::execSetTargetLocation);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "SetTargetLocationAndRotation",(Native)&UPhysicsHandleComponent::execSetTargetLocationAndRotation);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsHandleComponent::StaticClass(), "SetTargetRotation",(Native)&UPhysicsHandleComponent::execSetTargetRotation);
	}
	IMPLEMENT_CLASS(UPhysicsHandleComponent, 3655583273);
	void UPlatformEventsComponent::StaticRegisterNativesUPlatformEventsComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPlatformEventsComponent::StaticClass(), "IsInLaptopMode",(Native)&UPlatformEventsComponent::execIsInLaptopMode);
		FNativeFunctionRegistrar::RegisterFunction(UPlatformEventsComponent::StaticClass(), "IsInTabletMode",(Native)&UPlatformEventsComponent::execIsInTabletMode);
		FNativeFunctionRegistrar::RegisterFunction(UPlatformEventsComponent::StaticClass(), "SupportsConvertibleLaptops",(Native)&UPlatformEventsComponent::execSupportsConvertibleLaptops);
	}
	IMPLEMENT_CLASS(UPlatformEventsComponent, 340769536);
class UScriptStruct* FAtmospherePrecomputeParameters::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAtmospherePrecomputeParameters();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAtmospherePrecomputeParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAtmospherePrecomputeParameters, Z_Construct_UPackage__Script_Engine(), TEXT("AtmospherePrecomputeParameters"), sizeof(FAtmospherePrecomputeParameters), Get_Z_Construct_UScriptStruct_FAtmospherePrecomputeParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAtmospherePrecomputeParameters(FAtmospherePrecomputeParameters::StaticStruct, TEXT("/Script/Engine"), TEXT("AtmospherePrecomputeParameters"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAtmospherePrecomputeParameters
{
	FScriptStruct_Engine_StaticRegisterNativesFAtmospherePrecomputeParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AtmospherePrecomputeParameters")),new UScriptStruct::TCppStructOps<FAtmospherePrecomputeParameters>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAtmospherePrecomputeParameters;
	void UAtmosphericFogComponent::StaticRegisterNativesUAtmosphericFogComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "DisableGroundScattering",(Native)&UAtmosphericFogComponent::execDisableGroundScattering);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "DisableSunDisk",(Native)&UAtmosphericFogComponent::execDisableSunDisk);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetAltitudeScale",(Native)&UAtmosphericFogComponent::execSetAltitudeScale);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetDefaultBrightness",(Native)&UAtmosphericFogComponent::execSetDefaultBrightness);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetDefaultLightColor",(Native)&UAtmosphericFogComponent::execSetDefaultLightColor);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetDensityMultiplier",(Native)&UAtmosphericFogComponent::execSetDensityMultiplier);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetDensityOffset",(Native)&UAtmosphericFogComponent::execSetDensityOffset);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetDistanceOffset",(Native)&UAtmosphericFogComponent::execSetDistanceOffset);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetDistanceScale",(Native)&UAtmosphericFogComponent::execSetDistanceScale);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetFogMultiplier",(Native)&UAtmosphericFogComponent::execSetFogMultiplier);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetPrecomputeParams",(Native)&UAtmosphericFogComponent::execSetPrecomputeParams);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetStartDistance",(Native)&UAtmosphericFogComponent::execSetStartDistance);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "SetSunMultiplier",(Native)&UAtmosphericFogComponent::execSetSunMultiplier);
		FNativeFunctionRegistrar::RegisterFunction(UAtmosphericFogComponent::StaticClass(), "StartPrecompute",(Native)&UAtmosphericFogComponent::execStartPrecompute);
	}
	IMPLEMENT_CLASS(UAtmosphericFogComponent, 3563469402);
static class UEnum* EAttenuationShape_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttenuationShape();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAttenuationShape, Z_Construct_UPackage__Script_Engine(), TEXT("EAttenuationShape"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAttenuationShape(EAttenuationShape_StaticEnum, TEXT("/Script/Engine"), TEXT("EAttenuationShape"), false, nullptr, nullptr);
static class UEnum* EAttenuationDistanceModel_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttenuationDistanceModel();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAttenuationDistanceModel, Z_Construct_UPackage__Script_Engine(), TEXT("EAttenuationDistanceModel"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAttenuationDistanceModel(EAttenuationDistanceModel_StaticEnum, TEXT("/Script/Engine"), TEXT("EAttenuationDistanceModel"), false, nullptr, nullptr);
class UScriptStruct* FBaseAttenuationSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBaseAttenuationSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBaseAttenuationSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBaseAttenuationSettings, Z_Construct_UPackage__Script_Engine(), TEXT("BaseAttenuationSettings"), sizeof(FBaseAttenuationSettings), Get_Z_Construct_UScriptStruct_FBaseAttenuationSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBaseAttenuationSettings(FBaseAttenuationSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("BaseAttenuationSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBaseAttenuationSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFBaseAttenuationSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BaseAttenuationSettings")),new UScriptStruct::TCppStructOps<FBaseAttenuationSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBaseAttenuationSettings;
static class UEnum* ESoundSpatializationAlgorithm_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESoundSpatializationAlgorithm();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESoundSpatializationAlgorithm, Z_Construct_UPackage__Script_Engine(), TEXT("ESoundSpatializationAlgorithm"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESoundSpatializationAlgorithm(ESoundSpatializationAlgorithm_StaticEnum, TEXT("/Script/Engine"), TEXT("ESoundSpatializationAlgorithm"), false, nullptr, nullptr);
static class UEnum* ESoundDistanceCalc_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESoundDistanceCalc();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESoundDistanceCalc, Z_Construct_UPackage__Script_Engine(), TEXT("ESoundDistanceCalc"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESoundDistanceCalc(ESoundDistanceCalc_StaticEnum, TEXT("/Script/Engine"), TEXT("ESoundDistanceCalc"), false, nullptr, nullptr);
class UScriptStruct* FSoundAttenuationSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundAttenuationSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSoundAttenuationSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundAttenuationSettings, Z_Construct_UPackage__Script_Engine(), TEXT("SoundAttenuationSettings"), sizeof(FSoundAttenuationSettings), Get_Z_Construct_UScriptStruct_FSoundAttenuationSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundAttenuationSettings(FSoundAttenuationSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("SoundAttenuationSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSoundAttenuationSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFSoundAttenuationSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundAttenuationSettings")),new UScriptStruct::TCppStructOps<FSoundAttenuationSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSoundAttenuationSettings;
	void USoundAttenuation::StaticRegisterNativesUSoundAttenuation()
	{
	}
	IMPLEMENT_CLASS(USoundAttenuation, 1445890305);
class UScriptStruct* FAudioComponentParam::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAudioComponentParam();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAudioComponentParam_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAudioComponentParam, Z_Construct_UPackage__Script_Engine(), TEXT("AudioComponentParam"), sizeof(FAudioComponentParam), Get_Z_Construct_UScriptStruct_FAudioComponentParam_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAudioComponentParam(FAudioComponentParam::StaticStruct, TEXT("/Script/Engine"), TEXT("AudioComponentParam"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAudioComponentParam
{
	FScriptStruct_Engine_StaticRegisterNativesFAudioComponentParam()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AudioComponentParam")),new UScriptStruct::TCppStructOps<FAudioComponentParam>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAudioComponentParam;
	void UAudioComponent::StaticRegisterNativesUAudioComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "AdjustAttenuation",(Native)&UAudioComponent::execAdjustAttenuation);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "AdjustVolume",(Native)&UAudioComponent::execAdjustVolume);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "BP_GetAttenuationSettingsToApply",(Native)&UAudioComponent::execBP_GetAttenuationSettingsToApply);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "FadeIn",(Native)&UAudioComponent::execFadeIn);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "FadeOut",(Native)&UAudioComponent::execFadeOut);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "IsPlaying",(Native)&UAudioComponent::execIsPlaying);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "Play",(Native)&UAudioComponent::execPlay);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "SetBoolParameter",(Native)&UAudioComponent::execSetBoolParameter);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "SetFloatParameter",(Native)&UAudioComponent::execSetFloatParameter);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "SetIntParameter",(Native)&UAudioComponent::execSetIntParameter);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "SetPaused",(Native)&UAudioComponent::execSetPaused);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "SetPitchMultiplier",(Native)&UAudioComponent::execSetPitchMultiplier);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "SetSound",(Native)&UAudioComponent::execSetSound);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "SetUISound",(Native)&UAudioComponent::execSetUISound);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "SetVolumeMultiplier",(Native)&UAudioComponent::execSetVolumeMultiplier);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "SetWaveParameter",(Native)&UAudioComponent::execSetWaveParameter);
		FNativeFunctionRegistrar::RegisterFunction(UAudioComponent::StaticClass(), "Stop",(Native)&UAudioComponent::execStop);
	}
	IMPLEMENT_CLASS(UAudioComponent, 2331915099);
	void UCameraComponent::StaticRegisterNativesUCameraComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "AddOrUpdateBlendable",(Native)&UCameraComponent::execAddOrUpdateBlendable);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "GetCameraView",(Native)&UCameraComponent::execGetCameraView);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "SetAspectRatio",(Native)&UCameraComponent::execSetAspectRatio);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "SetConstraintAspectRatio",(Native)&UCameraComponent::execSetConstraintAspectRatio);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "SetFieldOfView",(Native)&UCameraComponent::execSetFieldOfView);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "SetOrthoFarClipPlane",(Native)&UCameraComponent::execSetOrthoFarClipPlane);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "SetOrthoNearClipPlane",(Native)&UCameraComponent::execSetOrthoNearClipPlane);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "SetOrthoWidth",(Native)&UCameraComponent::execSetOrthoWidth);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "SetPostProcessBlendWeight",(Native)&UCameraComponent::execSetPostProcessBlendWeight);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "SetProjectionMode",(Native)&UCameraComponent::execSetProjectionMode);
		FNativeFunctionRegistrar::RegisterFunction(UCameraComponent::StaticClass(), "SetUseFieldOfViewForLOD",(Native)&UCameraComponent::execSetUseFieldOfViewForLOD);
	}
	IMPLEMENT_CLASS(UCameraComponent, 1785393329);
	void UDecalComponent::StaticRegisterNativesUDecalComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDecalComponent::StaticClass(), "CreateDynamicMaterialInstance",(Native)&UDecalComponent::execCreateDynamicMaterialInstance);
		FNativeFunctionRegistrar::RegisterFunction(UDecalComponent::StaticClass(), "GetDecalMaterial",(Native)&UDecalComponent::execGetDecalMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UDecalComponent::StaticClass(), "GetFadeDuration",(Native)&UDecalComponent::execGetFadeDuration);
		FNativeFunctionRegistrar::RegisterFunction(UDecalComponent::StaticClass(), "GetFadeStartDelay",(Native)&UDecalComponent::execGetFadeStartDelay);
		FNativeFunctionRegistrar::RegisterFunction(UDecalComponent::StaticClass(), "SetDecalMaterial",(Native)&UDecalComponent::execSetDecalMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UDecalComponent::StaticClass(), "SetFadeOut",(Native)&UDecalComponent::execSetFadeOut);
		FNativeFunctionRegistrar::RegisterFunction(UDecalComponent::StaticClass(), "SetSortOrder",(Native)&UDecalComponent::execSetSortOrder);
	}
	IMPLEMENT_CLASS(UDecalComponent, 2711002237);
	void UExponentialHeightFogComponent::StaticRegisterNativesUExponentialHeightFogComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetDirectionalInscatteringColor",(Native)&UExponentialHeightFogComponent::execSetDirectionalInscatteringColor);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetDirectionalInscatteringExponent",(Native)&UExponentialHeightFogComponent::execSetDirectionalInscatteringExponent);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetDirectionalInscatteringStartDistance",(Native)&UExponentialHeightFogComponent::execSetDirectionalInscatteringStartDistance);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetFogCutoffDistance",(Native)&UExponentialHeightFogComponent::execSetFogCutoffDistance);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetFogDensity",(Native)&UExponentialHeightFogComponent::execSetFogDensity);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetFogHeightFalloff",(Native)&UExponentialHeightFogComponent::execSetFogHeightFalloff);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetFogInscatteringColor",(Native)&UExponentialHeightFogComponent::execSetFogInscatteringColor);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetFogMaxOpacity",(Native)&UExponentialHeightFogComponent::execSetFogMaxOpacity);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetFullyDirectionalInscatteringColorDistance",(Native)&UExponentialHeightFogComponent::execSetFullyDirectionalInscatteringColorDistance);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetInscatteringColorCubemap",(Native)&UExponentialHeightFogComponent::execSetInscatteringColorCubemap);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetInscatteringTextureTint",(Native)&UExponentialHeightFogComponent::execSetInscatteringTextureTint);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetNonDirectionalInscatteringColorDistance",(Native)&UExponentialHeightFogComponent::execSetNonDirectionalInscatteringColorDistance);
		FNativeFunctionRegistrar::RegisterFunction(UExponentialHeightFogComponent::StaticClass(), "SetStartDistance",(Native)&UExponentialHeightFogComponent::execSetStartDistance);
	}
	IMPLEMENT_CLASS(UExponentialHeightFogComponent, 2069640877);
class UScriptStruct* FForceFeedbackAttenuationSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FForceFeedbackAttenuationSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FForceFeedbackAttenuationSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FForceFeedbackAttenuationSettings, Z_Construct_UPackage__Script_Engine(), TEXT("ForceFeedbackAttenuationSettings"), sizeof(FForceFeedbackAttenuationSettings), Get_Z_Construct_UScriptStruct_FForceFeedbackAttenuationSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FForceFeedbackAttenuationSettings(FForceFeedbackAttenuationSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("ForceFeedbackAttenuationSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFForceFeedbackAttenuationSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFForceFeedbackAttenuationSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ForceFeedbackAttenuationSettings")),new UScriptStruct::TCppStructOps<FForceFeedbackAttenuationSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFForceFeedbackAttenuationSettings;
	void UForceFeedbackAttenuation::StaticRegisterNativesUForceFeedbackAttenuation()
	{
	}
	IMPLEMENT_CLASS(UForceFeedbackAttenuation, 4024395032);
	void UForceFeedbackComponent::StaticRegisterNativesUForceFeedbackComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UForceFeedbackComponent::StaticClass(), "AdjustAttenuation",(Native)&UForceFeedbackComponent::execAdjustAttenuation);
		FNativeFunctionRegistrar::RegisterFunction(UForceFeedbackComponent::StaticClass(), "BP_GetAttenuationSettingsToApply",(Native)&UForceFeedbackComponent::execBP_GetAttenuationSettingsToApply);
		FNativeFunctionRegistrar::RegisterFunction(UForceFeedbackComponent::StaticClass(), "Play",(Native)&UForceFeedbackComponent::execPlay);
		FNativeFunctionRegistrar::RegisterFunction(UForceFeedbackComponent::StaticClass(), "SetForceFeedbackEffect",(Native)&UForceFeedbackComponent::execSetForceFeedbackEffect);
		FNativeFunctionRegistrar::RegisterFunction(UForceFeedbackComponent::StaticClass(), "SetIntensityMultiplier",(Native)&UForceFeedbackComponent::execSetIntensityMultiplier);
		FNativeFunctionRegistrar::RegisterFunction(UForceFeedbackComponent::StaticClass(), "Stop",(Native)&UForceFeedbackComponent::execStop);
	}
	IMPLEMENT_CLASS(UForceFeedbackComponent, 463333625);
	void ULightComponentBase::StaticRegisterNativesULightComponentBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(ULightComponentBase::StaticClass(), "GetLightColor",(Native)&ULightComponentBase::execGetLightColor);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponentBase::StaticClass(), "SetCastShadows",(Native)&ULightComponentBase::execSetCastShadows);
	}
	IMPLEMENT_CLASS(ULightComponentBase, 1159058070);
	void ULightComponent::StaticRegisterNativesULightComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetAffectDynamicIndirectLighting",(Native)&ULightComponent::execSetAffectDynamicIndirectLighting);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetAffectTranslucentLighting",(Native)&ULightComponent::execSetAffectTranslucentLighting);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetBloomScale",(Native)&ULightComponent::execSetBloomScale);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetBloomThreshold",(Native)&ULightComponent::execSetBloomThreshold);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetBloomTint",(Native)&ULightComponent::execSetBloomTint);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetEnableLightShaftBloom",(Native)&ULightComponent::execSetEnableLightShaftBloom);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetIESTexture",(Native)&ULightComponent::execSetIESTexture);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetIndirectLightingIntensity",(Native)&ULightComponent::execSetIndirectLightingIntensity);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetIntensity",(Native)&ULightComponent::execSetIntensity);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetLightColor",(Native)&ULightComponent::execSetLightColor);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetLightFunctionDisabledBrightness",(Native)&ULightComponent::execSetLightFunctionDisabledBrightness);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetLightFunctionFadeDistance",(Native)&ULightComponent::execSetLightFunctionFadeDistance);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetLightFunctionMaterial",(Native)&ULightComponent::execSetLightFunctionMaterial);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetLightFunctionScale",(Native)&ULightComponent::execSetLightFunctionScale);
		FNativeFunctionRegistrar::RegisterFunction(ULightComponent::StaticClass(), "SetTemperature",(Native)&ULightComponent::execSetTemperature);
	}
	IMPLEMENT_CLASS(ULightComponent, 145238701);
	void UDirectionalLightComponent::StaticRegisterNativesUDirectionalLightComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDirectionalLightComponent::StaticClass(), "SetCascadeDistributionExponent",(Native)&UDirectionalLightComponent::execSetCascadeDistributionExponent);
		FNativeFunctionRegistrar::RegisterFunction(UDirectionalLightComponent::StaticClass(), "SetCascadeTransitionFraction",(Native)&UDirectionalLightComponent::execSetCascadeTransitionFraction);
		FNativeFunctionRegistrar::RegisterFunction(UDirectionalLightComponent::StaticClass(), "SetDynamicShadowCascades",(Native)&UDirectionalLightComponent::execSetDynamicShadowCascades);
		FNativeFunctionRegistrar::RegisterFunction(UDirectionalLightComponent::StaticClass(), "SetDynamicShadowDistanceMovableLight",(Native)&UDirectionalLightComponent::execSetDynamicShadowDistanceMovableLight);
		FNativeFunctionRegistrar::RegisterFunction(UDirectionalLightComponent::StaticClass(), "SetDynamicShadowDistanceStationaryLight",(Native)&UDirectionalLightComponent::execSetDynamicShadowDistanceStationaryLight);
		FNativeFunctionRegistrar::RegisterFunction(UDirectionalLightComponent::StaticClass(), "SetEnableLightShaftOcclusion",(Native)&UDirectionalLightComponent::execSetEnableLightShaftOcclusion);
		FNativeFunctionRegistrar::RegisterFunction(UDirectionalLightComponent::StaticClass(), "SetLightShaftOverrideDirection",(Native)&UDirectionalLightComponent::execSetLightShaftOverrideDirection);
		FNativeFunctionRegistrar::RegisterFunction(UDirectionalLightComponent::StaticClass(), "SetOcclusionMaskDarkness",(Native)&UDirectionalLightComponent::execSetOcclusionMaskDarkness);
		FNativeFunctionRegistrar::RegisterFunction(UDirectionalLightComponent::StaticClass(), "SetShadowDistanceFadeoutFraction",(Native)&UDirectionalLightComponent::execSetShadowDistanceFadeoutFraction);
	}
	IMPLEMENT_CLASS(UDirectionalLightComponent, 4250764355);
	void UPointLightComponent::StaticRegisterNativesUPointLightComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPointLightComponent::StaticClass(), "SetAttenuationRadius",(Native)&UPointLightComponent::execSetAttenuationRadius);
		FNativeFunctionRegistrar::RegisterFunction(UPointLightComponent::StaticClass(), "SetLightFalloffExponent",(Native)&UPointLightComponent::execSetLightFalloffExponent);
		FNativeFunctionRegistrar::RegisterFunction(UPointLightComponent::StaticClass(), "SetSourceLength",(Native)&UPointLightComponent::execSetSourceLength);
		FNativeFunctionRegistrar::RegisterFunction(UPointLightComponent::StaticClass(), "SetSourceRadius",(Native)&UPointLightComponent::execSetSourceRadius);
	}
	IMPLEMENT_CLASS(UPointLightComponent, 1330236731);
	void USpotLightComponent::StaticRegisterNativesUSpotLightComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USpotLightComponent::StaticClass(), "SetInnerConeAngle",(Native)&USpotLightComponent::execSetInnerConeAngle);
		FNativeFunctionRegistrar::RegisterFunction(USpotLightComponent::StaticClass(), "SetOuterConeAngle",(Native)&USpotLightComponent::execSetOuterConeAngle);
	}
	IMPLEMENT_CLASS(USpotLightComponent, 1334260298);
static class UEnum* ESkyLightSourceType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESkyLightSourceType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESkyLightSourceType, Z_Construct_UPackage__Script_Engine(), TEXT("ESkyLightSourceType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESkyLightSourceType(ESkyLightSourceType_StaticEnum, TEXT("/Script/Engine"), TEXT("ESkyLightSourceType"), false, nullptr, nullptr);
	void USkyLightComponent::StaticRegisterNativesUSkyLightComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USkyLightComponent::StaticClass(), "RecaptureSky",(Native)&USkyLightComponent::execRecaptureSky);
		FNativeFunctionRegistrar::RegisterFunction(USkyLightComponent::StaticClass(), "SetCubemap",(Native)&USkyLightComponent::execSetCubemap);
		FNativeFunctionRegistrar::RegisterFunction(USkyLightComponent::StaticClass(), "SetCubemapBlend",(Native)&USkyLightComponent::execSetCubemapBlend);
		FNativeFunctionRegistrar::RegisterFunction(USkyLightComponent::StaticClass(), "SetIndirectLightingIntensity",(Native)&USkyLightComponent::execSetIndirectLightingIntensity);
		FNativeFunctionRegistrar::RegisterFunction(USkyLightComponent::StaticClass(), "SetIntensity",(Native)&USkyLightComponent::execSetIntensity);
		FNativeFunctionRegistrar::RegisterFunction(USkyLightComponent::StaticClass(), "SetLightColor",(Native)&USkyLightComponent::execSetLightColor);
		FNativeFunctionRegistrar::RegisterFunction(USkyLightComponent::StaticClass(), "SetMinOcclusion",(Native)&USkyLightComponent::execSetMinOcclusion);
		FNativeFunctionRegistrar::RegisterFunction(USkyLightComponent::StaticClass(), "SetOcclusionTint",(Native)&USkyLightComponent::execSetOcclusionTint);
	}
	IMPLEMENT_CLASS(USkyLightComponent, 1101633460);
	void ULightmassPortalComponent::StaticRegisterNativesULightmassPortalComponent()
	{
	}
	IMPLEMENT_CLASS(ULightmassPortalComponent, 1228156150);
	void UNavigationGraphNodeComponent::StaticRegisterNativesUNavigationGraphNodeComponent()
	{
	}
	IMPLEMENT_CLASS(UNavigationGraphNodeComponent, 4113633977);
	void UPhysicsConstraintComponent::StaticRegisterNativesUPhysicsConstraintComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "BreakConstraint",(Native)&UPhysicsConstraintComponent::execBreakConstraint);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "GetConstraintForce",(Native)&UPhysicsConstraintComponent::execGetConstraintForce);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "GetCurrentSwing1",(Native)&UPhysicsConstraintComponent::execGetCurrentSwing1);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "GetCurrentSwing2",(Native)&UPhysicsConstraintComponent::execGetCurrentSwing2);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "GetCurrentTwist",(Native)&UPhysicsConstraintComponent::execGetCurrentTwist);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularDriveMode",(Native)&UPhysicsConstraintComponent::execSetAngularDriveMode);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularDriveParams",(Native)&UPhysicsConstraintComponent::execSetAngularDriveParams);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularOrientationDrive",(Native)&UPhysicsConstraintComponent::execSetAngularOrientationDrive);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularOrientationTarget",(Native)&UPhysicsConstraintComponent::execSetAngularOrientationTarget);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularSwing1Limit",(Native)&UPhysicsConstraintComponent::execSetAngularSwing1Limit);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularSwing2Limit",(Native)&UPhysicsConstraintComponent::execSetAngularSwing2Limit);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularTwistLimit",(Native)&UPhysicsConstraintComponent::execSetAngularTwistLimit);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularVelocityDrive",(Native)&UPhysicsConstraintComponent::execSetAngularVelocityDrive);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularVelocityDriveSLERP",(Native)&UPhysicsConstraintComponent::execSetAngularVelocityDriveSLERP);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularVelocityDriveTwistAndSwing",(Native)&UPhysicsConstraintComponent::execSetAngularVelocityDriveTwistAndSwing);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetAngularVelocityTarget",(Native)&UPhysicsConstraintComponent::execSetAngularVelocityTarget);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetConstrainedComponents",(Native)&UPhysicsConstraintComponent::execSetConstrainedComponents);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetConstraintReferenceFrame",(Native)&UPhysicsConstraintComponent::execSetConstraintReferenceFrame);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetConstraintReferenceOrientation",(Native)&UPhysicsConstraintComponent::execSetConstraintReferenceOrientation);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetConstraintReferencePosition",(Native)&UPhysicsConstraintComponent::execSetConstraintReferencePosition);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetDisableCollision",(Native)&UPhysicsConstraintComponent::execSetDisableCollision);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetLinearDriveParams",(Native)&UPhysicsConstraintComponent::execSetLinearDriveParams);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetLinearPositionDrive",(Native)&UPhysicsConstraintComponent::execSetLinearPositionDrive);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetLinearPositionTarget",(Native)&UPhysicsConstraintComponent::execSetLinearPositionTarget);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetLinearVelocityDrive",(Native)&UPhysicsConstraintComponent::execSetLinearVelocityDrive);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetLinearVelocityTarget",(Native)&UPhysicsConstraintComponent::execSetLinearVelocityTarget);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetLinearXLimit",(Native)&UPhysicsConstraintComponent::execSetLinearXLimit);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetLinearYLimit",(Native)&UPhysicsConstraintComponent::execSetLinearYLimit);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetLinearZLimit",(Native)&UPhysicsConstraintComponent::execSetLinearZLimit);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetOrientationDriveSLERP",(Native)&UPhysicsConstraintComponent::execSetOrientationDriveSLERP);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsConstraintComponent::StaticClass(), "SetOrientationDriveTwistAndSwing",(Native)&UPhysicsConstraintComponent::execSetOrientationDriveTwistAndSwing);
	}
	IMPLEMENT_CLASS(UPhysicsConstraintComponent, 912742532);
	void UPhysicsSpringComponent::StaticRegisterNativesUPhysicsSpringComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsSpringComponent::StaticClass(), "GetNormalizedCompressionScalar",(Native)&UPhysicsSpringComponent::execGetNormalizedCompressionScalar);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsSpringComponent::StaticClass(), "GetSpringCurrentEndPoint",(Native)&UPhysicsSpringComponent::execGetSpringCurrentEndPoint);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsSpringComponent::StaticClass(), "GetSpringDirection",(Native)&UPhysicsSpringComponent::execGetSpringDirection);
		FNativeFunctionRegistrar::RegisterFunction(UPhysicsSpringComponent::StaticClass(), "GetSpringRestingPoint",(Native)&UPhysicsSpringComponent::execGetSpringRestingPoint);
	}
	IMPLEMENT_CLASS(UPhysicsSpringComponent, 3526339187);
	void UPhysicsThrusterComponent::StaticRegisterNativesUPhysicsThrusterComponent()
	{
	}
	IMPLEMENT_CLASS(UPhysicsThrusterComponent, 4097096365);
	void UShapeComponent::StaticRegisterNativesUShapeComponent()
	{
	}
	IMPLEMENT_CLASS(UShapeComponent, 3201415130);
	void UPostProcessComponent::StaticRegisterNativesUPostProcessComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPostProcessComponent::StaticClass(), "AddOrUpdateBlendable",(Native)&UPostProcessComponent::execAddOrUpdateBlendable);
	}
	IMPLEMENT_CLASS(UPostProcessComponent, 57571849);
	void UArrowComponent::StaticRegisterNativesUArrowComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UArrowComponent::StaticClass(), "SetArrowColor_DEPRECATED",(Native)&UArrowComponent::execSetArrowColor_DEPRECATED);
		FNativeFunctionRegistrar::RegisterFunction(UArrowComponent::StaticClass(), "SetArrowColor_New",(Native)&UArrowComponent::execSetArrowColor_New);
	}
	IMPLEMENT_CLASS(UArrowComponent, 3598140052);
	void UBillboardComponent::StaticRegisterNativesUBillboardComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBillboardComponent::StaticClass(), "SetSprite",(Native)&UBillboardComponent::execSetSprite);
		FNativeFunctionRegistrar::RegisterFunction(UBillboardComponent::StaticClass(), "SetSpriteAndUV",(Native)&UBillboardComponent::execSetSpriteAndUV);
		FNativeFunctionRegistrar::RegisterFunction(UBillboardComponent::StaticClass(), "SetUV",(Native)&UBillboardComponent::execSetUV);
	}
	IMPLEMENT_CLASS(UBillboardComponent, 3675088382);
	void UBrushComponent::StaticRegisterNativesUBrushComponent()
	{
	}
	IMPLEMENT_CLASS(UBrushComponent, 1764103222);
	void UDrawFrustumComponent::StaticRegisterNativesUDrawFrustumComponent()
	{
	}
	IMPLEMENT_CLASS(UDrawFrustumComponent, 1910668484);
class UScriptStruct* FBatchedPoint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBatchedPoint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBatchedPoint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBatchedPoint, Z_Construct_UPackage__Script_Engine(), TEXT("BatchedPoint"), sizeof(FBatchedPoint), Get_Z_Construct_UScriptStruct_FBatchedPoint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBatchedPoint(FBatchedPoint::StaticStruct, TEXT("/Script/Engine"), TEXT("BatchedPoint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBatchedPoint
{
	FScriptStruct_Engine_StaticRegisterNativesFBatchedPoint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BatchedPoint")),new UScriptStruct::TCppStructOps<FBatchedPoint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBatchedPoint;
class UScriptStruct* FBatchedLine::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBatchedLine();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBatchedLine_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBatchedLine, Z_Construct_UPackage__Script_Engine(), TEXT("BatchedLine"), sizeof(FBatchedLine), Get_Z_Construct_UScriptStruct_FBatchedLine_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBatchedLine(FBatchedLine::StaticStruct, TEXT("/Script/Engine"), TEXT("BatchedLine"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBatchedLine
{
	FScriptStruct_Engine_StaticRegisterNativesFBatchedLine()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BatchedLine")),new UScriptStruct::TCppStructOps<FBatchedLine>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBatchedLine;
	void ULineBatchComponent::StaticRegisterNativesULineBatchComponent()
	{
	}
	IMPLEMENT_CLASS(ULineBatchComponent, 2801915286);
class UScriptStruct* FMaterialSpriteElement::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialSpriteElement();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMaterialSpriteElement_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialSpriteElement, Z_Construct_UPackage__Script_Engine(), TEXT("MaterialSpriteElement"), sizeof(FMaterialSpriteElement), Get_Z_Construct_UScriptStruct_FMaterialSpriteElement_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialSpriteElement(FMaterialSpriteElement::StaticStruct, TEXT("/Script/Engine"), TEXT("MaterialSpriteElement"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMaterialSpriteElement
{
	FScriptStruct_Engine_StaticRegisterNativesFMaterialSpriteElement()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialSpriteElement")),new UScriptStruct::TCppStructOps<FMaterialSpriteElement>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMaterialSpriteElement;
	void UMaterialBillboardComponent::StaticRegisterNativesUMaterialBillboardComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMaterialBillboardComponent::StaticClass(), "AddElement",(Native)&UMaterialBillboardComponent::execAddElement);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialBillboardComponent::StaticClass(), "SetElements",(Native)&UMaterialBillboardComponent::execSetElements);
	}
	IMPLEMENT_CLASS(UMaterialBillboardComponent, 1723735237);
static class UEnum* EBoneSpaces_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneSpaces();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBoneSpaces, Z_Construct_UPackage__Script_Engine(), TEXT("EBoneSpaces"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBoneSpaces(EBoneSpaces_StaticEnum, TEXT("/Script/Engine"), TEXT("EBoneSpaces"), false, nullptr, nullptr);
static class UEnum* EMeshComponentUpdateFlag_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshComponentUpdateFlag();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMeshComponentUpdateFlag, Z_Construct_UPackage__Script_Engine(), TEXT("EMeshComponentUpdateFlag"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMeshComponentUpdateFlag(EMeshComponentUpdateFlag_StaticEnum, TEXT("/Script/Engine"), TEXT("EMeshComponentUpdateFlag"), false, nullptr, nullptr);
static class UEnum* EPhysBodyOp_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysBodyOp();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EPhysBodyOp, Z_Construct_UPackage__Script_Engine(), TEXT("EPhysBodyOp"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPhysBodyOp(EPhysBodyOp_StaticEnum, TEXT("/Script/Engine"), TEXT("EPhysBodyOp"), false, nullptr, nullptr);
static class UEnum* EBoneVisibilityStatus_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneVisibilityStatus();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBoneVisibilityStatus, Z_Construct_UPackage__Script_Engine(), TEXT("EBoneVisibilityStatus"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBoneVisibilityStatus(EBoneVisibilityStatus_StaticEnum, TEXT("/Script/Engine"), TEXT("EBoneVisibilityStatus"), false, nullptr, nullptr);
class UScriptStruct* FSkelMeshComponentLODInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkelMeshComponentLODInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSkelMeshComponentLODInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSkelMeshComponentLODInfo, Z_Construct_UPackage__Script_Engine(), TEXT("SkelMeshComponentLODInfo"), sizeof(FSkelMeshComponentLODInfo), Get_Z_Construct_UScriptStruct_FSkelMeshComponentLODInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSkelMeshComponentLODInfo(FSkelMeshComponentLODInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("SkelMeshComponentLODInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSkelMeshComponentLODInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFSkelMeshComponentLODInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SkelMeshComponentLODInfo")),new UScriptStruct::TCppStructOps<FSkelMeshComponentLODInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSkelMeshComponentLODInfo;
	void USkinnedMeshComponent::StaticRegisterNativesUSkinnedMeshComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "BoneIsChildOf",(Native)&USkinnedMeshComponent::execBoneIsChildOf);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "ClearVertexColorOverride",(Native)&USkinnedMeshComponent::execClearVertexColorOverride);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "FindClosestBone_K2",(Native)&USkinnedMeshComponent::execFindClosestBone_K2);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "GetBoneIndex",(Native)&USkinnedMeshComponent::execGetBoneIndex);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "GetBoneName",(Native)&USkinnedMeshComponent::execGetBoneName);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "GetNumBones",(Native)&USkinnedMeshComponent::execGetNumBones);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "GetParentBone",(Native)&USkinnedMeshComponent::execGetParentBone);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "GetSocketBoneName",(Native)&USkinnedMeshComponent::execGetSocketBoneName);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "HideBoneByName",(Native)&USkinnedMeshComponent::execHideBoneByName);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "IsBoneHiddenByName",(Native)&USkinnedMeshComponent::execIsBoneHiddenByName);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "SetForcedLOD",(Native)&USkinnedMeshComponent::execSetForcedLOD);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "SetMasterPoseComponent",(Native)&USkinnedMeshComponent::execSetMasterPoseComponent);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "SetMinLOD",(Native)&USkinnedMeshComponent::execSetMinLOD);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "SetPhysicsAsset",(Native)&USkinnedMeshComponent::execSetPhysicsAsset);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "SetSkeletalMesh",(Native)&USkinnedMeshComponent::execSetSkeletalMesh);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "SetVertexColorOverride_LinearColor",(Native)&USkinnedMeshComponent::execSetVertexColorOverride_LinearColor);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "TransformFromBoneSpace",(Native)&USkinnedMeshComponent::execTransformFromBoneSpace);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "TransformToBoneSpace",(Native)&USkinnedMeshComponent::execTransformToBoneSpace);
		FNativeFunctionRegistrar::RegisterFunction(USkinnedMeshComponent::StaticClass(), "UnHideBoneByName",(Native)&USkinnedMeshComponent::execUnHideBoneByName);
	}
	IMPLEMENT_CLASS(USkinnedMeshComponent, 3412393948);
	void UDestructibleComponent::StaticRegisterNativesUDestructibleComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDestructibleComponent::StaticClass(), "ApplyDamage",(Native)&UDestructibleComponent::execApplyDamage);
		FNativeFunctionRegistrar::RegisterFunction(UDestructibleComponent::StaticClass(), "ApplyRadiusDamage",(Native)&UDestructibleComponent::execApplyRadiusDamage);
		FNativeFunctionRegistrar::RegisterFunction(UDestructibleComponent::StaticClass(), "GetDestructibleMesh",(Native)&UDestructibleComponent::execGetDestructibleMesh);
		FNativeFunctionRegistrar::RegisterFunction(UDestructibleComponent::StaticClass(), "SetDestructibleMesh",(Native)&UDestructibleComponent::execSetDestructibleMesh);
	}
	IMPLEMENT_CLASS(UDestructibleComponent, 3061789070);
	void UPoseableMeshComponent::StaticRegisterNativesUPoseableMeshComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "CopyPoseFromSkeletalComponent",(Native)&UPoseableMeshComponent::execCopyPoseFromSkeletalComponent);
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "GetBoneLocationByName",(Native)&UPoseableMeshComponent::execGetBoneLocationByName);
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "GetBoneRotationByName",(Native)&UPoseableMeshComponent::execGetBoneRotationByName);
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "GetBoneScaleByName",(Native)&UPoseableMeshComponent::execGetBoneScaleByName);
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "GetBoneTransformByName",(Native)&UPoseableMeshComponent::execGetBoneTransformByName);
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "ResetBoneTransformByName",(Native)&UPoseableMeshComponent::execResetBoneTransformByName);
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "SetBoneLocationByName",(Native)&UPoseableMeshComponent::execSetBoneLocationByName);
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "SetBoneRotationByName",(Native)&UPoseableMeshComponent::execSetBoneRotationByName);
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "SetBoneScaleByName",(Native)&UPoseableMeshComponent::execSetBoneScaleByName);
		FNativeFunctionRegistrar::RegisterFunction(UPoseableMeshComponent::StaticClass(), "SetBoneTransformByName",(Native)&UPoseableMeshComponent::execSetBoneTransformByName);
	}
	IMPLEMENT_CLASS(UPoseableMeshComponent, 1040170946);
class UScriptStruct* FSingleAnimationPlayData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSingleAnimationPlayData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSingleAnimationPlayData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSingleAnimationPlayData, Z_Construct_UPackage__Script_Engine(), TEXT("SingleAnimationPlayData"), sizeof(FSingleAnimationPlayData), Get_Z_Construct_UScriptStruct_FSingleAnimationPlayData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSingleAnimationPlayData(FSingleAnimationPlayData::StaticStruct, TEXT("/Script/Engine"), TEXT("SingleAnimationPlayData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSingleAnimationPlayData
{
	FScriptStruct_Engine_StaticRegisterNativesFSingleAnimationPlayData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SingleAnimationPlayData")),new UScriptStruct::TCppStructOps<FSingleAnimationPlayData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSingleAnimationPlayData;
class UScriptStruct* FPoseSnapshot::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseSnapshot();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPoseSnapshot_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPoseSnapshot, Z_Construct_UPackage__Script_Engine(), TEXT("PoseSnapshot"), sizeof(FPoseSnapshot), Get_Z_Construct_UScriptStruct_FPoseSnapshot_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPoseSnapshot(FPoseSnapshot::StaticStruct, TEXT("/Script/Engine"), TEXT("PoseSnapshot"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPoseSnapshot
{
	FScriptStruct_Engine_StaticRegisterNativesFPoseSnapshot()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PoseSnapshot")),new UScriptStruct::TCppStructOps<FPoseSnapshot>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPoseSnapshot;
static class UEnum* EPhysicsTransformUpdateMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysicsTransformUpdateMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EPhysicsTransformUpdateMode, Z_Construct_UPackage__Script_Engine(), TEXT("EPhysicsTransformUpdateMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPhysicsTransformUpdateMode(EPhysicsTransformUpdateMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EPhysicsTransformUpdateMode"), false, nullptr, nullptr);
static class UEnum* EAnimationMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimationMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAnimationMode, Z_Construct_UPackage__Script_Engine(), TEXT("EAnimationMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAnimationMode(EAnimationMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EAnimationMode"), false, nullptr, nullptr);
static class UEnum* EKinematicBonesUpdateToPhysics_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EKinematicBonesUpdateToPhysics();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EKinematicBonesUpdateToPhysics, Z_Construct_UPackage__Script_Engine(), TEXT("EKinematicBonesUpdateToPhysics"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EKinematicBonesUpdateToPhysics(EKinematicBonesUpdateToPhysics_StaticEnum, TEXT("/Script/Engine"), TEXT("EKinematicBonesUpdateToPhysics"), false, nullptr, nullptr);
class UScriptStruct* FSkeletalMeshComponentClothTickFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshComponentClothTickFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSkeletalMeshComponentClothTickFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSkeletalMeshComponentClothTickFunction, Z_Construct_UPackage__Script_Engine(), TEXT("SkeletalMeshComponentClothTickFunction"), sizeof(FSkeletalMeshComponentClothTickFunction), Get_Z_Construct_UScriptStruct_FSkeletalMeshComponentClothTickFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSkeletalMeshComponentClothTickFunction(FSkeletalMeshComponentClothTickFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("SkeletalMeshComponentClothTickFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshComponentClothTickFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshComponentClothTickFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SkeletalMeshComponentClothTickFunction")),new UScriptStruct::TCppStructOps<FSkeletalMeshComponentClothTickFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshComponentClothTickFunction;
class UScriptStruct* FSkeletalMeshComponentEndPhysicsTickFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshComponentEndPhysicsTickFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSkeletalMeshComponentEndPhysicsTickFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSkeletalMeshComponentEndPhysicsTickFunction, Z_Construct_UPackage__Script_Engine(), TEXT("SkeletalMeshComponentEndPhysicsTickFunction"), sizeof(FSkeletalMeshComponentEndPhysicsTickFunction), Get_Z_Construct_UScriptStruct_FSkeletalMeshComponentEndPhysicsTickFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSkeletalMeshComponentEndPhysicsTickFunction(FSkeletalMeshComponentEndPhysicsTickFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("SkeletalMeshComponentEndPhysicsTickFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshComponentEndPhysicsTickFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshComponentEndPhysicsTickFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SkeletalMeshComponentEndPhysicsTickFunction")),new UScriptStruct::TCppStructOps<FSkeletalMeshComponentEndPhysicsTickFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshComponentEndPhysicsTickFunction;
	void USkeletalMeshComponent::StaticRegisterNativesUSkeletalMeshComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "AccumulateAllBodiesBelowPhysicsBlendWeight",(Native)&USkeletalMeshComponent::execAccumulateAllBodiesBelowPhysicsBlendWeight);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "AddForceToAllBodiesBelow",(Native)&USkeletalMeshComponent::execAddForceToAllBodiesBelow);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "AddImpulseToAllBodiesBelow",(Native)&USkeletalMeshComponent::execAddImpulseToAllBodiesBelow);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "BindClothToMasterPoseComponent",(Native)&USkeletalMeshComponent::execBindClothToMasterPoseComponent);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "BreakConstraint",(Native)&USkeletalMeshComponent::execBreakConstraint);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "ClearMorphTargets",(Native)&USkeletalMeshComponent::execClearMorphTargets);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "FindConstraintBoneName",(Native)&USkeletalMeshComponent::execFindConstraintBoneName);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "ForceClothNextUpdateTeleport",(Native)&USkeletalMeshComponent::execForceClothNextUpdateTeleport);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "ForceClothNextUpdateTeleportAndReset",(Native)&USkeletalMeshComponent::execForceClothNextUpdateTeleportAndReset);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetAnimationMode",(Native)&USkeletalMeshComponent::execGetAnimationMode);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetAnimInstance",(Native)&USkeletalMeshComponent::execGetAnimInstance);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetBoneMass",(Native)&USkeletalMeshComponent::execGetBoneMass);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetClothMaxDistanceScale",(Native)&USkeletalMeshComponent::execGetClothMaxDistanceScale);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetCurrentJointAngles",(Native)&USkeletalMeshComponent::execGetCurrentJointAngles);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetMorphTarget",(Native)&USkeletalMeshComponent::execGetMorphTarget);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetPlayRate",(Native)&USkeletalMeshComponent::execGetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetPosition",(Native)&USkeletalMeshComponent::execGetPosition);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetPostProcessInstance",(Native)&USkeletalMeshComponent::execGetPostProcessInstance);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "GetSkeletalCenterOfMass",(Native)&USkeletalMeshComponent::execGetSkeletalCenterOfMass);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "IsBodyGravityEnabled",(Native)&USkeletalMeshComponent::execIsBodyGravityEnabled);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "IsClothingSimulationSuspended",(Native)&USkeletalMeshComponent::execIsClothingSimulationSuspended);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "IsPlaying",(Native)&USkeletalMeshComponent::execIsPlaying);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "K2_GetClosestPointOnPhysicsAsset",(Native)&USkeletalMeshComponent::execK2_GetClosestPointOnPhysicsAsset);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "OverrideAnimationData",(Native)&USkeletalMeshComponent::execOverrideAnimationData);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "Play",(Native)&USkeletalMeshComponent::execPlay);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "PlayAnimation",(Native)&USkeletalMeshComponent::execPlayAnimation);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "ResetAllBodiesSimulatePhysics",(Native)&USkeletalMeshComponent::execResetAllBodiesSimulatePhysics);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "ResetClothTeleportMode",(Native)&USkeletalMeshComponent::execResetClothTeleportMode);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "ResumeClothingSimulation",(Native)&USkeletalMeshComponent::execResumeClothingSimulation);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAllBodiesBelowPhysicsBlendWeight",(Native)&USkeletalMeshComponent::execSetAllBodiesBelowPhysicsBlendWeight);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAllBodiesBelowSimulatePhysics",(Native)&USkeletalMeshComponent::execSetAllBodiesBelowSimulatePhysics);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAllBodiesPhysicsBlendWeight",(Native)&USkeletalMeshComponent::execSetAllBodiesPhysicsBlendWeight);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAllBodiesSimulatePhysics",(Native)&USkeletalMeshComponent::execSetAllBodiesSimulatePhysics);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAllMotorsAngularDriveParams",(Native)&USkeletalMeshComponent::execSetAllMotorsAngularDriveParams);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAllMotorsAngularPositionDrive",(Native)&USkeletalMeshComponent::execSetAllMotorsAngularPositionDrive);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAllMotorsAngularVelocityDrive",(Native)&USkeletalMeshComponent::execSetAllMotorsAngularVelocityDrive);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAngularLimits",(Native)&USkeletalMeshComponent::execSetAngularLimits);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAnimation",(Native)&USkeletalMeshComponent::execSetAnimation);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAnimationMode",(Native)&USkeletalMeshComponent::execSetAnimationMode);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetAnimInstanceClass",(Native)&USkeletalMeshComponent::execSetAnimInstanceClass);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetBodyNotifyRigidBodyCollision",(Native)&USkeletalMeshComponent::execSetBodyNotifyRigidBodyCollision);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetClothMaxDistanceScale",(Native)&USkeletalMeshComponent::execSetClothMaxDistanceScale);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetConstraintProfile",(Native)&USkeletalMeshComponent::execSetConstraintProfile);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetConstraintProfileForAll",(Native)&USkeletalMeshComponent::execSetConstraintProfileForAll);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetEnableBodyGravity",(Native)&USkeletalMeshComponent::execSetEnableBodyGravity);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetEnableGravityOnAllBodiesBelow",(Native)&USkeletalMeshComponent::execSetEnableGravityOnAllBodiesBelow);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetEnablePhysicsBlending",(Native)&USkeletalMeshComponent::execSetEnablePhysicsBlending);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetMorphTarget",(Native)&USkeletalMeshComponent::execSetMorphTarget);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetNotifyRigidBodyCollisionBelow",(Native)&USkeletalMeshComponent::execSetNotifyRigidBodyCollisionBelow);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetPhysicsBlendWeight",(Native)&USkeletalMeshComponent::execSetPhysicsBlendWeight);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetPlayRate",(Native)&USkeletalMeshComponent::execSetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetPosition",(Native)&USkeletalMeshComponent::execSetPosition);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SetUpdateAnimationInEditor",(Native)&USkeletalMeshComponent::execSetUpdateAnimationInEditor);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SnapshotPose",(Native)&USkeletalMeshComponent::execSnapshotPose);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "Stop",(Native)&USkeletalMeshComponent::execStop);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "SuspendClothingSimulation",(Native)&USkeletalMeshComponent::execSuspendClothingSimulation);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshComponent::StaticClass(), "UnbindClothFromMasterPoseComponent",(Native)&USkeletalMeshComponent::execUnbindClothFromMasterPoseComponent);
	}
	IMPLEMENT_CLASS(USkeletalMeshComponent, 3045894878);
class UScriptStruct* FInstancedStaticMeshMappingInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInstancedStaticMeshMappingInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInstancedStaticMeshMappingInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInstancedStaticMeshMappingInfo, Z_Construct_UPackage__Script_Engine(), TEXT("InstancedStaticMeshMappingInfo"), sizeof(FInstancedStaticMeshMappingInfo), Get_Z_Construct_UScriptStruct_FInstancedStaticMeshMappingInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInstancedStaticMeshMappingInfo(FInstancedStaticMeshMappingInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("InstancedStaticMeshMappingInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInstancedStaticMeshMappingInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFInstancedStaticMeshMappingInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InstancedStaticMeshMappingInfo")),new UScriptStruct::TCppStructOps<FInstancedStaticMeshMappingInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInstancedStaticMeshMappingInfo;
class UScriptStruct* FInstancedStaticMeshInstanceData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInstancedStaticMeshInstanceData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInstancedStaticMeshInstanceData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInstancedStaticMeshInstanceData, Z_Construct_UPackage__Script_Engine(), TEXT("InstancedStaticMeshInstanceData"), sizeof(FInstancedStaticMeshInstanceData), Get_Z_Construct_UScriptStruct_FInstancedStaticMeshInstanceData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInstancedStaticMeshInstanceData(FInstancedStaticMeshInstanceData::StaticStruct, TEXT("/Script/Engine"), TEXT("InstancedStaticMeshInstanceData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInstancedStaticMeshInstanceData
{
	FScriptStruct_Engine_StaticRegisterNativesFInstancedStaticMeshInstanceData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InstancedStaticMeshInstanceData")),new UScriptStruct::TCppStructOps<FInstancedStaticMeshInstanceData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInstancedStaticMeshInstanceData;
	void UInstancedStaticMeshComponent::StaticRegisterNativesUInstancedStaticMeshComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "AddInstance",(Native)&UInstancedStaticMeshComponent::execAddInstance);
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "AddInstanceWorldSpace",(Native)&UInstancedStaticMeshComponent::execAddInstanceWorldSpace);
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "ClearInstances",(Native)&UInstancedStaticMeshComponent::execClearInstances);
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "GetInstanceCount",(Native)&UInstancedStaticMeshComponent::execGetInstanceCount);
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "GetInstancesOverlappingBox",(Native)&UInstancedStaticMeshComponent::execGetInstancesOverlappingBox);
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "GetInstancesOverlappingSphere",(Native)&UInstancedStaticMeshComponent::execGetInstancesOverlappingSphere);
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "GetInstanceTransform",(Native)&UInstancedStaticMeshComponent::execGetInstanceTransform);
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "RemoveInstance",(Native)&UInstancedStaticMeshComponent::execRemoveInstance);
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "SetCullDistances",(Native)&UInstancedStaticMeshComponent::execSetCullDistances);
		FNativeFunctionRegistrar::RegisterFunction(UInstancedStaticMeshComponent::StaticClass(), "UpdateInstanceTransform",(Native)&UInstancedStaticMeshComponent::execUpdateInstanceTransform);
	}
	IMPLEMENT_CLASS(UInstancedStaticMeshComponent, 1121107915);
class UScriptStruct* FClusterNode::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClusterNode();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FClusterNode_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FClusterNode, Z_Construct_UPackage__Script_Engine(), TEXT("ClusterNode"), sizeof(FClusterNode), Get_Z_Construct_UScriptStruct_FClusterNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FClusterNode(FClusterNode::StaticStruct, TEXT("/Script/Engine"), TEXT("ClusterNode"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFClusterNode
{
	FScriptStruct_Engine_StaticRegisterNativesFClusterNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ClusterNode")),new UScriptStruct::TCppStructOps<FClusterNode>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFClusterNode;
	void UHierarchicalInstancedStaticMeshComponent::StaticRegisterNativesUHierarchicalInstancedStaticMeshComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UHierarchicalInstancedStaticMeshComponent::StaticClass(), "RemoveInstances",(Native)&UHierarchicalInstancedStaticMeshComponent::execRemoveInstances);
	}
	IMPLEMENT_CLASS(UHierarchicalInstancedStaticMeshComponent, 29886304);
static class UEnum* ESplineMeshAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESplineMeshAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESplineMeshAxis, Z_Construct_UPackage__Script_Engine(), TEXT("ESplineMeshAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESplineMeshAxis(ESplineMeshAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("ESplineMeshAxis"), false, nullptr, nullptr);
class UScriptStruct* FSplineMeshParams::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSplineMeshParams();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSplineMeshParams_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSplineMeshParams, Z_Construct_UPackage__Script_Engine(), TEXT("SplineMeshParams"), sizeof(FSplineMeshParams), Get_Z_Construct_UScriptStruct_FSplineMeshParams_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSplineMeshParams(FSplineMeshParams::StaticStruct, TEXT("/Script/Engine"), TEXT("SplineMeshParams"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSplineMeshParams
{
	FScriptStruct_Engine_StaticRegisterNativesFSplineMeshParams()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SplineMeshParams")),new UScriptStruct::TCppStructOps<FSplineMeshParams>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSplineMeshParams;
	void USplineMeshComponent::StaticRegisterNativesUSplineMeshComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetBoundaryMax",(Native)&USplineMeshComponent::execGetBoundaryMax);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetBoundaryMin",(Native)&USplineMeshComponent::execGetBoundaryMin);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetEndOffset",(Native)&USplineMeshComponent::execGetEndOffset);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetEndPosition",(Native)&USplineMeshComponent::execGetEndPosition);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetEndRoll",(Native)&USplineMeshComponent::execGetEndRoll);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetEndScale",(Native)&USplineMeshComponent::execGetEndScale);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetEndTangent",(Native)&USplineMeshComponent::execGetEndTangent);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetForwardAxis",(Native)&USplineMeshComponent::execGetForwardAxis);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetSplineUpDir",(Native)&USplineMeshComponent::execGetSplineUpDir);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetStartOffset",(Native)&USplineMeshComponent::execGetStartOffset);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetStartPosition",(Native)&USplineMeshComponent::execGetStartPosition);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetStartRoll",(Native)&USplineMeshComponent::execGetStartRoll);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetStartScale",(Native)&USplineMeshComponent::execGetStartScale);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "GetStartTangent",(Native)&USplineMeshComponent::execGetStartTangent);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetBoundaryMax",(Native)&USplineMeshComponent::execSetBoundaryMax);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetBoundaryMin",(Native)&USplineMeshComponent::execSetBoundaryMin);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetEndOffset",(Native)&USplineMeshComponent::execSetEndOffset);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetEndPosition",(Native)&USplineMeshComponent::execSetEndPosition);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetEndRoll",(Native)&USplineMeshComponent::execSetEndRoll);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetEndScale",(Native)&USplineMeshComponent::execSetEndScale);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetEndTangent",(Native)&USplineMeshComponent::execSetEndTangent);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetForwardAxis",(Native)&USplineMeshComponent::execSetForwardAxis);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetSplineUpDir",(Native)&USplineMeshComponent::execSetSplineUpDir);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetStartAndEnd",(Native)&USplineMeshComponent::execSetStartAndEnd);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetStartOffset",(Native)&USplineMeshComponent::execSetStartOffset);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetStartPosition",(Native)&USplineMeshComponent::execSetStartPosition);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetStartRoll",(Native)&USplineMeshComponent::execSetStartRoll);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetStartScale",(Native)&USplineMeshComponent::execSetStartScale);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "SetStartTangent",(Native)&USplineMeshComponent::execSetStartTangent);
		FNativeFunctionRegistrar::RegisterFunction(USplineMeshComponent::StaticClass(), "UpdateMesh",(Native)&USplineMeshComponent::execUpdateMesh);
	}
	IMPLEMENT_CLASS(USplineMeshComponent, 1316983227);
	void UModelComponent::StaticRegisterNativesUModelComponent()
	{
	}
	IMPLEMENT_CLASS(UModelComponent, 2826702403);
	void UNavLinkComponent::StaticRegisterNativesUNavLinkComponent()
	{
	}
	IMPLEMENT_CLASS(UNavLinkComponent, 3901624395);
	void UNavLinkRenderingComponent::StaticRegisterNativesUNavLinkRenderingComponent()
	{
	}
	IMPLEMENT_CLASS(UNavLinkRenderingComponent, 1446213429);
	void UNavMeshRenderingComponent::StaticRegisterNativesUNavMeshRenderingComponent()
	{
	}
	IMPLEMENT_CLASS(UNavMeshRenderingComponent, 3191141593);
	void UNavTestRenderingComponent::StaticRegisterNativesUNavTestRenderingComponent()
	{
	}
	IMPLEMENT_CLASS(UNavTestRenderingComponent, 2246526483);
	void UBoxComponent::StaticRegisterNativesUBoxComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBoxComponent::StaticClass(), "GetScaledBoxExtent",(Native)&UBoxComponent::execGetScaledBoxExtent);
		FNativeFunctionRegistrar::RegisterFunction(UBoxComponent::StaticClass(), "GetUnscaledBoxExtent",(Native)&UBoxComponent::execGetUnscaledBoxExtent);
		FNativeFunctionRegistrar::RegisterFunction(UBoxComponent::StaticClass(), "SetBoxExtent",(Native)&UBoxComponent::execSetBoxExtent);
	}
	IMPLEMENT_CLASS(UBoxComponent, 308026193);
	void UCapsuleComponent::StaticRegisterNativesUCapsuleComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetScaledCapsuleHalfHeight",(Native)&UCapsuleComponent::execGetScaledCapsuleHalfHeight);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetScaledCapsuleHalfHeight_WithoutHemisphere",(Native)&UCapsuleComponent::execGetScaledCapsuleHalfHeight_WithoutHemisphere);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetScaledCapsuleRadius",(Native)&UCapsuleComponent::execGetScaledCapsuleRadius);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetScaledCapsuleSize",(Native)&UCapsuleComponent::execGetScaledCapsuleSize);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetScaledCapsuleSize_WithoutHemisphere",(Native)&UCapsuleComponent::execGetScaledCapsuleSize_WithoutHemisphere);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetShapeScale",(Native)&UCapsuleComponent::execGetShapeScale);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetUnscaledCapsuleHalfHeight",(Native)&UCapsuleComponent::execGetUnscaledCapsuleHalfHeight);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetUnscaledCapsuleHalfHeight_WithoutHemisphere",(Native)&UCapsuleComponent::execGetUnscaledCapsuleHalfHeight_WithoutHemisphere);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetUnscaledCapsuleRadius",(Native)&UCapsuleComponent::execGetUnscaledCapsuleRadius);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetUnscaledCapsuleSize",(Native)&UCapsuleComponent::execGetUnscaledCapsuleSize);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "GetUnscaledCapsuleSize_WithoutHemisphere",(Native)&UCapsuleComponent::execGetUnscaledCapsuleSize_WithoutHemisphere);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "SetCapsuleHalfHeight",(Native)&UCapsuleComponent::execSetCapsuleHalfHeight);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "SetCapsuleRadius",(Native)&UCapsuleComponent::execSetCapsuleRadius);
		FNativeFunctionRegistrar::RegisterFunction(UCapsuleComponent::StaticClass(), "SetCapsuleSize",(Native)&UCapsuleComponent::execSetCapsuleSize);
	}
	IMPLEMENT_CLASS(UCapsuleComponent, 1218533140);
	void USphereComponent::StaticRegisterNativesUSphereComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USphereComponent::StaticClass(), "GetScaledSphereRadius",(Native)&USphereComponent::execGetScaledSphereRadius);
		FNativeFunctionRegistrar::RegisterFunction(USphereComponent::StaticClass(), "GetShapeScale",(Native)&USphereComponent::execGetShapeScale);
		FNativeFunctionRegistrar::RegisterFunction(USphereComponent::StaticClass(), "GetUnscaledSphereRadius",(Native)&USphereComponent::execGetUnscaledSphereRadius);
		FNativeFunctionRegistrar::RegisterFunction(USphereComponent::StaticClass(), "SetSphereRadius",(Native)&USphereComponent::execSetSphereRadius);
	}
	IMPLEMENT_CLASS(USphereComponent, 2830658501);
	void UDrawSphereComponent::StaticRegisterNativesUDrawSphereComponent()
	{
	}
	IMPLEMENT_CLASS(UDrawSphereComponent, 320778148);
static class UEnum* ESplineCoordinateSpace_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESplineCoordinateSpace();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESplineCoordinateSpace, Z_Construct_UPackage__Script_Engine(), TEXT("ESplineCoordinateSpace"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESplineCoordinateSpace(ESplineCoordinateSpace_StaticEnum, TEXT("/Script/Engine"), TEXT("ESplineCoordinateSpace"), false, nullptr, nullptr);
static class UEnum* ESplinePointType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESplinePointType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESplinePointType, Z_Construct_UPackage__Script_Engine(), TEXT("ESplinePointType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESplinePointType(ESplinePointType_StaticEnum, TEXT("/Script/Engine"), TEXT("ESplinePointType"), false, nullptr, nullptr);
class UScriptStruct* FSplinePoint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSplinePoint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSplinePoint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSplinePoint, Z_Construct_UPackage__Script_Engine(), TEXT("SplinePoint"), sizeof(FSplinePoint), Get_Z_Construct_UScriptStruct_FSplinePoint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSplinePoint(FSplinePoint::StaticStruct, TEXT("/Script/Engine"), TEXT("SplinePoint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSplinePoint
{
	FScriptStruct_Engine_StaticRegisterNativesFSplinePoint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SplinePoint")),new UScriptStruct::TCppStructOps<FSplinePoint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSplinePoint;
class UScriptStruct* FSplineCurves::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSplineCurves();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSplineCurves_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSplineCurves, Z_Construct_UPackage__Script_Engine(), TEXT("SplineCurves"), sizeof(FSplineCurves), Get_Z_Construct_UScriptStruct_FSplineCurves_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSplineCurves(FSplineCurves::StaticStruct, TEXT("/Script/Engine"), TEXT("SplineCurves"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSplineCurves
{
	FScriptStruct_Engine_StaticRegisterNativesFSplineCurves()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SplineCurves")),new UScriptStruct::TCppStructOps<FSplineCurves>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSplineCurves;
	void USplineComponent::StaticRegisterNativesUSplineComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "AddPoint",(Native)&USplineComponent::execAddPoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "AddPoints",(Native)&USplineComponent::execAddPoints);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "AddSplineLocalPoint",(Native)&USplineComponent::execAddSplineLocalPoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "AddSplinePoint",(Native)&USplineComponent::execAddSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "AddSplinePointAtIndex",(Native)&USplineComponent::execAddSplinePointAtIndex);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "AddSplineWorldPoint",(Native)&USplineComponent::execAddSplineWorldPoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "ClearSplinePoints",(Native)&USplineComponent::execClearSplinePoints);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindDirectionClosestToWorldLocation",(Native)&USplineComponent::execFindDirectionClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindInputKeyClosestToWorldLocation",(Native)&USplineComponent::execFindInputKeyClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindLocationClosestToWorldLocation",(Native)&USplineComponent::execFindLocationClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindRightVectorClosestToWorldLocation",(Native)&USplineComponent::execFindRightVectorClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindRollClosestToWorldLocation",(Native)&USplineComponent::execFindRollClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindRotationClosestToWorldLocation",(Native)&USplineComponent::execFindRotationClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindScaleClosestToWorldLocation",(Native)&USplineComponent::execFindScaleClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindTangentClosestToWorldLocation",(Native)&USplineComponent::execFindTangentClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindTransformClosestToWorldLocation",(Native)&USplineComponent::execFindTransformClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "FindUpVectorClosestToWorldLocation",(Native)&USplineComponent::execFindUpVectorClosestToWorldLocation);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetArriveTangentAtSplinePoint",(Native)&USplineComponent::execGetArriveTangentAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetDefaultUpVector",(Native)&USplineComponent::execGetDefaultUpVector);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetDirectionAtDistanceAlongSpline",(Native)&USplineComponent::execGetDirectionAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetDirectionAtSplinePoint",(Native)&USplineComponent::execGetDirectionAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetDirectionAtTime",(Native)&USplineComponent::execGetDirectionAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetDistanceAlongSplineAtSplinePoint",(Native)&USplineComponent::execGetDistanceAlongSplineAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetInputKeyAtDistanceAlongSpline",(Native)&USplineComponent::execGetInputKeyAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetLeaveTangentAtSplinePoint",(Native)&USplineComponent::execGetLeaveTangentAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetLocalLocationAndTangentAtSplinePoint",(Native)&USplineComponent::execGetLocalLocationAndTangentAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetLocationAndTangentAtSplinePoint",(Native)&USplineComponent::execGetLocationAndTangentAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetLocationAtDistanceAlongSpline",(Native)&USplineComponent::execGetLocationAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetLocationAtSplinePoint",(Native)&USplineComponent::execGetLocationAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetLocationAtTime",(Native)&USplineComponent::execGetLocationAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetNumberOfSplinePoints",(Native)&USplineComponent::execGetNumberOfSplinePoints);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetRightVectorAtDistanceAlongSpline",(Native)&USplineComponent::execGetRightVectorAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetRightVectorAtSplinePoint",(Native)&USplineComponent::execGetRightVectorAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetRightVectorAtTime",(Native)&USplineComponent::execGetRightVectorAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetRollAtDistanceAlongSpline",(Native)&USplineComponent::execGetRollAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetRollAtSplinePoint",(Native)&USplineComponent::execGetRollAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetRollAtTime",(Native)&USplineComponent::execGetRollAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetRotationAtDistanceAlongSpline",(Native)&USplineComponent::execGetRotationAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetRotationAtSplinePoint",(Native)&USplineComponent::execGetRotationAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetRotationAtTime",(Native)&USplineComponent::execGetRotationAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetScaleAtDistanceAlongSpline",(Native)&USplineComponent::execGetScaleAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetScaleAtSplinePoint",(Native)&USplineComponent::execGetScaleAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetScaleAtTime",(Native)&USplineComponent::execGetScaleAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetSplineLength",(Native)&USplineComponent::execGetSplineLength);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetSplinePointType",(Native)&USplineComponent::execGetSplinePointType);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetTangentAtDistanceAlongSpline",(Native)&USplineComponent::execGetTangentAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetTangentAtSplinePoint",(Native)&USplineComponent::execGetTangentAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetTangentAtTime",(Native)&USplineComponent::execGetTangentAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetTransformAtDistanceAlongSpline",(Native)&USplineComponent::execGetTransformAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetTransformAtSplinePoint",(Native)&USplineComponent::execGetTransformAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetTransformAtTime",(Native)&USplineComponent::execGetTransformAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetUpVectorAtDistanceAlongSpline",(Native)&USplineComponent::execGetUpVectorAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetUpVectorAtSplinePoint",(Native)&USplineComponent::execGetUpVectorAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetUpVectorAtTime",(Native)&USplineComponent::execGetUpVectorAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetWorldDirectionAtDistanceAlongSpline",(Native)&USplineComponent::execGetWorldDirectionAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetWorldDirectionAtTime",(Native)&USplineComponent::execGetWorldDirectionAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetWorldLocationAtDistanceAlongSpline",(Native)&USplineComponent::execGetWorldLocationAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetWorldLocationAtSplinePoint",(Native)&USplineComponent::execGetWorldLocationAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetWorldLocationAtTime",(Native)&USplineComponent::execGetWorldLocationAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetWorldRotationAtDistanceAlongSpline",(Native)&USplineComponent::execGetWorldRotationAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetWorldRotationAtTime",(Native)&USplineComponent::execGetWorldRotationAtTime);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "GetWorldTangentAtDistanceAlongSpline",(Native)&USplineComponent::execGetWorldTangentAtDistanceAlongSpline);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "IsClosedLoop",(Native)&USplineComponent::execIsClosedLoop);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "RemoveSplinePoint",(Native)&USplineComponent::execRemoveSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetClosedLoop",(Native)&USplineComponent::execSetClosedLoop);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetClosedLoopAtPosition",(Native)&USplineComponent::execSetClosedLoopAtPosition);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetDefaultUpVector",(Native)&USplineComponent::execSetDefaultUpVector);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetDrawDebug",(Native)&USplineComponent::execSetDrawDebug);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetLocationAtSplinePoint",(Native)&USplineComponent::execSetLocationAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetSelectedSplineSegmentColor",(Native)&USplineComponent::execSetSelectedSplineSegmentColor);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetSplineLocalPoints",(Native)&USplineComponent::execSetSplineLocalPoints);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetSplinePoints",(Native)&USplineComponent::execSetSplinePoints);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetSplinePointType",(Native)&USplineComponent::execSetSplinePointType);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetSplineWorldPoints",(Native)&USplineComponent::execSetSplineWorldPoints);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetTangentAtSplinePoint",(Native)&USplineComponent::execSetTangentAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetTangentsAtSplinePoint",(Native)&USplineComponent::execSetTangentsAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetUnselectedSplineSegmentColor",(Native)&USplineComponent::execSetUnselectedSplineSegmentColor);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetUpVectorAtSplinePoint",(Native)&USplineComponent::execSetUpVectorAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "SetWorldLocationAtSplinePoint",(Native)&USplineComponent::execSetWorldLocationAtSplinePoint);
		FNativeFunctionRegistrar::RegisterFunction(USplineComponent::StaticClass(), "UpdateSpline",(Native)&USplineComponent::execUpdateSpline);
	}
	IMPLEMENT_CLASS(USplineComponent, 3688620279);
	void USubDSurfaceComponent::StaticRegisterNativesUSubDSurfaceComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USubDSurfaceComponent::StaticClass(), "SetMesh",(Native)&USubDSurfaceComponent::execSetMesh);
	}
	IMPLEMENT_CLASS(USubDSurfaceComponent, 3486997806);
static class UEnum* EVerticalTextAligment_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVerticalTextAligment();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EVerticalTextAligment, Z_Construct_UPackage__Script_Engine(), TEXT("EVerticalTextAligment"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVerticalTextAligment(EVerticalTextAligment_StaticEnum, TEXT("/Script/Engine"), TEXT("EVerticalTextAligment"), false, nullptr, nullptr);
static class UEnum* EHorizTextAligment_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EHorizTextAligment();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EHorizTextAligment, Z_Construct_UPackage__Script_Engine(), TEXT("EHorizTextAligment"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHorizTextAligment(EHorizTextAligment_StaticEnum, TEXT("/Script/Engine"), TEXT("EHorizTextAligment"), false, nullptr, nullptr);
	void UTextRenderComponent::StaticRegisterNativesUTextRenderComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "GetTextLocalSize",(Native)&UTextRenderComponent::execGetTextLocalSize);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "GetTextWorldSize",(Native)&UTextRenderComponent::execGetTextWorldSize);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "K2_SetText",(Native)&UTextRenderComponent::execK2_SetText);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetFont",(Native)&UTextRenderComponent::execSetFont);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetHorizontalAlignment",(Native)&UTextRenderComponent::execSetHorizontalAlignment);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetHorizSpacingAdjust",(Native)&UTextRenderComponent::execSetHorizSpacingAdjust);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetText",(Native)&UTextRenderComponent::execSetText);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetTextMaterial",(Native)&UTextRenderComponent::execSetTextMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetTextRenderColor",(Native)&UTextRenderComponent::execSetTextRenderColor);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetVerticalAlignment",(Native)&UTextRenderComponent::execSetVerticalAlignment);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetVertSpacingAdjust",(Native)&UTextRenderComponent::execSetVertSpacingAdjust);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetWorldSize",(Native)&UTextRenderComponent::execSetWorldSize);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetXScale",(Native)&UTextRenderComponent::execSetXScale);
		FNativeFunctionRegistrar::RegisterFunction(UTextRenderComponent::StaticClass(), "SetYScale",(Native)&UTextRenderComponent::execSetYScale);
	}
	IMPLEMENT_CLASS(UTextRenderComponent, 3972447411);
	void UVectorFieldComponent::StaticRegisterNativesUVectorFieldComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UVectorFieldComponent::StaticClass(), "SetIntensity",(Native)&UVectorFieldComponent::execSetIntensity);
	}
	IMPLEMENT_CLASS(UVectorFieldComponent, 3278208959);
	void URadialForceComponent::StaticRegisterNativesURadialForceComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(URadialForceComponent::StaticClass(), "AddObjectTypeToAffect",(Native)&URadialForceComponent::execAddObjectTypeToAffect);
		FNativeFunctionRegistrar::RegisterFunction(URadialForceComponent::StaticClass(), "FireImpulse",(Native)&URadialForceComponent::execFireImpulse);
		FNativeFunctionRegistrar::RegisterFunction(URadialForceComponent::StaticClass(), "RemoveObjectTypeToAffect",(Native)&URadialForceComponent::execRemoveObjectTypeToAffect);
	}
	IMPLEMENT_CLASS(URadialForceComponent, 3447418177);
static class UEnum* EReflectionSourceType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EReflectionSourceType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EReflectionSourceType, Z_Construct_UPackage__Script_Engine(), TEXT("EReflectionSourceType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EReflectionSourceType(EReflectionSourceType_StaticEnum, TEXT("/Script/Engine"), TEXT("EReflectionSourceType"), false, nullptr, nullptr);
	void UReflectionCaptureComponent::StaticRegisterNativesUReflectionCaptureComponent()
	{
	}
	IMPLEMENT_CLASS(UReflectionCaptureComponent, 1352233743);
	void UBoxReflectionCaptureComponent::StaticRegisterNativesUBoxReflectionCaptureComponent()
	{
	}
	IMPLEMENT_CLASS(UBoxReflectionCaptureComponent, 1812735075);
	void UPlaneReflectionCaptureComponent::StaticRegisterNativesUPlaneReflectionCaptureComponent()
	{
	}
	IMPLEMENT_CLASS(UPlaneReflectionCaptureComponent, 470608808);
	void USphereReflectionCaptureComponent::StaticRegisterNativesUSphereReflectionCaptureComponent()
	{
	}
	IMPLEMENT_CLASS(USphereReflectionCaptureComponent, 1296330936);
	void UScriptViewportClient::StaticRegisterNativesUScriptViewportClient()
	{
	}
	IMPLEMENT_CLASS(UScriptViewportClient, 626475744);
class UScriptStruct* FDebugDisplayProperty::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDebugDisplayProperty();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDebugDisplayProperty_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDebugDisplayProperty, Z_Construct_UPackage__Script_Engine(), TEXT("DebugDisplayProperty"), sizeof(FDebugDisplayProperty), Get_Z_Construct_UScriptStruct_FDebugDisplayProperty_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDebugDisplayProperty(FDebugDisplayProperty::StaticStruct, TEXT("/Script/Engine"), TEXT("DebugDisplayProperty"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDebugDisplayProperty
{
	FScriptStruct_Engine_StaticRegisterNativesFDebugDisplayProperty()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DebugDisplayProperty")),new UScriptStruct::TCppStructOps<FDebugDisplayProperty>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDebugDisplayProperty;
	void UGameViewportClient::StaticRegisterNativesUGameViewportClient()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameViewportClient::StaticClass(), "SetConsoleTarget",(Native)&UGameViewportClient::execSetConsoleTarget);
		FNativeFunctionRegistrar::RegisterFunction(UGameViewportClient::StaticClass(), "ShowTitleSafeArea",(Native)&UGameViewportClient::execShowTitleSafeArea);
		FNativeFunctionRegistrar::RegisterFunction(UGameViewportClient::StaticClass(), "SSSwapControllers",(Native)&UGameViewportClient::execSSSwapControllers);
	}
	IMPLEMENT_CLASS(UGameViewportClient, 635720034);
class UScriptStruct* FEngineShowFlagsSetting::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineShowFlagsSetting();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEngineShowFlagsSetting_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEngineShowFlagsSetting, Z_Construct_UPackage__Script_Engine(), TEXT("EngineShowFlagsSetting"), sizeof(FEngineShowFlagsSetting), Get_Z_Construct_UScriptStruct_FEngineShowFlagsSetting_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEngineShowFlagsSetting(FEngineShowFlagsSetting::StaticStruct, TEXT("/Script/Engine"), TEXT("EngineShowFlagsSetting"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEngineShowFlagsSetting
{
	FScriptStruct_Engine_StaticRegisterNativesFEngineShowFlagsSetting()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EngineShowFlagsSetting")),new UScriptStruct::TCppStructOps<FEngineShowFlagsSetting>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEngineShowFlagsSetting;
	void USceneCaptureComponent::StaticRegisterNativesUSceneCaptureComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponent::StaticClass(), "ClearShowOnlyComponents",(Native)&USceneCaptureComponent::execClearShowOnlyComponents);
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponent::StaticClass(), "HideActorComponents",(Native)&USceneCaptureComponent::execHideActorComponents);
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponent::StaticClass(), "HideComponent",(Native)&USceneCaptureComponent::execHideComponent);
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponent::StaticClass(), "RemoveShowOnlyActorComponents",(Native)&USceneCaptureComponent::execRemoveShowOnlyActorComponents);
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponent::StaticClass(), "RemoveShowOnlyComponent",(Native)&USceneCaptureComponent::execRemoveShowOnlyComponent);
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponent::StaticClass(), "ShowOnlyActorComponents",(Native)&USceneCaptureComponent::execShowOnlyActorComponents);
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponent::StaticClass(), "ShowOnlyComponent",(Native)&USceneCaptureComponent::execShowOnlyComponent);
	}
	IMPLEMENT_CLASS(USceneCaptureComponent, 1932783207);
	void UPlanarReflectionComponent::StaticRegisterNativesUPlanarReflectionComponent()
	{
	}
	IMPLEMENT_CLASS(UPlanarReflectionComponent, 1390198109);
	void USceneCaptureComponent2D::StaticRegisterNativesUSceneCaptureComponent2D()
	{
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponent2D::StaticClass(), "AddOrUpdateBlendable",(Native)&USceneCaptureComponent2D::execAddOrUpdateBlendable);
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponent2D::StaticClass(), "CaptureScene",(Native)&USceneCaptureComponent2D::execCaptureScene);
	}
	IMPLEMENT_CLASS(USceneCaptureComponent2D, 1595387187);
	void USceneCaptureComponentCube::StaticRegisterNativesUSceneCaptureComponentCube()
	{
		FNativeFunctionRegistrar::RegisterFunction(USceneCaptureComponentCube::StaticClass(), "CaptureScene",(Native)&USceneCaptureComponentCube::execCaptureScene);
	}
	IMPLEMENT_CLASS(USceneCaptureComponentCube, 1840499826);
	void USpringArmComponent::StaticRegisterNativesUSpringArmComponent()
	{
	}
	IMPLEMENT_CLASS(USpringArmComponent, 2840644699);
static class UEnum* EStereoLayerShape_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EStereoLayerShape();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EStereoLayerShape, Z_Construct_UPackage__Script_Engine(), TEXT("EStereoLayerShape"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EStereoLayerShape(EStereoLayerShape_StaticEnum, TEXT("/Script/Engine"), TEXT("EStereoLayerShape"), false, nullptr, nullptr);
static class UEnum* EStereoLayerType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EStereoLayerType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EStereoLayerType, Z_Construct_UPackage__Script_Engine(), TEXT("EStereoLayerType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EStereoLayerType(EStereoLayerType_StaticEnum, TEXT("/Script/Engine"), TEXT("EStereoLayerType"), false, nullptr, nullptr);
	void UStereoLayerComponent::StaticRegisterNativesUStereoLayerComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerComponent::StaticClass(), "GetPriority",(Native)&UStereoLayerComponent::execGetPriority);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerComponent::StaticClass(), "GetQuadSize",(Native)&UStereoLayerComponent::execGetQuadSize);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerComponent::StaticClass(), "GetTexture",(Native)&UStereoLayerComponent::execGetTexture);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerComponent::StaticClass(), "GetUVRect",(Native)&UStereoLayerComponent::execGetUVRect);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerComponent::StaticClass(), "MarkTextureForUpdate",(Native)&UStereoLayerComponent::execMarkTextureForUpdate);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerComponent::StaticClass(), "SetPriority",(Native)&UStereoLayerComponent::execSetPriority);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerComponent::StaticClass(), "SetQuadSize",(Native)&UStereoLayerComponent::execSetQuadSize);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerComponent::StaticClass(), "SetTexture",(Native)&UStereoLayerComponent::execSetTexture);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerComponent::StaticClass(), "SetUVRect",(Native)&UStereoLayerComponent::execSetUVRect);
	}
	IMPLEMENT_CLASS(UStereoLayerComponent, 261188561);
static class UEnum* EWindSourceType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EWindSourceType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EWindSourceType, Z_Construct_UPackage__Script_Engine(), TEXT("EWindSourceType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EWindSourceType(EWindSourceType_StaticEnum, TEXT("/Script/Engine"), TEXT("EWindSourceType"), false, nullptr, nullptr);
	void UWindDirectionalSourceComponent::StaticRegisterNativesUWindDirectionalSourceComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UWindDirectionalSourceComponent::StaticClass(), "SetMaximumGustAmount",(Native)&UWindDirectionalSourceComponent::execSetMaximumGustAmount);
		FNativeFunctionRegistrar::RegisterFunction(UWindDirectionalSourceComponent::StaticClass(), "SetMinimumGustAmount",(Native)&UWindDirectionalSourceComponent::execSetMinimumGustAmount);
		FNativeFunctionRegistrar::RegisterFunction(UWindDirectionalSourceComponent::StaticClass(), "SetRadius",(Native)&UWindDirectionalSourceComponent::execSetRadius);
		FNativeFunctionRegistrar::RegisterFunction(UWindDirectionalSourceComponent::StaticClass(), "SetSpeed",(Native)&UWindDirectionalSourceComponent::execSetSpeed);
		FNativeFunctionRegistrar::RegisterFunction(UWindDirectionalSourceComponent::StaticClass(), "SetStrength",(Native)&UWindDirectionalSourceComponent::execSetStrength);
		FNativeFunctionRegistrar::RegisterFunction(UWindDirectionalSourceComponent::StaticClass(), "SetWindType",(Native)&UWindDirectionalSourceComponent::execSetWindType);
	}
	IMPLEMENT_CLASS(UWindDirectionalSourceComponent, 2151654303);
static class UEnum* ETimelineDirection_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETimelineDirection();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETimelineDirection, Z_Construct_UPackage__Script_Engine(), TEXT("ETimelineDirection"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETimelineDirection(ETimelineDirection_StaticEnum, TEXT("/Script/Engine"), TEXT("ETimelineDirection"), false, nullptr, nullptr);
static class UEnum* ETimelineLengthMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETimelineLengthMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETimelineLengthMode, Z_Construct_UPackage__Script_Engine(), TEXT("ETimelineLengthMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETimelineLengthMode(ETimelineLengthMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ETimelineLengthMode"), false, nullptr, nullptr);
class UScriptStruct* FTimeline::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimeline();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTimeline_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTimeline, Z_Construct_UPackage__Script_Engine(), TEXT("Timeline"), sizeof(FTimeline), Get_Z_Construct_UScriptStruct_FTimeline_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTimeline(FTimeline::StaticStruct, TEXT("/Script/Engine"), TEXT("Timeline"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTimeline
{
	FScriptStruct_Engine_StaticRegisterNativesFTimeline()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Timeline")),new UScriptStruct::TCppStructOps<FTimeline>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTimeline;
class UScriptStruct* FTimelineLinearColorTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimelineLinearColorTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTimelineLinearColorTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTimelineLinearColorTrack, Z_Construct_UPackage__Script_Engine(), TEXT("TimelineLinearColorTrack"), sizeof(FTimelineLinearColorTrack), Get_Z_Construct_UScriptStruct_FTimelineLinearColorTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTimelineLinearColorTrack(FTimelineLinearColorTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("TimelineLinearColorTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTimelineLinearColorTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFTimelineLinearColorTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TimelineLinearColorTrack")),new UScriptStruct::TCppStructOps<FTimelineLinearColorTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTimelineLinearColorTrack;
class UScriptStruct* FTimelineFloatTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimelineFloatTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTimelineFloatTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTimelineFloatTrack, Z_Construct_UPackage__Script_Engine(), TEXT("TimelineFloatTrack"), sizeof(FTimelineFloatTrack), Get_Z_Construct_UScriptStruct_FTimelineFloatTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTimelineFloatTrack(FTimelineFloatTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("TimelineFloatTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTimelineFloatTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFTimelineFloatTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TimelineFloatTrack")),new UScriptStruct::TCppStructOps<FTimelineFloatTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTimelineFloatTrack;
class UScriptStruct* FTimelineVectorTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimelineVectorTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTimelineVectorTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTimelineVectorTrack, Z_Construct_UPackage__Script_Engine(), TEXT("TimelineVectorTrack"), sizeof(FTimelineVectorTrack), Get_Z_Construct_UScriptStruct_FTimelineVectorTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTimelineVectorTrack(FTimelineVectorTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("TimelineVectorTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTimelineVectorTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFTimelineVectorTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TimelineVectorTrack")),new UScriptStruct::TCppStructOps<FTimelineVectorTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTimelineVectorTrack;
class UScriptStruct* FTimelineEventEntry::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimelineEventEntry();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTimelineEventEntry_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTimelineEventEntry, Z_Construct_UPackage__Script_Engine(), TEXT("TimelineEventEntry"), sizeof(FTimelineEventEntry), Get_Z_Construct_UScriptStruct_FTimelineEventEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTimelineEventEntry(FTimelineEventEntry::StaticStruct, TEXT("/Script/Engine"), TEXT("TimelineEventEntry"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTimelineEventEntry
{
	FScriptStruct_Engine_StaticRegisterNativesFTimelineEventEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TimelineEventEntry")),new UScriptStruct::TCppStructOps<FTimelineEventEntry>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTimelineEventEntry;
	void UTimelineComponent::StaticRegisterNativesUTimelineComponent()
	{
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "GetIgnoreTimeDilation",(Native)&UTimelineComponent::execGetIgnoreTimeDilation);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "GetPlaybackPosition",(Native)&UTimelineComponent::execGetPlaybackPosition);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "GetPlayRate",(Native)&UTimelineComponent::execGetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "GetTimelineLength",(Native)&UTimelineComponent::execGetTimelineLength);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "IsLooping",(Native)&UTimelineComponent::execIsLooping);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "IsPlaying",(Native)&UTimelineComponent::execIsPlaying);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "IsReversing",(Native)&UTimelineComponent::execIsReversing);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "OnRep_Timeline",(Native)&UTimelineComponent::execOnRep_Timeline);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "Play",(Native)&UTimelineComponent::execPlay);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "PlayFromStart",(Native)&UTimelineComponent::execPlayFromStart);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "Reverse",(Native)&UTimelineComponent::execReverse);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "ReverseFromEnd",(Native)&UTimelineComponent::execReverseFromEnd);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetFloatCurve",(Native)&UTimelineComponent::execSetFloatCurve);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetIgnoreTimeDilation",(Native)&UTimelineComponent::execSetIgnoreTimeDilation);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetLinearColorCurve",(Native)&UTimelineComponent::execSetLinearColorCurve);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetLooping",(Native)&UTimelineComponent::execSetLooping);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetNewTime",(Native)&UTimelineComponent::execSetNewTime);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetPlaybackPosition",(Native)&UTimelineComponent::execSetPlaybackPosition);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetPlayRate",(Native)&UTimelineComponent::execSetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetTimelineLength",(Native)&UTimelineComponent::execSetTimelineLength);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetTimelineLengthMode",(Native)&UTimelineComponent::execSetTimelineLengthMode);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "SetVectorCurve",(Native)&UTimelineComponent::execSetVectorCurve);
		FNativeFunctionRegistrar::RegisterFunction(UTimelineComponent::StaticClass(), "Stop",(Native)&UTimelineComponent::execStop);
	}
	IMPLEMENT_CLASS(UTimelineComponent, 2245281214);
	void UAISystemBase::StaticRegisterNativesUAISystemBase()
	{
	}
	IMPLEMENT_CLASS(UAISystemBase, 1377453362);
	void UAnimComposite::StaticRegisterNativesUAnimComposite()
	{
	}
	IMPLEMENT_CLASS(UAnimComposite, 1251437523);
static class UEnum* EAdditiveBasePoseType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAdditiveBasePoseType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAdditiveBasePoseType, Z_Construct_UPackage__Script_Engine(), TEXT("EAdditiveBasePoseType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAdditiveBasePoseType(EAdditiveBasePoseType_StaticEnum, TEXT("/Script/Engine"), TEXT("EAdditiveBasePoseType"), false, nullptr, nullptr);
static class UEnum* AnimationKeyFormat_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_AnimationKeyFormat();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_AnimationKeyFormat, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationKeyFormat"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_AnimationKeyFormat(AnimationKeyFormat_StaticEnum, TEXT("/Script/Engine"), TEXT("AnimationKeyFormat"), false, nullptr, nullptr);
static class UEnum* AnimationCompressionFormat_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_AnimationCompressionFormat();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_AnimationCompressionFormat, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationCompressionFormat"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_AnimationCompressionFormat(AnimationCompressionFormat_StaticEnum, TEXT("/Script/Engine"), TEXT("AnimationCompressionFormat"), false, nullptr, nullptr);
class UScriptStruct* FCompressedTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCompressedTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCompressedTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCompressedTrack, Z_Construct_UPackage__Script_Engine(), TEXT("CompressedTrack"), sizeof(FCompressedTrack), Get_Z_Construct_UScriptStruct_FCompressedTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCompressedTrack(FCompressedTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("CompressedTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCompressedTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFCompressedTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CompressedTrack")),new UScriptStruct::TCppStructOps<FCompressedTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCompressedTrack;
class UScriptStruct* FCurveTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCurveTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCurveTrack, Z_Construct_UPackage__Script_Engine(), TEXT("CurveTrack"), sizeof(FCurveTrack), Get_Z_Construct_UScriptStruct_FCurveTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCurveTrack(FCurveTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("CurveTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCurveTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFCurveTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CurveTrack")),new UScriptStruct::TCppStructOps<FCurveTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCurveTrack;
class UScriptStruct* FScaleTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FScaleTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FScaleTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FScaleTrack, Z_Construct_UPackage__Script_Engine(), TEXT("ScaleTrack"), sizeof(FScaleTrack), Get_Z_Construct_UScriptStruct_FScaleTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FScaleTrack(FScaleTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("ScaleTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFScaleTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFScaleTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ScaleTrack")),new UScriptStruct::TCppStructOps<FScaleTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFScaleTrack;
class UScriptStruct* FRotationTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRotationTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRotationTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRotationTrack, Z_Construct_UPackage__Script_Engine(), TEXT("RotationTrack"), sizeof(FRotationTrack), Get_Z_Construct_UScriptStruct_FRotationTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRotationTrack(FRotationTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("RotationTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRotationTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFRotationTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RotationTrack")),new UScriptStruct::TCppStructOps<FRotationTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRotationTrack;
class UScriptStruct* FTranslationTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTranslationTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTranslationTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTranslationTrack, Z_Construct_UPackage__Script_Engine(), TEXT("TranslationTrack"), sizeof(FTranslationTrack), Get_Z_Construct_UScriptStruct_FTranslationTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTranslationTrack(FTranslationTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("TranslationTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTranslationTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFTranslationTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TranslationTrack")),new UScriptStruct::TCppStructOps<FTranslationTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTranslationTrack;
class UScriptStruct* FTrackToSkeletonMap::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTrackToSkeletonMap();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTrackToSkeletonMap_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTrackToSkeletonMap, Z_Construct_UPackage__Script_Engine(), TEXT("TrackToSkeletonMap"), sizeof(FTrackToSkeletonMap), Get_Z_Construct_UScriptStruct_FTrackToSkeletonMap_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTrackToSkeletonMap(FTrackToSkeletonMap::StaticStruct, TEXT("/Script/Engine"), TEXT("TrackToSkeletonMap"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTrackToSkeletonMap
{
	FScriptStruct_Engine_StaticRegisterNativesFTrackToSkeletonMap()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TrackToSkeletonMap")),new UScriptStruct::TCppStructOps<FTrackToSkeletonMap>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTrackToSkeletonMap;
class UScriptStruct* FAnimSequenceTrackContainer::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSequenceTrackContainer();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimSequenceTrackContainer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimSequenceTrackContainer, Z_Construct_UPackage__Script_Engine(), TEXT("AnimSequenceTrackContainer"), sizeof(FAnimSequenceTrackContainer), Get_Z_Construct_UScriptStruct_FAnimSequenceTrackContainer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimSequenceTrackContainer(FAnimSequenceTrackContainer::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimSequenceTrackContainer"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimSequenceTrackContainer
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimSequenceTrackContainer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimSequenceTrackContainer")),new UScriptStruct::TCppStructOps<FAnimSequenceTrackContainer>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimSequenceTrackContainer;
class UScriptStruct* FRawAnimSequenceTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRawAnimSequenceTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRawAnimSequenceTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRawAnimSequenceTrack, Z_Construct_UPackage__Script_Engine(), TEXT("RawAnimSequenceTrack"), sizeof(FRawAnimSequenceTrack), Get_Z_Construct_UScriptStruct_FRawAnimSequenceTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRawAnimSequenceTrack(FRawAnimSequenceTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("RawAnimSequenceTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRawAnimSequenceTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFRawAnimSequenceTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RawAnimSequenceTrack")),new UScriptStruct::TCppStructOps<FRawAnimSequenceTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRawAnimSequenceTrack;
	void UAnimSequence::StaticRegisterNativesUAnimSequence()
	{
	}
	IMPLEMENT_CLASS(UAnimSequence, 1915404440);
static class UEnum* ENotifyTriggerMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENotifyTriggerMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENotifyTriggerMode, Z_Construct_UPackage__Script_Engine(), TEXT("ENotifyTriggerMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENotifyTriggerMode(ENotifyTriggerMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ENotifyTriggerMode"), false, nullptr, nullptr);
static class UEnum* EBlendSpaceAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlendSpaceAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBlendSpaceAxis, Z_Construct_UPackage__Script_Engine(), TEXT("EBlendSpaceAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlendSpaceAxis(EBlendSpaceAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("EBlendSpaceAxis"), false, nullptr, nullptr);
class UScriptStruct* FPerBoneInterpolation::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPerBoneInterpolation();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPerBoneInterpolation_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPerBoneInterpolation, Z_Construct_UPackage__Script_Engine(), TEXT("PerBoneInterpolation"), sizeof(FPerBoneInterpolation), Get_Z_Construct_UScriptStruct_FPerBoneInterpolation_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPerBoneInterpolation(FPerBoneInterpolation::StaticStruct, TEXT("/Script/Engine"), TEXT("PerBoneInterpolation"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPerBoneInterpolation
{
	FScriptStruct_Engine_StaticRegisterNativesFPerBoneInterpolation()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PerBoneInterpolation")),new UScriptStruct::TCppStructOps<FPerBoneInterpolation>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPerBoneInterpolation;
class UScriptStruct* FGridBlendSample::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGridBlendSample();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FGridBlendSample_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGridBlendSample, Z_Construct_UPackage__Script_Engine(), TEXT("GridBlendSample"), sizeof(FGridBlendSample), Get_Z_Construct_UScriptStruct_FGridBlendSample_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGridBlendSample(FGridBlendSample::StaticStruct, TEXT("/Script/Engine"), TEXT("GridBlendSample"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFGridBlendSample
{
	FScriptStruct_Engine_StaticRegisterNativesFGridBlendSample()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GridBlendSample")),new UScriptStruct::TCppStructOps<FGridBlendSample>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFGridBlendSample;
class UScriptStruct* FEditorElement::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorElement();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEditorElement_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorElement, Z_Construct_UPackage__Script_Engine(), TEXT("EditorElement"), sizeof(FEditorElement), Get_Z_Construct_UScriptStruct_FEditorElement_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorElement(FEditorElement::StaticStruct, TEXT("/Script/Engine"), TEXT("EditorElement"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEditorElement
{
	FScriptStruct_Engine_StaticRegisterNativesFEditorElement()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorElement")),new UScriptStruct::TCppStructOps<FEditorElement>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEditorElement;
class UScriptStruct* FBlendSample::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendSample();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlendSample_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlendSample, Z_Construct_UPackage__Script_Engine(), TEXT("BlendSample"), sizeof(FBlendSample), Get_Z_Construct_UScriptStruct_FBlendSample_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlendSample(FBlendSample::StaticStruct, TEXT("/Script/Engine"), TEXT("BlendSample"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlendSample
{
	FScriptStruct_Engine_StaticRegisterNativesFBlendSample()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlendSample")),new UScriptStruct::TCppStructOps<FBlendSample>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlendSample;
class UScriptStruct* FBlendParameter::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendParameter();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlendParameter_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlendParameter, Z_Construct_UPackage__Script_Engine(), TEXT("BlendParameter"), sizeof(FBlendParameter), Get_Z_Construct_UScriptStruct_FBlendParameter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlendParameter(FBlendParameter::StaticStruct, TEXT("/Script/Engine"), TEXT("BlendParameter"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlendParameter
{
	FScriptStruct_Engine_StaticRegisterNativesFBlendParameter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlendParameter")),new UScriptStruct::TCppStructOps<FBlendParameter>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlendParameter;
class UScriptStruct* FInterpolationParameter::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpolationParameter();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInterpolationParameter_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInterpolationParameter, Z_Construct_UPackage__Script_Engine(), TEXT("InterpolationParameter"), sizeof(FInterpolationParameter), Get_Z_Construct_UScriptStruct_FInterpolationParameter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInterpolationParameter(FInterpolationParameter::StaticStruct, TEXT("/Script/Engine"), TEXT("InterpolationParameter"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInterpolationParameter
{
	FScriptStruct_Engine_StaticRegisterNativesFInterpolationParameter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InterpolationParameter")),new UScriptStruct::TCppStructOps<FInterpolationParameter>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInterpolationParameter;
	void UBlendSpaceBase::StaticRegisterNativesUBlendSpaceBase()
	{
	}
	IMPLEMENT_CLASS(UBlendSpaceBase, 972110135);
	void UBlendSpace::StaticRegisterNativesUBlendSpace()
	{
	}
	IMPLEMENT_CLASS(UBlendSpace, 4258142261);
	void UAimOffsetBlendSpace::StaticRegisterNativesUAimOffsetBlendSpace()
	{
	}
	IMPLEMENT_CLASS(UAimOffsetBlendSpace, 1519022945);
	void UBlendSpace1D::StaticRegisterNativesUBlendSpace1D()
	{
	}
	IMPLEMENT_CLASS(UBlendSpace1D, 3696643598);
	void UAimOffsetBlendSpace1D::StaticRegisterNativesUAimOffsetBlendSpace1D()
	{
	}
	IMPLEMENT_CLASS(UAimOffsetBlendSpace1D, 1235439347);
class UScriptStruct* FPoseDataContainer::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseDataContainer();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPoseDataContainer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPoseDataContainer, Z_Construct_UPackage__Script_Engine(), TEXT("PoseDataContainer"), sizeof(FPoseDataContainer), Get_Z_Construct_UScriptStruct_FPoseDataContainer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPoseDataContainer(FPoseDataContainer::StaticStruct, TEXT("/Script/Engine"), TEXT("PoseDataContainer"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPoseDataContainer
{
	FScriptStruct_Engine_StaticRegisterNativesFPoseDataContainer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PoseDataContainer")),new UScriptStruct::TCppStructOps<FPoseDataContainer>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPoseDataContainer;
class UScriptStruct* FPoseData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPoseData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPoseData, Z_Construct_UPackage__Script_Engine(), TEXT("PoseData"), sizeof(FPoseData), Get_Z_Construct_UScriptStruct_FPoseData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPoseData(FPoseData::StaticStruct, TEXT("/Script/Engine"), TEXT("PoseData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPoseData
{
	FScriptStruct_Engine_StaticRegisterNativesFPoseData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PoseData")),new UScriptStruct::TCppStructOps<FPoseData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPoseData;
	void UPoseAsset::StaticRegisterNativesUPoseAsset()
	{
	}
	IMPLEMENT_CLASS(UPoseAsset, 91103004);
static class UEnum* ETransitionLogicType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETransitionLogicType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETransitionLogicType, Z_Construct_UPackage__Script_Engine(), TEXT("ETransitionLogicType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETransitionLogicType(ETransitionLogicType_StaticEnum, TEXT("/Script/Engine"), TEXT("ETransitionLogicType"), false, nullptr, nullptr);
static class UEnum* ETransitionBlendMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETransitionBlendMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETransitionBlendMode, Z_Construct_UPackage__Script_Engine(), TEXT("ETransitionBlendMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETransitionBlendMode(ETransitionBlendMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ETransitionBlendMode"), false, nullptr, nullptr);
class UScriptStruct* FBakedAnimationStateMachine::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBakedAnimationStateMachine();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBakedAnimationStateMachine_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBakedAnimationStateMachine, Z_Construct_UPackage__Script_Engine(), TEXT("BakedAnimationStateMachine"), sizeof(FBakedAnimationStateMachine), Get_Z_Construct_UScriptStruct_FBakedAnimationStateMachine_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBakedAnimationStateMachine(FBakedAnimationStateMachine::StaticStruct, TEXT("/Script/Engine"), TEXT("BakedAnimationStateMachine"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBakedAnimationStateMachine
{
	FScriptStruct_Engine_StaticRegisterNativesFBakedAnimationStateMachine()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BakedAnimationStateMachine")),new UScriptStruct::TCppStructOps<FBakedAnimationStateMachine>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBakedAnimationStateMachine;
class UScriptStruct* FBakedAnimationState::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBakedAnimationState();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBakedAnimationState_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBakedAnimationState, Z_Construct_UPackage__Script_Engine(), TEXT("BakedAnimationState"), sizeof(FBakedAnimationState), Get_Z_Construct_UScriptStruct_FBakedAnimationState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBakedAnimationState(FBakedAnimationState::StaticStruct, TEXT("/Script/Engine"), TEXT("BakedAnimationState"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBakedAnimationState
{
	FScriptStruct_Engine_StaticRegisterNativesFBakedAnimationState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BakedAnimationState")),new UScriptStruct::TCppStructOps<FBakedAnimationState>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBakedAnimationState;
class UScriptStruct* FBakedStateExitTransition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBakedStateExitTransition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBakedStateExitTransition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBakedStateExitTransition, Z_Construct_UPackage__Script_Engine(), TEXT("BakedStateExitTransition"), sizeof(FBakedStateExitTransition), Get_Z_Construct_UScriptStruct_FBakedStateExitTransition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBakedStateExitTransition(FBakedStateExitTransition::StaticStruct, TEXT("/Script/Engine"), TEXT("BakedStateExitTransition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBakedStateExitTransition
{
	FScriptStruct_Engine_StaticRegisterNativesFBakedStateExitTransition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BakedStateExitTransition")),new UScriptStruct::TCppStructOps<FBakedStateExitTransition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBakedStateExitTransition;
class UScriptStruct* FAnimationTransitionBetweenStates::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationTransitionBetweenStates();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimationTransitionBetweenStates_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimationTransitionBetweenStates, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationTransitionBetweenStates"), sizeof(FAnimationTransitionBetweenStates), Get_Z_Construct_UScriptStruct_FAnimationTransitionBetweenStates_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimationTransitionBetweenStates(FAnimationTransitionBetweenStates::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimationTransitionBetweenStates"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimationTransitionBetweenStates
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimationTransitionBetweenStates()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimationTransitionBetweenStates")),new UScriptStruct::TCppStructOps<FAnimationTransitionBetweenStates>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimationTransitionBetweenStates;
class UScriptStruct* FAnimationState::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationState();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimationState_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimationState, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationState"), sizeof(FAnimationState), Get_Z_Construct_UScriptStruct_FAnimationState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimationState(FAnimationState::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimationState"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimationState
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimationState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimationState")),new UScriptStruct::TCppStructOps<FAnimationState>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimationState;
class UScriptStruct* FAnimationStateBase::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationStateBase();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimationStateBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimationStateBase, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationStateBase"), sizeof(FAnimationStateBase), Get_Z_Construct_UScriptStruct_FAnimationStateBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimationStateBase(FAnimationStateBase::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimationStateBase"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimationStateBase
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimationStateBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimationStateBase")),new UScriptStruct::TCppStructOps<FAnimationStateBase>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimationStateBase;
class UScriptStruct* FAnimationTransitionRule::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationTransitionRule();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimationTransitionRule_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimationTransitionRule, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationTransitionRule"), sizeof(FAnimationTransitionRule), Get_Z_Construct_UScriptStruct_FAnimationTransitionRule_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimationTransitionRule(FAnimationTransitionRule::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimationTransitionRule"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimationTransitionRule
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimationTransitionRule()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimationTransitionRule")),new UScriptStruct::TCppStructOps<FAnimationTransitionRule>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimationTransitionRule;
	void UAnimStateMachineTypes::StaticRegisterNativesUAnimStateMachineTypes()
	{
	}
	IMPLEMENT_CLASS(UAnimStateMachineTypes, 3082056348);
	void UAnimClassInterface::StaticRegisterNativesUAnimClassInterface()
	{
	}
	IMPLEMENT_CLASS(UAnimClassInterface, 2637431043);
	void UAnimClassData::StaticRegisterNativesUAnimClassData()
	{
	}
	IMPLEMENT_CLASS(UAnimClassData, 511614187);
	void UAnimCompress::StaticRegisterNativesUAnimCompress()
	{
	}
	IMPLEMENT_CLASS(UAnimCompress, 3747855318);
	void UAnimCompress_Automatic::StaticRegisterNativesUAnimCompress_Automatic()
	{
	}
	IMPLEMENT_CLASS(UAnimCompress_Automatic, 1509284763);
	void UAnimCompress_BitwiseCompressOnly::StaticRegisterNativesUAnimCompress_BitwiseCompressOnly()
	{
	}
	IMPLEMENT_CLASS(UAnimCompress_BitwiseCompressOnly, 1817705330);
	void UAnimCompress_LeastDestructive::StaticRegisterNativesUAnimCompress_LeastDestructive()
	{
	}
	IMPLEMENT_CLASS(UAnimCompress_LeastDestructive, 2045580540);
	void UAnimCompress_RemoveEverySecondKey::StaticRegisterNativesUAnimCompress_RemoveEverySecondKey()
	{
	}
	IMPLEMENT_CLASS(UAnimCompress_RemoveEverySecondKey, 1342861545);
	void UAnimCompress_RemoveLinearKeys::StaticRegisterNativesUAnimCompress_RemoveLinearKeys()
	{
	}
	IMPLEMENT_CLASS(UAnimCompress_RemoveLinearKeys, 2782965878);
	void UAnimCompress_PerTrackCompression::StaticRegisterNativesUAnimCompress_PerTrackCompression()
	{
	}
	IMPLEMENT_CLASS(UAnimCompress_PerTrackCompression, 2013555135);
	void UAnimCompress_RemoveTrivialKeys::StaticRegisterNativesUAnimCompress_RemoveTrivialKeys()
	{
	}
	IMPLEMENT_CLASS(UAnimCompress_RemoveTrivialKeys, 2101720402);
static class UEnum* EMontagePlayReturnType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMontagePlayReturnType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMontagePlayReturnType, Z_Construct_UPackage__Script_Engine(), TEXT("EMontagePlayReturnType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMontagePlayReturnType(EMontagePlayReturnType_StaticEnum, TEXT("/Script/Engine"), TEXT("EMontagePlayReturnType"), false, nullptr, nullptr);
static class UEnum* EAnimCurveType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimCurveType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAnimCurveType, Z_Construct_UPackage__Script_Engine(), TEXT("EAnimCurveType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAnimCurveType(EAnimCurveType_StaticEnum, TEXT("/Script/Engine"), TEXT("EAnimCurveType"), false, nullptr, nullptr);
class UScriptStruct* FSlotEvaluationPose::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSlotEvaluationPose();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSlotEvaluationPose_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSlotEvaluationPose, Z_Construct_UPackage__Script_Engine(), TEXT("SlotEvaluationPose"), sizeof(FSlotEvaluationPose), Get_Z_Construct_UScriptStruct_FSlotEvaluationPose_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSlotEvaluationPose(FSlotEvaluationPose::StaticStruct, TEXT("/Script/Engine"), TEXT("SlotEvaluationPose"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSlotEvaluationPose
{
	FScriptStruct_Engine_StaticRegisterNativesFSlotEvaluationPose()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SlotEvaluationPose")),new UScriptStruct::TCppStructOps<FSlotEvaluationPose>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSlotEvaluationPose;
class UScriptStruct* FA2CSPose::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FA2CSPose();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FA2CSPose_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FA2CSPose, Z_Construct_UPackage__Script_Engine(), TEXT("A2CSPose"), sizeof(FA2CSPose), Get_Z_Construct_UScriptStruct_FA2CSPose_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FA2CSPose(FA2CSPose::StaticStruct, TEXT("/Script/Engine"), TEXT("A2CSPose"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFA2CSPose
{
	FScriptStruct_Engine_StaticRegisterNativesFA2CSPose()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("A2CSPose")),new UScriptStruct::TCppStructOps<FA2CSPose>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFA2CSPose;
class UScriptStruct* FA2Pose::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FA2Pose();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FA2Pose_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FA2Pose, Z_Construct_UPackage__Script_Engine(), TEXT("A2Pose"), sizeof(FA2Pose), Get_Z_Construct_UScriptStruct_FA2Pose_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FA2Pose(FA2Pose::StaticStruct, TEXT("/Script/Engine"), TEXT("A2Pose"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFA2Pose
{
	FScriptStruct_Engine_StaticRegisterNativesFA2Pose()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("A2Pose")),new UScriptStruct::TCppStructOps<FA2Pose>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFA2Pose;
	void UAnimInstance::BlueprintInitializeAnimation()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_BlueprintInitializeAnimation),NULL);
	}
	void UAnimInstance::BlueprintPostEvaluateAnimation()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_BlueprintPostEvaluateAnimation),NULL);
	}
	void UAnimInstance::BlueprintUpdateAnimation(float DeltaTimeX)
	{
		AnimInstance_eventBlueprintUpdateAnimation_Parms Parms;
		Parms.DeltaTimeX=DeltaTimeX;
		ProcessEvent(FindFunctionChecked(ENGINE_BlueprintUpdateAnimation),&Parms);
	}
	void UAnimInstance::StaticRegisterNativesUAnimInstance()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "CalculateDirection",(Native)&UAnimInstance::execCalculateDirection);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "ClearMorphTargets",(Native)&UAnimInstance::execClearMorphTargets);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetAnimAssetPlayerLength",(Native)&UAnimInstance::execGetAnimAssetPlayerLength);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetAnimAssetPlayerTimeFraction",(Native)&UAnimInstance::execGetAnimAssetPlayerTimeFraction);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetAnimAssetPlayerTimeFromEnd",(Native)&UAnimInstance::execGetAnimAssetPlayerTimeFromEnd);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetAnimAssetPlayerTimeFromEndFraction",(Native)&UAnimInstance::execGetAnimAssetPlayerTimeFromEndFraction);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetCurrentActiveMontage",(Native)&UAnimInstance::execGetCurrentActiveMontage);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetCurrentStateElapsedTime",(Native)&UAnimInstance::execGetCurrentStateElapsedTime);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetCurrentStateName",(Native)&UAnimInstance::execGetCurrentStateName);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetCurveValue",(Native)&UAnimInstance::execGetCurveValue);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceAssetPlayerLength",(Native)&UAnimInstance::execGetInstanceAssetPlayerLength);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceAssetPlayerTime",(Native)&UAnimInstance::execGetInstanceAssetPlayerTime);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceAssetPlayerTimeFraction",(Native)&UAnimInstance::execGetInstanceAssetPlayerTimeFraction);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceAssetPlayerTimeFromEnd",(Native)&UAnimInstance::execGetInstanceAssetPlayerTimeFromEnd);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceAssetPlayerTimeFromEndFraction",(Native)&UAnimInstance::execGetInstanceAssetPlayerTimeFromEndFraction);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceCurrentStateElapsedTime",(Native)&UAnimInstance::execGetInstanceCurrentStateElapsedTime);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceMachineWeight",(Native)&UAnimInstance::execGetInstanceMachineWeight);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceStateWeight",(Native)&UAnimInstance::execGetInstanceStateWeight);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceTransitionCrossfadeDuration",(Native)&UAnimInstance::execGetInstanceTransitionCrossfadeDuration);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceTransitionTimeElapsed",(Native)&UAnimInstance::execGetInstanceTransitionTimeElapsed);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetInstanceTransitionTimeElapsedFraction",(Native)&UAnimInstance::execGetInstanceTransitionTimeElapsedFraction);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetOwningActor",(Native)&UAnimInstance::execGetOwningActor);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetOwningComponent",(Native)&UAnimInstance::execGetOwningComponent);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetRelevantAnimLength",(Native)&UAnimInstance::execGetRelevantAnimLength);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetRelevantAnimTime",(Native)&UAnimInstance::execGetRelevantAnimTime);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetRelevantAnimTimeFraction",(Native)&UAnimInstance::execGetRelevantAnimTimeFraction);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetRelevantAnimTimeRemaining",(Native)&UAnimInstance::execGetRelevantAnimTimeRemaining);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetRelevantAnimTimeRemainingFraction",(Native)&UAnimInstance::execGetRelevantAnimTimeRemainingFraction);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetStateWeight",(Native)&UAnimInstance::execGetStateWeight);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetSyncGroupPosition",(Native)&UAnimInstance::execGetSyncGroupPosition);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "GetTimeToClosestMarker",(Native)&UAnimInstance::execGetTimeToClosestMarker);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "HasMarkerBeenHitThisFrame",(Native)&UAnimInstance::execHasMarkerBeenHitThisFrame);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "IsAnyMontagePlaying",(Native)&UAnimInstance::execIsAnyMontagePlaying);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "IsPlayingSlotAnimation",(Native)&UAnimInstance::execIsPlayingSlotAnimation);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "IsSyncGroupBetweenMarkers",(Native)&UAnimInstance::execIsSyncGroupBetweenMarkers);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "LockAIResources",(Native)&UAnimInstance::execLockAIResources);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_GetBlendTime",(Native)&UAnimInstance::execMontage_GetBlendTime);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_GetCurrentSection",(Native)&UAnimInstance::execMontage_GetCurrentSection);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_GetIsStopped",(Native)&UAnimInstance::execMontage_GetIsStopped);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_GetPlayRate",(Native)&UAnimInstance::execMontage_GetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_GetPosition",(Native)&UAnimInstance::execMontage_GetPosition);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_IsActive",(Native)&UAnimInstance::execMontage_IsActive);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_IsPlaying",(Native)&UAnimInstance::execMontage_IsPlaying);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_JumpToSection",(Native)&UAnimInstance::execMontage_JumpToSection);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_JumpToSectionsEnd",(Native)&UAnimInstance::execMontage_JumpToSectionsEnd);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_Pause",(Native)&UAnimInstance::execMontage_Pause);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_Play",(Native)&UAnimInstance::execMontage_Play);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_Resume",(Native)&UAnimInstance::execMontage_Resume);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_SetNextSection",(Native)&UAnimInstance::execMontage_SetNextSection);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_SetPlayRate",(Native)&UAnimInstance::execMontage_SetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_SetPosition",(Native)&UAnimInstance::execMontage_SetPosition);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "Montage_Stop",(Native)&UAnimInstance::execMontage_Stop);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "PlaySlotAnimation",(Native)&UAnimInstance::execPlaySlotAnimation);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "PlaySlotAnimationAsDynamicMontage",(Native)&UAnimInstance::execPlaySlotAnimationAsDynamicMontage);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "SavePoseSnapshot",(Native)&UAnimInstance::execSavePoseSnapshot);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "SetMorphTarget",(Native)&UAnimInstance::execSetMorphTarget);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "SetRootMotionMode",(Native)&UAnimInstance::execSetRootMotionMode);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "SnapshotPose",(Native)&UAnimInstance::execSnapshotPose);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "StopSlotAnimation",(Native)&UAnimInstance::execStopSlotAnimation);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "TryGetPawnOwner",(Native)&UAnimInstance::execTryGetPawnOwner);
		FNativeFunctionRegistrar::RegisterFunction(UAnimInstance::StaticClass(), "UnlockAIResources",(Native)&UAnimInstance::execUnlockAIResources);
	}
	IMPLEMENT_CLASS(UAnimInstance, 745481100);
	void UAnimSingleNodeInstance::StaticRegisterNativesUAnimSingleNodeInstance()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "GetLength",(Native)&UAnimSingleNodeInstance::execGetLength);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "PlayAnim",(Native)&UAnimSingleNodeInstance::execPlayAnim);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "SetAnimationAsset",(Native)&UAnimSingleNodeInstance::execSetAnimationAsset);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "SetBlendSpaceInput",(Native)&UAnimSingleNodeInstance::execSetBlendSpaceInput);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "SetLooping",(Native)&UAnimSingleNodeInstance::execSetLooping);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "SetPlaying",(Native)&UAnimSingleNodeInstance::execSetPlaying);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "SetPlayRate",(Native)&UAnimSingleNodeInstance::execSetPlayRate);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "SetPosition",(Native)&UAnimSingleNodeInstance::execSetPosition);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "SetPositionWithPreviousTime",(Native)&UAnimSingleNodeInstance::execSetPositionWithPreviousTime);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "SetPreviewCurveOverride",(Native)&UAnimSingleNodeInstance::execSetPreviewCurveOverride);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "SetReverse",(Native)&UAnimSingleNodeInstance::execSetReverse);
		FNativeFunctionRegistrar::RegisterFunction(UAnimSingleNodeInstance::StaticClass(), "StopAnim",(Native)&UAnimSingleNodeInstance::execStopAnim);
	}
	IMPLEMENT_CLASS(UAnimSingleNodeInstance, 2338442897);
	void UAnimMetaData::StaticRegisterNativesUAnimMetaData()
	{
	}
	IMPLEMENT_CLASS(UAnimMetaData, 1758726018);
class UScriptStruct* FBranchingPointNotifyPayload::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBranchingPointNotifyPayload();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBranchingPointNotifyPayload_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBranchingPointNotifyPayload, Z_Construct_UPackage__Script_Engine(), TEXT("BranchingPointNotifyPayload"), sizeof(FBranchingPointNotifyPayload), Get_Z_Construct_UScriptStruct_FBranchingPointNotifyPayload_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBranchingPointNotifyPayload(FBranchingPointNotifyPayload::StaticStruct, TEXT("/Script/Engine"), TEXT("BranchingPointNotifyPayload"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBranchingPointNotifyPayload
{
	FScriptStruct_Engine_StaticRegisterNativesFBranchingPointNotifyPayload()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BranchingPointNotifyPayload")),new UScriptStruct::TCppStructOps<FBranchingPointNotifyPayload>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBranchingPointNotifyPayload;
	FString UAnimNotify::GetNotifyName() const
	{
		AnimNotify_eventGetNotifyName_Parms Parms;
		const_cast<UAnimNotify*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_GetNotifyName),&Parms);
		return Parms.ReturnValue;
	}
	bool UAnimNotify::Received_Notify(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation) const
	{
		AnimNotify_eventReceived_Notify_Parms Parms;
		Parms.MeshComp=MeshComp;
		Parms.Animation=Animation;
		const_cast<UAnimNotify*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_Received_Notify),&Parms);
		return !!Parms.ReturnValue;
	}
	void UAnimNotify::StaticRegisterNativesUAnimNotify()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAnimNotify::StaticClass(), "GetNotifyName",(Native)&UAnimNotify::execGetNotifyName);
	}
	IMPLEMENT_CLASS(UAnimNotify, 381385369);
	void UAnimNotify_PlayParticleEffect::StaticRegisterNativesUAnimNotify_PlayParticleEffect()
	{
	}
	IMPLEMENT_CLASS(UAnimNotify_PlayParticleEffect, 3926653324);
	void UAnimNotify_PlaySound::StaticRegisterNativesUAnimNotify_PlaySound()
	{
	}
	IMPLEMENT_CLASS(UAnimNotify_PlaySound, 1031780133);
	void UAnimNotify_ResetClothingSimulation::StaticRegisterNativesUAnimNotify_ResetClothingSimulation()
	{
	}
	IMPLEMENT_CLASS(UAnimNotify_ResetClothingSimulation, 4166502728);
	FString UAnimNotifyState::GetNotifyName() const
	{
		AnimNotifyState_eventGetNotifyName_Parms Parms;
		const_cast<UAnimNotifyState*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_GetNotifyName),&Parms);
		return Parms.ReturnValue;
	}
	bool UAnimNotifyState::Received_NotifyBegin(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation, float TotalDuration) const
	{
		AnimNotifyState_eventReceived_NotifyBegin_Parms Parms;
		Parms.MeshComp=MeshComp;
		Parms.Animation=Animation;
		Parms.TotalDuration=TotalDuration;
		const_cast<UAnimNotifyState*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_Received_NotifyBegin),&Parms);
		return !!Parms.ReturnValue;
	}
	bool UAnimNotifyState::Received_NotifyEnd(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation) const
	{
		AnimNotifyState_eventReceived_NotifyEnd_Parms Parms;
		Parms.MeshComp=MeshComp;
		Parms.Animation=Animation;
		const_cast<UAnimNotifyState*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_Received_NotifyEnd),&Parms);
		return !!Parms.ReturnValue;
	}
	bool UAnimNotifyState::Received_NotifyTick(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation, float FrameDeltaTime) const
	{
		AnimNotifyState_eventReceived_NotifyTick_Parms Parms;
		Parms.MeshComp=MeshComp;
		Parms.Animation=Animation;
		Parms.FrameDeltaTime=FrameDeltaTime;
		const_cast<UAnimNotifyState*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_Received_NotifyTick),&Parms);
		return !!Parms.ReturnValue;
	}
	void UAnimNotifyState::StaticRegisterNativesUAnimNotifyState()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAnimNotifyState::StaticClass(), "GetNotifyName",(Native)&UAnimNotifyState::execGetNotifyName);
	}
	IMPLEMENT_CLASS(UAnimNotifyState, 192413266);
	void UAnimNotifyState_TimedParticleEffect::StaticRegisterNativesUAnimNotifyState_TimedParticleEffect()
	{
	}
	IMPLEMENT_CLASS(UAnimNotifyState_TimedParticleEffect, 1926691581);
	UParticleSystem* UAnimNotifyState_Trail::OverridePSTemplate(USkeletalMeshComponent* MeshComp, UAnimSequenceBase* Animation) const
	{
		AnimNotifyState_Trail_eventOverridePSTemplate_Parms Parms;
		Parms.MeshComp=MeshComp;
		Parms.Animation=Animation;
		const_cast<UAnimNotifyState_Trail*>(this)->ProcessEvent(FindFunctionChecked(ENGINE_OverridePSTemplate),&Parms);
		return Parms.ReturnValue;
	}
	void UAnimNotifyState_Trail::StaticRegisterNativesUAnimNotifyState_Trail()
	{
	}
	IMPLEMENT_CLASS(UAnimNotifyState_Trail, 2404444481);
class UScriptStruct* FAnimSetMeshLinkup::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSetMeshLinkup();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimSetMeshLinkup_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimSetMeshLinkup, Z_Construct_UPackage__Script_Engine(), TEXT("AnimSetMeshLinkup"), sizeof(FAnimSetMeshLinkup), Get_Z_Construct_UScriptStruct_FAnimSetMeshLinkup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimSetMeshLinkup(FAnimSetMeshLinkup::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimSetMeshLinkup"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimSetMeshLinkup
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimSetMeshLinkup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimSetMeshLinkup")),new UScriptStruct::TCppStructOps<FAnimSetMeshLinkup>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimSetMeshLinkup;
	void UAnimSet::StaticRegisterNativesUAnimSet()
	{
	}
	IMPLEMENT_CLASS(UAnimSet, 4238124198);
class UScriptStruct* FAssetImportInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAssetImportInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAssetImportInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAssetImportInfo, Z_Construct_UPackage__Script_Engine(), TEXT("AssetImportInfo"), sizeof(FAssetImportInfo), Get_Z_Construct_UScriptStruct_FAssetImportInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAssetImportInfo(FAssetImportInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("AssetImportInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAssetImportInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFAssetImportInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AssetImportInfo")),new UScriptStruct::TCppStructOps<FAssetImportInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAssetImportInfo;
	void UAssetImportData::StaticRegisterNativesUAssetImportData()
	{
	}
	IMPLEMENT_CLASS(UAssetImportData, 3869239031);
class UScriptStruct* FAssetMapping::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAssetMapping();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAssetMapping_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAssetMapping, Z_Construct_UPackage__Script_Engine(), TEXT("AssetMapping"), sizeof(FAssetMapping), Get_Z_Construct_UScriptStruct_FAssetMapping_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAssetMapping(FAssetMapping::StaticStruct, TEXT("/Script/Engine"), TEXT("AssetMapping"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAssetMapping
{
	FScriptStruct_Engine_StaticRegisterNativesFAssetMapping()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AssetMapping")),new UScriptStruct::TCppStructOps<FAssetMapping>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAssetMapping;
	void UAssetMappingTable::StaticRegisterNativesUAssetMappingTable()
	{
	}
	IMPLEMENT_CLASS(UAssetMappingTable, 1800679558);
	void UAssetUserData::StaticRegisterNativesUAssetUserData()
	{
	}
	IMPLEMENT_CLASS(UAssetUserData, 861953069);
class UScriptStruct* FLaunchOnTestSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLaunchOnTestSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLaunchOnTestSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLaunchOnTestSettings, Z_Construct_UPackage__Script_Engine(), TEXT("LaunchOnTestSettings"), sizeof(FLaunchOnTestSettings), Get_Z_Construct_UScriptStruct_FLaunchOnTestSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLaunchOnTestSettings(FLaunchOnTestSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("LaunchOnTestSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLaunchOnTestSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFLaunchOnTestSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LaunchOnTestSettings")),new UScriptStruct::TCppStructOps<FLaunchOnTestSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLaunchOnTestSettings;
class UScriptStruct* FEditorMapPerformanceTestDefinition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorMapPerformanceTestDefinition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEditorMapPerformanceTestDefinition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorMapPerformanceTestDefinition, Z_Construct_UPackage__Script_Engine(), TEXT("EditorMapPerformanceTestDefinition"), sizeof(FEditorMapPerformanceTestDefinition), Get_Z_Construct_UScriptStruct_FEditorMapPerformanceTestDefinition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorMapPerformanceTestDefinition(FEditorMapPerformanceTestDefinition::StaticStruct, TEXT("/Script/Engine"), TEXT("EditorMapPerformanceTestDefinition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEditorMapPerformanceTestDefinition
{
	FScriptStruct_Engine_StaticRegisterNativesFEditorMapPerformanceTestDefinition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorMapPerformanceTestDefinition")),new UScriptStruct::TCppStructOps<FEditorMapPerformanceTestDefinition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEditorMapPerformanceTestDefinition;
class UScriptStruct* FBuildPromotionTestSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuildPromotionTestSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBuildPromotionTestSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBuildPromotionTestSettings, Z_Construct_UPackage__Script_Engine(), TEXT("BuildPromotionTestSettings"), sizeof(FBuildPromotionTestSettings), Get_Z_Construct_UScriptStruct_FBuildPromotionTestSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBuildPromotionTestSettings(FBuildPromotionTestSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("BuildPromotionTestSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBuildPromotionTestSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFBuildPromotionTestSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BuildPromotionTestSettings")),new UScriptStruct::TCppStructOps<FBuildPromotionTestSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBuildPromotionTestSettings;
class UScriptStruct* FBlueprintEditorPromotionSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintEditorPromotionSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintEditorPromotionSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintEditorPromotionSettings, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintEditorPromotionSettings"), sizeof(FBlueprintEditorPromotionSettings), Get_Z_Construct_UScriptStruct_FBlueprintEditorPromotionSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintEditorPromotionSettings(FBlueprintEditorPromotionSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintEditorPromotionSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintEditorPromotionSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintEditorPromotionSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintEditorPromotionSettings")),new UScriptStruct::TCppStructOps<FBlueprintEditorPromotionSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintEditorPromotionSettings;
class UScriptStruct* FParticleEditorPromotionSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleEditorPromotionSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleEditorPromotionSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleEditorPromotionSettings, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleEditorPromotionSettings"), sizeof(FParticleEditorPromotionSettings), Get_Z_Construct_UScriptStruct_FParticleEditorPromotionSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleEditorPromotionSettings(FParticleEditorPromotionSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleEditorPromotionSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleEditorPromotionSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleEditorPromotionSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleEditorPromotionSettings")),new UScriptStruct::TCppStructOps<FParticleEditorPromotionSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleEditorPromotionSettings;
class UScriptStruct* FMaterialEditorPromotionSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialEditorPromotionSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMaterialEditorPromotionSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialEditorPromotionSettings, Z_Construct_UPackage__Script_Engine(), TEXT("MaterialEditorPromotionSettings"), sizeof(FMaterialEditorPromotionSettings), Get_Z_Construct_UScriptStruct_FMaterialEditorPromotionSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialEditorPromotionSettings(FMaterialEditorPromotionSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("MaterialEditorPromotionSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMaterialEditorPromotionSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFMaterialEditorPromotionSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialEditorPromotionSettings")),new UScriptStruct::TCppStructOps<FMaterialEditorPromotionSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMaterialEditorPromotionSettings;
class UScriptStruct* FBuildPromotionNewProjectSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuildPromotionNewProjectSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBuildPromotionNewProjectSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBuildPromotionNewProjectSettings, Z_Construct_UPackage__Script_Engine(), TEXT("BuildPromotionNewProjectSettings"), sizeof(FBuildPromotionNewProjectSettings), Get_Z_Construct_UScriptStruct_FBuildPromotionNewProjectSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBuildPromotionNewProjectSettings(FBuildPromotionNewProjectSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("BuildPromotionNewProjectSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBuildPromotionNewProjectSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFBuildPromotionNewProjectSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BuildPromotionNewProjectSettings")),new UScriptStruct::TCppStructOps<FBuildPromotionNewProjectSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBuildPromotionNewProjectSettings;
class UScriptStruct* FBuildPromotionOpenAssetSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuildPromotionOpenAssetSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBuildPromotionOpenAssetSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBuildPromotionOpenAssetSettings, Z_Construct_UPackage__Script_Engine(), TEXT("BuildPromotionOpenAssetSettings"), sizeof(FBuildPromotionOpenAssetSettings), Get_Z_Construct_UScriptStruct_FBuildPromotionOpenAssetSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBuildPromotionOpenAssetSettings(FBuildPromotionOpenAssetSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("BuildPromotionOpenAssetSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBuildPromotionOpenAssetSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFBuildPromotionOpenAssetSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BuildPromotionOpenAssetSettings")),new UScriptStruct::TCppStructOps<FBuildPromotionOpenAssetSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBuildPromotionOpenAssetSettings;
class UScriptStruct* FBuildPromotionImportWorkflowSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuildPromotionImportWorkflowSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBuildPromotionImportWorkflowSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBuildPromotionImportWorkflowSettings, Z_Construct_UPackage__Script_Engine(), TEXT("BuildPromotionImportWorkflowSettings"), sizeof(FBuildPromotionImportWorkflowSettings), Get_Z_Construct_UScriptStruct_FBuildPromotionImportWorkflowSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBuildPromotionImportWorkflowSettings(FBuildPromotionImportWorkflowSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("BuildPromotionImportWorkflowSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBuildPromotionImportWorkflowSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFBuildPromotionImportWorkflowSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BuildPromotionImportWorkflowSettings")),new UScriptStruct::TCppStructOps<FBuildPromotionImportWorkflowSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBuildPromotionImportWorkflowSettings;
class UScriptStruct* FEditorImportWorkflowDefinition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorImportWorkflowDefinition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEditorImportWorkflowDefinition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorImportWorkflowDefinition, Z_Construct_UPackage__Script_Engine(), TEXT("EditorImportWorkflowDefinition"), sizeof(FEditorImportWorkflowDefinition), Get_Z_Construct_UScriptStruct_FEditorImportWorkflowDefinition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorImportWorkflowDefinition(FEditorImportWorkflowDefinition::StaticStruct, TEXT("/Script/Engine"), TEXT("EditorImportWorkflowDefinition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEditorImportWorkflowDefinition
{
	FScriptStruct_Engine_StaticRegisterNativesFEditorImportWorkflowDefinition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorImportWorkflowDefinition")),new UScriptStruct::TCppStructOps<FEditorImportWorkflowDefinition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEditorImportWorkflowDefinition;
class UScriptStruct* FEditorImportExportTestDefinition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorImportExportTestDefinition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEditorImportExportTestDefinition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditorImportExportTestDefinition, Z_Construct_UPackage__Script_Engine(), TEXT("EditorImportExportTestDefinition"), sizeof(FEditorImportExportTestDefinition), Get_Z_Construct_UScriptStruct_FEditorImportExportTestDefinition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditorImportExportTestDefinition(FEditorImportExportTestDefinition::StaticStruct, TEXT("/Script/Engine"), TEXT("EditorImportExportTestDefinition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEditorImportExportTestDefinition
{
	FScriptStruct_Engine_StaticRegisterNativesFEditorImportExportTestDefinition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditorImportExportTestDefinition")),new UScriptStruct::TCppStructOps<FEditorImportExportTestDefinition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEditorImportExportTestDefinition;
class UScriptStruct* FImportFactorySettingValues::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FImportFactorySettingValues();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FImportFactorySettingValues_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FImportFactorySettingValues, Z_Construct_UPackage__Script_Engine(), TEXT("ImportFactorySettingValues"), sizeof(FImportFactorySettingValues), Get_Z_Construct_UScriptStruct_FImportFactorySettingValues_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FImportFactorySettingValues(FImportFactorySettingValues::StaticStruct, TEXT("/Script/Engine"), TEXT("ImportFactorySettingValues"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFImportFactorySettingValues
{
	FScriptStruct_Engine_StaticRegisterNativesFImportFactorySettingValues()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ImportFactorySettingValues")),new UScriptStruct::TCppStructOps<FImportFactorySettingValues>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFImportFactorySettingValues;
class UScriptStruct* FExternalToolDefinition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExternalToolDefinition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FExternalToolDefinition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FExternalToolDefinition, Z_Construct_UPackage__Script_Engine(), TEXT("ExternalToolDefinition"), sizeof(FExternalToolDefinition), Get_Z_Construct_UScriptStruct_FExternalToolDefinition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FExternalToolDefinition(FExternalToolDefinition::StaticStruct, TEXT("/Script/Engine"), TEXT("ExternalToolDefinition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFExternalToolDefinition
{
	FScriptStruct_Engine_StaticRegisterNativesFExternalToolDefinition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ExternalToolDefinition")),new UScriptStruct::TCppStructOps<FExternalToolDefinition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFExternalToolDefinition;
class UScriptStruct* FOpenTestAsset::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FOpenTestAsset();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FOpenTestAsset_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FOpenTestAsset, Z_Construct_UPackage__Script_Engine(), TEXT("OpenTestAsset"), sizeof(FOpenTestAsset), Get_Z_Construct_UScriptStruct_FOpenTestAsset_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FOpenTestAsset(FOpenTestAsset::StaticStruct, TEXT("/Script/Engine"), TEXT("OpenTestAsset"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFOpenTestAsset
{
	FScriptStruct_Engine_StaticRegisterNativesFOpenTestAsset()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("OpenTestAsset")),new UScriptStruct::TCppStructOps<FOpenTestAsset>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFOpenTestAsset;
	void UAutomationTestSettings::StaticRegisterNativesUAutomationTestSettings()
	{
	}
	IMPLEMENT_CLASS(UAutomationTestSettings, 3927642679);
class UScriptStruct* FNavAvoidanceData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavAvoidanceData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavAvoidanceData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavAvoidanceData, Z_Construct_UPackage__Script_Engine(), TEXT("NavAvoidanceData"), sizeof(FNavAvoidanceData), Get_Z_Construct_UScriptStruct_FNavAvoidanceData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavAvoidanceData(FNavAvoidanceData::StaticStruct, TEXT("/Script/Engine"), TEXT("NavAvoidanceData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavAvoidanceData
{
	FScriptStruct_Engine_StaticRegisterNativesFNavAvoidanceData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavAvoidanceData")),new UScriptStruct::TCppStructOps<FNavAvoidanceData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavAvoidanceData;
	void UAvoidanceManager::StaticRegisterNativesUAvoidanceManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(UAvoidanceManager::StaticClass(), "GetAvoidanceVelocity",(Native)&UAvoidanceManager::execGetAvoidanceVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UAvoidanceManager::StaticClass(), "GetAvoidanceVelocityForComponent",(Native)&UAvoidanceManager::execGetAvoidanceVelocityForComponent);
		FNativeFunctionRegistrar::RegisterFunction(UAvoidanceManager::StaticClass(), "GetAvoidanceVelocityIgnoringUID",(Native)&UAvoidanceManager::execGetAvoidanceVelocityIgnoringUID);
		FNativeFunctionRegistrar::RegisterFunction(UAvoidanceManager::StaticClass(), "GetNewAvoidanceUID",(Native)&UAvoidanceManager::execGetNewAvoidanceUID);
		FNativeFunctionRegistrar::RegisterFunction(UAvoidanceManager::StaticClass(), "GetObjectCount",(Native)&UAvoidanceManager::execGetObjectCount);
		FNativeFunctionRegistrar::RegisterFunction(UAvoidanceManager::StaticClass(), "RegisterMovementComponent",(Native)&UAvoidanceManager::execRegisterMovementComponent);
	}
	IMPLEMENT_CLASS(UAvoidanceManager, 399091165);
class UScriptStruct* FBlendProfileBoneEntry::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendProfileBoneEntry();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlendProfileBoneEntry_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlendProfileBoneEntry, Z_Construct_UPackage__Script_Engine(), TEXT("BlendProfileBoneEntry"), sizeof(FBlendProfileBoneEntry), Get_Z_Construct_UScriptStruct_FBlendProfileBoneEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlendProfileBoneEntry(FBlendProfileBoneEntry::StaticStruct, TEXT("/Script/Engine"), TEXT("BlendProfileBoneEntry"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlendProfileBoneEntry
{
	FScriptStruct_Engine_StaticRegisterNativesFBlendProfileBoneEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlendProfileBoneEntry")),new UScriptStruct::TCppStructOps<FBlendProfileBoneEntry>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlendProfileBoneEntry;
	void UBlendProfile::StaticRegisterNativesUBlendProfile()
	{
	}
	IMPLEMENT_CLASS(UBlendProfile, 1876927375);
	void UBlueprintAsyncActionBase::StaticRegisterNativesUBlueprintAsyncActionBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintAsyncActionBase::StaticClass(), "Activate",(Native)&UBlueprintAsyncActionBase::execActivate);
	}
	IMPLEMENT_CLASS(UBlueprintAsyncActionBase, 188200619);
	void UBlueprintCore::StaticRegisterNativesUBlueprintCore()
	{
	}
	IMPLEMENT_CLASS(UBlueprintCore, 2782363320);
static class UEnum* EBlueprintNativizationFlag_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintNativizationFlag();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBlueprintNativizationFlag, Z_Construct_UPackage__Script_Engine(), TEXT("EBlueprintNativizationFlag"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlueprintNativizationFlag(EBlueprintNativizationFlag_StaticEnum, TEXT("/Script/Engine"), TEXT("EBlueprintNativizationFlag"), false, nullptr, nullptr);
static class UEnum* EBlueprintCompileMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintCompileMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBlueprintCompileMode, Z_Construct_UPackage__Script_Engine(), TEXT("EBlueprintCompileMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlueprintCompileMode(EBlueprintCompileMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EBlueprintCompileMode"), false, nullptr, nullptr);
static class UEnum* EBlueprintType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBlueprintType, Z_Construct_UPackage__Script_Engine(), TEXT("EBlueprintType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlueprintType(EBlueprintType_StaticEnum, TEXT("/Script/Engine"), TEXT("EBlueprintType"), false, nullptr, nullptr);
static class UEnum* EBlueprintStatus_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintStatus();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBlueprintStatus, Z_Construct_UPackage__Script_Engine(), TEXT("EBlueprintStatus"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBlueprintStatus(EBlueprintStatus_StaticEnum, TEXT("/Script/Engine"), TEXT("EBlueprintStatus"), false, nullptr, nullptr);
class UScriptStruct* FEditedDocumentInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditedDocumentInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEditedDocumentInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEditedDocumentInfo, Z_Construct_UPackage__Script_Engine(), TEXT("EditedDocumentInfo"), sizeof(FEditedDocumentInfo), Get_Z_Construct_UScriptStruct_FEditedDocumentInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEditedDocumentInfo(FEditedDocumentInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("EditedDocumentInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEditedDocumentInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFEditedDocumentInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EditedDocumentInfo")),new UScriptStruct::TCppStructOps<FEditedDocumentInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEditedDocumentInfo;
class UScriptStruct* FBPInterfaceDescription::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBPInterfaceDescription();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBPInterfaceDescription_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBPInterfaceDescription, Z_Construct_UPackage__Script_Engine(), TEXT("BPInterfaceDescription"), sizeof(FBPInterfaceDescription), Get_Z_Construct_UScriptStruct_FBPInterfaceDescription_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBPInterfaceDescription(FBPInterfaceDescription::StaticStruct, TEXT("/Script/Engine"), TEXT("BPInterfaceDescription"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBPInterfaceDescription
{
	FScriptStruct_Engine_StaticRegisterNativesFBPInterfaceDescription()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BPInterfaceDescription")),new UScriptStruct::TCppStructOps<FBPInterfaceDescription>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBPInterfaceDescription;
class UScriptStruct* FBPVariableDescription::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBPVariableDescription();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBPVariableDescription_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBPVariableDescription, Z_Construct_UPackage__Script_Engine(), TEXT("BPVariableDescription"), sizeof(FBPVariableDescription), Get_Z_Construct_UScriptStruct_FBPVariableDescription_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBPVariableDescription(FBPVariableDescription::StaticStruct, TEXT("/Script/Engine"), TEXT("BPVariableDescription"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBPVariableDescription
{
	FScriptStruct_Engine_StaticRegisterNativesFBPVariableDescription()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BPVariableDescription")),new UScriptStruct::TCppStructOps<FBPVariableDescription>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBPVariableDescription;
class UScriptStruct* FBPVariableMetaDataEntry::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBPVariableMetaDataEntry();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBPVariableMetaDataEntry_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBPVariableMetaDataEntry, Z_Construct_UPackage__Script_Engine(), TEXT("BPVariableMetaDataEntry"), sizeof(FBPVariableMetaDataEntry), Get_Z_Construct_UScriptStruct_FBPVariableMetaDataEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBPVariableMetaDataEntry(FBPVariableMetaDataEntry::StaticStruct, TEXT("/Script/Engine"), TEXT("BPVariableMetaDataEntry"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBPVariableMetaDataEntry
{
	FScriptStruct_Engine_StaticRegisterNativesFBPVariableMetaDataEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BPVariableMetaDataEntry")),new UScriptStruct::TCppStructOps<FBPVariableMetaDataEntry>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBPVariableMetaDataEntry;
class UScriptStruct* FCompilerNativizationOptions::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCompilerNativizationOptions();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCompilerNativizationOptions_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCompilerNativizationOptions, Z_Construct_UPackage__Script_Engine(), TEXT("CompilerNativizationOptions"), sizeof(FCompilerNativizationOptions), Get_Z_Construct_UScriptStruct_FCompilerNativizationOptions_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCompilerNativizationOptions(FCompilerNativizationOptions::StaticStruct, TEXT("/Script/Engine"), TEXT("CompilerNativizationOptions"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCompilerNativizationOptions
{
	FScriptStruct_Engine_StaticRegisterNativesFCompilerNativizationOptions()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CompilerNativizationOptions")),new UScriptStruct::TCppStructOps<FCompilerNativizationOptions>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCompilerNativizationOptions;
	void UBlueprint::StaticRegisterNativesUBlueprint()
	{
	}
	IMPLEMENT_CLASS(UBlueprint, 3683507716);
class UScriptStruct* FAnimParentNodeAssetOverride::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimParentNodeAssetOverride();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimParentNodeAssetOverride_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimParentNodeAssetOverride, Z_Construct_UPackage__Script_Engine(), TEXT("AnimParentNodeAssetOverride"), sizeof(FAnimParentNodeAssetOverride), Get_Z_Construct_UScriptStruct_FAnimParentNodeAssetOverride_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimParentNodeAssetOverride(FAnimParentNodeAssetOverride::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimParentNodeAssetOverride"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimParentNodeAssetOverride
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimParentNodeAssetOverride()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimParentNodeAssetOverride")),new UScriptStruct::TCppStructOps<FAnimParentNodeAssetOverride>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimParentNodeAssetOverride;
class UScriptStruct* FAnimGroupInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimGroupInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimGroupInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimGroupInfo, Z_Construct_UPackage__Script_Engine(), TEXT("AnimGroupInfo"), sizeof(FAnimGroupInfo), Get_Z_Construct_UScriptStruct_FAnimGroupInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimGroupInfo(FAnimGroupInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimGroupInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimGroupInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimGroupInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimGroupInfo")),new UScriptStruct::TCppStructOps<FAnimGroupInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimGroupInfo;
	void UAnimBlueprint::StaticRegisterNativesUAnimBlueprint()
	{
	}
	IMPLEMENT_CLASS(UAnimBlueprint, 4119893617);
	void ULevelScriptBlueprint::StaticRegisterNativesULevelScriptBlueprint()
	{
	}
	IMPLEMENT_CLASS(ULevelScriptBlueprint, 4005185288);
	void UBlueprintFunctionLibrary::StaticRegisterNativesUBlueprintFunctionLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintFunctionLibrary::StaticClass(), "MakeStringAssetReference",(Native)&UBlueprintFunctionLibrary::execMakeStringAssetReference);
	}
	IMPLEMENT_CLASS(UBlueprintFunctionLibrary, 4089719702);
	void UBlueprintMapLibrary::StaticRegisterNativesUBlueprintMapLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintMapLibrary::StaticClass(), "Map_Add",(Native)&UBlueprintMapLibrary::execMap_Add);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintMapLibrary::StaticClass(), "Map_Clear",(Native)&UBlueprintMapLibrary::execMap_Clear);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintMapLibrary::StaticClass(), "Map_Contains",(Native)&UBlueprintMapLibrary::execMap_Contains);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintMapLibrary::StaticClass(), "Map_Find",(Native)&UBlueprintMapLibrary::execMap_Find);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintMapLibrary::StaticClass(), "Map_Keys",(Native)&UBlueprintMapLibrary::execMap_Keys);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintMapLibrary::StaticClass(), "Map_Length",(Native)&UBlueprintMapLibrary::execMap_Length);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintMapLibrary::StaticClass(), "Map_Remove",(Native)&UBlueprintMapLibrary::execMap_Remove);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintMapLibrary::StaticClass(), "Map_Values",(Native)&UBlueprintMapLibrary::execMap_Values);
	}
	IMPLEMENT_CLASS(UBlueprintMapLibrary, 1166837134);
	void UGameInstance::HandleNetworkError(ENetworkFailure::Type FailureType, bool bIsServer)
	{
		GameInstance_eventHandleNetworkError_Parms Parms;
		Parms.FailureType=FailureType;
		Parms.bIsServer=bIsServer ? true : false;
		ProcessEvent(FindFunctionChecked(ENGINE_HandleNetworkError),&Parms);
	}
	void UGameInstance::HandleTravelError(ETravelFailure::Type FailureType)
	{
		GameInstance_eventHandleTravelError_Parms Parms;
		Parms.FailureType=FailureType;
		ProcessEvent(FindFunctionChecked(ENGINE_HandleTravelError),&Parms);
	}
	void UGameInstance::ReceiveInit()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveInit),NULL);
	}
	void UGameInstance::ReceiveShutdown()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveShutdown),NULL);
	}
	void UGameInstance::StaticRegisterNativesUGameInstance()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameInstance::StaticClass(), "DebugCreatePlayer",(Native)&UGameInstance::execDebugCreatePlayer);
		FNativeFunctionRegistrar::RegisterFunction(UGameInstance::StaticClass(), "DebugRemovePlayer",(Native)&UGameInstance::execDebugRemovePlayer);
	}
	IMPLEMENT_CLASS(UGameInstance, 4079838846);
static class UEnum* EScreenOrientation_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EScreenOrientation();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EScreenOrientation, Z_Construct_UPackage__Script_Engine(), TEXT("EScreenOrientation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EScreenOrientation(EScreenOrientation_StaticEnum, TEXT("/Script/Engine"), TEXT("EScreenOrientation"), false, nullptr, nullptr);
	void UPlatformGameInstance::StaticRegisterNativesUPlatformGameInstance()
	{
	}
	IMPLEMENT_CLASS(UPlatformGameInstance, 3532568635);
	void UBlueprintPlatformLibrary::StaticRegisterNativesUBlueprintPlatformLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintPlatformLibrary::StaticClass(), "CancelLocalNotification",(Native)&UBlueprintPlatformLibrary::execCancelLocalNotification);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintPlatformLibrary::StaticClass(), "ClearAllLocalNotifications",(Native)&UBlueprintPlatformLibrary::execClearAllLocalNotifications);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintPlatformLibrary::StaticClass(), "GetLaunchNotification",(Native)&UBlueprintPlatformLibrary::execGetLaunchNotification);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintPlatformLibrary::StaticClass(), "ScheduleLocalNotificationAtTime",(Native)&UBlueprintPlatformLibrary::execScheduleLocalNotificationAtTime);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintPlatformLibrary::StaticClass(), "ScheduleLocalNotificationFromNow",(Native)&UBlueprintPlatformLibrary::execScheduleLocalNotificationFromNow);
	}
	IMPLEMENT_CLASS(UBlueprintPlatformLibrary, 1318087280);
	void UBlueprintSetLibrary::StaticRegisterNativesUBlueprintSetLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_Add",(Native)&UBlueprintSetLibrary::execSet_Add);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_AddItems",(Native)&UBlueprintSetLibrary::execSet_AddItems);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_Clear",(Native)&UBlueprintSetLibrary::execSet_Clear);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_Contains",(Native)&UBlueprintSetLibrary::execSet_Contains);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_Difference",(Native)&UBlueprintSetLibrary::execSet_Difference);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_Intersection",(Native)&UBlueprintSetLibrary::execSet_Intersection);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_Length",(Native)&UBlueprintSetLibrary::execSet_Length);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_Remove",(Native)&UBlueprintSetLibrary::execSet_Remove);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_RemoveItems",(Native)&UBlueprintSetLibrary::execSet_RemoveItems);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_ToArray",(Native)&UBlueprintSetLibrary::execSet_ToArray);
		FNativeFunctionRegistrar::RegisterFunction(UBlueprintSetLibrary::StaticClass(), "Set_Union",(Native)&UBlueprintSetLibrary::execSet_Union);
	}
	IMPLEMENT_CLASS(UBlueprintSetLibrary, 3930757764);
class UScriptStruct* FDataTableCategoryHandle::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDataTableCategoryHandle();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDataTableCategoryHandle_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDataTableCategoryHandle, Z_Construct_UPackage__Script_Engine(), TEXT("DataTableCategoryHandle"), sizeof(FDataTableCategoryHandle), Get_Z_Construct_UScriptStruct_FDataTableCategoryHandle_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDataTableCategoryHandle(FDataTableCategoryHandle::StaticStruct, TEXT("/Script/Engine"), TEXT("DataTableCategoryHandle"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDataTableCategoryHandle
{
	FScriptStruct_Engine_StaticRegisterNativesFDataTableCategoryHandle()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DataTableCategoryHandle")),new UScriptStruct::TCppStructOps<FDataTableCategoryHandle>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDataTableCategoryHandle;
class UScriptStruct* FDataTableRowHandle::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDataTableRowHandle();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDataTableRowHandle_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDataTableRowHandle, Z_Construct_UPackage__Script_Engine(), TEXT("DataTableRowHandle"), sizeof(FDataTableRowHandle), Get_Z_Construct_UScriptStruct_FDataTableRowHandle_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDataTableRowHandle(FDataTableRowHandle::StaticStruct, TEXT("/Script/Engine"), TEXT("DataTableRowHandle"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDataTableRowHandle
{
	FScriptStruct_Engine_StaticRegisterNativesFDataTableRowHandle()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DataTableRowHandle")),new UScriptStruct::TCppStructOps<FDataTableRowHandle>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDataTableRowHandle;
class UScriptStruct* FTableRowBase::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTableRowBase();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTableRowBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTableRowBase, Z_Construct_UPackage__Script_Engine(), TEXT("TableRowBase"), sizeof(FTableRowBase), Get_Z_Construct_UScriptStruct_FTableRowBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTableRowBase(FTableRowBase::StaticStruct, TEXT("/Script/Engine"), TEXT("TableRowBase"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTableRowBase
{
	FScriptStruct_Engine_StaticRegisterNativesFTableRowBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TableRowBase")),new UScriptStruct::TCppStructOps<FTableRowBase>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTableRowBase;
	void UDataTable::StaticRegisterNativesUDataTable()
	{
	}
	IMPLEMENT_CLASS(UDataTable, 3499109596);
static class UEnum* EEvaluateCurveTableResult_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEvaluateCurveTableResult();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEvaluateCurveTableResult, Z_Construct_UPackage__Script_Engine(), TEXT("EEvaluateCurveTableResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEvaluateCurveTableResult(EEvaluateCurveTableResult_StaticEnum, TEXT("/Script/Engine"), TEXT("EEvaluateCurveTableResult"), false, nullptr, nullptr);
	void UDataTableFunctionLibrary::StaticRegisterNativesUDataTableFunctionLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UDataTableFunctionLibrary::StaticClass(), "EvaluateCurveTableRow",(Native)&UDataTableFunctionLibrary::execEvaluateCurveTableRow);
		FNativeFunctionRegistrar::RegisterFunction(UDataTableFunctionLibrary::StaticClass(), "GetDataTableRowFromName",(Native)&UDataTableFunctionLibrary::execGetDataTableRowFromName);
		FNativeFunctionRegistrar::RegisterFunction(UDataTableFunctionLibrary::StaticClass(), "GetDataTableRowNames",(Native)&UDataTableFunctionLibrary::execGetDataTableRowNames);
	}
	IMPLEMENT_CLASS(UDataTableFunctionLibrary, 473183341);
	void UDebugDrawService::StaticRegisterNativesUDebugDrawService()
	{
	}
	IMPLEMENT_CLASS(UDebugDrawService, 1784502158);
static class UEnum* EQuitPreference_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EQuitPreference();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EQuitPreference, Z_Construct_UPackage__Script_Engine(), TEXT("EQuitPreference"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EQuitPreference(EQuitPreference_StaticEnum, TEXT("/Script/Engine"), TEXT("EQuitPreference"), false, nullptr, nullptr);
static class UEnum* EMoveComponentAction_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMoveComponentAction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMoveComponentAction, Z_Construct_UPackage__Script_Engine(), TEXT("EMoveComponentAction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMoveComponentAction(EMoveComponentAction_StaticEnum, TEXT("/Script/Engine"), TEXT("EMoveComponentAction"), false, nullptr, nullptr);
static class UEnum* EDrawDebugTrace_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDrawDebugTrace();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDrawDebugTrace, Z_Construct_UPackage__Script_Engine(), TEXT("EDrawDebugTrace"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDrawDebugTrace(EDrawDebugTrace_StaticEnum, TEXT("/Script/Engine"), TEXT("EDrawDebugTrace"), false, nullptr, nullptr);
class UScriptStruct* FGenericStruct::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGenericStruct();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FGenericStruct_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGenericStruct, Z_Construct_UPackage__Script_Engine(), TEXT("GenericStruct"), sizeof(FGenericStruct), Get_Z_Construct_UScriptStruct_FGenericStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGenericStruct(FGenericStruct::StaticStruct, TEXT("/Script/Engine"), TEXT("GenericStruct"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFGenericStruct
{
	FScriptStruct_Engine_StaticRegisterNativesFGenericStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GenericStruct")),new UScriptStruct::TCppStructOps<FGenericStruct>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFGenericStruct;
	void UKismetSystemLibrary::StaticRegisterNativesUKismetSystemLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "AddFloatHistorySample",(Native)&UKismetSystemLibrary::execAddFloatHistorySample);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "BoxOverlapActors",(Native)&UKismetSystemLibrary::execBoxOverlapActors);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "BoxOverlapComponents",(Native)&UKismetSystemLibrary::execBoxOverlapComponents);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "BoxTraceMulti",(Native)&UKismetSystemLibrary::execBoxTraceMulti);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "BoxTraceMultiForObjects",(Native)&UKismetSystemLibrary::execBoxTraceMultiForObjects);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "BoxTraceSingle",(Native)&UKismetSystemLibrary::execBoxTraceSingle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "BoxTraceSingleForObjects",(Native)&UKismetSystemLibrary::execBoxTraceSingleForObjects);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "CanLaunchURL",(Native)&UKismetSystemLibrary::execCanLaunchURL);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "CapsuleOverlapActors",(Native)&UKismetSystemLibrary::execCapsuleOverlapActors);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "CapsuleOverlapComponents",(Native)&UKismetSystemLibrary::execCapsuleOverlapComponents);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "CapsuleTraceMulti",(Native)&UKismetSystemLibrary::execCapsuleTraceMulti);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "CapsuleTraceMultiForObjects",(Native)&UKismetSystemLibrary::execCapsuleTraceMultiForObjects);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "CapsuleTraceSingle",(Native)&UKismetSystemLibrary::execCapsuleTraceSingle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "CapsuleTraceSingleForObjects",(Native)&UKismetSystemLibrary::execCapsuleTraceSingleForObjects);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "CollectGarbage",(Native)&UKismetSystemLibrary::execCollectGarbage);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ComponentOverlapActors",(Native)&UKismetSystemLibrary::execComponentOverlapActors);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ComponentOverlapComponents",(Native)&UKismetSystemLibrary::execComponentOverlapComponents);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ControlScreensaver",(Native)&UKismetSystemLibrary::execControlScreensaver);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "Conv_AssetClassToClass",(Native)&UKismetSystemLibrary::execConv_AssetClassToClass);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "Conv_AssetToObject",(Native)&UKismetSystemLibrary::execConv_AssetToObject);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "Conv_InterfaceToObject",(Native)&UKismetSystemLibrary::execConv_InterfaceToObject);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "CreateCopyForUndoBuffer",(Native)&UKismetSystemLibrary::execCreateCopyForUndoBuffer);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "Delay",(Native)&UKismetSystemLibrary::execDelay);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DoesImplementInterface",(Native)&UKismetSystemLibrary::execDoesImplementInterface);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugArrow",(Native)&UKismetSystemLibrary::execDrawDebugArrow);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugBox",(Native)&UKismetSystemLibrary::execDrawDebugBox);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugCamera",(Native)&UKismetSystemLibrary::execDrawDebugCamera);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugCapsule",(Native)&UKismetSystemLibrary::execDrawDebugCapsule);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugCircle",(Native)&UKismetSystemLibrary::execDrawDebugCircle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugCone",(Native)&UKismetSystemLibrary::execDrawDebugCone);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugConeInDegrees",(Native)&UKismetSystemLibrary::execDrawDebugConeInDegrees);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugCoordinateSystem",(Native)&UKismetSystemLibrary::execDrawDebugCoordinateSystem);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugCylinder",(Native)&UKismetSystemLibrary::execDrawDebugCylinder);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugFloatHistoryLocation",(Native)&UKismetSystemLibrary::execDrawDebugFloatHistoryLocation);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugFloatHistoryTransform",(Native)&UKismetSystemLibrary::execDrawDebugFloatHistoryTransform);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugFrustum",(Native)&UKismetSystemLibrary::execDrawDebugFrustum);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugLine",(Native)&UKismetSystemLibrary::execDrawDebugLine);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugPlane",(Native)&UKismetSystemLibrary::execDrawDebugPlane);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugPoint",(Native)&UKismetSystemLibrary::execDrawDebugPoint);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugSphere",(Native)&UKismetSystemLibrary::execDrawDebugSphere);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "DrawDebugString",(Native)&UKismetSystemLibrary::execDrawDebugString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ExecuteConsoleCommand",(Native)&UKismetSystemLibrary::execExecuteConsoleCommand);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "FlushDebugStrings",(Native)&UKismetSystemLibrary::execFlushDebugStrings);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "FlushPersistentDebugLines",(Native)&UKismetSystemLibrary::execFlushPersistentDebugLines);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ForceCloseAdBanner",(Native)&UKismetSystemLibrary::execForceCloseAdBanner);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetActorBounds",(Native)&UKismetSystemLibrary::execGetActorBounds);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetActorListFromComponentList",(Native)&UKismetSystemLibrary::execGetActorListFromComponentList);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetAdIDCount",(Native)&UKismetSystemLibrary::execGetAdIDCount);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetClassDisplayName",(Native)&UKismetSystemLibrary::execGetClassDisplayName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetCommandLine",(Native)&UKismetSystemLibrary::execGetCommandLine);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetComponentBounds",(Native)&UKismetSystemLibrary::execGetComponentBounds);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetConvenientWindowedResolutions",(Native)&UKismetSystemLibrary::execGetConvenientWindowedResolutions);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetDeviceId",(Native)&UKismetSystemLibrary::execGetDeviceId);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetDisplayName",(Native)&UKismetSystemLibrary::execGetDisplayName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetEngineVersion",(Native)&UKismetSystemLibrary::execGetEngineVersion);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetGameBundleId",(Native)&UKismetSystemLibrary::execGetGameBundleId);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetGameName",(Native)&UKismetSystemLibrary::execGetGameName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetGameTimeInSeconds",(Native)&UKismetSystemLibrary::execGetGameTimeInSeconds);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetLocalCurrencyCode",(Native)&UKismetSystemLibrary::execGetLocalCurrencyCode);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetLocalCurrencySymbol",(Native)&UKismetSystemLibrary::execGetLocalCurrencySymbol);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetMinYResolutionFor3DView",(Native)&UKismetSystemLibrary::execGetMinYResolutionFor3DView);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetMinYResolutionForUI",(Native)&UKismetSystemLibrary::execGetMinYResolutionForUI);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetObjectName",(Native)&UKismetSystemLibrary::execGetObjectName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetPathName",(Native)&UKismetSystemLibrary::execGetPathName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetPlatformUserName",(Native)&UKismetSystemLibrary::execGetPlatformUserName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetPreferredLanguages",(Native)&UKismetSystemLibrary::execGetPreferredLanguages);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetRenderingDetailMode",(Native)&UKismetSystemLibrary::execGetRenderingDetailMode);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetRenderingMaterialQualityLevel",(Native)&UKismetSystemLibrary::execGetRenderingMaterialQualityLevel);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetSupportedFullscreenResolutions",(Native)&UKismetSystemLibrary::execGetSupportedFullscreenResolutions);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetUniqueDeviceId",(Native)&UKismetSystemLibrary::execGetUniqueDeviceId);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "GetVolumeButtonsHandledBySystem",(Native)&UKismetSystemLibrary::execGetVolumeButtonsHandledBySystem);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "HideAdBanner",(Native)&UKismetSystemLibrary::execHideAdBanner);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsControllerAssignedToGamepad",(Native)&UKismetSystemLibrary::execIsControllerAssignedToGamepad);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsDedicatedServer",(Native)&UKismetSystemLibrary::execIsDedicatedServer);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsInterstitialAdAvailable",(Native)&UKismetSystemLibrary::execIsInterstitialAdAvailable);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsInterstitialAdRequested",(Native)&UKismetSystemLibrary::execIsInterstitialAdRequested);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsLoggedIn",(Native)&UKismetSystemLibrary::execIsLoggedIn);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsPackagedForDistribution",(Native)&UKismetSystemLibrary::execIsPackagedForDistribution);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsServer",(Native)&UKismetSystemLibrary::execIsServer);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsStandalone",(Native)&UKismetSystemLibrary::execIsStandalone);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsValid",(Native)&UKismetSystemLibrary::execIsValid);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "IsValidClass",(Native)&UKismetSystemLibrary::execIsValidClass);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_ClearAndInvalidateTimerHandle",(Native)&UKismetSystemLibrary::execK2_ClearAndInvalidateTimerHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_ClearTimer",(Native)&UKismetSystemLibrary::execK2_ClearTimer);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_ClearTimerDelegate",(Native)&UKismetSystemLibrary::execK2_ClearTimerDelegate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_ClearTimerHandle",(Native)&UKismetSystemLibrary::execK2_ClearTimerHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_GetTimerElapsedTime",(Native)&UKismetSystemLibrary::execK2_GetTimerElapsedTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_GetTimerElapsedTimeDelegate",(Native)&UKismetSystemLibrary::execK2_GetTimerElapsedTimeDelegate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_GetTimerElapsedTimeHandle",(Native)&UKismetSystemLibrary::execK2_GetTimerElapsedTimeHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_GetTimerRemainingTime",(Native)&UKismetSystemLibrary::execK2_GetTimerRemainingTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_GetTimerRemainingTimeDelegate",(Native)&UKismetSystemLibrary::execK2_GetTimerRemainingTimeDelegate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_GetTimerRemainingTimeHandle",(Native)&UKismetSystemLibrary::execK2_GetTimerRemainingTimeHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_InvalidateTimerHandle",(Native)&UKismetSystemLibrary::execK2_InvalidateTimerHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_IsTimerActive",(Native)&UKismetSystemLibrary::execK2_IsTimerActive);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_IsTimerActiveDelegate",(Native)&UKismetSystemLibrary::execK2_IsTimerActiveDelegate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_IsTimerActiveHandle",(Native)&UKismetSystemLibrary::execK2_IsTimerActiveHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_IsTimerPaused",(Native)&UKismetSystemLibrary::execK2_IsTimerPaused);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_IsTimerPausedDelegate",(Native)&UKismetSystemLibrary::execK2_IsTimerPausedDelegate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_IsTimerPausedHandle",(Native)&UKismetSystemLibrary::execK2_IsTimerPausedHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_IsValidTimerHandle",(Native)&UKismetSystemLibrary::execK2_IsValidTimerHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_PauseTimer",(Native)&UKismetSystemLibrary::execK2_PauseTimer);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_PauseTimerDelegate",(Native)&UKismetSystemLibrary::execK2_PauseTimerDelegate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_PauseTimerHandle",(Native)&UKismetSystemLibrary::execK2_PauseTimerHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_SetTimer",(Native)&UKismetSystemLibrary::execK2_SetTimer);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_SetTimerDelegate",(Native)&UKismetSystemLibrary::execK2_SetTimerDelegate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_TimerExists",(Native)&UKismetSystemLibrary::execK2_TimerExists);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_TimerExistsDelegate",(Native)&UKismetSystemLibrary::execK2_TimerExistsDelegate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_TimerExistsHandle",(Native)&UKismetSystemLibrary::execK2_TimerExistsHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_UnPauseTimer",(Native)&UKismetSystemLibrary::execK2_UnPauseTimer);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_UnPauseTimerDelegate",(Native)&UKismetSystemLibrary::execK2_UnPauseTimerDelegate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "K2_UnPauseTimerHandle",(Native)&UKismetSystemLibrary::execK2_UnPauseTimerHandle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "LaunchURL",(Native)&UKismetSystemLibrary::execLaunchURL);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "LineTraceMulti",(Native)&UKismetSystemLibrary::execLineTraceMulti);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "LineTraceMultiForObjects",(Native)&UKismetSystemLibrary::execLineTraceMultiForObjects);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "LineTraceSingle",(Native)&UKismetSystemLibrary::execLineTraceSingle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "LineTraceSingleForObjects",(Native)&UKismetSystemLibrary::execLineTraceSingleForObjects);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "LoadAsset",(Native)&UKismetSystemLibrary::execLoadAsset);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "LoadAssetClass",(Native)&UKismetSystemLibrary::execLoadAssetClass);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "LoadInterstitialAd",(Native)&UKismetSystemLibrary::execLoadInterstitialAd);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "MakeLiteralBool",(Native)&UKismetSystemLibrary::execMakeLiteralBool);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "MakeLiteralByte",(Native)&UKismetSystemLibrary::execMakeLiteralByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "MakeLiteralFloat",(Native)&UKismetSystemLibrary::execMakeLiteralFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "MakeLiteralInt",(Native)&UKismetSystemLibrary::execMakeLiteralInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "MakeLiteralName",(Native)&UKismetSystemLibrary::execMakeLiteralName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "MakeLiteralString",(Native)&UKismetSystemLibrary::execMakeLiteralString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "MakeLiteralText",(Native)&UKismetSystemLibrary::execMakeLiteralText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "MoveComponentTo",(Native)&UKismetSystemLibrary::execMoveComponentTo);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "PrintString",(Native)&UKismetSystemLibrary::execPrintString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "PrintText",(Native)&UKismetSystemLibrary::execPrintText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "PrintWarning",(Native)&UKismetSystemLibrary::execPrintWarning);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "QuitGame",(Native)&UKismetSystemLibrary::execQuitGame);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "RegisterForRemoteNotifications",(Native)&UKismetSystemLibrary::execRegisterForRemoteNotifications);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ResetGamepadAssignments",(Native)&UKismetSystemLibrary::execResetGamepadAssignments);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ResetGamepadAssignmentToController",(Native)&UKismetSystemLibrary::execResetGamepadAssignmentToController);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "RetriggerableDelay",(Native)&UKismetSystemLibrary::execRetriggerableDelay);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetAssetClassPropertyByName",(Native)&UKismetSystemLibrary::execSetAssetClassPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetAssetPropertyByName",(Native)&UKismetSystemLibrary::execSetAssetPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetBoolPropertyByName",(Native)&UKismetSystemLibrary::execSetBoolPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetBytePropertyByName",(Native)&UKismetSystemLibrary::execSetBytePropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetClassPropertyByName",(Native)&UKismetSystemLibrary::execSetClassPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetCollisionProfileNameProperty",(Native)&UKismetSystemLibrary::execSetCollisionProfileNameProperty);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetFloatPropertyByName",(Native)&UKismetSystemLibrary::execSetFloatPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetInterfacePropertyByName",(Native)&UKismetSystemLibrary::execSetInterfacePropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetIntPropertyByName",(Native)&UKismetSystemLibrary::execSetIntPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetLinearColorPropertyByName",(Native)&UKismetSystemLibrary::execSetLinearColorPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetNamePropertyByName",(Native)&UKismetSystemLibrary::execSetNamePropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetObjectPropertyByName",(Native)&UKismetSystemLibrary::execSetObjectPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetRotatorPropertyByName",(Native)&UKismetSystemLibrary::execSetRotatorPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetStringPropertyByName",(Native)&UKismetSystemLibrary::execSetStringPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetStructurePropertyByName",(Native)&UKismetSystemLibrary::execSetStructurePropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetSuppressViewportTransitionMessage",(Native)&UKismetSystemLibrary::execSetSuppressViewportTransitionMessage);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetTextPropertyByName",(Native)&UKismetSystemLibrary::execSetTextPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetTransformPropertyByName",(Native)&UKismetSystemLibrary::execSetTransformPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetUserActivity",(Native)&UKismetSystemLibrary::execSetUserActivity);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetVectorPropertyByName",(Native)&UKismetSystemLibrary::execSetVectorPropertyByName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetVolumeButtonsHandledBySystem",(Native)&UKismetSystemLibrary::execSetVolumeButtonsHandledBySystem);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SetWindowTitle",(Native)&UKismetSystemLibrary::execSetWindowTitle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ShowAdBanner",(Native)&UKismetSystemLibrary::execShowAdBanner);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ShowInterstitialAd",(Native)&UKismetSystemLibrary::execShowInterstitialAd);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ShowPlatformSpecificAchievementsScreen",(Native)&UKismetSystemLibrary::execShowPlatformSpecificAchievementsScreen);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "ShowPlatformSpecificLeaderboardScreen",(Native)&UKismetSystemLibrary::execShowPlatformSpecificLeaderboardScreen);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SphereOverlapActors",(Native)&UKismetSystemLibrary::execSphereOverlapActors);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SphereOverlapComponents",(Native)&UKismetSystemLibrary::execSphereOverlapComponents);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SphereTraceMulti",(Native)&UKismetSystemLibrary::execSphereTraceMulti);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SphereTraceMultiForObjects",(Native)&UKismetSystemLibrary::execSphereTraceMultiForObjects);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SphereTraceSingle",(Native)&UKismetSystemLibrary::execSphereTraceSingle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "SphereTraceSingleForObjects",(Native)&UKismetSystemLibrary::execSphereTraceSingleForObjects);
		FNativeFunctionRegistrar::RegisterFunction(UKismetSystemLibrary::StaticClass(), "StackTrace",(Native)&UKismetSystemLibrary::execStackTrace);
	}
	IMPLEMENT_CLASS(UKismetSystemLibrary, 2990249576);
static class UEnum* EGrammaticalNumber_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGrammaticalNumber();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EGrammaticalNumber, Z_Construct_UPackage__Script_Engine(), TEXT("EGrammaticalNumber"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGrammaticalNumber(EGrammaticalNumber_StaticEnum, TEXT("/Script/Engine"), TEXT("EGrammaticalNumber"), false, nullptr, nullptr);
static class UEnum* EGrammaticalGender_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGrammaticalGender();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EGrammaticalGender, Z_Construct_UPackage__Script_Engine(), TEXT("EGrammaticalGender"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGrammaticalGender(EGrammaticalGender_StaticEnum, TEXT("/Script/Engine"), TEXT("EGrammaticalGender"), false, nullptr, nullptr);
class UScriptStruct* FDialogueWaveParameter::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDialogueWaveParameter();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDialogueWaveParameter_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDialogueWaveParameter, Z_Construct_UPackage__Script_Engine(), TEXT("DialogueWaveParameter"), sizeof(FDialogueWaveParameter), Get_Z_Construct_UScriptStruct_FDialogueWaveParameter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDialogueWaveParameter(FDialogueWaveParameter::StaticStruct, TEXT("/Script/Engine"), TEXT("DialogueWaveParameter"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDialogueWaveParameter
{
	FScriptStruct_Engine_StaticRegisterNativesFDialogueWaveParameter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DialogueWaveParameter")),new UScriptStruct::TCppStructOps<FDialogueWaveParameter>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDialogueWaveParameter;
class UScriptStruct* FDialogueContext::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDialogueContext();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDialogueContext_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDialogueContext, Z_Construct_UPackage__Script_Engine(), TEXT("DialogueContext"), sizeof(FDialogueContext), Get_Z_Construct_UScriptStruct_FDialogueContext_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDialogueContext(FDialogueContext::StaticStruct, TEXT("/Script/Engine"), TEXT("DialogueContext"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDialogueContext
{
	FScriptStruct_Engine_StaticRegisterNativesFDialogueContext()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DialogueContext")),new UScriptStruct::TCppStructOps<FDialogueContext>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDialogueContext;
static class UEnum* ESuggestProjVelocityTraceOption_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESuggestProjVelocityTraceOption();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESuggestProjVelocityTraceOption, Z_Construct_UPackage__Script_Engine(), TEXT("ESuggestProjVelocityTraceOption"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESuggestProjVelocityTraceOption(ESuggestProjVelocityTraceOption_StaticEnum, TEXT("/Script/Engine"), TEXT("ESuggestProjVelocityTraceOption"), false, nullptr, nullptr);
class UScriptStruct* FPredictProjectilePathResult::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPredictProjectilePathResult();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPredictProjectilePathResult_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPredictProjectilePathResult, Z_Construct_UPackage__Script_Engine(), TEXT("PredictProjectilePathResult"), sizeof(FPredictProjectilePathResult), Get_Z_Construct_UScriptStruct_FPredictProjectilePathResult_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPredictProjectilePathResult(FPredictProjectilePathResult::StaticStruct, TEXT("/Script/Engine"), TEXT("PredictProjectilePathResult"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPredictProjectilePathResult
{
	FScriptStruct_Engine_StaticRegisterNativesFPredictProjectilePathResult()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PredictProjectilePathResult")),new UScriptStruct::TCppStructOps<FPredictProjectilePathResult>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPredictProjectilePathResult;
class UScriptStruct* FPredictProjectilePathPointData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPredictProjectilePathPointData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPredictProjectilePathPointData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPredictProjectilePathPointData, Z_Construct_UPackage__Script_Engine(), TEXT("PredictProjectilePathPointData"), sizeof(FPredictProjectilePathPointData), Get_Z_Construct_UScriptStruct_FPredictProjectilePathPointData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPredictProjectilePathPointData(FPredictProjectilePathPointData::StaticStruct, TEXT("/Script/Engine"), TEXT("PredictProjectilePathPointData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPredictProjectilePathPointData
{
	FScriptStruct_Engine_StaticRegisterNativesFPredictProjectilePathPointData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PredictProjectilePathPointData")),new UScriptStruct::TCppStructOps<FPredictProjectilePathPointData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPredictProjectilePathPointData;
class UScriptStruct* FPredictProjectilePathParams::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPredictProjectilePathParams();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPredictProjectilePathParams_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPredictProjectilePathParams, Z_Construct_UPackage__Script_Engine(), TEXT("PredictProjectilePathParams"), sizeof(FPredictProjectilePathParams), Get_Z_Construct_UScriptStruct_FPredictProjectilePathParams_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPredictProjectilePathParams(FPredictProjectilePathParams::StaticStruct, TEXT("/Script/Engine"), TEXT("PredictProjectilePathParams"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPredictProjectilePathParams
{
	FScriptStruct_Engine_StaticRegisterNativesFPredictProjectilePathParams()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PredictProjectilePathParams")),new UScriptStruct::TCppStructOps<FPredictProjectilePathParams>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPredictProjectilePathParams;
	void UGameplayStatics::StaticRegisterNativesUGameplayStatics()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "ActivateReverbEffect",(Native)&UGameplayStatics::execActivateReverbEffect);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "ApplyDamage",(Native)&UGameplayStatics::execApplyDamage);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "ApplyPointDamage",(Native)&UGameplayStatics::execApplyPointDamage);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "ApplyRadialDamage",(Native)&UGameplayStatics::execApplyRadialDamage);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "ApplyRadialDamageWithFalloff",(Native)&UGameplayStatics::execApplyRadialDamageWithFalloff);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "AreAnyListenersWithinRange",(Native)&UGameplayStatics::execAreAnyListenersWithinRange);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "AreSubtitlesEnabled",(Native)&UGameplayStatics::execAreSubtitlesEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "BeginDeferredActorSpawnFromClass",(Native)&UGameplayStatics::execBeginDeferredActorSpawnFromClass);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "BeginSpawningActorFromBlueprint",(Native)&UGameplayStatics::execBeginSpawningActorFromBlueprint);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "BeginSpawningActorFromClass",(Native)&UGameplayStatics::execBeginSpawningActorFromClass);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "Blueprint_PredictProjectilePath_Advanced",(Native)&UGameplayStatics::execBlueprint_PredictProjectilePath_Advanced);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "Blueprint_PredictProjectilePath_ByObjectType",(Native)&UGameplayStatics::execBlueprint_PredictProjectilePath_ByObjectType);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "Blueprint_PredictProjectilePath_ByTraceChannel",(Native)&UGameplayStatics::execBlueprint_PredictProjectilePath_ByTraceChannel);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "BlueprintSuggestProjectileVelocity",(Native)&UGameplayStatics::execBlueprintSuggestProjectileVelocity);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "BreakHitResult",(Native)&UGameplayStatics::execBreakHitResult);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "CancelAsyncLoading",(Native)&UGameplayStatics::execCancelAsyncLoading);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "ClearSoundMixClassOverride",(Native)&UGameplayStatics::execClearSoundMixClassOverride);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "ClearSoundMixModifiers",(Native)&UGameplayStatics::execClearSoundMixModifiers);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "CreatePlayer",(Native)&UGameplayStatics::execCreatePlayer);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "CreateSaveGameObject",(Native)&UGameplayStatics::execCreateSaveGameObject);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "CreateSaveGameObjectFromBlueprint",(Native)&UGameplayStatics::execCreateSaveGameObjectFromBlueprint);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "CreateSound2D",(Native)&UGameplayStatics::execCreateSound2D);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "DeactivateReverbEffect",(Native)&UGameplayStatics::execDeactivateReverbEffect);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "DeleteGameInSlot",(Native)&UGameplayStatics::execDeleteGameInSlot);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "DeprojectScreenToWorld",(Native)&UGameplayStatics::execDeprojectScreenToWorld);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "DoesSaveGameExist",(Native)&UGameplayStatics::execDoesSaveGameExist);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "EnableLiveStreaming",(Native)&UGameplayStatics::execEnableLiveStreaming);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "FindCollisionUV",(Native)&UGameplayStatics::execFindCollisionUV);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "FinishSpawningActor",(Native)&UGameplayStatics::execFinishSpawningActor);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "FlushLevelStreaming",(Native)&UGameplayStatics::execFlushLevelStreaming);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetAccurateRealTime",(Native)&UGameplayStatics::execGetAccurateRealTime);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetActorArrayAverageLocation",(Native)&UGameplayStatics::execGetActorArrayAverageLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetActorArrayBounds",(Native)&UGameplayStatics::execGetActorArrayBounds);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetAllActorsOfClass",(Native)&UGameplayStatics::execGetAllActorsOfClass);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetAllActorsWithInterface",(Native)&UGameplayStatics::execGetAllActorsWithInterface);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetAllActorsWithTag",(Native)&UGameplayStatics::execGetAllActorsWithTag);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetAudioTimeSeconds",(Native)&UGameplayStatics::execGetAudioTimeSeconds);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetCurrentLevelName",(Native)&UGameplayStatics::execGetCurrentLevelName);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetCurrentReverbEffect",(Native)&UGameplayStatics::execGetCurrentReverbEffect);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetGameInstance",(Native)&UGameplayStatics::execGetGameInstance);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetGameMode",(Native)&UGameplayStatics::execGetGameMode);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetGameState",(Native)&UGameplayStatics::execGetGameState);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetGlobalTimeDilation",(Native)&UGameplayStatics::execGetGlobalTimeDilation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetIntOption",(Native)&UGameplayStatics::execGetIntOption);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetKeyValue",(Native)&UGameplayStatics::execGetKeyValue);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetObjectClass",(Native)&UGameplayStatics::execGetObjectClass);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetPlatformName",(Native)&UGameplayStatics::execGetPlatformName);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetPlayerCameraManager",(Native)&UGameplayStatics::execGetPlayerCameraManager);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetPlayerCharacter",(Native)&UGameplayStatics::execGetPlayerCharacter);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetPlayerController",(Native)&UGameplayStatics::execGetPlayerController);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetPlayerControllerID",(Native)&UGameplayStatics::execGetPlayerControllerID);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetPlayerPawn",(Native)&UGameplayStatics::execGetPlayerPawn);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetRealTimeSeconds",(Native)&UGameplayStatics::execGetRealTimeSeconds);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetStreamingLevel",(Native)&UGameplayStatics::execGetStreamingLevel);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetSurfaceType",(Native)&UGameplayStatics::execGetSurfaceType);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetTimeSeconds",(Native)&UGameplayStatics::execGetTimeSeconds);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetUnpausedTimeSeconds",(Native)&UGameplayStatics::execGetUnpausedTimeSeconds);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetWorldDeltaSeconds",(Native)&UGameplayStatics::execGetWorldDeltaSeconds);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GetWorldOriginLocation",(Native)&UGameplayStatics::execGetWorldOriginLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "GrassOverlappingSphereCount",(Native)&UGameplayStatics::execGrassOverlappingSphereCount);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "HasLaunchOption",(Native)&UGameplayStatics::execHasLaunchOption);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "HasOption",(Native)&UGameplayStatics::execHasOption);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "IsGamePaused",(Native)&UGameplayStatics::execIsGamePaused);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "LoadGameFromSlot",(Native)&UGameplayStatics::execLoadGameFromSlot);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "LoadStreamLevel",(Native)&UGameplayStatics::execLoadStreamLevel);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "MakeHitResult",(Native)&UGameplayStatics::execMakeHitResult);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "OpenLevel",(Native)&UGameplayStatics::execOpenLevel);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "ParseOption",(Native)&UGameplayStatics::execParseOption);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "PlayDialogue2D",(Native)&UGameplayStatics::execPlayDialogue2D);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "PlayDialogueAtLocation",(Native)&UGameplayStatics::execPlayDialogueAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "PlaySound2D",(Native)&UGameplayStatics::execPlaySound2D);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "PlaySoundAtLocation",(Native)&UGameplayStatics::execPlaySoundAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "PlayWorldCameraShake",(Native)&UGameplayStatics::execPlayWorldCameraShake);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "PopSoundMixModifier",(Native)&UGameplayStatics::execPopSoundMixModifier);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "ProjectWorldToScreen",(Native)&UGameplayStatics::execProjectWorldToScreen);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "PushSoundMixModifier",(Native)&UGameplayStatics::execPushSoundMixModifier);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "RebaseLocalOriginOntoZero",(Native)&UGameplayStatics::execRebaseLocalOriginOntoZero);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "RebaseZeroOriginOntoLocal",(Native)&UGameplayStatics::execRebaseZeroOriginOntoLocal);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "RemovePlayer",(Native)&UGameplayStatics::execRemovePlayer);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SaveGameToSlot",(Native)&UGameplayStatics::execSaveGameToSlot);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SetBaseSoundMix",(Native)&UGameplayStatics::execSetBaseSoundMix);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SetGamePaused",(Native)&UGameplayStatics::execSetGamePaused);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SetGlobalListenerFocusParameters",(Native)&UGameplayStatics::execSetGlobalListenerFocusParameters);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SetGlobalPitchModulation",(Native)&UGameplayStatics::execSetGlobalPitchModulation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SetGlobalTimeDilation",(Native)&UGameplayStatics::execSetGlobalTimeDilation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SetPlayerControllerID",(Native)&UGameplayStatics::execSetPlayerControllerID);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SetSoundMixClassOverride",(Native)&UGameplayStatics::execSetSoundMixClassOverride);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SetSubtitlesEnabled",(Native)&UGameplayStatics::execSetSubtitlesEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SetWorldOriginLocation",(Native)&UGameplayStatics::execSetWorldOriginLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnDecalAtLocation",(Native)&UGameplayStatics::execSpawnDecalAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnDecalAttached",(Native)&UGameplayStatics::execSpawnDecalAttached);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnDialogue2D",(Native)&UGameplayStatics::execSpawnDialogue2D);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnDialogueAtLocation",(Native)&UGameplayStatics::execSpawnDialogueAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnDialogueAttached",(Native)&UGameplayStatics::execSpawnDialogueAttached);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnEmitterAtLocation",(Native)&UGameplayStatics::execSpawnEmitterAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnEmitterAttached",(Native)&UGameplayStatics::execSpawnEmitterAttached);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnForceFeedbackAtLocation",(Native)&UGameplayStatics::execSpawnForceFeedbackAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnForceFeedbackAttached",(Native)&UGameplayStatics::execSpawnForceFeedbackAttached);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnObject",(Native)&UGameplayStatics::execSpawnObject);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnSound2D",(Native)&UGameplayStatics::execSpawnSound2D);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnSoundAtLocation",(Native)&UGameplayStatics::execSpawnSoundAtLocation);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SpawnSoundAttached",(Native)&UGameplayStatics::execSpawnSoundAttached);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "SuggestProjectileVelocity_CustomArc",(Native)&UGameplayStatics::execSuggestProjectileVelocity_CustomArc);
		FNativeFunctionRegistrar::RegisterFunction(UGameplayStatics::StaticClass(), "UnloadStreamLevel",(Native)&UGameplayStatics::execUnloadStreamLevel);
	}
	IMPLEMENT_CLASS(UGameplayStatics, 2377261596);
static class UEnum* EHMDWornState_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EHMDWornState();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EHMDWornState, Z_Construct_UPackage__Script_Engine(), TEXT("EHMDWornState"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHMDWornState(EHMDWornState_StaticEnum, TEXT("/Script/Engine"), TEXT("EHMDWornState"), false, nullptr, nullptr);
static class UEnum* EHMDTrackingOrigin_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EHMDTrackingOrigin();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EHMDTrackingOrigin, Z_Construct_UPackage__Script_Engine(), TEXT("EHMDTrackingOrigin"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EHMDTrackingOrigin(EHMDTrackingOrigin_StaticEnum, TEXT("/Script/Engine"), TEXT("EHMDTrackingOrigin"), false, nullptr, nullptr);
static class UEnum* EOrientPositionSelector_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOrientPositionSelector();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EOrientPositionSelector, Z_Construct_UPackage__Script_Engine(), TEXT("EOrientPositionSelector"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EOrientPositionSelector(EOrientPositionSelector_StaticEnum, TEXT("/Script/Engine"), TEXT("EOrientPositionSelector"), false, nullptr, nullptr);
	void UHeadMountedDisplayFunctionLibrary::StaticRegisterNativesUHeadMountedDisplayFunctionLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "EnableHMD",(Native)&UHeadMountedDisplayFunctionLibrary::execEnableHMD);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "EnableLowPersistenceMode",(Native)&UHeadMountedDisplayFunctionLibrary::execEnableLowPersistenceMode);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "GetHMDDeviceName",(Native)&UHeadMountedDisplayFunctionLibrary::execGetHMDDeviceName);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "GetNumOfTrackingSensors",(Native)&UHeadMountedDisplayFunctionLibrary::execGetNumOfTrackingSensors);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "GetOrientationAndPosition",(Native)&UHeadMountedDisplayFunctionLibrary::execGetOrientationAndPosition);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "GetPositionalTrackingCameraParameters",(Native)&UHeadMountedDisplayFunctionLibrary::execGetPositionalTrackingCameraParameters);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "GetScreenPercentage",(Native)&UHeadMountedDisplayFunctionLibrary::execGetScreenPercentage);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "GetTrackingOrigin",(Native)&UHeadMountedDisplayFunctionLibrary::execGetTrackingOrigin);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "GetTrackingSensorParameters",(Native)&UHeadMountedDisplayFunctionLibrary::execGetTrackingSensorParameters);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "GetVRFocusState",(Native)&UHeadMountedDisplayFunctionLibrary::execGetVRFocusState);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "GetWorldToMetersScale",(Native)&UHeadMountedDisplayFunctionLibrary::execGetWorldToMetersScale);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "HasValidTrackingPosition",(Native)&UHeadMountedDisplayFunctionLibrary::execHasValidTrackingPosition);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "IsHeadMountedDisplayConnected",(Native)&UHeadMountedDisplayFunctionLibrary::execIsHeadMountedDisplayConnected);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "IsHeadMountedDisplayEnabled",(Native)&UHeadMountedDisplayFunctionLibrary::execIsHeadMountedDisplayEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "IsInLowPersistenceMode",(Native)&UHeadMountedDisplayFunctionLibrary::execIsInLowPersistenceMode);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "ResetOrientationAndPosition",(Native)&UHeadMountedDisplayFunctionLibrary::execResetOrientationAndPosition);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "SetClippingPlanes",(Native)&UHeadMountedDisplayFunctionLibrary::execSetClippingPlanes);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "SetTrackingOrigin",(Native)&UHeadMountedDisplayFunctionLibrary::execSetTrackingOrigin);
		FNativeFunctionRegistrar::RegisterFunction(UHeadMountedDisplayFunctionLibrary::StaticClass(), "SetWorldToMetersScale",(Native)&UHeadMountedDisplayFunctionLibrary::execSetWorldToMetersScale);
	}
	IMPLEMENT_CLASS(UHeadMountedDisplayFunctionLibrary, 1517269860);
	void UKismetArrayLibrary::StaticRegisterNativesUKismetArrayLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Add",(Native)&UKismetArrayLibrary::execArray_Add);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_AddUnique",(Native)&UKismetArrayLibrary::execArray_AddUnique);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Append",(Native)&UKismetArrayLibrary::execArray_Append);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Clear",(Native)&UKismetArrayLibrary::execArray_Clear);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Contains",(Native)&UKismetArrayLibrary::execArray_Contains);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Find",(Native)&UKismetArrayLibrary::execArray_Find);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Get",(Native)&UKismetArrayLibrary::execArray_Get);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Insert",(Native)&UKismetArrayLibrary::execArray_Insert);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_IsValidIndex",(Native)&UKismetArrayLibrary::execArray_IsValidIndex);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_LastIndex",(Native)&UKismetArrayLibrary::execArray_LastIndex);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Length",(Native)&UKismetArrayLibrary::execArray_Length);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Remove",(Native)&UKismetArrayLibrary::execArray_Remove);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_RemoveItem",(Native)&UKismetArrayLibrary::execArray_RemoveItem);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Resize",(Native)&UKismetArrayLibrary::execArray_Resize);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Set",(Native)&UKismetArrayLibrary::execArray_Set);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "Array_Shuffle",(Native)&UKismetArrayLibrary::execArray_Shuffle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "FilterArray",(Native)&UKismetArrayLibrary::execFilterArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetArrayLibrary::StaticClass(), "SetArrayPropertyByName",(Native)&UKismetArrayLibrary::execSetArrayPropertyByName);
	}
	IMPLEMENT_CLASS(UKismetArrayLibrary, 3279649881);
	void UKismetGuidLibrary::StaticRegisterNativesUKismetGuidLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetGuidLibrary::StaticClass(), "Conv_GuidToString",(Native)&UKismetGuidLibrary::execConv_GuidToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetGuidLibrary::StaticClass(), "EqualEqual_GuidGuid",(Native)&UKismetGuidLibrary::execEqualEqual_GuidGuid);
		FNativeFunctionRegistrar::RegisterFunction(UKismetGuidLibrary::StaticClass(), "Invalidate_Guid",(Native)&UKismetGuidLibrary::execInvalidate_Guid);
		FNativeFunctionRegistrar::RegisterFunction(UKismetGuidLibrary::StaticClass(), "IsValid_Guid",(Native)&UKismetGuidLibrary::execIsValid_Guid);
		FNativeFunctionRegistrar::RegisterFunction(UKismetGuidLibrary::StaticClass(), "NewGuid",(Native)&UKismetGuidLibrary::execNewGuid);
		FNativeFunctionRegistrar::RegisterFunction(UKismetGuidLibrary::StaticClass(), "NotEqual_GuidGuid",(Native)&UKismetGuidLibrary::execNotEqual_GuidGuid);
		FNativeFunctionRegistrar::RegisterFunction(UKismetGuidLibrary::StaticClass(), "Parse_StringToGuid",(Native)&UKismetGuidLibrary::execParse_StringToGuid);
	}
	IMPLEMENT_CLASS(UKismetGuidLibrary, 2014253630);
	void UKismetInputLibrary::StaticRegisterNativesUKismetInputLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "CalibrateTilt",(Native)&UKismetInputLibrary::execCalibrateTilt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "ControllerEvent_GetAnalogValue",(Native)&UKismetInputLibrary::execControllerEvent_GetAnalogValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "ControllerEvent_GetEffectingButton",(Native)&UKismetInputLibrary::execControllerEvent_GetEffectingButton);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "ControllerEvent_GetUserIndex",(Native)&UKismetInputLibrary::execControllerEvent_GetUserIndex);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "EqualEqual_InputChordInputChord",(Native)&UKismetInputLibrary::execEqualEqual_InputChordInputChord);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "EqualEqual_KeyKey",(Native)&UKismetInputLibrary::execEqualEqual_KeyKey);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "GetAnalogValue",(Native)&UKismetInputLibrary::execGetAnalogValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "GetKey",(Native)&UKismetInputLibrary::execGetKey);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "GetUserIndex",(Native)&UKismetInputLibrary::execGetUserIndex);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsAltDown",(Native)&UKismetInputLibrary::execInputEvent_IsAltDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsCommandDown",(Native)&UKismetInputLibrary::execInputEvent_IsCommandDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsControlDown",(Native)&UKismetInputLibrary::execInputEvent_IsControlDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsLeftAltDown",(Native)&UKismetInputLibrary::execInputEvent_IsLeftAltDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsLeftCommandDown",(Native)&UKismetInputLibrary::execInputEvent_IsLeftCommandDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsLeftControlDown",(Native)&UKismetInputLibrary::execInputEvent_IsLeftControlDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsLeftShiftDown",(Native)&UKismetInputLibrary::execInputEvent_IsLeftShiftDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsRepeat",(Native)&UKismetInputLibrary::execInputEvent_IsRepeat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsRightAltDown",(Native)&UKismetInputLibrary::execInputEvent_IsRightAltDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsRightCommandDown",(Native)&UKismetInputLibrary::execInputEvent_IsRightCommandDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsRightControlDown",(Native)&UKismetInputLibrary::execInputEvent_IsRightControlDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsRightShiftDown",(Native)&UKismetInputLibrary::execInputEvent_IsRightShiftDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "InputEvent_IsShiftDown",(Native)&UKismetInputLibrary::execInputEvent_IsShiftDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "Key_GetDisplayName",(Native)&UKismetInputLibrary::execKey_GetDisplayName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "Key_IsFloatAxis",(Native)&UKismetInputLibrary::execKey_IsFloatAxis);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "Key_IsGamepadKey",(Native)&UKismetInputLibrary::execKey_IsGamepadKey);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "Key_IsKeyboardKey",(Native)&UKismetInputLibrary::execKey_IsKeyboardKey);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "Key_IsModifierKey",(Native)&UKismetInputLibrary::execKey_IsModifierKey);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "Key_IsMouseButton",(Native)&UKismetInputLibrary::execKey_IsMouseButton);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "Key_IsVectorAxis",(Native)&UKismetInputLibrary::execKey_IsVectorAxis);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_GetCursorDelta",(Native)&UKismetInputLibrary::execPointerEvent_GetCursorDelta);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_GetEffectingButton",(Native)&UKismetInputLibrary::execPointerEvent_GetEffectingButton);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_GetGestureDelta",(Native)&UKismetInputLibrary::execPointerEvent_GetGestureDelta);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_GetLastScreenSpacePosition",(Native)&UKismetInputLibrary::execPointerEvent_GetLastScreenSpacePosition);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_GetPointerIndex",(Native)&UKismetInputLibrary::execPointerEvent_GetPointerIndex);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_GetScreenSpacePosition",(Native)&UKismetInputLibrary::execPointerEvent_GetScreenSpacePosition);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_GetTouchpadIndex",(Native)&UKismetInputLibrary::execPointerEvent_GetTouchpadIndex);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_GetUserIndex",(Native)&UKismetInputLibrary::execPointerEvent_GetUserIndex);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_GetWheelDelta",(Native)&UKismetInputLibrary::execPointerEvent_GetWheelDelta);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_IsMouseButtonDown",(Native)&UKismetInputLibrary::execPointerEvent_IsMouseButtonDown);
		FNativeFunctionRegistrar::RegisterFunction(UKismetInputLibrary::StaticClass(), "PointerEvent_IsTouchEvent",(Native)&UKismetInputLibrary::execPointerEvent_IsTouchEvent);
	}
	IMPLEMENT_CLASS(UKismetInputLibrary, 1038113327);
	void UKismetMaterialLibrary::StaticRegisterNativesUKismetMaterialLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetMaterialLibrary::StaticClass(), "CreateDynamicMaterialInstance",(Native)&UKismetMaterialLibrary::execCreateDynamicMaterialInstance);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMaterialLibrary::StaticClass(), "GetScalarParameterValue",(Native)&UKismetMaterialLibrary::execGetScalarParameterValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMaterialLibrary::StaticClass(), "GetVectorParameterValue",(Native)&UKismetMaterialLibrary::execGetVectorParameterValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMaterialLibrary::StaticClass(), "SetScalarParameterValue",(Native)&UKismetMaterialLibrary::execSetScalarParameterValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMaterialLibrary::StaticClass(), "SetVectorParameterValue",(Native)&UKismetMaterialLibrary::execSetVectorParameterValue);
	}
	IMPLEMENT_CLASS(UKismetMaterialLibrary, 3435146989);
static class UEnum* ELerpInterpolationMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELerpInterpolationMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELerpInterpolationMode, Z_Construct_UPackage__Script_Engine(), TEXT("ELerpInterpolationMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELerpInterpolationMode(ELerpInterpolationMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ELerpInterpolationMode"), false, nullptr, nullptr);
static class UEnum* EEasingFunc_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEasingFunc();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEasingFunc, Z_Construct_UPackage__Script_Engine(), TEXT("EEasingFunc"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEasingFunc(EEasingFunc_StaticEnum, TEXT("/Script/Engine"), TEXT("EEasingFunc"), false, nullptr, nullptr);
class UScriptStruct* FVectorSpringState::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorSpringState();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVectorSpringState_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVectorSpringState, Z_Construct_UPackage__Script_Engine(), TEXT("VectorSpringState"), sizeof(FVectorSpringState), Get_Z_Construct_UScriptStruct_FVectorSpringState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVectorSpringState(FVectorSpringState::StaticStruct, TEXT("/Script/Engine"), TEXT("VectorSpringState"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVectorSpringState
{
	FScriptStruct_Engine_StaticRegisterNativesFVectorSpringState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("VectorSpringState")),new UScriptStruct::TCppStructOps<FVectorSpringState>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVectorSpringState;
class UScriptStruct* FFloatSpringState::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFloatSpringState();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFloatSpringState_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFloatSpringState, Z_Construct_UPackage__Script_Engine(), TEXT("FloatSpringState"), sizeof(FFloatSpringState), Get_Z_Construct_UScriptStruct_FFloatSpringState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFloatSpringState(FFloatSpringState::StaticStruct, TEXT("/Script/Engine"), TEXT("FloatSpringState"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFloatSpringState
{
	FScriptStruct_Engine_StaticRegisterNativesFFloatSpringState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FloatSpringState")),new UScriptStruct::TCppStructOps<FFloatSpringState>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFloatSpringState;
	void UKismetMathLibrary::StaticRegisterNativesUKismetMathLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Abs",(Native)&UKismetMathLibrary::execAbs);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Abs_Int",(Native)&UKismetMathLibrary::execAbs_Int);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Acos",(Native)&UKismetMathLibrary::execAcos);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_ByteByte",(Native)&UKismetMathLibrary::execAdd_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_DateTimeTimespan",(Native)&UKismetMathLibrary::execAdd_DateTimeTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_FloatFloat",(Native)&UKismetMathLibrary::execAdd_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_IntInt",(Native)&UKismetMathLibrary::execAdd_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_TimespanTimespan",(Native)&UKismetMathLibrary::execAdd_TimespanTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_Vector2DFloat",(Native)&UKismetMathLibrary::execAdd_Vector2DFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_Vector2DVector2D",(Native)&UKismetMathLibrary::execAdd_Vector2DVector2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_VectorFloat",(Native)&UKismetMathLibrary::execAdd_VectorFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_VectorInt",(Native)&UKismetMathLibrary::execAdd_VectorInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Add_VectorVector",(Native)&UKismetMathLibrary::execAdd_VectorVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "And_IntInt",(Native)&UKismetMathLibrary::execAnd_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Asin",(Native)&UKismetMathLibrary::execAsin);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Atan",(Native)&UKismetMathLibrary::execAtan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Atan2",(Native)&UKismetMathLibrary::execAtan2);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BMax",(Native)&UKismetMathLibrary::execBMax);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BMin",(Native)&UKismetMathLibrary::execBMin);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BooleanAND",(Native)&UKismetMathLibrary::execBooleanAND);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BooleanNAND",(Native)&UKismetMathLibrary::execBooleanNAND);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BooleanNOR",(Native)&UKismetMathLibrary::execBooleanNOR);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BooleanOR",(Native)&UKismetMathLibrary::execBooleanOR);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BooleanXOR",(Native)&UKismetMathLibrary::execBooleanXOR);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BreakColor",(Native)&UKismetMathLibrary::execBreakColor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BreakDateTime",(Native)&UKismetMathLibrary::execBreakDateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BreakRandomStream",(Native)&UKismetMathLibrary::execBreakRandomStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BreakRotator",(Native)&UKismetMathLibrary::execBreakRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BreakRotIntoAxes",(Native)&UKismetMathLibrary::execBreakRotIntoAxes);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BreakTimespan",(Native)&UKismetMathLibrary::execBreakTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BreakTransform",(Native)&UKismetMathLibrary::execBreakTransform);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BreakVector",(Native)&UKismetMathLibrary::execBreakVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "BreakVector2D",(Native)&UKismetMathLibrary::execBreakVector2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "CInterpTo",(Native)&UKismetMathLibrary::execCInterpTo);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Clamp",(Native)&UKismetMathLibrary::execClamp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ClampAngle",(Native)&UKismetMathLibrary::execClampAngle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ClampAxis",(Native)&UKismetMathLibrary::execClampAxis);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ClampVectorSize",(Native)&UKismetMathLibrary::execClampVectorSize);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ClassIsChildOf",(Native)&UKismetMathLibrary::execClassIsChildOf);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ComposeRotators",(Native)&UKismetMathLibrary::execComposeRotators);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ComposeTransforms",(Native)&UKismetMathLibrary::execComposeTransforms);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_BoolToByte",(Native)&UKismetMathLibrary::execConv_BoolToByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_BoolToFloat",(Native)&UKismetMathLibrary::execConv_BoolToFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_BoolToInt",(Native)&UKismetMathLibrary::execConv_BoolToInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_ByteToFloat",(Native)&UKismetMathLibrary::execConv_ByteToFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_ByteToInt",(Native)&UKismetMathLibrary::execConv_ByteToInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_ColorToLinearColor",(Native)&UKismetMathLibrary::execConv_ColorToLinearColor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_FloatToLinearColor",(Native)&UKismetMathLibrary::execConv_FloatToLinearColor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_FloatToVector",(Native)&UKismetMathLibrary::execConv_FloatToVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_IntToBool",(Native)&UKismetMathLibrary::execConv_IntToBool);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_IntToByte",(Native)&UKismetMathLibrary::execConv_IntToByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_IntToFloat",(Native)&UKismetMathLibrary::execConv_IntToFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_IntToIntVector",(Native)&UKismetMathLibrary::execConv_IntToIntVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_IntVectorToVector",(Native)&UKismetMathLibrary::execConv_IntVectorToVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_LinearColorToColor",(Native)&UKismetMathLibrary::execConv_LinearColorToColor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_LinearColorToVector",(Native)&UKismetMathLibrary::execConv_LinearColorToVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_RotatorToVector",(Native)&UKismetMathLibrary::execConv_RotatorToVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_Vector2DToVector",(Native)&UKismetMathLibrary::execConv_Vector2DToVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_VectorToLinearColor",(Native)&UKismetMathLibrary::execConv_VectorToLinearColor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_VectorToRotator",(Native)&UKismetMathLibrary::execConv_VectorToRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_VectorToTransform",(Native)&UKismetMathLibrary::execConv_VectorToTransform);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Conv_VectorToVector2D",(Native)&UKismetMathLibrary::execConv_VectorToVector2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ConvertTransformToRelative",(Native)&UKismetMathLibrary::execConvertTransformToRelative);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Cos",(Native)&UKismetMathLibrary::execCos);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "CreateVectorFromYawPitch",(Native)&UKismetMathLibrary::execCreateVectorFromYawPitch);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Cross_VectorVector",(Native)&UKismetMathLibrary::execCross_VectorVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "CrossProduct2D",(Native)&UKismetMathLibrary::execCrossProduct2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DateTimeFromIsoString",(Native)&UKismetMathLibrary::execDateTimeFromIsoString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DateTimeFromString",(Native)&UKismetMathLibrary::execDateTimeFromString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DateTimeMaxValue",(Native)&UKismetMathLibrary::execDateTimeMaxValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DateTimeMinValue",(Native)&UKismetMathLibrary::execDateTimeMinValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DaysInMonth",(Native)&UKismetMathLibrary::execDaysInMonth);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DaysInYear",(Native)&UKismetMathLibrary::execDaysInYear);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DegAcos",(Native)&UKismetMathLibrary::execDegAcos);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DegAsin",(Native)&UKismetMathLibrary::execDegAsin);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DegAtan",(Native)&UKismetMathLibrary::execDegAtan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DegAtan2",(Native)&UKismetMathLibrary::execDegAtan2);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DegCos",(Native)&UKismetMathLibrary::execDegCos);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DegreesToRadians",(Native)&UKismetMathLibrary::execDegreesToRadians);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DegSin",(Native)&UKismetMathLibrary::execDegSin);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DegTan",(Native)&UKismetMathLibrary::execDegTan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Divide_ByteByte",(Native)&UKismetMathLibrary::execDivide_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Divide_FloatFloat",(Native)&UKismetMathLibrary::execDivide_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Divide_IntInt",(Native)&UKismetMathLibrary::execDivide_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Divide_Vector2DFloat",(Native)&UKismetMathLibrary::execDivide_Vector2DFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Divide_VectorFloat",(Native)&UKismetMathLibrary::execDivide_VectorFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Divide_VectorInt",(Native)&UKismetMathLibrary::execDivide_VectorInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Divide_VectorVector",(Native)&UKismetMathLibrary::execDivide_VectorVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Dot_VectorVector",(Native)&UKismetMathLibrary::execDot_VectorVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "DotProduct2D",(Native)&UKismetMathLibrary::execDotProduct2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Ease",(Native)&UKismetMathLibrary::execEase);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_BoolBool",(Native)&UKismetMathLibrary::execEqualEqual_BoolBool);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_ByteByte",(Native)&UKismetMathLibrary::execEqualEqual_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_ClassClass",(Native)&UKismetMathLibrary::execEqualEqual_ClassClass);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_DateTimeDateTime",(Native)&UKismetMathLibrary::execEqualEqual_DateTimeDateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_FloatFloat",(Native)&UKismetMathLibrary::execEqualEqual_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_IntInt",(Native)&UKismetMathLibrary::execEqualEqual_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_NameName",(Native)&UKismetMathLibrary::execEqualEqual_NameName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_ObjectObject",(Native)&UKismetMathLibrary::execEqualEqual_ObjectObject);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_RotatorRotator",(Native)&UKismetMathLibrary::execEqualEqual_RotatorRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_TimespanTimespan",(Native)&UKismetMathLibrary::execEqualEqual_TimespanTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_TransformTransform",(Native)&UKismetMathLibrary::execEqualEqual_TransformTransform);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_Vector2DVector2D",(Native)&UKismetMathLibrary::execEqualEqual_Vector2DVector2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "EqualEqual_VectorVector",(Native)&UKismetMathLibrary::execEqualEqual_VectorVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Exp",(Native)&UKismetMathLibrary::execExp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FCeil",(Native)&UKismetMathLibrary::execFCeil);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FClamp",(Native)&UKismetMathLibrary::execFClamp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FFloor",(Native)&UKismetMathLibrary::execFFloor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FindClosestPointOnLine",(Native)&UKismetMathLibrary::execFindClosestPointOnLine);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FindClosestPointOnSegment",(Native)&UKismetMathLibrary::execFindClosestPointOnSegment);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FindLookAtRotation",(Native)&UKismetMathLibrary::execFindLookAtRotation);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FindNearestPointsOnLineSegments",(Native)&UKismetMathLibrary::execFindNearestPointsOnLineSegments);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FInterpEaseInOut",(Native)&UKismetMathLibrary::execFInterpEaseInOut);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FInterpTo",(Native)&UKismetMathLibrary::execFInterpTo);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FInterpTo_Constant",(Native)&UKismetMathLibrary::execFInterpTo_Constant);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FixedTurn",(Native)&UKismetMathLibrary::execFixedTurn);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FloatSpringInterp",(Native)&UKismetMathLibrary::execFloatSpringInterp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FMax",(Native)&UKismetMathLibrary::execFMax);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FMin",(Native)&UKismetMathLibrary::execFMin);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FMod",(Native)&UKismetMathLibrary::execFMod);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Fraction",(Native)&UKismetMathLibrary::execFraction);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FromDays",(Native)&UKismetMathLibrary::execFromDays);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FromHours",(Native)&UKismetMathLibrary::execFromHours);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FromMilliseconds",(Native)&UKismetMathLibrary::execFromMilliseconds);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FromMinutes",(Native)&UKismetMathLibrary::execFromMinutes);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FromSeconds",(Native)&UKismetMathLibrary::execFromSeconds);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FTrunc",(Native)&UKismetMathLibrary::execFTrunc);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "FTruncVector",(Native)&UKismetMathLibrary::execFTruncVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetAxes",(Native)&UKismetMathLibrary::execGetAxes);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetDate",(Native)&UKismetMathLibrary::execGetDate);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetDay",(Native)&UKismetMathLibrary::execGetDay);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetDayOfYear",(Native)&UKismetMathLibrary::execGetDayOfYear);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetDays",(Native)&UKismetMathLibrary::execGetDays);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetDirectionUnitVector",(Native)&UKismetMathLibrary::execGetDirectionUnitVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetDuration",(Native)&UKismetMathLibrary::execGetDuration);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetForwardVector",(Native)&UKismetMathLibrary::execGetForwardVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetHour",(Native)&UKismetMathLibrary::execGetHour);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetHour12",(Native)&UKismetMathLibrary::execGetHour12);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetHours",(Native)&UKismetMathLibrary::execGetHours);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetMaxElement",(Native)&UKismetMathLibrary::execGetMaxElement);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetMillisecond",(Native)&UKismetMathLibrary::execGetMillisecond);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetMilliseconds",(Native)&UKismetMathLibrary::execGetMilliseconds);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetMinElement",(Native)&UKismetMathLibrary::execGetMinElement);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetMinute",(Native)&UKismetMathLibrary::execGetMinute);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetMinutes",(Native)&UKismetMathLibrary::execGetMinutes);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetMonth",(Native)&UKismetMathLibrary::execGetMonth);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetPI",(Native)&UKismetMathLibrary::execGetPI);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetPointDistanceToLine",(Native)&UKismetMathLibrary::execGetPointDistanceToLine);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetPointDistanceToSegment",(Native)&UKismetMathLibrary::execGetPointDistanceToSegment);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetReflectionVector",(Native)&UKismetMathLibrary::execGetReflectionVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetRightVector",(Native)&UKismetMathLibrary::execGetRightVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetSecond",(Native)&UKismetMathLibrary::execGetSecond);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetSeconds",(Native)&UKismetMathLibrary::execGetSeconds);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetTAU",(Native)&UKismetMathLibrary::execGetTAU);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetTimeOfDay",(Native)&UKismetMathLibrary::execGetTimeOfDay);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetTotalDays",(Native)&UKismetMathLibrary::execGetTotalDays);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetTotalHours",(Native)&UKismetMathLibrary::execGetTotalHours);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetTotalMilliseconds",(Native)&UKismetMathLibrary::execGetTotalMilliseconds);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetTotalMinutes",(Native)&UKismetMathLibrary::execGetTotalMinutes);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetTotalSeconds",(Native)&UKismetMathLibrary::execGetTotalSeconds);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetUpVector",(Native)&UKismetMathLibrary::execGetUpVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetVectorArrayAverage",(Native)&UKismetMathLibrary::execGetVectorArrayAverage);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetYawPitchFromVector",(Native)&UKismetMathLibrary::execGetYawPitchFromVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GetYear",(Native)&UKismetMathLibrary::execGetYear);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Greater_ByteByte",(Native)&UKismetMathLibrary::execGreater_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Greater_DateTimeDateTime",(Native)&UKismetMathLibrary::execGreater_DateTimeDateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Greater_FloatFloat",(Native)&UKismetMathLibrary::execGreater_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Greater_IntInt",(Native)&UKismetMathLibrary::execGreater_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Greater_TimespanTimespan",(Native)&UKismetMathLibrary::execGreater_TimespanTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GreaterEqual_ByteByte",(Native)&UKismetMathLibrary::execGreaterEqual_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GreaterEqual_DateTimeDateTime",(Native)&UKismetMathLibrary::execGreaterEqual_DateTimeDateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GreaterEqual_FloatFloat",(Native)&UKismetMathLibrary::execGreaterEqual_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GreaterEqual_IntInt",(Native)&UKismetMathLibrary::execGreaterEqual_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GreaterEqual_TimespanTimespan",(Native)&UKismetMathLibrary::execGreaterEqual_TimespanTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GreaterGreater_VectorRotator",(Native)&UKismetMathLibrary::execGreaterGreater_VectorRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "GridSnap_Float",(Native)&UKismetMathLibrary::execGridSnap_Float);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "HSVToRGB",(Native)&UKismetMathLibrary::execHSVToRGB);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "HSVToRGB_Vector",(Native)&UKismetMathLibrary::execHSVToRGB_Vector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Hypotenuse",(Native)&UKismetMathLibrary::execHypotenuse);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "InRange_FloatFloat",(Native)&UKismetMathLibrary::execInRange_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "InverseLerp",(Native)&UKismetMathLibrary::execInverseLerp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "InverseTransformDirection",(Native)&UKismetMathLibrary::execInverseTransformDirection);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "InverseTransformLocation",(Native)&UKismetMathLibrary::execInverseTransformLocation);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "InvertTransform",(Native)&UKismetMathLibrary::execInvertTransform);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "IsAfternoon",(Native)&UKismetMathLibrary::execIsAfternoon);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "IsLeapYear",(Native)&UKismetMathLibrary::execIsLeapYear);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "IsMorning",(Native)&UKismetMathLibrary::execIsMorning);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "IsPointInBox",(Native)&UKismetMathLibrary::execIsPointInBox);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "IsPointInBoxWithTransform",(Native)&UKismetMathLibrary::execIsPointInBoxWithTransform);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Lerp",(Native)&UKismetMathLibrary::execLerp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Less_ByteByte",(Native)&UKismetMathLibrary::execLess_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Less_DateTimeDateTime",(Native)&UKismetMathLibrary::execLess_DateTimeDateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Less_FloatFloat",(Native)&UKismetMathLibrary::execLess_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Less_IntInt",(Native)&UKismetMathLibrary::execLess_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Less_TimespanTimespan",(Native)&UKismetMathLibrary::execLess_TimespanTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LessEqual_ByteByte",(Native)&UKismetMathLibrary::execLessEqual_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LessEqual_DateTimeDateTime",(Native)&UKismetMathLibrary::execLessEqual_DateTimeDateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LessEqual_FloatFloat",(Native)&UKismetMathLibrary::execLessEqual_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LessEqual_IntInt",(Native)&UKismetMathLibrary::execLessEqual_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LessEqual_TimespanTimespan",(Native)&UKismetMathLibrary::execLessEqual_TimespanTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LessLess_VectorRotator",(Native)&UKismetMathLibrary::execLessLess_VectorRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LinearColorLerp",(Native)&UKismetMathLibrary::execLinearColorLerp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LinearColorLerpUsingHSV",(Native)&UKismetMathLibrary::execLinearColorLerpUsingHSV);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LinePlaneIntersection",(Native)&UKismetMathLibrary::execLinePlaneIntersection);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "LinePlaneIntersection_OriginNormal",(Native)&UKismetMathLibrary::execLinePlaneIntersection_OriginNormal);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Loge",(Native)&UKismetMathLibrary::execLoge);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeBox",(Native)&UKismetMathLibrary::execMakeBox);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeBox2D",(Native)&UKismetMathLibrary::execMakeBox2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeColor",(Native)&UKismetMathLibrary::execMakeColor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeDateTime",(Native)&UKismetMathLibrary::execMakeDateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakePlaneFromPointAndNormal",(Native)&UKismetMathLibrary::execMakePlaneFromPointAndNormal);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakePulsatingValue",(Native)&UKismetMathLibrary::execMakePulsatingValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRandomStream",(Native)&UKismetMathLibrary::execMakeRandomStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotationFromAxes",(Native)&UKismetMathLibrary::execMakeRotationFromAxes);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotator",(Native)&UKismetMathLibrary::execMakeRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotFromX",(Native)&UKismetMathLibrary::execMakeRotFromX);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotFromXY",(Native)&UKismetMathLibrary::execMakeRotFromXY);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotFromXZ",(Native)&UKismetMathLibrary::execMakeRotFromXZ);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotFromY",(Native)&UKismetMathLibrary::execMakeRotFromY);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotFromYX",(Native)&UKismetMathLibrary::execMakeRotFromYX);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotFromYZ",(Native)&UKismetMathLibrary::execMakeRotFromYZ);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotFromZ",(Native)&UKismetMathLibrary::execMakeRotFromZ);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotFromZX",(Native)&UKismetMathLibrary::execMakeRotFromZX);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeRotFromZY",(Native)&UKismetMathLibrary::execMakeRotFromZY);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeTimespan",(Native)&UKismetMathLibrary::execMakeTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeTransform",(Native)&UKismetMathLibrary::execMakeTransform);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeVector",(Native)&UKismetMathLibrary::execMakeVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MakeVector2D",(Native)&UKismetMathLibrary::execMakeVector2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MapRangeClamped",(Native)&UKismetMathLibrary::execMapRangeClamped);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MapRangeUnclamped",(Native)&UKismetMathLibrary::execMapRangeUnclamped);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Max",(Native)&UKismetMathLibrary::execMax);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MaxOfByteArray",(Native)&UKismetMathLibrary::execMaxOfByteArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MaxOfFloatArray",(Native)&UKismetMathLibrary::execMaxOfFloatArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MaxOfIntArray",(Native)&UKismetMathLibrary::execMaxOfIntArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Min",(Native)&UKismetMathLibrary::execMin);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MinimumAreaRectangle",(Native)&UKismetMathLibrary::execMinimumAreaRectangle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MinOfByteArray",(Native)&UKismetMathLibrary::execMinOfByteArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MinOfFloatArray",(Native)&UKismetMathLibrary::execMinOfFloatArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MinOfIntArray",(Native)&UKismetMathLibrary::execMinOfIntArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MirrorVectorByNormal",(Native)&UKismetMathLibrary::execMirrorVectorByNormal);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_ByteByte",(Native)&UKismetMathLibrary::execMultiply_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_FloatFloat",(Native)&UKismetMathLibrary::execMultiply_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_IntFloat",(Native)&UKismetMathLibrary::execMultiply_IntFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_IntInt",(Native)&UKismetMathLibrary::execMultiply_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_LinearColorFloat",(Native)&UKismetMathLibrary::execMultiply_LinearColorFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_LinearColorLinearColor",(Native)&UKismetMathLibrary::execMultiply_LinearColorLinearColor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_RotatorFloat",(Native)&UKismetMathLibrary::execMultiply_RotatorFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_RotatorInt",(Native)&UKismetMathLibrary::execMultiply_RotatorInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_TimespanFloat",(Native)&UKismetMathLibrary::execMultiply_TimespanFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_Vector2DFloat",(Native)&UKismetMathLibrary::execMultiply_Vector2DFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_Vector2DVector2D",(Native)&UKismetMathLibrary::execMultiply_Vector2DVector2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_VectorFloat",(Native)&UKismetMathLibrary::execMultiply_VectorFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_VectorInt",(Native)&UKismetMathLibrary::execMultiply_VectorInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Multiply_VectorVector",(Native)&UKismetMathLibrary::execMultiply_VectorVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MultiplyByPi",(Native)&UKismetMathLibrary::execMultiplyByPi);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "MultiplyMultiply_FloatFloat",(Native)&UKismetMathLibrary::execMultiplyMultiply_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NearlyEqual_FloatFloat",(Native)&UKismetMathLibrary::execNearlyEqual_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NearlyEqual_TransformTransform",(Native)&UKismetMathLibrary::execNearlyEqual_TransformTransform);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NegateRotator",(Native)&UKismetMathLibrary::execNegateRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NegateVector",(Native)&UKismetMathLibrary::execNegateVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Normal",(Native)&UKismetMathLibrary::execNormal);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Normal2D",(Native)&UKismetMathLibrary::execNormal2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NormalizeAxis",(Native)&UKismetMathLibrary::execNormalizeAxis);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NormalizedDeltaRotator",(Native)&UKismetMathLibrary::execNormalizedDeltaRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NormalizeToRange",(Native)&UKismetMathLibrary::execNormalizeToRange);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Not_Int",(Native)&UKismetMathLibrary::execNot_Int);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Not_PreBool",(Native)&UKismetMathLibrary::execNot_PreBool);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_BoolBool",(Native)&UKismetMathLibrary::execNotEqual_BoolBool);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_ByteByte",(Native)&UKismetMathLibrary::execNotEqual_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_ClassClass",(Native)&UKismetMathLibrary::execNotEqual_ClassClass);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_DateTimeDateTime",(Native)&UKismetMathLibrary::execNotEqual_DateTimeDateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_FloatFloat",(Native)&UKismetMathLibrary::execNotEqual_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_IntInt",(Native)&UKismetMathLibrary::execNotEqual_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_NameName",(Native)&UKismetMathLibrary::execNotEqual_NameName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_ObjectObject",(Native)&UKismetMathLibrary::execNotEqual_ObjectObject);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_RotatorRotator",(Native)&UKismetMathLibrary::execNotEqual_RotatorRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_TimespanTimespan",(Native)&UKismetMathLibrary::execNotEqual_TimespanTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_Vector2DVector2D",(Native)&UKismetMathLibrary::execNotEqual_Vector2DVector2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "NotEqual_VectorVector",(Native)&UKismetMathLibrary::execNotEqual_VectorVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Now",(Native)&UKismetMathLibrary::execNow);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Or_IntInt",(Native)&UKismetMathLibrary::execOr_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Percent_ByteByte",(Native)&UKismetMathLibrary::execPercent_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Percent_FloatFloat",(Native)&UKismetMathLibrary::execPercent_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Percent_IntInt",(Native)&UKismetMathLibrary::execPercent_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "PointsAreCoplanar",(Native)&UKismetMathLibrary::execPointsAreCoplanar);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ProjectPointOnToPlane",(Native)&UKismetMathLibrary::execProjectPointOnToPlane);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ProjectVectorOnToPlane",(Native)&UKismetMathLibrary::execProjectVectorOnToPlane);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ProjectVectorOnToVector",(Native)&UKismetMathLibrary::execProjectVectorOnToVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RadiansToDegrees",(Native)&UKismetMathLibrary::execRadiansToDegrees);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomBool",(Native)&UKismetMathLibrary::execRandomBool);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomBoolFromStream",(Native)&UKismetMathLibrary::execRandomBoolFromStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomBoolWithWeight",(Native)&UKismetMathLibrary::execRandomBoolWithWeight);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomBoolWithWeightFromStream",(Native)&UKismetMathLibrary::execRandomBoolWithWeightFromStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomFloat",(Native)&UKismetMathLibrary::execRandomFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomFloatFromStream",(Native)&UKismetMathLibrary::execRandomFloatFromStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomFloatInRange",(Native)&UKismetMathLibrary::execRandomFloatInRange);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomFloatInRangeFromStream",(Native)&UKismetMathLibrary::execRandomFloatInRangeFromStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomInteger",(Native)&UKismetMathLibrary::execRandomInteger);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomIntegerFromStream",(Native)&UKismetMathLibrary::execRandomIntegerFromStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomIntegerInRange",(Native)&UKismetMathLibrary::execRandomIntegerInRange);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomIntegerInRangeFromStream",(Native)&UKismetMathLibrary::execRandomIntegerInRangeFromStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomPointInBoundingBox",(Native)&UKismetMathLibrary::execRandomPointInBoundingBox);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomRotator",(Native)&UKismetMathLibrary::execRandomRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomRotatorFromStream",(Native)&UKismetMathLibrary::execRandomRotatorFromStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomUnitVector",(Native)&UKismetMathLibrary::execRandomUnitVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomUnitVectorFromStream",(Native)&UKismetMathLibrary::execRandomUnitVectorFromStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomUnitVectorInCone",(Native)&UKismetMathLibrary::execRandomUnitVectorInCone);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RandomUnitVectorInConeWithYawAndPitch",(Native)&UKismetMathLibrary::execRandomUnitVectorInConeWithYawAndPitch);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "REase",(Native)&UKismetMathLibrary::execREase);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ResetFloatSpringState",(Native)&UKismetMathLibrary::execResetFloatSpringState);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ResetRandomStream",(Native)&UKismetMathLibrary::execResetRandomStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "ResetVectorSpringState",(Native)&UKismetMathLibrary::execResetVectorSpringState);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RGBToHSV",(Native)&UKismetMathLibrary::execRGBToHSV);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RGBToHSV_Vector",(Native)&UKismetMathLibrary::execRGBToHSV_Vector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RInterpTo",(Native)&UKismetMathLibrary::execRInterpTo);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RInterpTo_Constant",(Native)&UKismetMathLibrary::execRInterpTo_Constant);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RLerp",(Native)&UKismetMathLibrary::execRLerp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RotateAngleAxis",(Native)&UKismetMathLibrary::execRotateAngleAxis);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "RotatorFromAxisAndAngle",(Native)&UKismetMathLibrary::execRotatorFromAxisAndAngle);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Round",(Native)&UKismetMathLibrary::execRound);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SeedRandomStream",(Native)&UKismetMathLibrary::execSeedRandomStream);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SelectClass",(Native)&UKismetMathLibrary::execSelectClass);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SelectColor",(Native)&UKismetMathLibrary::execSelectColor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SelectFloat",(Native)&UKismetMathLibrary::execSelectFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SelectInt",(Native)&UKismetMathLibrary::execSelectInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SelectObject",(Native)&UKismetMathLibrary::execSelectObject);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SelectRotator",(Native)&UKismetMathLibrary::execSelectRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SelectString",(Native)&UKismetMathLibrary::execSelectString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SelectTransform",(Native)&UKismetMathLibrary::execSelectTransform);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SelectVector",(Native)&UKismetMathLibrary::execSelectVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SetRandomStreamSeed",(Native)&UKismetMathLibrary::execSetRandomStreamSeed);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SignOfFloat",(Native)&UKismetMathLibrary::execSignOfFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "SignOfInteger",(Native)&UKismetMathLibrary::execSignOfInteger);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Sin",(Native)&UKismetMathLibrary::execSin);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Sqrt",(Native)&UKismetMathLibrary::execSqrt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Square",(Native)&UKismetMathLibrary::execSquare);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_ByteByte",(Native)&UKismetMathLibrary::execSubtract_ByteByte);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_DateTimeDateTime",(Native)&UKismetMathLibrary::execSubtract_DateTimeDateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_DateTimeTimespan",(Native)&UKismetMathLibrary::execSubtract_DateTimeTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_FloatFloat",(Native)&UKismetMathLibrary::execSubtract_FloatFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_IntInt",(Native)&UKismetMathLibrary::execSubtract_IntInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_TimespanTimespan",(Native)&UKismetMathLibrary::execSubtract_TimespanTimespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_Vector2DFloat",(Native)&UKismetMathLibrary::execSubtract_Vector2DFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_Vector2DVector2D",(Native)&UKismetMathLibrary::execSubtract_Vector2DVector2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_VectorFloat",(Native)&UKismetMathLibrary::execSubtract_VectorFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_VectorInt",(Native)&UKismetMathLibrary::execSubtract_VectorInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Subtract_VectorVector",(Native)&UKismetMathLibrary::execSubtract_VectorVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Tan",(Native)&UKismetMathLibrary::execTan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TEase",(Native)&UKismetMathLibrary::execTEase);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TimespanFromString",(Native)&UKismetMathLibrary::execTimespanFromString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TimespanMaxValue",(Native)&UKismetMathLibrary::execTimespanMaxValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TimespanMinValue",(Native)&UKismetMathLibrary::execTimespanMinValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TimespanRatio",(Native)&UKismetMathLibrary::execTimespanRatio);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TimespanZeroValue",(Native)&UKismetMathLibrary::execTimespanZeroValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TInterpTo",(Native)&UKismetMathLibrary::execTInterpTo);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TLerp",(Native)&UKismetMathLibrary::execTLerp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Today",(Native)&UKismetMathLibrary::execToday);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TransformDirection",(Native)&UKismetMathLibrary::execTransformDirection);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "TransformLocation",(Native)&UKismetMathLibrary::execTransformLocation);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "UtcNow",(Native)&UKismetMathLibrary::execUtcNow);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "VEase",(Native)&UKismetMathLibrary::execVEase);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Vector2DInterpTo",(Native)&UKismetMathLibrary::execVector2DInterpTo);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Vector2DInterpTo_Constant",(Native)&UKismetMathLibrary::execVector2DInterpTo_Constant);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "VectorSpringInterp",(Native)&UKismetMathLibrary::execVectorSpringInterp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "VInterpTo",(Native)&UKismetMathLibrary::execVInterpTo);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "VInterpTo_Constant",(Native)&UKismetMathLibrary::execVInterpTo_Constant);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "VLerp",(Native)&UKismetMathLibrary::execVLerp);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "VSize",(Native)&UKismetMathLibrary::execVSize);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "VSize2D",(Native)&UKismetMathLibrary::execVSize2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "VSize2DSquared",(Native)&UKismetMathLibrary::execVSize2DSquared);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "VSizeSquared",(Native)&UKismetMathLibrary::execVSizeSquared);
		FNativeFunctionRegistrar::RegisterFunction(UKismetMathLibrary::StaticClass(), "Xor_IntInt",(Native)&UKismetMathLibrary::execXor_IntInt);
	}
	IMPLEMENT_CLASS(UKismetMathLibrary, 2504276375);
	void UKismetNodeHelperLibrary::StaticRegisterNativesUKismetNodeHelperLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "BitIsMarked",(Native)&UKismetNodeHelperLibrary::execBitIsMarked);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "ClearAllBits",(Native)&UKismetNodeHelperLibrary::execClearAllBits);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "ClearBit",(Native)&UKismetNodeHelperLibrary::execClearBit);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "GetEnumeratorName",(Native)&UKismetNodeHelperLibrary::execGetEnumeratorName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "GetEnumeratorUserFriendlyName",(Native)&UKismetNodeHelperLibrary::execGetEnumeratorUserFriendlyName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "GetEnumeratorValueFromIndex",(Native)&UKismetNodeHelperLibrary::execGetEnumeratorValueFromIndex);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "GetFirstUnmarkedBit",(Native)&UKismetNodeHelperLibrary::execGetFirstUnmarkedBit);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "GetRandomUnmarkedBit",(Native)&UKismetNodeHelperLibrary::execGetRandomUnmarkedBit);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "GetUnmarkedBit",(Native)&UKismetNodeHelperLibrary::execGetUnmarkedBit);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "GetValidValue",(Native)&UKismetNodeHelperLibrary::execGetValidValue);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "HasMarkedBit",(Native)&UKismetNodeHelperLibrary::execHasMarkedBit);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "HasUnmarkedBit",(Native)&UKismetNodeHelperLibrary::execHasUnmarkedBit);
		FNativeFunctionRegistrar::RegisterFunction(UKismetNodeHelperLibrary::StaticClass(), "MarkBit",(Native)&UKismetNodeHelperLibrary::execMarkBit);
	}
	IMPLEMENT_CLASS(UKismetNodeHelperLibrary, 2142345431);
class UScriptStruct* FDrawToRenderTargetContext::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDrawToRenderTargetContext();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDrawToRenderTargetContext_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDrawToRenderTargetContext, Z_Construct_UPackage__Script_Engine(), TEXT("DrawToRenderTargetContext"), sizeof(FDrawToRenderTargetContext), Get_Z_Construct_UScriptStruct_FDrawToRenderTargetContext_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDrawToRenderTargetContext(FDrawToRenderTargetContext::StaticStruct, TEXT("/Script/Engine"), TEXT("DrawToRenderTargetContext"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDrawToRenderTargetContext
{
	FScriptStruct_Engine_StaticRegisterNativesFDrawToRenderTargetContext()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DrawToRenderTargetContext")),new UScriptStruct::TCppStructOps<FDrawToRenderTargetContext>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDrawToRenderTargetContext;
	void UKismetRenderingLibrary::StaticRegisterNativesUKismetRenderingLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetRenderingLibrary::StaticClass(), "BeginDrawCanvasToRenderTarget",(Native)&UKismetRenderingLibrary::execBeginDrawCanvasToRenderTarget);
		FNativeFunctionRegistrar::RegisterFunction(UKismetRenderingLibrary::StaticClass(), "ClearRenderTarget2D",(Native)&UKismetRenderingLibrary::execClearRenderTarget2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetRenderingLibrary::StaticClass(), "CreateRenderTarget2D",(Native)&UKismetRenderingLibrary::execCreateRenderTarget2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetRenderingLibrary::StaticClass(), "DrawMaterialToRenderTarget",(Native)&UKismetRenderingLibrary::execDrawMaterialToRenderTarget);
		FNativeFunctionRegistrar::RegisterFunction(UKismetRenderingLibrary::StaticClass(), "EndDrawCanvasToRenderTarget",(Native)&UKismetRenderingLibrary::execEndDrawCanvasToRenderTarget);
		FNativeFunctionRegistrar::RegisterFunction(UKismetRenderingLibrary::StaticClass(), "ExportRenderTarget",(Native)&UKismetRenderingLibrary::execExportRenderTarget);
		FNativeFunctionRegistrar::RegisterFunction(UKismetRenderingLibrary::StaticClass(), "ExportTexture2D",(Native)&UKismetRenderingLibrary::execExportTexture2D);
	}
	IMPLEMENT_CLASS(UKismetRenderingLibrary, 1723159069);
	void UKismetStringLibrary::StaticRegisterNativesUKismetStringLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_Bool",(Native)&UKismetStringLibrary::execBuildString_Bool);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_Color",(Native)&UKismetStringLibrary::execBuildString_Color);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_Float",(Native)&UKismetStringLibrary::execBuildString_Float);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_Int",(Native)&UKismetStringLibrary::execBuildString_Int);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_IntVector",(Native)&UKismetStringLibrary::execBuildString_IntVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_Name",(Native)&UKismetStringLibrary::execBuildString_Name);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_Object",(Native)&UKismetStringLibrary::execBuildString_Object);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_Rotator",(Native)&UKismetStringLibrary::execBuildString_Rotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_Vector",(Native)&UKismetStringLibrary::execBuildString_Vector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "BuildString_Vector2d",(Native)&UKismetStringLibrary::execBuildString_Vector2d);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Concat_StrStr",(Native)&UKismetStringLibrary::execConcat_StrStr);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Contains",(Native)&UKismetStringLibrary::execContains);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_BoolToString",(Native)&UKismetStringLibrary::execConv_BoolToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_ByteToString",(Native)&UKismetStringLibrary::execConv_ByteToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_ColorToString",(Native)&UKismetStringLibrary::execConv_ColorToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_FloatToString",(Native)&UKismetStringLibrary::execConv_FloatToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_IntToString",(Native)&UKismetStringLibrary::execConv_IntToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_IntVectorToString",(Native)&UKismetStringLibrary::execConv_IntVectorToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_NameToString",(Native)&UKismetStringLibrary::execConv_NameToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_ObjectToString",(Native)&UKismetStringLibrary::execConv_ObjectToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_RotatorToString",(Native)&UKismetStringLibrary::execConv_RotatorToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_StringToColor",(Native)&UKismetStringLibrary::execConv_StringToColor);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_StringToFloat",(Native)&UKismetStringLibrary::execConv_StringToFloat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_StringToInt",(Native)&UKismetStringLibrary::execConv_StringToInt);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_StringToName",(Native)&UKismetStringLibrary::execConv_StringToName);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_StringToRotator",(Native)&UKismetStringLibrary::execConv_StringToRotator);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_StringToVector",(Native)&UKismetStringLibrary::execConv_StringToVector);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_StringToVector2D",(Native)&UKismetStringLibrary::execConv_StringToVector2D);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_TransformToString",(Native)&UKismetStringLibrary::execConv_TransformToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_Vector2dToString",(Native)&UKismetStringLibrary::execConv_Vector2dToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Conv_VectorToString",(Native)&UKismetStringLibrary::execConv_VectorToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "CullArray",(Native)&UKismetStringLibrary::execCullArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "EndsWith",(Native)&UKismetStringLibrary::execEndsWith);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "EqualEqual_StriStri",(Native)&UKismetStringLibrary::execEqualEqual_StriStri);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "EqualEqual_StrStr",(Native)&UKismetStringLibrary::execEqualEqual_StrStr);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "FindSubstring",(Native)&UKismetStringLibrary::execFindSubstring);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "GetCharacterArrayFromString",(Native)&UKismetStringLibrary::execGetCharacterArrayFromString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "GetCharacterAsNumber",(Native)&UKismetStringLibrary::execGetCharacterAsNumber);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "GetSubstring",(Native)&UKismetStringLibrary::execGetSubstring);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "IsNumeric",(Native)&UKismetStringLibrary::execIsNumeric);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "JoinStringArray",(Native)&UKismetStringLibrary::execJoinStringArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Left",(Native)&UKismetStringLibrary::execLeft);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "LeftChop",(Native)&UKismetStringLibrary::execLeftChop);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "LeftPad",(Native)&UKismetStringLibrary::execLeftPad);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Len",(Native)&UKismetStringLibrary::execLen);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "MatchesWildcard",(Native)&UKismetStringLibrary::execMatchesWildcard);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Mid",(Native)&UKismetStringLibrary::execMid);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "NotEqual_StriStri",(Native)&UKismetStringLibrary::execNotEqual_StriStri);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "NotEqual_StrStr",(Native)&UKismetStringLibrary::execNotEqual_StrStr);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "ParseIntoArray",(Native)&UKismetStringLibrary::execParseIntoArray);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Replace",(Native)&UKismetStringLibrary::execReplace);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "ReplaceInline",(Native)&UKismetStringLibrary::execReplaceInline);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Reverse",(Native)&UKismetStringLibrary::execReverse);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Right",(Native)&UKismetStringLibrary::execRight);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "RightChop",(Native)&UKismetStringLibrary::execRightChop);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "RightPad",(Native)&UKismetStringLibrary::execRightPad);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Split",(Native)&UKismetStringLibrary::execSplit);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "StartsWith",(Native)&UKismetStringLibrary::execStartsWith);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "TimeSecondsToString",(Native)&UKismetStringLibrary::execTimeSecondsToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "ToLower",(Native)&UKismetStringLibrary::execToLower);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "ToUpper",(Native)&UKismetStringLibrary::execToUpper);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "Trim",(Native)&UKismetStringLibrary::execTrim);
		FNativeFunctionRegistrar::RegisterFunction(UKismetStringLibrary::StaticClass(), "TrimTrailing",(Native)&UKismetStringLibrary::execTrimTrailing);
	}
	IMPLEMENT_CLASS(UKismetStringLibrary, 1148155925);
static class UEnum* EFormatArgumentType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFormatArgumentType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EFormatArgumentType, Z_Construct_UPackage__Script_Engine(), TEXT("EFormatArgumentType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFormatArgumentType(EFormatArgumentType_StaticEnum, TEXT("/Script/Engine"), TEXT("EFormatArgumentType"), false, nullptr, nullptr);
static class UEnum* ETextGender_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextGender();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETextGender, Z_Construct_UPackage__Script_Engine(), TEXT("ETextGender"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETextGender(ETextGender_StaticEnum, TEXT("/Script/Engine"), TEXT("ETextGender"), false, nullptr, nullptr);
static class UEnum* ERoundingMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERoundingMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERoundingMode, Z_Construct_UPackage__Script_Engine(), TEXT("ERoundingMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERoundingMode(ERoundingMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ERoundingMode"), false, nullptr, nullptr);
	void UKismetTextLibrary::StaticRegisterNativesUKismetTextLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsCurrency_Float",(Native)&UKismetTextLibrary::execAsCurrency_Float);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsCurrency_Integer",(Native)&UKismetTextLibrary::execAsCurrency_Integer);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsCurrencyBase",(Native)&UKismetTextLibrary::execAsCurrencyBase);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsDate_DateTime",(Native)&UKismetTextLibrary::execAsDate_DateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsDateTime_DateTime",(Native)&UKismetTextLibrary::execAsDateTime_DateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsPercent_Float",(Native)&UKismetTextLibrary::execAsPercent_Float);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsTime_DateTime",(Native)&UKismetTextLibrary::execAsTime_DateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsTimespan_Timespan",(Native)&UKismetTextLibrary::execAsTimespan_Timespan);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsTimeZoneDate_DateTime",(Native)&UKismetTextLibrary::execAsTimeZoneDate_DateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsTimeZoneDateTime_DateTime",(Native)&UKismetTextLibrary::execAsTimeZoneDateTime_DateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "AsTimeZoneTime_DateTime",(Native)&UKismetTextLibrary::execAsTimeZoneTime_DateTime);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_BoolToText",(Native)&UKismetTextLibrary::execConv_BoolToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_ByteToText",(Native)&UKismetTextLibrary::execConv_ByteToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_ColorToText",(Native)&UKismetTextLibrary::execConv_ColorToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_FloatToText",(Native)&UKismetTextLibrary::execConv_FloatToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_IntToText",(Native)&UKismetTextLibrary::execConv_IntToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_NameToText",(Native)&UKismetTextLibrary::execConv_NameToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_ObjectToText",(Native)&UKismetTextLibrary::execConv_ObjectToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_RotatorToText",(Native)&UKismetTextLibrary::execConv_RotatorToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_StringToText",(Native)&UKismetTextLibrary::execConv_StringToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_TextToString",(Native)&UKismetTextLibrary::execConv_TextToString);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_TransformToText",(Native)&UKismetTextLibrary::execConv_TransformToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_Vector2dToText",(Native)&UKismetTextLibrary::execConv_Vector2dToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Conv_VectorToText",(Native)&UKismetTextLibrary::execConv_VectorToText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "EqualEqual_IgnoreCase_TextText",(Native)&UKismetTextLibrary::execEqualEqual_IgnoreCase_TextText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "EqualEqual_TextText",(Native)&UKismetTextLibrary::execEqualEqual_TextText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "FindTextInLocalizationTable",(Native)&UKismetTextLibrary::execFindTextInLocalizationTable);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "Format",(Native)&UKismetTextLibrary::execFormat);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "GetEmptyText",(Native)&UKismetTextLibrary::execGetEmptyText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "NotEqual_IgnoreCase_TextText",(Native)&UKismetTextLibrary::execNotEqual_IgnoreCase_TextText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "NotEqual_TextText",(Native)&UKismetTextLibrary::execNotEqual_TextText);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "TextIsCultureInvariant",(Native)&UKismetTextLibrary::execTextIsCultureInvariant);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "TextIsEmpty",(Native)&UKismetTextLibrary::execTextIsEmpty);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "TextIsTransient",(Native)&UKismetTextLibrary::execTextIsTransient);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "TextTrimPreceding",(Native)&UKismetTextLibrary::execTextTrimPreceding);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "TextTrimPrecedingAndTrailing",(Native)&UKismetTextLibrary::execTextTrimPrecedingAndTrailing);
		FNativeFunctionRegistrar::RegisterFunction(UKismetTextLibrary::StaticClass(), "TextTrimTrailing",(Native)&UKismetTextLibrary::execTextTrimTrailing);
	}
	IMPLEMENT_CLASS(UKismetTextLibrary, 3993615312);
	void UMeshVertexPainterKismetLibrary::StaticRegisterNativesUMeshVertexPainterKismetLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMeshVertexPainterKismetLibrary::StaticClass(), "PaintVerticesLerpAlongAxis",(Native)&UMeshVertexPainterKismetLibrary::execPaintVerticesLerpAlongAxis);
		FNativeFunctionRegistrar::RegisterFunction(UMeshVertexPainterKismetLibrary::StaticClass(), "PaintVerticesSingleColor",(Native)&UMeshVertexPainterKismetLibrary::execPaintVerticesSingleColor);
		FNativeFunctionRegistrar::RegisterFunction(UMeshVertexPainterKismetLibrary::StaticClass(), "RemovePaintedVertices",(Native)&UMeshVertexPainterKismetLibrary::execRemovePaintedVertices);
	}
	IMPLEMENT_CLASS(UMeshVertexPainterKismetLibrary, 3364680944);
static class UEnum* FNavigationSystemRunMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_FNavigationSystemRunMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_FNavigationSystemRunMode, Z_Construct_UPackage__Script_Engine(), TEXT("FNavigationSystemRunMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_FNavigationSystemRunMode(FNavigationSystemRunMode_StaticEnum, TEXT("/Script/Engine"), TEXT("FNavigationSystemRunMode"), false, nullptr, nullptr);
	void UNavigationSystem::StaticRegisterNativesUNavigationSystem()
	{
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "FindPathToActorSynchronously",(Native)&UNavigationSystem::execFindPathToActorSynchronously);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "FindPathToLocationSynchronously",(Native)&UNavigationSystem::execFindPathToLocationSynchronously);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "GetNavigationSystem",(Native)&UNavigationSystem::execGetNavigationSystem);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "GetPathCost",(Native)&UNavigationSystem::execGetPathCost);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "GetPathLength",(Native)&UNavigationSystem::execGetPathLength);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "GetRandomPointInNavigableRadius",(Native)&UNavigationSystem::execGetRandomPointInNavigableRadius);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "GetRandomReachablePointInRadius",(Native)&UNavigationSystem::execGetRandomReachablePointInRadius);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "IsNavigationBeingBuilt",(Native)&UNavigationSystem::execIsNavigationBeingBuilt);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "IsNavigationBeingBuiltOrLocked",(Native)&UNavigationSystem::execIsNavigationBeingBuiltOrLocked);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "NavigationRaycast",(Native)&UNavigationSystem::execNavigationRaycast);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "OnNavigationBoundsUpdated",(Native)&UNavigationSystem::execOnNavigationBoundsUpdated);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "ProjectPointToNavigation",(Native)&UNavigationSystem::execProjectPointToNavigation);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "RegisterNavigationInvoker",(Native)&UNavigationSystem::execRegisterNavigationInvoker);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "ResetMaxSimultaneousTileGenerationJobsCount",(Native)&UNavigationSystem::execResetMaxSimultaneousTileGenerationJobsCount);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "SetGeometryGatheringMode",(Native)&UNavigationSystem::execSetGeometryGatheringMode);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "SetMaxSimultaneousTileGenerationJobsCount",(Native)&UNavigationSystem::execSetMaxSimultaneousTileGenerationJobsCount);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "SimpleMoveToActor",(Native)&UNavigationSystem::execSimpleMoveToActor);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "SimpleMoveToLocation",(Native)&UNavigationSystem::execSimpleMoveToLocation);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationSystem::StaticClass(), "UnregisterNavigationInvoker",(Native)&UNavigationSystem::execUnregisterNavigationInvoker);
	}
	IMPLEMENT_CLASS(UNavigationSystem, 4046294834);
	void UStereoLayerFunctionLibrary::StaticRegisterNativesUStereoLayerFunctionLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerFunctionLibrary::StaticClass(), "EnableAutoLoadingSplashScreen",(Native)&UStereoLayerFunctionLibrary::execEnableAutoLoadingSplashScreen);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerFunctionLibrary::StaticClass(), "HideSplashScreen",(Native)&UStereoLayerFunctionLibrary::execHideSplashScreen);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerFunctionLibrary::StaticClass(), "SetSplashScreen",(Native)&UStereoLayerFunctionLibrary::execSetSplashScreen);
		FNativeFunctionRegistrar::RegisterFunction(UStereoLayerFunctionLibrary::StaticClass(), "ShowSplashScreen",(Native)&UStereoLayerFunctionLibrary::execShowSplashScreen);
	}
	IMPLEMENT_CLASS(UStereoLayerFunctionLibrary, 1369794690);
	void UVisualLoggerKismetLibrary::StaticRegisterNativesUVisualLoggerKismetLibrary()
	{
		FNativeFunctionRegistrar::RegisterFunction(UVisualLoggerKismetLibrary::StaticClass(), "LogBox",(Native)&UVisualLoggerKismetLibrary::execLogBox);
		FNativeFunctionRegistrar::RegisterFunction(UVisualLoggerKismetLibrary::StaticClass(), "LogLocation",(Native)&UVisualLoggerKismetLibrary::execLogLocation);
		FNativeFunctionRegistrar::RegisterFunction(UVisualLoggerKismetLibrary::StaticClass(), "LogText",(Native)&UVisualLoggerKismetLibrary::execLogText);
	}
	IMPLEMENT_CLASS(UVisualLoggerKismetLibrary, 1546640570);
class UScriptStruct* FBlueprintCookedComponentInstancingData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintCookedComponentInstancingData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintCookedComponentInstancingData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintCookedComponentInstancingData, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintCookedComponentInstancingData"), sizeof(FBlueprintCookedComponentInstancingData), Get_Z_Construct_UScriptStruct_FBlueprintCookedComponentInstancingData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintCookedComponentInstancingData(FBlueprintCookedComponentInstancingData::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintCookedComponentInstancingData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintCookedComponentInstancingData
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintCookedComponentInstancingData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintCookedComponentInstancingData")),new UScriptStruct::TCppStructOps<FBlueprintCookedComponentInstancingData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintCookedComponentInstancingData;
class UScriptStruct* FBlueprintComponentChangedPropertyInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintComponentChangedPropertyInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintComponentChangedPropertyInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintComponentChangedPropertyInfo, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintComponentChangedPropertyInfo"), sizeof(FBlueprintComponentChangedPropertyInfo), Get_Z_Construct_UScriptStruct_FBlueprintComponentChangedPropertyInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintComponentChangedPropertyInfo(FBlueprintComponentChangedPropertyInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintComponentChangedPropertyInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintComponentChangedPropertyInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintComponentChangedPropertyInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintComponentChangedPropertyInfo")),new UScriptStruct::TCppStructOps<FBlueprintComponentChangedPropertyInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintComponentChangedPropertyInfo;
class UScriptStruct* FEventGraphFastCallPair::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEventGraphFastCallPair();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEventGraphFastCallPair_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEventGraphFastCallPair, Z_Construct_UPackage__Script_Engine(), TEXT("EventGraphFastCallPair"), sizeof(FEventGraphFastCallPair), Get_Z_Construct_UScriptStruct_FEventGraphFastCallPair_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEventGraphFastCallPair(FEventGraphFastCallPair::StaticStruct, TEXT("/Script/Engine"), TEXT("EventGraphFastCallPair"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEventGraphFastCallPair
{
	FScriptStruct_Engine_StaticRegisterNativesFEventGraphFastCallPair()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EventGraphFastCallPair")),new UScriptStruct::TCppStructOps<FEventGraphFastCallPair>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEventGraphFastCallPair;
class UScriptStruct* FBlueprintDebugData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintDebugData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintDebugData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintDebugData, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintDebugData"), sizeof(FBlueprintDebugData), Get_Z_Construct_UScriptStruct_FBlueprintDebugData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintDebugData(FBlueprintDebugData::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintDebugData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintDebugData
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintDebugData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintDebugData")),new UScriptStruct::TCppStructOps<FBlueprintDebugData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintDebugData;
class UScriptStruct* FPointerToUberGraphFrame::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPointerToUberGraphFrame();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPointerToUberGraphFrame_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPointerToUberGraphFrame, Z_Construct_UPackage__Script_Engine(), TEXT("PointerToUberGraphFrame"), sizeof(FPointerToUberGraphFrame), Get_Z_Construct_UScriptStruct_FPointerToUberGraphFrame_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPointerToUberGraphFrame(FPointerToUberGraphFrame::StaticStruct, TEXT("/Script/Engine"), TEXT("PointerToUberGraphFrame"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPointerToUberGraphFrame
{
	FScriptStruct_Engine_StaticRegisterNativesFPointerToUberGraphFrame()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PointerToUberGraphFrame")),new UScriptStruct::TCppStructOps<FPointerToUberGraphFrame>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPointerToUberGraphFrame;
class UScriptStruct* FDebuggingInfoForSingleFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDebuggingInfoForSingleFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDebuggingInfoForSingleFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDebuggingInfoForSingleFunction, Z_Construct_UPackage__Script_Engine(), TEXT("DebuggingInfoForSingleFunction"), sizeof(FDebuggingInfoForSingleFunction), Get_Z_Construct_UScriptStruct_FDebuggingInfoForSingleFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDebuggingInfoForSingleFunction(FDebuggingInfoForSingleFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("DebuggingInfoForSingleFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDebuggingInfoForSingleFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFDebuggingInfoForSingleFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DebuggingInfoForSingleFunction")),new UScriptStruct::TCppStructOps<FDebuggingInfoForSingleFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDebuggingInfoForSingleFunction;
class UScriptStruct* FNodeToCodeAssociation::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNodeToCodeAssociation();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNodeToCodeAssociation_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNodeToCodeAssociation, Z_Construct_UPackage__Script_Engine(), TEXT("NodeToCodeAssociation"), sizeof(FNodeToCodeAssociation), Get_Z_Construct_UScriptStruct_FNodeToCodeAssociation_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNodeToCodeAssociation(FNodeToCodeAssociation::StaticStruct, TEXT("/Script/Engine"), TEXT("NodeToCodeAssociation"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNodeToCodeAssociation
{
	FScriptStruct_Engine_StaticRegisterNativesFNodeToCodeAssociation()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NodeToCodeAssociation")),new UScriptStruct::TCppStructOps<FNodeToCodeAssociation>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNodeToCodeAssociation;
	void UBlueprintGeneratedClass::StaticRegisterNativesUBlueprintGeneratedClass()
	{
	}
	IMPLEMENT_CLASS(UBlueprintGeneratedClass, 2169336019);
	void UPoseWatch::StaticRegisterNativesUPoseWatch()
	{
	}
	IMPLEMENT_CLASS(UPoseWatch, 3497910067);
class UScriptStruct* FAnimBlueprintDebugData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimBlueprintDebugData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimBlueprintDebugData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimBlueprintDebugData, Z_Construct_UPackage__Script_Engine(), TEXT("AnimBlueprintDebugData"), sizeof(FAnimBlueprintDebugData), Get_Z_Construct_UScriptStruct_FAnimBlueprintDebugData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimBlueprintDebugData(FAnimBlueprintDebugData::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimBlueprintDebugData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimBlueprintDebugData
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimBlueprintDebugData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimBlueprintDebugData")),new UScriptStruct::TCppStructOps<FAnimBlueprintDebugData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimBlueprintDebugData;
class UScriptStruct* FAnimationFrameSnapshot::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationFrameSnapshot();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimationFrameSnapshot_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimationFrameSnapshot, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationFrameSnapshot"), sizeof(FAnimationFrameSnapshot), Get_Z_Construct_UScriptStruct_FAnimationFrameSnapshot_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimationFrameSnapshot(FAnimationFrameSnapshot::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimationFrameSnapshot"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimationFrameSnapshot
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimationFrameSnapshot()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimationFrameSnapshot")),new UScriptStruct::TCppStructOps<FAnimationFrameSnapshot>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimationFrameSnapshot;
class UScriptStruct* FStateMachineDebugData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStateMachineDebugData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStateMachineDebugData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStateMachineDebugData, Z_Construct_UPackage__Script_Engine(), TEXT("StateMachineDebugData"), sizeof(FStateMachineDebugData), Get_Z_Construct_UScriptStruct_FStateMachineDebugData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStateMachineDebugData(FStateMachineDebugData::StaticStruct, TEXT("/Script/Engine"), TEXT("StateMachineDebugData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStateMachineDebugData
{
	FScriptStruct_Engine_StaticRegisterNativesFStateMachineDebugData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StateMachineDebugData")),new UScriptStruct::TCppStructOps<FStateMachineDebugData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStateMachineDebugData;
	void UAnimBlueprintGeneratedClass::StaticRegisterNativesUAnimBlueprintGeneratedClass()
	{
	}
	IMPLEMENT_CLASS(UAnimBlueprintGeneratedClass, 4084665973);
static class UEnum* EBodyCollisionResponse_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBodyCollisionResponse();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBodyCollisionResponse, Z_Construct_UPackage__Script_Engine(), TEXT("EBodyCollisionResponse"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBodyCollisionResponse(EBodyCollisionResponse_StaticEnum, TEXT("/Script/Engine"), TEXT("EBodyCollisionResponse"), false, nullptr, nullptr);
static class UEnum* EPhysicsType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysicsType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EPhysicsType, Z_Construct_UPackage__Script_Engine(), TEXT("EPhysicsType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPhysicsType(EPhysicsType_StaticEnum, TEXT("/Script/Engine"), TEXT("EPhysicsType"), false, nullptr, nullptr);
static class UEnum* ECollisionTraceFlag_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionTraceFlag();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECollisionTraceFlag, Z_Construct_UPackage__Script_Engine(), TEXT("ECollisionTraceFlag"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECollisionTraceFlag(ECollisionTraceFlag_StaticEnum, TEXT("/Script/Engine"), TEXT("ECollisionTraceFlag"), false, nullptr, nullptr);
class UScriptStruct* FKShapeElem::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKShapeElem();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FKShapeElem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FKShapeElem, Z_Construct_UPackage__Script_Engine(), TEXT("KShapeElem"), sizeof(FKShapeElem), Get_Z_Construct_UScriptStruct_FKShapeElem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FKShapeElem(FKShapeElem::StaticStruct, TEXT("/Script/Engine"), TEXT("KShapeElem"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFKShapeElem
{
	FScriptStruct_Engine_StaticRegisterNativesFKShapeElem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("KShapeElem")),new UScriptStruct::TCppStructOps<FKShapeElem>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFKShapeElem;
class UScriptStruct* FKConvexElem::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKConvexElem();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FKConvexElem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FKConvexElem, Z_Construct_UPackage__Script_Engine(), TEXT("KConvexElem"), sizeof(FKConvexElem), Get_Z_Construct_UScriptStruct_FKConvexElem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FKConvexElem(FKConvexElem::StaticStruct, TEXT("/Script/Engine"), TEXT("KConvexElem"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFKConvexElem
{
	FScriptStruct_Engine_StaticRegisterNativesFKConvexElem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("KConvexElem")),new UScriptStruct::TCppStructOps<FKConvexElem>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFKConvexElem;
class UScriptStruct* FKBoxElem::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKBoxElem();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FKBoxElem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FKBoxElem, Z_Construct_UPackage__Script_Engine(), TEXT("KBoxElem"), sizeof(FKBoxElem), Get_Z_Construct_UScriptStruct_FKBoxElem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FKBoxElem(FKBoxElem::StaticStruct, TEXT("/Script/Engine"), TEXT("KBoxElem"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFKBoxElem
{
	FScriptStruct_Engine_StaticRegisterNativesFKBoxElem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("KBoxElem")),new UScriptStruct::TCppStructOps<FKBoxElem>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFKBoxElem;
class UScriptStruct* FKSphereElem::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKSphereElem();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FKSphereElem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FKSphereElem, Z_Construct_UPackage__Script_Engine(), TEXT("KSphereElem"), sizeof(FKSphereElem), Get_Z_Construct_UScriptStruct_FKSphereElem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FKSphereElem(FKSphereElem::StaticStruct, TEXT("/Script/Engine"), TEXT("KSphereElem"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFKSphereElem
{
	FScriptStruct_Engine_StaticRegisterNativesFKSphereElem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("KSphereElem")),new UScriptStruct::TCppStructOps<FKSphereElem>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFKSphereElem;
class UScriptStruct* FKSphylElem::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKSphylElem();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FKSphylElem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FKSphylElem, Z_Construct_UPackage__Script_Engine(), TEXT("KSphylElem"), sizeof(FKSphylElem), Get_Z_Construct_UScriptStruct_FKSphylElem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FKSphylElem(FKSphylElem::StaticStruct, TEXT("/Script/Engine"), TEXT("KSphylElem"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFKSphylElem
{
	FScriptStruct_Engine_StaticRegisterNativesFKSphylElem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("KSphylElem")),new UScriptStruct::TCppStructOps<FKSphylElem>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFKSphylElem;
class UScriptStruct* FKAggregateGeom::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKAggregateGeom();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FKAggregateGeom_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FKAggregateGeom, Z_Construct_UPackage__Script_Engine(), TEXT("KAggregateGeom"), sizeof(FKAggregateGeom), Get_Z_Construct_UScriptStruct_FKAggregateGeom_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FKAggregateGeom(FKAggregateGeom::StaticStruct, TEXT("/Script/Engine"), TEXT("KAggregateGeom"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFKAggregateGeom
{
	FScriptStruct_Engine_StaticRegisterNativesFKAggregateGeom()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("KAggregateGeom")),new UScriptStruct::TCppStructOps<FKAggregateGeom>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFKAggregateGeom;
	void UBodySetup::StaticRegisterNativesUBodySetup()
	{
	}
	IMPLEMENT_CLASS(UBodySetup, 2815162603);
class UScriptStruct* FAggregateGeometry2D::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAggregateGeometry2D();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAggregateGeometry2D_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAggregateGeometry2D, Z_Construct_UPackage__Script_Engine(), TEXT("AggregateGeometry2D"), sizeof(FAggregateGeometry2D), Get_Z_Construct_UScriptStruct_FAggregateGeometry2D_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAggregateGeometry2D(FAggregateGeometry2D::StaticStruct, TEXT("/Script/Engine"), TEXT("AggregateGeometry2D"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAggregateGeometry2D
{
	FScriptStruct_Engine_StaticRegisterNativesFAggregateGeometry2D()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AggregateGeometry2D")),new UScriptStruct::TCppStructOps<FAggregateGeometry2D>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAggregateGeometry2D;
class UScriptStruct* FBoxElement2D::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoxElement2D();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBoxElement2D_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBoxElement2D, Z_Construct_UPackage__Script_Engine(), TEXT("BoxElement2D"), sizeof(FBoxElement2D), Get_Z_Construct_UScriptStruct_FBoxElement2D_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBoxElement2D(FBoxElement2D::StaticStruct, TEXT("/Script/Engine"), TEXT("BoxElement2D"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBoxElement2D
{
	FScriptStruct_Engine_StaticRegisterNativesFBoxElement2D()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BoxElement2D")),new UScriptStruct::TCppStructOps<FBoxElement2D>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBoxElement2D;
class UScriptStruct* FCircleElement2D::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCircleElement2D();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCircleElement2D_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCircleElement2D, Z_Construct_UPackage__Script_Engine(), TEXT("CircleElement2D"), sizeof(FCircleElement2D), Get_Z_Construct_UScriptStruct_FCircleElement2D_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCircleElement2D(FCircleElement2D::StaticStruct, TEXT("/Script/Engine"), TEXT("CircleElement2D"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCircleElement2D
{
	FScriptStruct_Engine_StaticRegisterNativesFCircleElement2D()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CircleElement2D")),new UScriptStruct::TCppStructOps<FCircleElement2D>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCircleElement2D;
class UScriptStruct* FConvexElement2D::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConvexElement2D();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FConvexElement2D_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FConvexElement2D, Z_Construct_UPackage__Script_Engine(), TEXT("ConvexElement2D"), sizeof(FConvexElement2D), Get_Z_Construct_UScriptStruct_FConvexElement2D_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FConvexElement2D(FConvexElement2D::StaticStruct, TEXT("/Script/Engine"), TEXT("ConvexElement2D"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFConvexElement2D
{
	FScriptStruct_Engine_StaticRegisterNativesFConvexElement2D()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ConvexElement2D")),new UScriptStruct::TCppStructOps<FConvexElement2D>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFConvexElement2D;
	void UBodySetup2D::StaticRegisterNativesUBodySetup2D()
	{
	}
	IMPLEMENT_CLASS(UBodySetup2D, 2342327217);
class UScriptStruct* FPhysicalAnimationProfile::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPhysicalAnimationProfile();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPhysicalAnimationProfile_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPhysicalAnimationProfile, Z_Construct_UPackage__Script_Engine(), TEXT("PhysicalAnimationProfile"), sizeof(FPhysicalAnimationProfile), Get_Z_Construct_UScriptStruct_FPhysicalAnimationProfile_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPhysicalAnimationProfile(FPhysicalAnimationProfile::StaticStruct, TEXT("/Script/Engine"), TEXT("PhysicalAnimationProfile"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPhysicalAnimationProfile
{
	FScriptStruct_Engine_StaticRegisterNativesFPhysicalAnimationProfile()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PhysicalAnimationProfile")),new UScriptStruct::TCppStructOps<FPhysicalAnimationProfile>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPhysicalAnimationProfile;
	void UPhysicsAsset::StaticRegisterNativesUPhysicsAsset()
	{
	}
	IMPLEMENT_CLASS(UPhysicsAsset, 54069253);
	void USkeletalBodySetup::StaticRegisterNativesUSkeletalBodySetup()
	{
	}
	IMPLEMENT_CLASS(USkeletalBodySetup, 2643683648);
class UScriptStruct* FInputBlendPose::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputBlendPose();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInputBlendPose_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInputBlendPose, Z_Construct_UPackage__Script_Engine(), TEXT("InputBlendPose"), sizeof(FInputBlendPose), Get_Z_Construct_UScriptStruct_FInputBlendPose_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInputBlendPose(FInputBlendPose::StaticStruct, TEXT("/Script/Engine"), TEXT("InputBlendPose"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInputBlendPose
{
	FScriptStruct_Engine_StaticRegisterNativesFInputBlendPose()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InputBlendPose")),new UScriptStruct::TCppStructOps<FInputBlendPose>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInputBlendPose;
class UScriptStruct* FBranchFilter::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBranchFilter();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBranchFilter_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBranchFilter, Z_Construct_UPackage__Script_Engine(), TEXT("BranchFilter"), sizeof(FBranchFilter), Get_Z_Construct_UScriptStruct_FBranchFilter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBranchFilter(FBranchFilter::StaticStruct, TEXT("/Script/Engine"), TEXT("BranchFilter"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBranchFilter
{
	FScriptStruct_Engine_StaticRegisterNativesFBranchFilter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BranchFilter")),new UScriptStruct::TCppStructOps<FBranchFilter>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBranchFilter;
	void UBoneMaskFilter::StaticRegisterNativesUBoneMaskFilter()
	{
	}
	IMPLEMENT_CLASS(UBoneMaskFilter, 1109075237);
	void UBookMark::StaticRegisterNativesUBookMark()
	{
	}
	IMPLEMENT_CLASS(UBookMark, 1401003997);
	void UBookMark2D::StaticRegisterNativesUBookMark2D()
	{
	}
	IMPLEMENT_CLASS(UBookMark2D, 414816196);
	void UBreakpoint::StaticRegisterNativesUBreakpoint()
	{
	}
	IMPLEMENT_CLASS(UBreakpoint, 3361916648);
class UScriptStruct* FBuilderPoly::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuilderPoly();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBuilderPoly_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBuilderPoly, Z_Construct_UPackage__Script_Engine(), TEXT("BuilderPoly"), sizeof(FBuilderPoly), Get_Z_Construct_UScriptStruct_FBuilderPoly_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBuilderPoly(FBuilderPoly::StaticStruct, TEXT("/Script/Engine"), TEXT("BuilderPoly"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBuilderPoly
{
	FScriptStruct_Engine_StaticRegisterNativesFBuilderPoly()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BuilderPoly")),new UScriptStruct::TCppStructOps<FBuilderPoly>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBuilderPoly;
	void UBrushBuilder::StaticRegisterNativesUBrushBuilder()
	{
	}
	IMPLEMENT_CLASS(UBrushBuilder, 570797684);
	void UButtonStyleAsset::StaticRegisterNativesUButtonStyleAsset()
	{
	}
	IMPLEMENT_CLASS(UButtonStyleAsset, 2891204249);
	void UCameraAnim::StaticRegisterNativesUCameraAnim()
	{
	}
	IMPLEMENT_CLASS(UCameraAnim, 3584104016);
	void UCameraAnimInst::StaticRegisterNativesUCameraAnimInst()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCameraAnimInst::StaticClass(), "SetDuration",(Native)&UCameraAnimInst::execSetDuration);
		FNativeFunctionRegistrar::RegisterFunction(UCameraAnimInst::StaticClass(), "SetScale",(Native)&UCameraAnimInst::execSetScale);
		FNativeFunctionRegistrar::RegisterFunction(UCameraAnimInst::StaticClass(), "Stop",(Native)&UCameraAnimInst::execStop);
	}
	IMPLEMENT_CLASS(UCameraAnimInst, 1280267345);
	void UCameraModifier::BlueprintModifyCamera(float DeltaTime, FVector ViewLocation, FRotator ViewRotation, float FOV, FVector& NewViewLocation, FRotator& NewViewRotation, float& NewFOV)
	{
		CameraModifier_eventBlueprintModifyCamera_Parms Parms;
		Parms.DeltaTime=DeltaTime;
		Parms.ViewLocation=ViewLocation;
		Parms.ViewRotation=ViewRotation;
		Parms.FOV=FOV;
		Parms.NewViewLocation=NewViewLocation;
		Parms.NewViewRotation=NewViewRotation;
		Parms.NewFOV=NewFOV;
		ProcessEvent(FindFunctionChecked(ENGINE_BlueprintModifyCamera),&Parms);
		NewViewLocation=Parms.NewViewLocation;
		NewViewRotation=Parms.NewViewRotation;
		NewFOV=Parms.NewFOV;
	}
	void UCameraModifier::BlueprintModifyPostProcess(float DeltaTime, float& PostProcessBlendWeight, FPostProcessSettings& PostProcessSettings)
	{
		CameraModifier_eventBlueprintModifyPostProcess_Parms Parms;
		Parms.DeltaTime=DeltaTime;
		Parms.PostProcessBlendWeight=PostProcessBlendWeight;
		Parms.PostProcessSettings=PostProcessSettings;
		ProcessEvent(FindFunctionChecked(ENGINE_BlueprintModifyPostProcess),&Parms);
		PostProcessBlendWeight=Parms.PostProcessBlendWeight;
		PostProcessSettings=Parms.PostProcessSettings;
	}
	void UCameraModifier::StaticRegisterNativesUCameraModifier()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCameraModifier::StaticClass(), "DisableModifier",(Native)&UCameraModifier::execDisableModifier);
		FNativeFunctionRegistrar::RegisterFunction(UCameraModifier::StaticClass(), "EnableModifier",(Native)&UCameraModifier::execEnableModifier);
		FNativeFunctionRegistrar::RegisterFunction(UCameraModifier::StaticClass(), "GetViewTarget",(Native)&UCameraModifier::execGetViewTarget);
		FNativeFunctionRegistrar::RegisterFunction(UCameraModifier::StaticClass(), "IsDisabled",(Native)&UCameraModifier::execIsDisabled);
	}
	IMPLEMENT_CLASS(UCameraModifier, 2788881026);
	void UCameraModifier_CameraShake::StaticRegisterNativesUCameraModifier_CameraShake()
	{
	}
	IMPLEMENT_CLASS(UCameraModifier_CameraShake, 2168322614);
class UScriptStruct* FWrappedStringElement::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWrappedStringElement();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FWrappedStringElement_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FWrappedStringElement, Z_Construct_UPackage__Script_Engine(), TEXT("WrappedStringElement"), sizeof(FWrappedStringElement), Get_Z_Construct_UScriptStruct_FWrappedStringElement_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FWrappedStringElement(FWrappedStringElement::StaticStruct, TEXT("/Script/Engine"), TEXT("WrappedStringElement"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFWrappedStringElement
{
	FScriptStruct_Engine_StaticRegisterNativesFWrappedStringElement()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("WrappedStringElement")),new UScriptStruct::TCppStructOps<FWrappedStringElement>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFWrappedStringElement;
class UScriptStruct* FTextSizingParameters::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTextSizingParameters();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTextSizingParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTextSizingParameters, Z_Construct_UPackage__Script_Engine(), TEXT("TextSizingParameters"), sizeof(FTextSizingParameters), Get_Z_Construct_UScriptStruct_FTextSizingParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTextSizingParameters(FTextSizingParameters::StaticStruct, TEXT("/Script/Engine"), TEXT("TextSizingParameters"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTextSizingParameters
{
	FScriptStruct_Engine_StaticRegisterNativesFTextSizingParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TextSizingParameters")),new UScriptStruct::TCppStructOps<FTextSizingParameters>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTextSizingParameters;
class UScriptStruct* FCanvasIcon::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCanvasIcon();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCanvasIcon_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCanvasIcon, Z_Construct_UPackage__Script_Engine(), TEXT("CanvasIcon"), sizeof(FCanvasIcon), Get_Z_Construct_UScriptStruct_FCanvasIcon_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCanvasIcon(FCanvasIcon::StaticStruct, TEXT("/Script/Engine"), TEXT("CanvasIcon"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCanvasIcon
{
	FScriptStruct_Engine_StaticRegisterNativesFCanvasIcon()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CanvasIcon")),new UScriptStruct::TCppStructOps<FCanvasIcon>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCanvasIcon;
	void UCanvas::StaticRegisterNativesUCanvas()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_Deproject",(Native)&UCanvas::execK2_Deproject);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_DrawBorder",(Native)&UCanvas::execK2_DrawBorder);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_DrawBox",(Native)&UCanvas::execK2_DrawBox);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_DrawLine",(Native)&UCanvas::execK2_DrawLine);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_DrawMaterial",(Native)&UCanvas::execK2_DrawMaterial);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_DrawMaterialTriangle",(Native)&UCanvas::execK2_DrawMaterialTriangle);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_DrawPolygon",(Native)&UCanvas::execK2_DrawPolygon);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_DrawText",(Native)&UCanvas::execK2_DrawText);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_DrawTexture",(Native)&UCanvas::execK2_DrawTexture);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_DrawTriangle",(Native)&UCanvas::execK2_DrawTriangle);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_Project",(Native)&UCanvas::execK2_Project);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_StrLen",(Native)&UCanvas::execK2_StrLen);
		FNativeFunctionRegistrar::RegisterFunction(UCanvas::StaticClass(), "K2_TextSize",(Native)&UCanvas::execK2_TextSize);
	}
	IMPLEMENT_CLASS(UCanvas, 244340506);
	void UChannel::StaticRegisterNativesUChannel()
	{
	}
	IMPLEMENT_CLASS(UChannel, 3116176954);
	void UActorChannel::StaticRegisterNativesUActorChannel()
	{
	}
	IMPLEMENT_CLASS(UActorChannel, 2604925982);
	void UControlChannel::StaticRegisterNativesUControlChannel()
	{
	}
	IMPLEMENT_CLASS(UControlChannel, 325845305);
	void UVoiceChannel::StaticRegisterNativesUVoiceChannel()
	{
	}
	IMPLEMENT_CLASS(UVoiceChannel, 3443315540);
	void UCheatManager::ReceiveEndPlay()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveEndPlay),NULL);
	}
	void UCheatManager::ReceiveInitCheatManager()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveInitCheatManager),NULL);
	}
	void UCheatManager::ServerToggleAILogging()
	{
		ProcessEvent(FindFunctionChecked(ENGINE_ServerToggleAILogging),NULL);
	}
	void UCheatManager::StaticRegisterNativesUCheatManager()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "BugIt",(Native)&UCheatManager::execBugIt);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "BugItGo",(Native)&UCheatManager::execBugItGo);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "BugItStringCreator",(Native)&UCheatManager::execBugItStringCreator);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "ChangeSize",(Native)&UCheatManager::execChangeSize);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "CheatScript",(Native)&UCheatManager::execCheatScript);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DamageTarget",(Native)&UCheatManager::execDamageTarget);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DebugCapsuleSweep",(Native)&UCheatManager::execDebugCapsuleSweep);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DebugCapsuleSweepCapture",(Native)&UCheatManager::execDebugCapsuleSweepCapture);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DebugCapsuleSweepChannel",(Native)&UCheatManager::execDebugCapsuleSweepChannel);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DebugCapsuleSweepClear",(Native)&UCheatManager::execDebugCapsuleSweepClear);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DebugCapsuleSweepComplex",(Native)&UCheatManager::execDebugCapsuleSweepComplex);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DebugCapsuleSweepPawn",(Native)&UCheatManager::execDebugCapsuleSweepPawn);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DebugCapsuleSweepSize",(Native)&UCheatManager::execDebugCapsuleSweepSize);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DestroyAll",(Native)&UCheatManager::execDestroyAll);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DestroyAllPawnsExceptTarget",(Native)&UCheatManager::execDestroyAllPawnsExceptTarget);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DestroyPawns",(Native)&UCheatManager::execDestroyPawns);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DestroyTarget",(Native)&UCheatManager::execDestroyTarget);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DisableDebugCamera",(Native)&UCheatManager::execDisableDebugCamera);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DumpChatState",(Native)&UCheatManager::execDumpChatState);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DumpOnlineSessionState",(Native)&UCheatManager::execDumpOnlineSessionState);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DumpPartyState",(Native)&UCheatManager::execDumpPartyState);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "DumpVoiceMutingState",(Native)&UCheatManager::execDumpVoiceMutingState);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "EnableDebugCamera",(Native)&UCheatManager::execEnableDebugCamera);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "FlushLog",(Native)&UCheatManager::execFlushLog);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "Fly",(Native)&UCheatManager::execFly);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "FreezeFrame",(Native)&UCheatManager::execFreezeFrame);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "Ghost",(Native)&UCheatManager::execGhost);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "God",(Native)&UCheatManager::execGod);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "InvertMouse",(Native)&UCheatManager::execInvertMouse);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "LogLoc",(Native)&UCheatManager::execLogLoc);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "OnlyLoadLevel",(Native)&UCheatManager::execOnlyLoadLevel);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "PlayersOnly",(Native)&UCheatManager::execPlayersOnly);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "RebuildNavigation",(Native)&UCheatManager::execRebuildNavigation);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "ServerToggleAILogging",(Native)&UCheatManager::execServerToggleAILogging);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "SetMouseSensitivityToDefault",(Native)&UCheatManager::execSetMouseSensitivityToDefault);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "SetNavDrawDistance",(Native)&UCheatManager::execSetNavDrawDistance);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "SetWorldOrigin",(Native)&UCheatManager::execSetWorldOrigin);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "Slomo",(Native)&UCheatManager::execSlomo);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "StreamLevelIn",(Native)&UCheatManager::execStreamLevelIn);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "StreamLevelOut",(Native)&UCheatManager::execStreamLevelOut);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "Summon",(Native)&UCheatManager::execSummon);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "Teleport",(Native)&UCheatManager::execTeleport);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "TestCollisionDistance",(Native)&UCheatManager::execTestCollisionDistance);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "ToggleAILogging",(Native)&UCheatManager::execToggleAILogging);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "ToggleDebugCamera",(Native)&UCheatManager::execToggleDebugCamera);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "ViewActor",(Native)&UCheatManager::execViewActor);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "ViewClass",(Native)&UCheatManager::execViewClass);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "ViewPlayer",(Native)&UCheatManager::execViewPlayer);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "ViewSelf",(Native)&UCheatManager::execViewSelf);
		FNativeFunctionRegistrar::RegisterFunction(UCheatManager::StaticClass(), "Walk",(Native)&UCheatManager::execWalk);
	}
	IMPLEMENT_CLASS(UCheatManager, 4189842520);
	void UCheckBoxStyleAsset::StaticRegisterNativesUCheckBoxStyleAsset()
	{
	}
	IMPLEMENT_CLASS(UCheckBoxStyleAsset, 812066708);
	void UCommandlet::StaticRegisterNativesUCommandlet()
	{
	}
	IMPLEMENT_CLASS(UCommandlet, 1647021851);
	void UPluginCommandlet::StaticRegisterNativesUPluginCommandlet()
	{
	}
	IMPLEMENT_CLASS(UPluginCommandlet, 2078514272);
	void USmokeTestCommandlet::StaticRegisterNativesUSmokeTestCommandlet()
	{
	}
	IMPLEMENT_CLASS(USmokeTestCommandlet, 1696660947);
class UScriptStruct* FAutoCompleteNode::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAutoCompleteNode();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAutoCompleteNode_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAutoCompleteNode, Z_Construct_UPackage__Script_Engine(), TEXT("AutoCompleteNode"), sizeof(FAutoCompleteNode), Get_Z_Construct_UScriptStruct_FAutoCompleteNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAutoCompleteNode(FAutoCompleteNode::StaticStruct, TEXT("/Script/Engine"), TEXT("AutoCompleteNode"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAutoCompleteNode
{
	FScriptStruct_Engine_StaticRegisterNativesFAutoCompleteNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AutoCompleteNode")),new UScriptStruct::TCppStructOps<FAutoCompleteNode>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAutoCompleteNode;
	void UConsole::StaticRegisterNativesUConsole()
	{
	}
	IMPLEMENT_CLASS(UConsole, 726407656);
class UScriptStruct* FRuntimeCurveLinearColor::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRuntimeCurveLinearColor();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRuntimeCurveLinearColor_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRuntimeCurveLinearColor, Z_Construct_UPackage__Script_Engine(), TEXT("RuntimeCurveLinearColor"), sizeof(FRuntimeCurveLinearColor), Get_Z_Construct_UScriptStruct_FRuntimeCurveLinearColor_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRuntimeCurveLinearColor(FRuntimeCurveLinearColor::StaticStruct, TEXT("/Script/Engine"), TEXT("RuntimeCurveLinearColor"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRuntimeCurveLinearColor
{
	FScriptStruct_Engine_StaticRegisterNativesFRuntimeCurveLinearColor()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RuntimeCurveLinearColor")),new UScriptStruct::TCppStructOps<FRuntimeCurveLinearColor>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRuntimeCurveLinearColor;
	void UCurveLinearColor::StaticRegisterNativesUCurveLinearColor()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCurveLinearColor::StaticClass(), "GetLinearColorValue",(Native)&UCurveLinearColor::execGetLinearColorValue);
	}
	IMPLEMENT_CLASS(UCurveLinearColor, 3580992607);
	void UCurveVector::StaticRegisterNativesUCurveVector()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCurveVector::StaticClass(), "GetVectorValue",(Native)&UCurveVector::execGetVectorValue);
	}
	IMPLEMENT_CLASS(UCurveVector, 2225176580);
	void UDEPRECATED_CurveEdPresetCurve::StaticRegisterNativesUDEPRECATED_CurveEdPresetCurve()
	{
	}
	IMPLEMENT_CLASS(UDEPRECATED_CurveEdPresetCurve, 762399564);
class UScriptStruct* FNamedCurveValue::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNamedCurveValue();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNamedCurveValue_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNamedCurveValue, Z_Construct_UPackage__Script_Engine(), TEXT("NamedCurveValue"), sizeof(FNamedCurveValue), Get_Z_Construct_UScriptStruct_FNamedCurveValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNamedCurveValue(FNamedCurveValue::StaticStruct, TEXT("/Script/Engine"), TEXT("NamedCurveValue"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNamedCurveValue
{
	FScriptStruct_Engine_StaticRegisterNativesFNamedCurveValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NamedCurveValue")),new UScriptStruct::TCppStructOps<FNamedCurveValue>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNamedCurveValue;
	FName ICurveSourceInterface::GetBindingName() const
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_GetBindingName instead.");
		CurveSourceInterface_eventGetBindingName_Parms Parms;
		return Parms.ReturnValue;
	}
	void ICurveSourceInterface::GetCurves(TArray<FNamedCurveValue>& OutValues) const
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_GetCurves instead.");
	}
	float ICurveSourceInterface::GetCurveValue(FName CurveName) const
	{
		check(0 && "Do not directly call Event functions in Interfaces. Call Execute_GetCurveValue instead.");
		CurveSourceInterface_eventGetCurveValue_Parms Parms;
		return Parms.ReturnValue;
	}
	void UCurveSourceInterface::StaticRegisterNativesUCurveSourceInterface()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCurveSourceInterface::StaticClass(), "GetBindingName",(Native)&ICurveSourceInterface::execGetBindingName);
		FNativeFunctionRegistrar::RegisterFunction(UCurveSourceInterface::StaticClass(), "GetCurves",(Native)&ICurveSourceInterface::execGetCurves);
		FNativeFunctionRegistrar::RegisterFunction(UCurveSourceInterface::StaticClass(), "GetCurveValue",(Native)&ICurveSourceInterface::execGetCurveValue);
	}
	IMPLEMENT_CLASS(UCurveSourceInterface, 3798223024);
	FName ICurveSourceInterface::Execute_GetBindingName(const UObject* O)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UCurveSourceInterface::StaticClass()));
		CurveSourceInterface_eventGetBindingName_Parms Parms;
		UFunction* const Func = O->FindFunction(ENGINE_GetBindingName);
		if (Func)
		{
			const_cast<UObject*>(O)->ProcessEvent(Func, &Parms);
		}
		else if (auto I = (const ICurveSourceInterface*)(O->GetNativeInterfaceAddress(UCurveSourceInterface::StaticClass())))
		{
			Parms.ReturnValue = I->GetBindingName_Implementation();
		}
		return Parms.ReturnValue;
	}
	void ICurveSourceInterface::Execute_GetCurves(const UObject* O, TArray<FNamedCurveValue>& OutValues)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UCurveSourceInterface::StaticClass()));
		CurveSourceInterface_eventGetCurves_Parms Parms;
		UFunction* const Func = O->FindFunction(ENGINE_GetCurves);
		if (Func)
		{
			Parms.OutValues=OutValues;
			const_cast<UObject*>(O)->ProcessEvent(Func, &Parms);
			OutValues=Parms.OutValues;
		}
		else if (auto I = (const ICurveSourceInterface*)(O->GetNativeInterfaceAddress(UCurveSourceInterface::StaticClass())))
		{
			I->GetCurves_Implementation(OutValues);
		}
	}
	float ICurveSourceInterface::Execute_GetCurveValue(const UObject* O, FName CurveName)
	{
		check(O != NULL);
		check(O->GetClass()->ImplementsInterface(UCurveSourceInterface::StaticClass()));
		CurveSourceInterface_eventGetCurveValue_Parms Parms;
		UFunction* const Func = O->FindFunction(ENGINE_GetCurveValue);
		if (Func)
		{
			Parms.CurveName=CurveName;
			const_cast<UObject*>(O)->ProcessEvent(Func, &Parms);
		}
		else if (auto I = (const ICurveSourceInterface*)(O->GetNativeInterfaceAddress(UCurveSourceInterface::StaticClass())))
		{
			Parms.ReturnValue = I->GetCurveValue_Implementation(CurveName);
		}
		return Parms.ReturnValue;
	}
class UScriptStruct* FCurveTableRowHandle::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveTableRowHandle();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCurveTableRowHandle_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCurveTableRowHandle, Z_Construct_UPackage__Script_Engine(), TEXT("CurveTableRowHandle"), sizeof(FCurveTableRowHandle), Get_Z_Construct_UScriptStruct_FCurveTableRowHandle_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCurveTableRowHandle(FCurveTableRowHandle::StaticStruct, TEXT("/Script/Engine"), TEXT("CurveTableRowHandle"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCurveTableRowHandle
{
	FScriptStruct_Engine_StaticRegisterNativesFCurveTableRowHandle()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CurveTableRowHandle")),new UScriptStruct::TCppStructOps<FCurveTableRowHandle>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCurveTableRowHandle;
	void UCurveTable::StaticRegisterNativesUCurveTable()
	{
	}
	IMPLEMENT_CLASS(UCurveTable, 2122768420);
	void UDataAsset::StaticRegisterNativesUDataAsset()
	{
	}
	IMPLEMENT_CLASS(UDataAsset, 4060118935);
class UScriptStruct* FPreviewMeshCollectionEntry::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPreviewMeshCollectionEntry();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPreviewMeshCollectionEntry_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPreviewMeshCollectionEntry, Z_Construct_UPackage__Script_Engine(), TEXT("PreviewMeshCollectionEntry"), sizeof(FPreviewMeshCollectionEntry), Get_Z_Construct_UScriptStruct_FPreviewMeshCollectionEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPreviewMeshCollectionEntry(FPreviewMeshCollectionEntry::StaticStruct, TEXT("/Script/Engine"), TEXT("PreviewMeshCollectionEntry"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPreviewMeshCollectionEntry
{
	FScriptStruct_Engine_StaticRegisterNativesFPreviewMeshCollectionEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PreviewMeshCollectionEntry")),new UScriptStruct::TCppStructOps<FPreviewMeshCollectionEntry>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPreviewMeshCollectionEntry;
	void UPreviewMeshCollection::StaticRegisterNativesUPreviewMeshCollection()
	{
	}
	IMPLEMENT_CLASS(UPreviewMeshCollection, 2498408110);
	void UTireType::StaticRegisterNativesUTireType()
	{
	}
	IMPLEMENT_CLASS(UTireType, 2012810904);
class UScriptStruct* FDestructibleChunkParameters::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleChunkParameters();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDestructibleChunkParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDestructibleChunkParameters, Z_Construct_UPackage__Script_Engine(), TEXT("DestructibleChunkParameters"), sizeof(FDestructibleChunkParameters), Get_Z_Construct_UScriptStruct_FDestructibleChunkParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDestructibleChunkParameters(FDestructibleChunkParameters::StaticStruct, TEXT("/Script/Engine"), TEXT("DestructibleChunkParameters"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDestructibleChunkParameters
{
	FScriptStruct_Engine_StaticRegisterNativesFDestructibleChunkParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DestructibleChunkParameters")),new UScriptStruct::TCppStructOps<FDestructibleChunkParameters>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDestructibleChunkParameters;
class UScriptStruct* FFractureMaterial::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFractureMaterial();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFractureMaterial_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFractureMaterial, Z_Construct_UPackage__Script_Engine(), TEXT("FractureMaterial"), sizeof(FFractureMaterial), Get_Z_Construct_UScriptStruct_FFractureMaterial_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFractureMaterial(FFractureMaterial::StaticStruct, TEXT("/Script/Engine"), TEXT("FractureMaterial"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFractureMaterial
{
	FScriptStruct_Engine_StaticRegisterNativesFFractureMaterial()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FractureMaterial")),new UScriptStruct::TCppStructOps<FFractureMaterial>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFractureMaterial;
	void UDestructibleFractureSettings::StaticRegisterNativesUDestructibleFractureSettings()
	{
	}
	IMPLEMENT_CLASS(UDestructibleFractureSettings, 572128161);
	void UDeveloperSettings::StaticRegisterNativesUDeveloperSettings()
	{
	}
	IMPLEMENT_CLASS(UDeveloperSettings, 4255646369);
	void UAnimationSettings::StaticRegisterNativesUAnimationSettings()
	{
	}
	IMPLEMENT_CLASS(UAnimationSettings, 1015261425);
class UScriptStruct* FAudioQualitySettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAudioQualitySettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAudioQualitySettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAudioQualitySettings, Z_Construct_UPackage__Script_Engine(), TEXT("AudioQualitySettings"), sizeof(FAudioQualitySettings), Get_Z_Construct_UScriptStruct_FAudioQualitySettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAudioQualitySettings(FAudioQualitySettings::StaticStruct, TEXT("/Script/Engine"), TEXT("AudioQualitySettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAudioQualitySettings
{
	FScriptStruct_Engine_StaticRegisterNativesFAudioQualitySettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AudioQualitySettings")),new UScriptStruct::TCppStructOps<FAudioQualitySettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAudioQualitySettings;
	void UAudioSettings::StaticRegisterNativesUAudioSettings()
	{
	}
	IMPLEMENT_CLASS(UAudioSettings, 3037458611);
class UScriptStruct* FCustomProfile::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCustomProfile();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCustomProfile_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCustomProfile, Z_Construct_UPackage__Script_Engine(), TEXT("CustomProfile"), sizeof(FCustomProfile), Get_Z_Construct_UScriptStruct_FCustomProfile_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCustomProfile(FCustomProfile::StaticStruct, TEXT("/Script/Engine"), TEXT("CustomProfile"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCustomProfile
{
	FScriptStruct_Engine_StaticRegisterNativesFCustomProfile()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CustomProfile")),new UScriptStruct::TCppStructOps<FCustomProfile>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCustomProfile;
class UScriptStruct* FCustomChannelSetup::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCustomChannelSetup();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCustomChannelSetup_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCustomChannelSetup, Z_Construct_UPackage__Script_Engine(), TEXT("CustomChannelSetup"), sizeof(FCustomChannelSetup), Get_Z_Construct_UScriptStruct_FCustomChannelSetup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCustomChannelSetup(FCustomChannelSetup::StaticStruct, TEXT("/Script/Engine"), TEXT("CustomChannelSetup"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCustomChannelSetup
{
	FScriptStruct_Engine_StaticRegisterNativesFCustomChannelSetup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CustomChannelSetup")),new UScriptStruct::TCppStructOps<FCustomChannelSetup>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCustomChannelSetup;
class UScriptStruct* FCollisionResponseTemplate::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionResponseTemplate();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCollisionResponseTemplate_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollisionResponseTemplate, Z_Construct_UPackage__Script_Engine(), TEXT("CollisionResponseTemplate"), sizeof(FCollisionResponseTemplate), Get_Z_Construct_UScriptStruct_FCollisionResponseTemplate_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollisionResponseTemplate(FCollisionResponseTemplate::StaticStruct, TEXT("/Script/Engine"), TEXT("CollisionResponseTemplate"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCollisionResponseTemplate
{
	FScriptStruct_Engine_StaticRegisterNativesFCollisionResponseTemplate()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollisionResponseTemplate")),new UScriptStruct::TCppStructOps<FCollisionResponseTemplate>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCollisionResponseTemplate;
class UScriptStruct* FCollisionProfileName::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionProfileName();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCollisionProfileName_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollisionProfileName, Z_Construct_UPackage__Script_Engine(), TEXT("CollisionProfileName"), sizeof(FCollisionProfileName), Get_Z_Construct_UScriptStruct_FCollisionProfileName_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollisionProfileName(FCollisionProfileName::StaticStruct, TEXT("/Script/Engine"), TEXT("CollisionProfileName"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCollisionProfileName
{
	FScriptStruct_Engine_StaticRegisterNativesFCollisionProfileName()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollisionProfileName")),new UScriptStruct::TCppStructOps<FCollisionProfileName>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCollisionProfileName;
	void UCollisionProfile::StaticRegisterNativesUCollisionProfile()
	{
	}
	IMPLEMENT_CLASS(UCollisionProfile, 3943424230);
	void UStreamingSettings::StaticRegisterNativesUStreamingSettings()
	{
	}
	IMPLEMENT_CLASS(UStreamingSettings, 127164116);
	void UGarbageCollectionSettings::StaticRegisterNativesUGarbageCollectionSettings()
	{
	}
	IMPLEMENT_CLASS(UGarbageCollectionSettings, 2421269971);
	void UMeshSimplificationSettings::StaticRegisterNativesUMeshSimplificationSettings()
	{
	}
	IMPLEMENT_CLASS(UMeshSimplificationSettings, 717940534);
	void UNetworkSettings::StaticRegisterNativesUNetworkSettings()
	{
	}
	IMPLEMENT_CLASS(UNetworkSettings, 807229835);
static class UEnum* EFrictionCombineMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFrictionCombineMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EFrictionCombineMode, Z_Construct_UPackage__Script_Engine(), TEXT("EFrictionCombineMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFrictionCombineMode(EFrictionCombineMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EFrictionCombineMode"), false, nullptr, nullptr);
static class UEnum* ESettingsLockedAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESettingsLockedAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESettingsLockedAxis, Z_Construct_UPackage__Script_Engine(), TEXT("ESettingsLockedAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESettingsLockedAxis(ESettingsLockedAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("ESettingsLockedAxis"), false, nullptr, nullptr);
static class UEnum* ESettingsDOF_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESettingsDOF();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESettingsDOF, Z_Construct_UPackage__Script_Engine(), TEXT("ESettingsDOF"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESettingsDOF(ESettingsDOF_StaticEnum, TEXT("/Script/Engine"), TEXT("ESettingsDOF"), false, nullptr, nullptr);
class UScriptStruct* FPhysicalSurfaceName::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPhysicalSurfaceName();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPhysicalSurfaceName_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPhysicalSurfaceName, Z_Construct_UPackage__Script_Engine(), TEXT("PhysicalSurfaceName"), sizeof(FPhysicalSurfaceName), Get_Z_Construct_UScriptStruct_FPhysicalSurfaceName_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPhysicalSurfaceName(FPhysicalSurfaceName::StaticStruct, TEXT("/Script/Engine"), TEXT("PhysicalSurfaceName"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPhysicalSurfaceName
{
	FScriptStruct_Engine_StaticRegisterNativesFPhysicalSurfaceName()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PhysicalSurfaceName")),new UScriptStruct::TCppStructOps<FPhysicalSurfaceName>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPhysicalSurfaceName;
	void UPhysicsSettings::StaticRegisterNativesUPhysicsSettings()
	{
	}
	IMPLEMENT_CLASS(UPhysicsSettings, 2448408448);
static class UEnum* EAutoExposureMethodUI_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAutoExposureMethodUI();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAutoExposureMethodUI, Z_Construct_UPackage__Script_Engine(), TEXT("EAutoExposureMethodUI"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAutoExposureMethodUI(EAutoExposureMethodUI_StaticEnum, TEXT("/Script/Engine"), TEXT("EAutoExposureMethodUI"), false, nullptr, nullptr);
static class UEnum* EEarlyZPass_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEarlyZPass();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEarlyZPass, Z_Construct_UPackage__Script_Engine(), TEXT("EEarlyZPass"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEarlyZPass(EEarlyZPass_StaticEnum, TEXT("/Script/Engine"), TEXT("EEarlyZPass"), false, nullptr, nullptr);
static class UEnum* ECustomDepthStencil_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECustomDepthStencil();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECustomDepthStencil, Z_Construct_UPackage__Script_Engine(), TEXT("ECustomDepthStencil"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECustomDepthStencil(ECustomDepthStencil_StaticEnum, TEXT("/Script/Engine"), TEXT("ECustomDepthStencil"), false, nullptr, nullptr);
static class UEnum* EMobileMSAASampleCount_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMobileMSAASampleCount();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMobileMSAASampleCount, Z_Construct_UPackage__Script_Engine(), TEXT("EMobileMSAASampleCount"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMobileMSAASampleCount(EMobileMSAASampleCount_StaticEnum, TEXT("/Script/Engine"), TEXT("EMobileMSAASampleCount"), false, nullptr, nullptr);
static class UEnum* ECompositingSampleCount_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECompositingSampleCount();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECompositingSampleCount, Z_Construct_UPackage__Script_Engine(), TEXT("ECompositingSampleCount"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECompositingSampleCount(ECompositingSampleCount_StaticEnum, TEXT("/Script/Engine"), TEXT("ECompositingSampleCount"), false, nullptr, nullptr);
static class UEnum* EClearSceneOptions_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EClearSceneOptions();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EClearSceneOptions, Z_Construct_UPackage__Script_Engine(), TEXT("EClearSceneOptions"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EClearSceneOptions(EClearSceneOptions_StaticEnum, TEXT("/Script/Engine"), TEXT("EClearSceneOptions"), false, nullptr, nullptr);
	void URendererSettings::StaticRegisterNativesURendererSettings()
	{
	}
	IMPLEMENT_CLASS(URendererSettings, 3226231273);
	void URendererOverrideSettings::StaticRegisterNativesURendererOverrideSettings()
	{
	}
	IMPLEMENT_CLASS(URendererOverrideSettings, 1725738080);
static class UEnum* EUIScalingRule_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EUIScalingRule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EUIScalingRule, Z_Construct_UPackage__Script_Engine(), TEXT("EUIScalingRule"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EUIScalingRule(EUIScalingRule_StaticEnum, TEXT("/Script/Engine"), TEXT("EUIScalingRule"), false, nullptr, nullptr);
static class UEnum* ERenderFocusRule_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERenderFocusRule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ERenderFocusRule, Z_Construct_UPackage__Script_Engine(), TEXT("ERenderFocusRule"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ERenderFocusRule(ERenderFocusRule_StaticEnum, TEXT("/Script/Engine"), TEXT("ERenderFocusRule"), false, nullptr, nullptr);
	void UUserInterfaceSettings::StaticRegisterNativesUUserInterfaceSettings()
	{
	}
	IMPLEMENT_CLASS(UUserInterfaceSettings, 3690795433);
	void UDeviceProfileManager::StaticRegisterNativesUDeviceProfileManager()
	{
	}
	IMPLEMENT_CLASS(UDeviceProfileManager, 3258331538);
	void UDialogueVoice::StaticRegisterNativesUDialogueVoice()
	{
	}
	IMPLEMENT_CLASS(UDialogueVoice, 1116267148);
class UScriptStruct* FDialogueContextMapping::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDialogueContextMapping();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDialogueContextMapping_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDialogueContextMapping, Z_Construct_UPackage__Script_Engine(), TEXT("DialogueContextMapping"), sizeof(FDialogueContextMapping), Get_Z_Construct_UScriptStruct_FDialogueContextMapping_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDialogueContextMapping(FDialogueContextMapping::StaticStruct, TEXT("/Script/Engine"), TEXT("DialogueContextMapping"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDialogueContextMapping
{
	FScriptStruct_Engine_StaticRegisterNativesFDialogueContextMapping()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DialogueContextMapping")),new UScriptStruct::TCppStructOps<FDialogueContextMapping>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDialogueContextMapping;
	void UDialogueWave::StaticRegisterNativesUDialogueWave()
	{
	}
	IMPLEMENT_CLASS(UDialogueWave, 1719504863);
static class UEnum* DistributionParamMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_DistributionParamMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_DistributionParamMode, Z_Construct_UPackage__Script_Engine(), TEXT("DistributionParamMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_DistributionParamMode(DistributionParamMode_StaticEnum, TEXT("/Script/Engine"), TEXT("DistributionParamMode"), false, nullptr, nullptr);
	void UDistribution::StaticRegisterNativesUDistribution()
	{
	}
	IMPLEMENT_CLASS(UDistribution, 298247388);
class UScriptStruct* FRawDistributionFloat::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRawDistributionFloat();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRawDistributionFloat_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRawDistributionFloat, Z_Construct_UPackage__Script_Engine(), TEXT("RawDistributionFloat"), sizeof(FRawDistributionFloat), Get_Z_Construct_UScriptStruct_FRawDistributionFloat_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRawDistributionFloat(FRawDistributionFloat::StaticStruct, TEXT("/Script/Engine"), TEXT("RawDistributionFloat"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRawDistributionFloat
{
	FScriptStruct_Engine_StaticRegisterNativesFRawDistributionFloat()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RawDistributionFloat")),new UScriptStruct::TCppStructOps<FRawDistributionFloat>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRawDistributionFloat;
	void UDistributionFloat::StaticRegisterNativesUDistributionFloat()
	{
	}
	IMPLEMENT_CLASS(UDistributionFloat, 4112661080);
	void UDistributionFloatConstant::StaticRegisterNativesUDistributionFloatConstant()
	{
	}
	IMPLEMENT_CLASS(UDistributionFloatConstant, 458285722);
	void UDistributionFloatParameterBase::StaticRegisterNativesUDistributionFloatParameterBase()
	{
	}
	IMPLEMENT_CLASS(UDistributionFloatParameterBase, 2509648347);
	void UDistributionFloatParticleParameter::StaticRegisterNativesUDistributionFloatParticleParameter()
	{
	}
	IMPLEMENT_CLASS(UDistributionFloatParticleParameter, 3844639142);
	void UDistributionFloatConstantCurve::StaticRegisterNativesUDistributionFloatConstantCurve()
	{
	}
	IMPLEMENT_CLASS(UDistributionFloatConstantCurve, 2579315788);
	void UDistributionFloatUniform::StaticRegisterNativesUDistributionFloatUniform()
	{
	}
	IMPLEMENT_CLASS(UDistributionFloatUniform, 2960220131);
	void UDistributionFloatUniformCurve::StaticRegisterNativesUDistributionFloatUniformCurve()
	{
	}
	IMPLEMENT_CLASS(UDistributionFloatUniformCurve, 1985087653);
static class UEnum* EDistributionVectorMirrorFlags_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDistributionVectorMirrorFlags();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDistributionVectorMirrorFlags, Z_Construct_UPackage__Script_Engine(), TEXT("EDistributionVectorMirrorFlags"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDistributionVectorMirrorFlags(EDistributionVectorMirrorFlags_StaticEnum, TEXT("/Script/Engine"), TEXT("EDistributionVectorMirrorFlags"), false, nullptr, nullptr);
static class UEnum* EDistributionVectorLockFlags_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDistributionVectorLockFlags();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDistributionVectorLockFlags, Z_Construct_UPackage__Script_Engine(), TEXT("EDistributionVectorLockFlags"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDistributionVectorLockFlags(EDistributionVectorLockFlags_StaticEnum, TEXT("/Script/Engine"), TEXT("EDistributionVectorLockFlags"), false, nullptr, nullptr);
class UScriptStruct* FRawDistributionVector::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRawDistributionVector();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRawDistributionVector_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRawDistributionVector, Z_Construct_UPackage__Script_Engine(), TEXT("RawDistributionVector"), sizeof(FRawDistributionVector), Get_Z_Construct_UScriptStruct_FRawDistributionVector_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRawDistributionVector(FRawDistributionVector::StaticStruct, TEXT("/Script/Engine"), TEXT("RawDistributionVector"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRawDistributionVector
{
	FScriptStruct_Engine_StaticRegisterNativesFRawDistributionVector()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RawDistributionVector")),new UScriptStruct::TCppStructOps<FRawDistributionVector>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRawDistributionVector;
	void UDistributionVector::StaticRegisterNativesUDistributionVector()
	{
	}
	IMPLEMENT_CLASS(UDistributionVector, 779739436);
	void UDistributionVectorConstant::StaticRegisterNativesUDistributionVectorConstant()
	{
	}
	IMPLEMENT_CLASS(UDistributionVectorConstant, 1987330836);
	void UDistributionVectorParameterBase::StaticRegisterNativesUDistributionVectorParameterBase()
	{
	}
	IMPLEMENT_CLASS(UDistributionVectorParameterBase, 307164940);
	void UDistributionVectorParticleParameter::StaticRegisterNativesUDistributionVectorParticleParameter()
	{
	}
	IMPLEMENT_CLASS(UDistributionVectorParticleParameter, 437277785);
	void UDistributionVectorConstantCurve::StaticRegisterNativesUDistributionVectorConstantCurve()
	{
	}
	IMPLEMENT_CLASS(UDistributionVectorConstantCurve, 3880409893);
	void UDistributionVectorUniform::StaticRegisterNativesUDistributionVectorUniform()
	{
	}
	IMPLEMENT_CLASS(UDistributionVectorUniform, 2474297629);
	void UDistributionVectorUniformCurve::StaticRegisterNativesUDistributionVectorUniformCurve()
	{
	}
	IMPLEMENT_CLASS(UDistributionVectorUniformCurve, 3439397779);
	void UDPICustomScalingRule::StaticRegisterNativesUDPICustomScalingRule()
	{
	}
	IMPLEMENT_CLASS(UDPICustomScalingRule, 1603826539);
	void UDynamicBlueprintBinding::StaticRegisterNativesUDynamicBlueprintBinding()
	{
	}
	IMPLEMENT_CLASS(UDynamicBlueprintBinding, 2129847910);
class UScriptStruct* FBlueprintComponentDelegateBinding::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintComponentDelegateBinding();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintComponentDelegateBinding_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintComponentDelegateBinding, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintComponentDelegateBinding"), sizeof(FBlueprintComponentDelegateBinding), Get_Z_Construct_UScriptStruct_FBlueprintComponentDelegateBinding_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintComponentDelegateBinding(FBlueprintComponentDelegateBinding::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintComponentDelegateBinding"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintComponentDelegateBinding
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintComponentDelegateBinding()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintComponentDelegateBinding")),new UScriptStruct::TCppStructOps<FBlueprintComponentDelegateBinding>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintComponentDelegateBinding;
	void UComponentDelegateBinding::StaticRegisterNativesUComponentDelegateBinding()
	{
	}
	IMPLEMENT_CLASS(UComponentDelegateBinding, 3701227117);
class UScriptStruct* FBlueprintInputDelegateBinding::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputDelegateBinding();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintInputDelegateBinding_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintInputDelegateBinding, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintInputDelegateBinding"), sizeof(FBlueprintInputDelegateBinding), Get_Z_Construct_UScriptStruct_FBlueprintInputDelegateBinding_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintInputDelegateBinding(FBlueprintInputDelegateBinding::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintInputDelegateBinding"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputDelegateBinding
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputDelegateBinding()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintInputDelegateBinding")),new UScriptStruct::TCppStructOps<FBlueprintInputDelegateBinding>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintInputDelegateBinding;
	void UInputDelegateBinding::StaticRegisterNativesUInputDelegateBinding()
	{
	}
	IMPLEMENT_CLASS(UInputDelegateBinding, 2852320192);
class UScriptStruct* FBlueprintInputActionDelegateBinding::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputActionDelegateBinding();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintInputActionDelegateBinding_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintInputActionDelegateBinding, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintInputActionDelegateBinding"), sizeof(FBlueprintInputActionDelegateBinding), Get_Z_Construct_UScriptStruct_FBlueprintInputActionDelegateBinding_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintInputActionDelegateBinding(FBlueprintInputActionDelegateBinding::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintInputActionDelegateBinding"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputActionDelegateBinding
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputActionDelegateBinding()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintInputActionDelegateBinding")),new UScriptStruct::TCppStructOps<FBlueprintInputActionDelegateBinding>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintInputActionDelegateBinding;
	void UInputActionDelegateBinding::StaticRegisterNativesUInputActionDelegateBinding()
	{
	}
	IMPLEMENT_CLASS(UInputActionDelegateBinding, 2670521756);
class UScriptStruct* FBlueprintInputAxisDelegateBinding::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputAxisDelegateBinding();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintInputAxisDelegateBinding_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintInputAxisDelegateBinding, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintInputAxisDelegateBinding"), sizeof(FBlueprintInputAxisDelegateBinding), Get_Z_Construct_UScriptStruct_FBlueprintInputAxisDelegateBinding_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintInputAxisDelegateBinding(FBlueprintInputAxisDelegateBinding::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintInputAxisDelegateBinding"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputAxisDelegateBinding
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputAxisDelegateBinding()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintInputAxisDelegateBinding")),new UScriptStruct::TCppStructOps<FBlueprintInputAxisDelegateBinding>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintInputAxisDelegateBinding;
	void UInputAxisDelegateBinding::StaticRegisterNativesUInputAxisDelegateBinding()
	{
	}
	IMPLEMENT_CLASS(UInputAxisDelegateBinding, 3861194993);
class UScriptStruct* FBlueprintInputAxisKeyDelegateBinding::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputAxisKeyDelegateBinding();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintInputAxisKeyDelegateBinding_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintInputAxisKeyDelegateBinding, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintInputAxisKeyDelegateBinding"), sizeof(FBlueprintInputAxisKeyDelegateBinding), Get_Z_Construct_UScriptStruct_FBlueprintInputAxisKeyDelegateBinding_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintInputAxisKeyDelegateBinding(FBlueprintInputAxisKeyDelegateBinding::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintInputAxisKeyDelegateBinding"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputAxisKeyDelegateBinding
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputAxisKeyDelegateBinding()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintInputAxisKeyDelegateBinding")),new UScriptStruct::TCppStructOps<FBlueprintInputAxisKeyDelegateBinding>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintInputAxisKeyDelegateBinding;
	void UInputAxisKeyDelegateBinding::StaticRegisterNativesUInputAxisKeyDelegateBinding()
	{
	}
	IMPLEMENT_CLASS(UInputAxisKeyDelegateBinding, 4206722343);
	void UInputVectorAxisDelegateBinding::StaticRegisterNativesUInputVectorAxisDelegateBinding()
	{
	}
	IMPLEMENT_CLASS(UInputVectorAxisDelegateBinding, 3351624263);
class UScriptStruct* FBlueprintInputKeyDelegateBinding::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputKeyDelegateBinding();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintInputKeyDelegateBinding_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintInputKeyDelegateBinding, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintInputKeyDelegateBinding"), sizeof(FBlueprintInputKeyDelegateBinding), Get_Z_Construct_UScriptStruct_FBlueprintInputKeyDelegateBinding_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintInputKeyDelegateBinding(FBlueprintInputKeyDelegateBinding::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintInputKeyDelegateBinding"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputKeyDelegateBinding
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputKeyDelegateBinding()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintInputKeyDelegateBinding")),new UScriptStruct::TCppStructOps<FBlueprintInputKeyDelegateBinding>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintInputKeyDelegateBinding;
	void UInputKeyDelegateBinding::StaticRegisterNativesUInputKeyDelegateBinding()
	{
	}
	IMPLEMENT_CLASS(UInputKeyDelegateBinding, 3054808577);
class UScriptStruct* FBlueprintInputTouchDelegateBinding::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputTouchDelegateBinding();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBlueprintInputTouchDelegateBinding_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBlueprintInputTouchDelegateBinding, Z_Construct_UPackage__Script_Engine(), TEXT("BlueprintInputTouchDelegateBinding"), sizeof(FBlueprintInputTouchDelegateBinding), Get_Z_Construct_UScriptStruct_FBlueprintInputTouchDelegateBinding_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBlueprintInputTouchDelegateBinding(FBlueprintInputTouchDelegateBinding::StaticStruct, TEXT("/Script/Engine"), TEXT("BlueprintInputTouchDelegateBinding"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputTouchDelegateBinding
{
	FScriptStruct_Engine_StaticRegisterNativesFBlueprintInputTouchDelegateBinding()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BlueprintInputTouchDelegateBinding")),new UScriptStruct::TCppStructOps<FBlueprintInputTouchDelegateBinding>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBlueprintInputTouchDelegateBinding;
	void UInputTouchDelegateBinding::StaticRegisterNativesUInputTouchDelegateBinding()
	{
	}
	IMPLEMENT_CLASS(UInputTouchDelegateBinding, 3617048526);
class UScriptStruct* FGraphReference::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGraphReference();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FGraphReference_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGraphReference, Z_Construct_UPackage__Script_Engine(), TEXT("GraphReference"), sizeof(FGraphReference), Get_Z_Construct_UScriptStruct_FGraphReference_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGraphReference(FGraphReference::StaticStruct, TEXT("/Script/Engine"), TEXT("GraphReference"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFGraphReference
{
	FScriptStruct_Engine_StaticRegisterNativesFGraphReference()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GraphReference")),new UScriptStruct::TCppStructOps<FGraphReference>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFGraphReference;
	void UEdGraph::StaticRegisterNativesUEdGraph()
	{
	}
	IMPLEMENT_CLASS(UEdGraph, 581795261);
	void UEdGraphNode_Documentation::StaticRegisterNativesUEdGraphNode_Documentation()
	{
	}
	IMPLEMENT_CLASS(UEdGraphNode_Documentation, 3629932654);
static class UEnum* ECanCreateConnectionResponse_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECanCreateConnectionResponse();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECanCreateConnectionResponse, Z_Construct_UPackage__Script_Engine(), TEXT("ECanCreateConnectionResponse"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECanCreateConnectionResponse(ECanCreateConnectionResponse_StaticEnum, TEXT("/Script/Engine"), TEXT("ECanCreateConnectionResponse"), false, nullptr, nullptr);
static class UEnum* EGraphType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGraphType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EGraphType, Z_Construct_UPackage__Script_Engine(), TEXT("EGraphType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGraphType(EGraphType_StaticEnum, TEXT("/Script/Engine"), TEXT("EGraphType"), false, nullptr, nullptr);
class UScriptStruct* FEdGraphSchemaAction_NewNode::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewNode();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewNode_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewNode, Z_Construct_UPackage__Script_Engine(), TEXT("EdGraphSchemaAction_NewNode"), sizeof(FEdGraphSchemaAction_NewNode), Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEdGraphSchemaAction_NewNode(FEdGraphSchemaAction_NewNode::StaticStruct, TEXT("/Script/Engine"), TEXT("EdGraphSchemaAction_NewNode"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEdGraphSchemaAction_NewNode
{
	FScriptStruct_Engine_StaticRegisterNativesFEdGraphSchemaAction_NewNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EdGraphSchemaAction_NewNode")),new UScriptStruct::TCppStructOps<FEdGraphSchemaAction_NewNode>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEdGraphSchemaAction_NewNode;
class UScriptStruct* FEdGraphSchemaAction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEdGraphSchemaAction, Z_Construct_UPackage__Script_Engine(), TEXT("EdGraphSchemaAction"), sizeof(FEdGraphSchemaAction), Get_Z_Construct_UScriptStruct_FEdGraphSchemaAction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEdGraphSchemaAction(FEdGraphSchemaAction::StaticStruct, TEXT("/Script/Engine"), TEXT("EdGraphSchemaAction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEdGraphSchemaAction
{
	FScriptStruct_Engine_StaticRegisterNativesFEdGraphSchemaAction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EdGraphSchemaAction")),new UScriptStruct::TCppStructOps<FEdGraphSchemaAction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEdGraphSchemaAction;
	void UEdGraphSchema::StaticRegisterNativesUEdGraphSchema()
	{
	}
	IMPLEMENT_CLASS(UEdGraphSchema, 772812007);
	void UImportantToggleSettingInterface::StaticRegisterNativesUImportantToggleSettingInterface()
	{
	}
	IMPLEMENT_CLASS(UImportantToggleSettingInterface, 208362378);
	void UEndUserSettings::StaticRegisterNativesUEndUserSettings()
	{
	}
	IMPLEMENT_CLASS(UEndUserSettings, 2693107721);
	void UPendingNetGame::StaticRegisterNativesUPendingNetGame()
	{
	}
	IMPLEMENT_CLASS(UPendingNetGame, 478928926);
class UScriptStruct* FLevelCollection::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelCollection();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLevelCollection_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLevelCollection, Z_Construct_UPackage__Script_Engine(), TEXT("LevelCollection"), sizeof(FLevelCollection), Get_Z_Construct_UScriptStruct_FLevelCollection_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLevelCollection(FLevelCollection::StaticStruct, TEXT("/Script/Engine"), TEXT("LevelCollection"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLevelCollection
{
	FScriptStruct_Engine_StaticRegisterNativesFLevelCollection()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LevelCollection")),new UScriptStruct::TCppStructOps<FLevelCollection>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLevelCollection;
class UScriptStruct* FStartAsyncSimulationFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStartAsyncSimulationFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStartAsyncSimulationFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStartAsyncSimulationFunction, Z_Construct_UPackage__Script_Engine(), TEXT("StartAsyncSimulationFunction"), sizeof(FStartAsyncSimulationFunction), Get_Z_Construct_UScriptStruct_FStartAsyncSimulationFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStartAsyncSimulationFunction(FStartAsyncSimulationFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("StartAsyncSimulationFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStartAsyncSimulationFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFStartAsyncSimulationFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StartAsyncSimulationFunction")),new UScriptStruct::TCppStructOps<FStartAsyncSimulationFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStartAsyncSimulationFunction;
class UScriptStruct* FEndPhysicsTickFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEndPhysicsTickFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEndPhysicsTickFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEndPhysicsTickFunction, Z_Construct_UPackage__Script_Engine(), TEXT("EndPhysicsTickFunction"), sizeof(FEndPhysicsTickFunction), Get_Z_Construct_UScriptStruct_FEndPhysicsTickFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEndPhysicsTickFunction(FEndPhysicsTickFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("EndPhysicsTickFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEndPhysicsTickFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFEndPhysicsTickFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EndPhysicsTickFunction")),new UScriptStruct::TCppStructOps<FEndPhysicsTickFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEndPhysicsTickFunction;
class UScriptStruct* FStartPhysicsTickFunction::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStartPhysicsTickFunction();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStartPhysicsTickFunction_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStartPhysicsTickFunction, Z_Construct_UPackage__Script_Engine(), TEXT("StartPhysicsTickFunction"), sizeof(FStartPhysicsTickFunction), Get_Z_Construct_UScriptStruct_FStartPhysicsTickFunction_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStartPhysicsTickFunction(FStartPhysicsTickFunction::StaticStruct, TEXT("/Script/Engine"), TEXT("StartPhysicsTickFunction"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStartPhysicsTickFunction
{
	FScriptStruct_Engine_StaticRegisterNativesFStartPhysicsTickFunction()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StartPhysicsTickFunction")),new UScriptStruct::TCppStructOps<FStartPhysicsTickFunction>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStartPhysicsTickFunction;
class UScriptStruct* FLevelViewportInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelViewportInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLevelViewportInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLevelViewportInfo, Z_Construct_UPackage__Script_Engine(), TEXT("LevelViewportInfo"), sizeof(FLevelViewportInfo), Get_Z_Construct_UScriptStruct_FLevelViewportInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLevelViewportInfo(FLevelViewportInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("LevelViewportInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLevelViewportInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFLevelViewportInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LevelViewportInfo")),new UScriptStruct::TCppStructOps<FLevelViewportInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLevelViewportInfo;
	void UWorld::StaticRegisterNativesUWorld()
	{
	}
	IMPLEMENT_CLASS(UWorld, 3080405391);
static class UEnum* EConsoleType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EConsoleType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EConsoleType, Z_Construct_UPackage__Script_Engine(), TEXT("EConsoleType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EConsoleType(EConsoleType_StaticEnum, TEXT("/Script/Engine"), TEXT("EConsoleType"), false, nullptr, nullptr);
static class UEnum* ETransitionType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETransitionType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETransitionType, Z_Construct_UPackage__Script_Engine(), TEXT("ETransitionType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETransitionType(ETransitionType_StaticEnum, TEXT("/Script/Engine"), TEXT("ETransitionType"), false, nullptr, nullptr);
static class UEnum* EFullyLoadPackageType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFullyLoadPackageType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EFullyLoadPackageType, Z_Construct_UPackage__Script_Engine(), TEXT("EFullyLoadPackageType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFullyLoadPackageType(EFullyLoadPackageType_StaticEnum, TEXT("/Script/Engine"), TEXT("EFullyLoadPackageType"), false, nullptr, nullptr);
class UScriptStruct* FPluginRedirect::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPluginRedirect();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPluginRedirect_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPluginRedirect, Z_Construct_UPackage__Script_Engine(), TEXT("PluginRedirect"), sizeof(FPluginRedirect), Get_Z_Construct_UScriptStruct_FPluginRedirect_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPluginRedirect(FPluginRedirect::StaticStruct, TEXT("/Script/Engine"), TEXT("PluginRedirect"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPluginRedirect
{
	FScriptStruct_Engine_StaticRegisterNativesFPluginRedirect()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PluginRedirect")),new UScriptStruct::TCppStructOps<FPluginRedirect>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPluginRedirect;
class UScriptStruct* FStructRedirect::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStructRedirect();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStructRedirect_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStructRedirect, Z_Construct_UPackage__Script_Engine(), TEXT("StructRedirect"), sizeof(FStructRedirect), Get_Z_Construct_UScriptStruct_FStructRedirect_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStructRedirect(FStructRedirect::StaticStruct, TEXT("/Script/Engine"), TEXT("StructRedirect"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStructRedirect
{
	FScriptStruct_Engine_StaticRegisterNativesFStructRedirect()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StructRedirect")),new UScriptStruct::TCppStructOps<FStructRedirect>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStructRedirect;
class UScriptStruct* FClassRedirect::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClassRedirect();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FClassRedirect_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FClassRedirect, Z_Construct_UPackage__Script_Engine(), TEXT("ClassRedirect"), sizeof(FClassRedirect), Get_Z_Construct_UScriptStruct_FClassRedirect_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FClassRedirect(FClassRedirect::StaticStruct, TEXT("/Script/Engine"), TEXT("ClassRedirect"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFClassRedirect
{
	FScriptStruct_Engine_StaticRegisterNativesFClassRedirect()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ClassRedirect")),new UScriptStruct::TCppStructOps<FClassRedirect>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFClassRedirect;
class UScriptStruct* FGameNameRedirect::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGameNameRedirect();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FGameNameRedirect_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGameNameRedirect, Z_Construct_UPackage__Script_Engine(), TEXT("GameNameRedirect"), sizeof(FGameNameRedirect), Get_Z_Construct_UScriptStruct_FGameNameRedirect_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGameNameRedirect(FGameNameRedirect::StaticStruct, TEXT("/Script/Engine"), TEXT("GameNameRedirect"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFGameNameRedirect
{
	FScriptStruct_Engine_StaticRegisterNativesFGameNameRedirect()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GameNameRedirect")),new UScriptStruct::TCppStructOps<FGameNameRedirect>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFGameNameRedirect;
class UScriptStruct* FScreenMessageString::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FScreenMessageString();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FScreenMessageString_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FScreenMessageString, Z_Construct_UPackage__Script_Engine(), TEXT("ScreenMessageString"), sizeof(FScreenMessageString), Get_Z_Construct_UScriptStruct_FScreenMessageString_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FScreenMessageString(FScreenMessageString::StaticStruct, TEXT("/Script/Engine"), TEXT("ScreenMessageString"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFScreenMessageString
{
	FScriptStruct_Engine_StaticRegisterNativesFScreenMessageString()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ScreenMessageString")),new UScriptStruct::TCppStructOps<FScreenMessageString>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFScreenMessageString;
class UScriptStruct* FDropNoteInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDropNoteInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDropNoteInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDropNoteInfo, Z_Construct_UPackage__Script_Engine(), TEXT("DropNoteInfo"), sizeof(FDropNoteInfo), Get_Z_Construct_UScriptStruct_FDropNoteInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDropNoteInfo(FDropNoteInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("DropNoteInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDropNoteInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFDropNoteInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DropNoteInfo")),new UScriptStruct::TCppStructOps<FDropNoteInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDropNoteInfo;
class UScriptStruct* FStatColorMapping::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStatColorMapping();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStatColorMapping_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStatColorMapping, Z_Construct_UPackage__Script_Engine(), TEXT("StatColorMapping"), sizeof(FStatColorMapping), Get_Z_Construct_UScriptStruct_FStatColorMapping_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStatColorMapping(FStatColorMapping::StaticStruct, TEXT("/Script/Engine"), TEXT("StatColorMapping"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStatColorMapping
{
	FScriptStruct_Engine_StaticRegisterNativesFStatColorMapping()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StatColorMapping")),new UScriptStruct::TCppStructOps<FStatColorMapping>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStatColorMapping;
class UScriptStruct* FStatColorMapEntry::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStatColorMapEntry();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStatColorMapEntry_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStatColorMapEntry, Z_Construct_UPackage__Script_Engine(), TEXT("StatColorMapEntry"), sizeof(FStatColorMapEntry), Get_Z_Construct_UScriptStruct_FStatColorMapEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStatColorMapEntry(FStatColorMapEntry::StaticStruct, TEXT("/Script/Engine"), TEXT("StatColorMapEntry"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStatColorMapEntry
{
	FScriptStruct_Engine_StaticRegisterNativesFStatColorMapEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StatColorMapEntry")),new UScriptStruct::TCppStructOps<FStatColorMapEntry>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStatColorMapEntry;
class UScriptStruct* FWorldContext::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWorldContext();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FWorldContext_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FWorldContext, Z_Construct_UPackage__Script_Engine(), TEXT("WorldContext"), sizeof(FWorldContext), Get_Z_Construct_UScriptStruct_FWorldContext_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FWorldContext(FWorldContext::StaticStruct, TEXT("/Script/Engine"), TEXT("WorldContext"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFWorldContext
{
	FScriptStruct_Engine_StaticRegisterNativesFWorldContext()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("WorldContext")),new UScriptStruct::TCppStructOps<FWorldContext>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFWorldContext;
class UScriptStruct* FNamedNetDriver::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNamedNetDriver();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNamedNetDriver_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNamedNetDriver, Z_Construct_UPackage__Script_Engine(), TEXT("NamedNetDriver"), sizeof(FNamedNetDriver), Get_Z_Construct_UScriptStruct_FNamedNetDriver_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNamedNetDriver(FNamedNetDriver::StaticStruct, TEXT("/Script/Engine"), TEXT("NamedNetDriver"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNamedNetDriver
{
	FScriptStruct_Engine_StaticRegisterNativesFNamedNetDriver()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NamedNetDriver")),new UScriptStruct::TCppStructOps<FNamedNetDriver>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNamedNetDriver;
class UScriptStruct* FNetDriverDefinition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNetDriverDefinition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNetDriverDefinition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNetDriverDefinition, Z_Construct_UPackage__Script_Engine(), TEXT("NetDriverDefinition"), sizeof(FNetDriverDefinition), Get_Z_Construct_UScriptStruct_FNetDriverDefinition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNetDriverDefinition(FNetDriverDefinition::StaticStruct, TEXT("/Script/Engine"), TEXT("NetDriverDefinition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNetDriverDefinition
{
	FScriptStruct_Engine_StaticRegisterNativesFNetDriverDefinition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NetDriverDefinition")),new UScriptStruct::TCppStructOps<FNetDriverDefinition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNetDriverDefinition;
class UScriptStruct* FLevelStreamingStatus::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelStreamingStatus();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLevelStreamingStatus_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLevelStreamingStatus, Z_Construct_UPackage__Script_Engine(), TEXT("LevelStreamingStatus"), sizeof(FLevelStreamingStatus), Get_Z_Construct_UScriptStruct_FLevelStreamingStatus_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLevelStreamingStatus(FLevelStreamingStatus::StaticStruct, TEXT("/Script/Engine"), TEXT("LevelStreamingStatus"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLevelStreamingStatus
{
	FScriptStruct_Engine_StaticRegisterNativesFLevelStreamingStatus()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LevelStreamingStatus")),new UScriptStruct::TCppStructOps<FLevelStreamingStatus>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLevelStreamingStatus;
class UScriptStruct* FFullyLoadedPackagesInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFullyLoadedPackagesInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFullyLoadedPackagesInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFullyLoadedPackagesInfo, Z_Construct_UPackage__Script_Engine(), TEXT("FullyLoadedPackagesInfo"), sizeof(FFullyLoadedPackagesInfo), Get_Z_Construct_UScriptStruct_FFullyLoadedPackagesInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFullyLoadedPackagesInfo(FFullyLoadedPackagesInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("FullyLoadedPackagesInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFullyLoadedPackagesInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFFullyLoadedPackagesInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FullyLoadedPackagesInfo")),new UScriptStruct::TCppStructOps<FFullyLoadedPackagesInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFullyLoadedPackagesInfo;
	void UEngine::StaticRegisterNativesUEngine()
	{
	}
	IMPLEMENT_CLASS(UEngine, 1903775796);
	void UGameEngine::StaticRegisterNativesUGameEngine()
	{
	}
	IMPLEMENT_CLASS(UGameEngine, 3914278458);
	void UEngineHandlerComponentFactory::StaticRegisterNativesUEngineHandlerComponentFactory()
	{
	}
	IMPLEMENT_CLASS(UEngineHandlerComponentFactory, 4258349187);
	void UExporter::StaticRegisterNativesUExporter()
	{
	}
	IMPLEMENT_CLASS(UExporter, 2435785875);
static class UEnum* EFontImportCharacterSet_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFontImportCharacterSet();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EFontImportCharacterSet, Z_Construct_UPackage__Script_Engine(), TEXT("EFontImportCharacterSet"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFontImportCharacterSet(EFontImportCharacterSet_StaticEnum, TEXT("/Script/Engine"), TEXT("EFontImportCharacterSet"), false, nullptr, nullptr);
class UScriptStruct* FFontImportOptionsData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFontImportOptionsData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFontImportOptionsData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFontImportOptionsData, Z_Construct_UPackage__Script_Engine(), TEXT("FontImportOptionsData"), sizeof(FFontImportOptionsData), Get_Z_Construct_UScriptStruct_FFontImportOptionsData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFontImportOptionsData(FFontImportOptionsData::StaticStruct, TEXT("/Script/Engine"), TEXT("FontImportOptionsData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFontImportOptionsData
{
	FScriptStruct_Engine_StaticRegisterNativesFFontImportOptionsData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FontImportOptionsData")),new UScriptStruct::TCppStructOps<FFontImportOptionsData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFontImportOptionsData;
	void UFontImportOptions::StaticRegisterNativesUFontImportOptions()
	{
	}
	IMPLEMENT_CLASS(UFontImportOptions, 2006140031);
static class UEnum* EFontCacheType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFontCacheType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EFontCacheType, Z_Construct_UPackage__Script_Engine(), TEXT("EFontCacheType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFontCacheType(EFontCacheType_StaticEnum, TEXT("/Script/Engine"), TEXT("EFontCacheType"), false, nullptr, nullptr);
class UScriptStruct* FFontCharacter::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFontCharacter();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFontCharacter_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFontCharacter, Z_Construct_UPackage__Script_Engine(), TEXT("FontCharacter"), sizeof(FFontCharacter), Get_Z_Construct_UScriptStruct_FFontCharacter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFontCharacter(FFontCharacter::StaticStruct, TEXT("/Script/Engine"), TEXT("FontCharacter"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFontCharacter
{
	FScriptStruct_Engine_StaticRegisterNativesFFontCharacter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FontCharacter")),new UScriptStruct::TCppStructOps<FFontCharacter>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFontCharacter;
	void UFont::StaticRegisterNativesUFont()
	{
	}
	IMPLEMENT_CLASS(UFont, 2645566347);
	void UFontFace::StaticRegisterNativesUFontFace()
	{
	}
	IMPLEMENT_CLASS(UFontFace, 3900112572);
static class UEnum* EWindowMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EWindowMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EWindowMode, Z_Construct_UPackage__Script_Engine(), TEXT("EWindowMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EWindowMode(EWindowMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EWindowMode"), false, nullptr, nullptr);
	void UGameUserSettings::StaticRegisterNativesUGameUserSettings()
	{
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "ApplyHardwareBenchmarkResults",(Native)&UGameUserSettings::execApplyHardwareBenchmarkResults);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "ApplyNonResolutionSettings",(Native)&UGameUserSettings::execApplyNonResolutionSettings);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "ApplyResolutionSettings",(Native)&UGameUserSettings::execApplyResolutionSettings);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "ApplySettings",(Native)&UGameUserSettings::execApplySettings);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "ConfirmVideoMode",(Native)&UGameUserSettings::execConfirmVideoMode);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "EnableHDRDisplayOutput",(Native)&UGameUserSettings::execEnableHDRDisplayOutput);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetAntiAliasingQuality",(Native)&UGameUserSettings::execGetAntiAliasingQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetAudioQualityLevel",(Native)&UGameUserSettings::execGetAudioQualityLevel);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetDefaultResolution",(Native)&UGameUserSettings::execGetDefaultResolution);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetDefaultResolutionScale",(Native)&UGameUserSettings::execGetDefaultResolutionScale);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetDefaultWindowMode",(Native)&UGameUserSettings::execGetDefaultWindowMode);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetDefaultWindowPosition",(Native)&UGameUserSettings::execGetDefaultWindowPosition);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetDesktopResolution",(Native)&UGameUserSettings::execGetDesktopResolution);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetFoliageQuality",(Native)&UGameUserSettings::execGetFoliageQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetFrameRateLimit",(Native)&UGameUserSettings::execGetFrameRateLimit);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetFullscreenMode",(Native)&UGameUserSettings::execGetFullscreenMode);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetGameUserSettings",(Native)&UGameUserSettings::execGetGameUserSettings);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetLastConfirmedFullscreenMode",(Native)&UGameUserSettings::execGetLastConfirmedFullscreenMode);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetLastConfirmedScreenResolution",(Native)&UGameUserSettings::execGetLastConfirmedScreenResolution);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetOverallScalabilityLevel",(Native)&UGameUserSettings::execGetOverallScalabilityLevel);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetPostProcessingQuality",(Native)&UGameUserSettings::execGetPostProcessingQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetPreferredFullscreenMode",(Native)&UGameUserSettings::execGetPreferredFullscreenMode);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetResolutionScaleInformation",(Native)&UGameUserSettings::execGetResolutionScaleInformation);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetResolutionScaleInformationEx",(Native)&UGameUserSettings::execGetResolutionScaleInformationEx);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetScreenResolution",(Native)&UGameUserSettings::execGetScreenResolution);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetShadowQuality",(Native)&UGameUserSettings::execGetShadowQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetTextureQuality",(Native)&UGameUserSettings::execGetTextureQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetViewDistanceQuality",(Native)&UGameUserSettings::execGetViewDistanceQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "GetVisualEffectQuality",(Native)&UGameUserSettings::execGetVisualEffectQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "IsDirty",(Native)&UGameUserSettings::execIsDirty);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "IsFullscreenModeDirty",(Native)&UGameUserSettings::execIsFullscreenModeDirty);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "IsScreenResolutionDirty",(Native)&UGameUserSettings::execIsScreenResolutionDirty);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "IsVSyncDirty",(Native)&UGameUserSettings::execIsVSyncDirty);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "IsVSyncEnabled",(Native)&UGameUserSettings::execIsVSyncEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "LoadSettings",(Native)&UGameUserSettings::execLoadSettings);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "ResetToCurrentSettings",(Native)&UGameUserSettings::execResetToCurrentSettings);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "RevertVideoMode",(Native)&UGameUserSettings::execRevertVideoMode);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "RunHardwareBenchmark",(Native)&UGameUserSettings::execRunHardwareBenchmark);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SaveSettings",(Native)&UGameUserSettings::execSaveSettings);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetAntiAliasingQuality",(Native)&UGameUserSettings::execSetAntiAliasingQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetAudioQualityLevel",(Native)&UGameUserSettings::execSetAudioQualityLevel);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetBenchmarkFallbackValues",(Native)&UGameUserSettings::execSetBenchmarkFallbackValues);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetFoliageQuality",(Native)&UGameUserSettings::execSetFoliageQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetFrameRateLimit",(Native)&UGameUserSettings::execSetFrameRateLimit);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetFullscreenMode",(Native)&UGameUserSettings::execSetFullscreenMode);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetOverallScalabilityLevel",(Native)&UGameUserSettings::execSetOverallScalabilityLevel);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetPostProcessingQuality",(Native)&UGameUserSettings::execSetPostProcessingQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetResolutionScaleNormalized",(Native)&UGameUserSettings::execSetResolutionScaleNormalized);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetResolutionScaleValue",(Native)&UGameUserSettings::execSetResolutionScaleValue);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetResolutionScaleValueEx",(Native)&UGameUserSettings::execSetResolutionScaleValueEx);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetScreenResolution",(Native)&UGameUserSettings::execSetScreenResolution);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetShadowQuality",(Native)&UGameUserSettings::execSetShadowQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetTextureQuality",(Native)&UGameUserSettings::execSetTextureQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetToDefaults",(Native)&UGameUserSettings::execSetToDefaults);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetViewDistanceQuality",(Native)&UGameUserSettings::execSetViewDistanceQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetVisualEffectQuality",(Native)&UGameUserSettings::execSetVisualEffectQuality);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SetVSyncEnabled",(Native)&UGameUserSettings::execSetVSyncEnabled);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "SupportsHDRDisplayOutput",(Native)&UGameUserSettings::execSupportsHDRDisplayOutput);
		FNativeFunctionRegistrar::RegisterFunction(UGameUserSettings::StaticClass(), "ValidateSettings",(Native)&UGameUserSettings::execValidateSettings);
	}
	IMPLEMENT_CLASS(UGameUserSettings, 390871066);
class UScriptStruct* FActiveHapticFeedbackEffect::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FActiveHapticFeedbackEffect();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FActiveHapticFeedbackEffect_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FActiveHapticFeedbackEffect, Z_Construct_UPackage__Script_Engine(), TEXT("ActiveHapticFeedbackEffect"), sizeof(FActiveHapticFeedbackEffect), Get_Z_Construct_UScriptStruct_FActiveHapticFeedbackEffect_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FActiveHapticFeedbackEffect(FActiveHapticFeedbackEffect::StaticStruct, TEXT("/Script/Engine"), TEXT("ActiveHapticFeedbackEffect"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFActiveHapticFeedbackEffect
{
	FScriptStruct_Engine_StaticRegisterNativesFActiveHapticFeedbackEffect()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ActiveHapticFeedbackEffect")),new UScriptStruct::TCppStructOps<FActiveHapticFeedbackEffect>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFActiveHapticFeedbackEffect;
	void UHapticFeedbackEffect_Base::StaticRegisterNativesUHapticFeedbackEffect_Base()
	{
	}
	IMPLEMENT_CLASS(UHapticFeedbackEffect_Base, 768368055);
	void UHapticFeedbackEffect_Buffer::StaticRegisterNativesUHapticFeedbackEffect_Buffer()
	{
	}
	IMPLEMENT_CLASS(UHapticFeedbackEffect_Buffer, 4088145246);
class UScriptStruct* FHapticFeedbackDetails_Curve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHapticFeedbackDetails_Curve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FHapticFeedbackDetails_Curve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FHapticFeedbackDetails_Curve, Z_Construct_UPackage__Script_Engine(), TEXT("HapticFeedbackDetails_Curve"), sizeof(FHapticFeedbackDetails_Curve), Get_Z_Construct_UScriptStruct_FHapticFeedbackDetails_Curve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FHapticFeedbackDetails_Curve(FHapticFeedbackDetails_Curve::StaticStruct, TEXT("/Script/Engine"), TEXT("HapticFeedbackDetails_Curve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFHapticFeedbackDetails_Curve
{
	FScriptStruct_Engine_StaticRegisterNativesFHapticFeedbackDetails_Curve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("HapticFeedbackDetails_Curve")),new UScriptStruct::TCppStructOps<FHapticFeedbackDetails_Curve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFHapticFeedbackDetails_Curve;
	void UHapticFeedbackEffect_Curve::StaticRegisterNativesUHapticFeedbackEffect_Curve()
	{
	}
	IMPLEMENT_CLASS(UHapticFeedbackEffect_Curve, 1961319501);
	void UHapticFeedbackEffect_SoundWave::StaticRegisterNativesUHapticFeedbackEffect_SoundWave()
	{
	}
	IMPLEMENT_CLASS(UHapticFeedbackEffect_SoundWave, 3587322444);
class UScriptStruct* FComponentOverrideRecord::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentOverrideRecord();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FComponentOverrideRecord_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FComponentOverrideRecord, Z_Construct_UPackage__Script_Engine(), TEXT("ComponentOverrideRecord"), sizeof(FComponentOverrideRecord), Get_Z_Construct_UScriptStruct_FComponentOverrideRecord_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FComponentOverrideRecord(FComponentOverrideRecord::StaticStruct, TEXT("/Script/Engine"), TEXT("ComponentOverrideRecord"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFComponentOverrideRecord
{
	FScriptStruct_Engine_StaticRegisterNativesFComponentOverrideRecord()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ComponentOverrideRecord")),new UScriptStruct::TCppStructOps<FComponentOverrideRecord>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFComponentOverrideRecord;
class UScriptStruct* FComponentKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FComponentKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FComponentKey, Z_Construct_UPackage__Script_Engine(), TEXT("ComponentKey"), sizeof(FComponentKey), Get_Z_Construct_UScriptStruct_FComponentKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FComponentKey(FComponentKey::StaticStruct, TEXT("/Script/Engine"), TEXT("ComponentKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFComponentKey
{
	FScriptStruct_Engine_StaticRegisterNativesFComponentKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ComponentKey")),new UScriptStruct::TCppStructOps<FComponentKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFComponentKey;
	void UInheritableComponentHandler::StaticRegisterNativesUInheritableComponentHandler()
	{
	}
	IMPLEMENT_CLASS(UInheritableComponentHandler, 4261581762);
class UScriptStruct* FInputAxisKeyMapping::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputAxisKeyMapping();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInputAxisKeyMapping_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInputAxisKeyMapping, Z_Construct_UPackage__Script_Engine(), TEXT("InputAxisKeyMapping"), sizeof(FInputAxisKeyMapping), Get_Z_Construct_UScriptStruct_FInputAxisKeyMapping_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInputAxisKeyMapping(FInputAxisKeyMapping::StaticStruct, TEXT("/Script/Engine"), TEXT("InputAxisKeyMapping"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInputAxisKeyMapping
{
	FScriptStruct_Engine_StaticRegisterNativesFInputAxisKeyMapping()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InputAxisKeyMapping")),new UScriptStruct::TCppStructOps<FInputAxisKeyMapping>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInputAxisKeyMapping;
class UScriptStruct* FInputActionKeyMapping::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputActionKeyMapping();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInputActionKeyMapping_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInputActionKeyMapping, Z_Construct_UPackage__Script_Engine(), TEXT("InputActionKeyMapping"), sizeof(FInputActionKeyMapping), Get_Z_Construct_UScriptStruct_FInputActionKeyMapping_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInputActionKeyMapping(FInputActionKeyMapping::StaticStruct, TEXT("/Script/Engine"), TEXT("InputActionKeyMapping"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInputActionKeyMapping
{
	FScriptStruct_Engine_StaticRegisterNativesFInputActionKeyMapping()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InputActionKeyMapping")),new UScriptStruct::TCppStructOps<FInputActionKeyMapping>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInputActionKeyMapping;
class UScriptStruct* FInputAxisConfigEntry::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputAxisConfigEntry();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInputAxisConfigEntry_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInputAxisConfigEntry, Z_Construct_UPackage__Script_Engine(), TEXT("InputAxisConfigEntry"), sizeof(FInputAxisConfigEntry), Get_Z_Construct_UScriptStruct_FInputAxisConfigEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInputAxisConfigEntry(FInputAxisConfigEntry::StaticStruct, TEXT("/Script/Engine"), TEXT("InputAxisConfigEntry"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInputAxisConfigEntry
{
	FScriptStruct_Engine_StaticRegisterNativesFInputAxisConfigEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InputAxisConfigEntry")),new UScriptStruct::TCppStructOps<FInputAxisConfigEntry>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInputAxisConfigEntry;
class UScriptStruct* FInputAxisProperties::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputAxisProperties();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInputAxisProperties_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInputAxisProperties, Z_Construct_UPackage__Script_Engine(), TEXT("InputAxisProperties"), sizeof(FInputAxisProperties), Get_Z_Construct_UScriptStruct_FInputAxisProperties_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInputAxisProperties(FInputAxisProperties::StaticStruct, TEXT("/Script/Engine"), TEXT("InputAxisProperties"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInputAxisProperties
{
	FScriptStruct_Engine_StaticRegisterNativesFInputAxisProperties()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InputAxisProperties")),new UScriptStruct::TCppStructOps<FInputAxisProperties>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInputAxisProperties;
class UScriptStruct* FKeyBind::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKeyBind();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FKeyBind_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FKeyBind, Z_Construct_UPackage__Script_Engine(), TEXT("KeyBind"), sizeof(FKeyBind), Get_Z_Construct_UScriptStruct_FKeyBind_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FKeyBind(FKeyBind::StaticStruct, TEXT("/Script/Engine"), TEXT("KeyBind"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFKeyBind
{
	FScriptStruct_Engine_StaticRegisterNativesFKeyBind()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("KeyBind")),new UScriptStruct::TCppStructOps<FKeyBind>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFKeyBind;
	void UPlayerInput::StaticRegisterNativesUPlayerInput()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPlayerInput::StaticClass(), "ClearSmoothing",(Native)&UPlayerInput::execClearSmoothing);
		FNativeFunctionRegistrar::RegisterFunction(UPlayerInput::StaticClass(), "InvertAxis",(Native)&UPlayerInput::execInvertAxis);
		FNativeFunctionRegistrar::RegisterFunction(UPlayerInput::StaticClass(), "InvertAxisKey",(Native)&UPlayerInput::execInvertAxisKey);
		FNativeFunctionRegistrar::RegisterFunction(UPlayerInput::StaticClass(), "SetBind",(Native)&UPlayerInput::execSetBind);
		FNativeFunctionRegistrar::RegisterFunction(UPlayerInput::StaticClass(), "SetMouseSensitivity",(Native)&UPlayerInput::execSetMouseSensitivity);
	}
	IMPLEMENT_CLASS(UPlayerInput, 414453316);
	void UInputSettings::StaticRegisterNativesUInputSettings()
	{
	}
	IMPLEMENT_CLASS(UInputSettings, 541979611);
class UScriptStruct* FCurveEdTab::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveEdTab();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCurveEdTab_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCurveEdTab, Z_Construct_UPackage__Script_Engine(), TEXT("CurveEdTab"), sizeof(FCurveEdTab), Get_Z_Construct_UScriptStruct_FCurveEdTab_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCurveEdTab(FCurveEdTab::StaticStruct, TEXT("/Script/Engine"), TEXT("CurveEdTab"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCurveEdTab
{
	FScriptStruct_Engine_StaticRegisterNativesFCurveEdTab()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CurveEdTab")),new UScriptStruct::TCppStructOps<FCurveEdTab>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCurveEdTab;
class UScriptStruct* FCurveEdEntry::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveEdEntry();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCurveEdEntry_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCurveEdEntry, Z_Construct_UPackage__Script_Engine(), TEXT("CurveEdEntry"), sizeof(FCurveEdEntry), Get_Z_Construct_UScriptStruct_FCurveEdEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCurveEdEntry(FCurveEdEntry::StaticStruct, TEXT("/Script/Engine"), TEXT("CurveEdEntry"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCurveEdEntry
{
	FScriptStruct_Engine_StaticRegisterNativesFCurveEdEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CurveEdEntry")),new UScriptStruct::TCppStructOps<FCurveEdEntry>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCurveEdEntry;
	void UInterpCurveEdSetup::StaticRegisterNativesUInterpCurveEdSetup()
	{
	}
	IMPLEMENT_CLASS(UInterpCurveEdSetup, 966558132);
	void UInterpData::StaticRegisterNativesUInterpData()
	{
	}
	IMPLEMENT_CLASS(UInterpData, 1584384295);
	void UInterpFilter::StaticRegisterNativesUInterpFilter()
	{
	}
	IMPLEMENT_CLASS(UInterpFilter, 2282938160);
	void UInterpFilter_Classes::StaticRegisterNativesUInterpFilter_Classes()
	{
	}
	IMPLEMENT_CLASS(UInterpFilter_Classes, 3875609308);
	void UInterpFilter_Custom::StaticRegisterNativesUInterpFilter_Custom()
	{
	}
	IMPLEMENT_CLASS(UInterpFilter_Custom, 2096508517);
class UScriptStruct* FInterpEdSelKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpEdSelKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInterpEdSelKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInterpEdSelKey, Z_Construct_UPackage__Script_Engine(), TEXT("InterpEdSelKey"), sizeof(FInterpEdSelKey), Get_Z_Construct_UScriptStruct_FInterpEdSelKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInterpEdSelKey(FInterpEdSelKey::StaticStruct, TEXT("/Script/Engine"), TEXT("InterpEdSelKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInterpEdSelKey
{
	FScriptStruct_Engine_StaticRegisterNativesFInterpEdSelKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InterpEdSelKey")),new UScriptStruct::TCppStructOps<FInterpEdSelKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInterpEdSelKey;
	void UInterpGroup::StaticRegisterNativesUInterpGroup()
	{
	}
	IMPLEMENT_CLASS(UInterpGroup, 1207142626);
class UScriptStruct* FCameraPreviewInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCameraPreviewInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCameraPreviewInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCameraPreviewInfo, Z_Construct_UPackage__Script_Engine(), TEXT("CameraPreviewInfo"), sizeof(FCameraPreviewInfo), Get_Z_Construct_UScriptStruct_FCameraPreviewInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCameraPreviewInfo(FCameraPreviewInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("CameraPreviewInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCameraPreviewInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFCameraPreviewInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CameraPreviewInfo")),new UScriptStruct::TCppStructOps<FCameraPreviewInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCameraPreviewInfo;
	void UInterpGroupCamera::StaticRegisterNativesUInterpGroupCamera()
	{
	}
	IMPLEMENT_CLASS(UInterpGroupCamera, 3882809143);
	void UInterpGroupDirector::StaticRegisterNativesUInterpGroupDirector()
	{
	}
	IMPLEMENT_CLASS(UInterpGroupDirector, 1048151192);
	void UInterpGroupInst::StaticRegisterNativesUInterpGroupInst()
	{
	}
	IMPLEMENT_CLASS(UInterpGroupInst, 1233861752);
	void UInterpGroupInstCamera::StaticRegisterNativesUInterpGroupInstCamera()
	{
	}
	IMPLEMENT_CLASS(UInterpGroupInstCamera, 3142394551);
	void UInterpGroupInstDirector::StaticRegisterNativesUInterpGroupInstDirector()
	{
	}
	IMPLEMENT_CLASS(UInterpGroupInstDirector, 2785425946);
static class UEnum* ETrackActiveCondition_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrackActiveCondition();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETrackActiveCondition, Z_Construct_UPackage__Script_Engine(), TEXT("ETrackActiveCondition"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETrackActiveCondition(ETrackActiveCondition_StaticEnum, TEXT("/Script/Engine"), TEXT("ETrackActiveCondition"), false, nullptr, nullptr);
class UScriptStruct* FSubTrackGroup::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSubTrackGroup();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSubTrackGroup_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSubTrackGroup, Z_Construct_UPackage__Script_Engine(), TEXT("SubTrackGroup"), sizeof(FSubTrackGroup), Get_Z_Construct_UScriptStruct_FSubTrackGroup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSubTrackGroup(FSubTrackGroup::StaticStruct, TEXT("/Script/Engine"), TEXT("SubTrackGroup"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSubTrackGroup
{
	FScriptStruct_Engine_StaticRegisterNativesFSubTrackGroup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SubTrackGroup")),new UScriptStruct::TCppStructOps<FSubTrackGroup>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSubTrackGroup;
class UScriptStruct* FSupportedSubTrackInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSupportedSubTrackInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSupportedSubTrackInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSupportedSubTrackInfo, Z_Construct_UPackage__Script_Engine(), TEXT("SupportedSubTrackInfo"), sizeof(FSupportedSubTrackInfo), Get_Z_Construct_UScriptStruct_FSupportedSubTrackInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSupportedSubTrackInfo(FSupportedSubTrackInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("SupportedSubTrackInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSupportedSubTrackInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFSupportedSubTrackInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SupportedSubTrackInfo")),new UScriptStruct::TCppStructOps<FSupportedSubTrackInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSupportedSubTrackInfo;
	void UInterpTrack::StaticRegisterNativesUInterpTrack()
	{
	}
	IMPLEMENT_CLASS(UInterpTrack, 3540806130);
class UScriptStruct* FBoolTrackKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoolTrackKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBoolTrackKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBoolTrackKey, Z_Construct_UPackage__Script_Engine(), TEXT("BoolTrackKey"), sizeof(FBoolTrackKey), Get_Z_Construct_UScriptStruct_FBoolTrackKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBoolTrackKey(FBoolTrackKey::StaticStruct, TEXT("/Script/Engine"), TEXT("BoolTrackKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBoolTrackKey
{
	FScriptStruct_Engine_StaticRegisterNativesFBoolTrackKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BoolTrackKey")),new UScriptStruct::TCppStructOps<FBoolTrackKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBoolTrackKey;
	void UInterpTrackBoolProp::StaticRegisterNativesUInterpTrackBoolProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackBoolProp, 2149918636);
class UScriptStruct* FDirectorTrackCut::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDirectorTrackCut();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDirectorTrackCut_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDirectorTrackCut, Z_Construct_UPackage__Script_Engine(), TEXT("DirectorTrackCut"), sizeof(FDirectorTrackCut), Get_Z_Construct_UScriptStruct_FDirectorTrackCut_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDirectorTrackCut(FDirectorTrackCut::StaticStruct, TEXT("/Script/Engine"), TEXT("DirectorTrackCut"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDirectorTrackCut
{
	FScriptStruct_Engine_StaticRegisterNativesFDirectorTrackCut()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DirectorTrackCut")),new UScriptStruct::TCppStructOps<FDirectorTrackCut>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDirectorTrackCut;
	void UInterpTrackDirector::StaticRegisterNativesUInterpTrackDirector()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackDirector, 2235643811);
class UScriptStruct* FEventTrackKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEventTrackKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEventTrackKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEventTrackKey, Z_Construct_UPackage__Script_Engine(), TEXT("EventTrackKey"), sizeof(FEventTrackKey), Get_Z_Construct_UScriptStruct_FEventTrackKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEventTrackKey(FEventTrackKey::StaticStruct, TEXT("/Script/Engine"), TEXT("EventTrackKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEventTrackKey
{
	FScriptStruct_Engine_StaticRegisterNativesFEventTrackKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EventTrackKey")),new UScriptStruct::TCppStructOps<FEventTrackKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEventTrackKey;
	void UInterpTrackEvent::StaticRegisterNativesUInterpTrackEvent()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackEvent, 3697271263);
	void UInterpTrackFloatBase::StaticRegisterNativesUInterpTrackFloatBase()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackFloatBase, 958670064);
class UScriptStruct* FAnimControlTrackKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimControlTrackKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimControlTrackKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimControlTrackKey, Z_Construct_UPackage__Script_Engine(), TEXT("AnimControlTrackKey"), sizeof(FAnimControlTrackKey), Get_Z_Construct_UScriptStruct_FAnimControlTrackKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimControlTrackKey(FAnimControlTrackKey::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimControlTrackKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimControlTrackKey
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimControlTrackKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimControlTrackKey")),new UScriptStruct::TCppStructOps<FAnimControlTrackKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimControlTrackKey;
	void UInterpTrackAnimControl::StaticRegisterNativesUInterpTrackAnimControl()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackAnimControl, 1198181721);
	void UInterpTrackFade::StaticRegisterNativesUInterpTrackFade()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackFade, 1134350615);
	void UInterpTrackFloatAnimBPParam::StaticRegisterNativesUInterpTrackFloatAnimBPParam()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackFloatAnimBPParam, 3658447515);
	void UInterpTrackFloatMaterialParam::StaticRegisterNativesUInterpTrackFloatMaterialParam()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackFloatMaterialParam, 3922206074);
	void UInterpTrackFloatParticleParam::StaticRegisterNativesUInterpTrackFloatParticleParam()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackFloatParticleParam, 737884174);
	void UInterpTrackFloatProp::StaticRegisterNativesUInterpTrackFloatProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackFloatProp, 537358130);
static class UEnum* EInterpTrackMoveRotMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInterpTrackMoveRotMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EInterpTrackMoveRotMode, Z_Construct_UPackage__Script_Engine(), TEXT("EInterpTrackMoveRotMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EInterpTrackMoveRotMode(EInterpTrackMoveRotMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EInterpTrackMoveRotMode"), false, nullptr, nullptr);
class UScriptStruct* FInterpLookupTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpLookupTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInterpLookupTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInterpLookupTrack, Z_Construct_UPackage__Script_Engine(), TEXT("InterpLookupTrack"), sizeof(FInterpLookupTrack), Get_Z_Construct_UScriptStruct_FInterpLookupTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInterpLookupTrack(FInterpLookupTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("InterpLookupTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInterpLookupTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFInterpLookupTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InterpLookupTrack")),new UScriptStruct::TCppStructOps<FInterpLookupTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInterpLookupTrack;
class UScriptStruct* FInterpLookupPoint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpLookupPoint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInterpLookupPoint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInterpLookupPoint, Z_Construct_UPackage__Script_Engine(), TEXT("InterpLookupPoint"), sizeof(FInterpLookupPoint), Get_Z_Construct_UScriptStruct_FInterpLookupPoint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInterpLookupPoint(FInterpLookupPoint::StaticStruct, TEXT("/Script/Engine"), TEXT("InterpLookupPoint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInterpLookupPoint
{
	FScriptStruct_Engine_StaticRegisterNativesFInterpLookupPoint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InterpLookupPoint")),new UScriptStruct::TCppStructOps<FInterpLookupPoint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInterpLookupPoint;
	void UInterpTrackMove::StaticRegisterNativesUInterpTrackMove()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackMove, 1831489360);
static class UEnum* EInterpMoveAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInterpMoveAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EInterpMoveAxis, Z_Construct_UPackage__Script_Engine(), TEXT("EInterpMoveAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EInterpMoveAxis(EInterpMoveAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("EInterpMoveAxis"), false, nullptr, nullptr);
	void UInterpTrackMoveAxis::StaticRegisterNativesUInterpTrackMoveAxis()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackMoveAxis, 1946636596);
	void UInterpTrackSlomo::StaticRegisterNativesUInterpTrackSlomo()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackSlomo, 4240989480);
	void UInterpTrackLinearColorBase::StaticRegisterNativesUInterpTrackLinearColorBase()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackLinearColorBase, 3237768542);
	void UInterpTrackLinearColorProp::StaticRegisterNativesUInterpTrackLinearColorProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackLinearColorProp, 2357856839);
class UScriptStruct* FParticleReplayTrackKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleReplayTrackKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleReplayTrackKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleReplayTrackKey, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleReplayTrackKey"), sizeof(FParticleReplayTrackKey), Get_Z_Construct_UScriptStruct_FParticleReplayTrackKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleReplayTrackKey(FParticleReplayTrackKey::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleReplayTrackKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleReplayTrackKey
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleReplayTrackKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleReplayTrackKey")),new UScriptStruct::TCppStructOps<FParticleReplayTrackKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleReplayTrackKey;
	void UInterpTrackParticleReplay::StaticRegisterNativesUInterpTrackParticleReplay()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackParticleReplay, 4105080293);
static class UEnum* ETrackToggleAction_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrackToggleAction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETrackToggleAction, Z_Construct_UPackage__Script_Engine(), TEXT("ETrackToggleAction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETrackToggleAction(ETrackToggleAction_StaticEnum, TEXT("/Script/Engine"), TEXT("ETrackToggleAction"), false, nullptr, nullptr);
class UScriptStruct* FToggleTrackKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FToggleTrackKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FToggleTrackKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FToggleTrackKey, Z_Construct_UPackage__Script_Engine(), TEXT("ToggleTrackKey"), sizeof(FToggleTrackKey), Get_Z_Construct_UScriptStruct_FToggleTrackKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FToggleTrackKey(FToggleTrackKey::StaticStruct, TEXT("/Script/Engine"), TEXT("ToggleTrackKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFToggleTrackKey
{
	FScriptStruct_Engine_StaticRegisterNativesFToggleTrackKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ToggleTrackKey")),new UScriptStruct::TCppStructOps<FToggleTrackKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFToggleTrackKey;
	void UInterpTrackToggle::StaticRegisterNativesUInterpTrackToggle()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackToggle, 4174236984);
	void UInterpTrackVectorBase::StaticRegisterNativesUInterpTrackVectorBase()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackVectorBase, 3789683645);
	void UInterpTrackAudioMaster::StaticRegisterNativesUInterpTrackAudioMaster()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackAudioMaster, 35563178);
	void UInterpTrackColorProp::StaticRegisterNativesUInterpTrackColorProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackColorProp, 2536157610);
	void UInterpTrackColorScale::StaticRegisterNativesUInterpTrackColorScale()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackColorScale, 577552456);
class UScriptStruct* FSoundTrackKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundTrackKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSoundTrackKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundTrackKey, Z_Construct_UPackage__Script_Engine(), TEXT("SoundTrackKey"), sizeof(FSoundTrackKey), Get_Z_Construct_UScriptStruct_FSoundTrackKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundTrackKey(FSoundTrackKey::StaticStruct, TEXT("/Script/Engine"), TEXT("SoundTrackKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSoundTrackKey
{
	FScriptStruct_Engine_StaticRegisterNativesFSoundTrackKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundTrackKey")),new UScriptStruct::TCppStructOps<FSoundTrackKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSoundTrackKey;
	void UInterpTrackSound::StaticRegisterNativesUInterpTrackSound()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackSound, 1335471722);
	void UInterpTrackVectorMaterialParam::StaticRegisterNativesUInterpTrackVectorMaterialParam()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackVectorMaterialParam, 896592046);
	void UInterpTrackVectorProp::StaticRegisterNativesUInterpTrackVectorProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackVectorProp, 774295023);
static class UEnum* EVisibilityTrackCondition_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVisibilityTrackCondition();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EVisibilityTrackCondition, Z_Construct_UPackage__Script_Engine(), TEXT("EVisibilityTrackCondition"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVisibilityTrackCondition(EVisibilityTrackCondition_StaticEnum, TEXT("/Script/Engine"), TEXT("EVisibilityTrackCondition"), false, nullptr, nullptr);
static class UEnum* EVisibilityTrackAction_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVisibilityTrackAction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EVisibilityTrackAction, Z_Construct_UPackage__Script_Engine(), TEXT("EVisibilityTrackAction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVisibilityTrackAction(EVisibilityTrackAction_StaticEnum, TEXT("/Script/Engine"), TEXT("EVisibilityTrackAction"), false, nullptr, nullptr);
class UScriptStruct* FVisibilityTrackKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVisibilityTrackKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVisibilityTrackKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVisibilityTrackKey, Z_Construct_UPackage__Script_Engine(), TEXT("VisibilityTrackKey"), sizeof(FVisibilityTrackKey), Get_Z_Construct_UScriptStruct_FVisibilityTrackKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVisibilityTrackKey(FVisibilityTrackKey::StaticStruct, TEXT("/Script/Engine"), TEXT("VisibilityTrackKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVisibilityTrackKey
{
	FScriptStruct_Engine_StaticRegisterNativesFVisibilityTrackKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("VisibilityTrackKey")),new UScriptStruct::TCppStructOps<FVisibilityTrackKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVisibilityTrackKey;
	void UInterpTrackVisibility::StaticRegisterNativesUInterpTrackVisibility()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackVisibility, 2187740542);
	void UInterpTrackInst::StaticRegisterNativesUInterpTrackInst()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInst, 1992426913);
	void UInterpTrackInstAnimControl::StaticRegisterNativesUInterpTrackInstAnimControl()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstAnimControl, 4217678160);
	void UInterpTrackInstAudioMaster::StaticRegisterNativesUInterpTrackInstAudioMaster()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstAudioMaster, 3336680852);
	void UInterpTrackInstColorScale::StaticRegisterNativesUInterpTrackInstColorScale()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstColorScale, 34509222);
	void UInterpTrackInstDirector::StaticRegisterNativesUInterpTrackInstDirector()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstDirector, 957699913);
	void UInterpTrackInstEvent::StaticRegisterNativesUInterpTrackInstEvent()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstEvent, 3356644035);
	void UInterpTrackInstFade::StaticRegisterNativesUInterpTrackInstFade()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstFade, 2522121141);
	void UInterpTrackInstFloatAnimBPParam::StaticRegisterNativesUInterpTrackInstFloatAnimBPParam()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstFloatAnimBPParam, 4155077796);
	void UInterpTrackInstFloatMaterialParam::StaticRegisterNativesUInterpTrackInstFloatMaterialParam()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstFloatMaterialParam, 1425370005);
	void UInterpTrackInstFloatParticleParam::StaticRegisterNativesUInterpTrackInstFloatParticleParam()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstFloatParticleParam, 1290145963);
	void UInterpTrackInstMove::StaticRegisterNativesUInterpTrackInstMove()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstMove, 1990233740);
	void UInterpTrackInstParticleReplay::StaticRegisterNativesUInterpTrackInstParticleReplay()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstParticleReplay, 313326182);
	void UInterpTrackInstProperty::StaticRegisterNativesUInterpTrackInstProperty()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstProperty, 518723629);
	void UInterpTrackInstBoolProp::StaticRegisterNativesUInterpTrackInstBoolProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstBoolProp, 3054847195);
	void UInterpTrackInstColorProp::StaticRegisterNativesUInterpTrackInstColorProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstColorProp, 2328144737);
	void UInterpTrackInstFloatProp::StaticRegisterNativesUInterpTrackInstFloatProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstFloatProp, 3441995135);
	void UInterpTrackInstLinearColorProp::StaticRegisterNativesUInterpTrackInstLinearColorProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstLinearColorProp, 1644992361);
	void UInterpTrackInstVectorProp::StaticRegisterNativesUInterpTrackInstVectorProp()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstVectorProp, 647766162);
	void UInterpTrackInstSlomo::StaticRegisterNativesUInterpTrackInstSlomo()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstSlomo, 95751275);
	void UInterpTrackInstSound::StaticRegisterNativesUInterpTrackInstSound()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstSound, 3061387103);
	void UInterpTrackInstToggle::StaticRegisterNativesUInterpTrackInstToggle()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstToggle, 3000272677);
	void UInterpTrackInstVectorMaterialParam::StaticRegisterNativesUInterpTrackInstVectorMaterialParam()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstVectorMaterialParam, 971557553);
	void UInterpTrackInstVisibility::StaticRegisterNativesUInterpTrackInstVisibility()
	{
	}
	IMPLEMENT_CLASS(UInterpTrackInstVisibility, 954113216);
	void UIntSerialization::StaticRegisterNativesUIntSerialization()
	{
	}
	IMPLEMENT_CLASS(UIntSerialization, 2955397930);
class UScriptStruct* FLayerActorStats::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLayerActorStats();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLayerActorStats_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLayerActorStats, Z_Construct_UPackage__Script_Engine(), TEXT("LayerActorStats"), sizeof(FLayerActorStats), Get_Z_Construct_UScriptStruct_FLayerActorStats_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLayerActorStats(FLayerActorStats::StaticStruct, TEXT("/Script/Engine"), TEXT("LayerActorStats"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLayerActorStats
{
	FScriptStruct_Engine_StaticRegisterNativesFLayerActorStats()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LayerActorStats")),new UScriptStruct::TCppStructOps<FLayerActorStats>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLayerActorStats;
	void ULayer::StaticRegisterNativesULayer()
	{
	}
	IMPLEMENT_CLASS(ULayer, 475286286);
	void ULevelStreaming::StaticRegisterNativesULevelStreaming()
	{
		FNativeFunctionRegistrar::RegisterFunction(ULevelStreaming::StaticClass(), "CreateInstance",(Native)&ULevelStreaming::execCreateInstance);
		FNativeFunctionRegistrar::RegisterFunction(ULevelStreaming::StaticClass(), "GetLevelScriptActor",(Native)&ULevelStreaming::execGetLevelScriptActor);
		FNativeFunctionRegistrar::RegisterFunction(ULevelStreaming::StaticClass(), "IsLevelLoaded",(Native)&ULevelStreaming::execIsLevelLoaded);
		FNativeFunctionRegistrar::RegisterFunction(ULevelStreaming::StaticClass(), "IsLevelVisible",(Native)&ULevelStreaming::execIsLevelVisible);
		FNativeFunctionRegistrar::RegisterFunction(ULevelStreaming::StaticClass(), "IsStreamingStatePending",(Native)&ULevelStreaming::execIsStreamingStatePending);
	}
	IMPLEMENT_CLASS(ULevelStreaming, 2770295529);
	void ULevelStreamingAlwaysLoaded::StaticRegisterNativesULevelStreamingAlwaysLoaded()
	{
	}
	IMPLEMENT_CLASS(ULevelStreamingAlwaysLoaded, 3780043901);
	void ULevelStreamingKismet::StaticRegisterNativesULevelStreamingKismet()
	{
		FNativeFunctionRegistrar::RegisterFunction(ULevelStreamingKismet::StaticClass(), "LoadLevelInstance",(Native)&ULevelStreamingKismet::execLoadLevelInstance);
	}
	IMPLEMENT_CLASS(ULevelStreamingKismet, 2779151392);
	void ULevelStreamingPersistent::StaticRegisterNativesULevelStreamingPersistent()
	{
	}
	IMPLEMENT_CLASS(ULevelStreamingPersistent, 151073302);
	void ULightmappedSurfaceCollection::StaticRegisterNativesULightmappedSurfaceCollection()
	{
	}
	IMPLEMENT_CLASS(ULightmappedSurfaceCollection, 3844709774);
	void ULightmassPrimitiveSettingsObject::StaticRegisterNativesULightmassPrimitiveSettingsObject()
	{
	}
	IMPLEMENT_CLASS(ULightmassPrimitiveSettingsObject, 3533810703);
class UScriptStruct* FClientReceiveData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClientReceiveData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FClientReceiveData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FClientReceiveData, Z_Construct_UPackage__Script_Engine(), TEXT("ClientReceiveData"), sizeof(FClientReceiveData), Get_Z_Construct_UScriptStruct_FClientReceiveData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FClientReceiveData(FClientReceiveData::StaticStruct, TEXT("/Script/Engine"), TEXT("ClientReceiveData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFClientReceiveData
{
	FScriptStruct_Engine_StaticRegisterNativesFClientReceiveData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ClientReceiveData")),new UScriptStruct::TCppStructOps<FClientReceiveData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFClientReceiveData;
	void ULocalMessage::StaticRegisterNativesULocalMessage()
	{
	}
	IMPLEMENT_CLASS(ULocalMessage, 2504915516);
	void UEngineMessage::StaticRegisterNativesUEngineMessage()
	{
	}
	IMPLEMENT_CLASS(UEngineMessage, 1199177224);
	void UMapBuildDataRegistry::StaticRegisterNativesUMapBuildDataRegistry()
	{
	}
	IMPLEMENT_CLASS(UMapBuildDataRegistry, 931477835);
	void UMaterialExpression::StaticRegisterNativesUMaterialExpression()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpression, 1786521107);
	void UMaterialExpressionAbs::StaticRegisterNativesUMaterialExpressionAbs()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionAbs, 2439702212);
	void UMaterialExpressionActorPositionWS::StaticRegisterNativesUMaterialExpressionActorPositionWS()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionActorPositionWS, 3805459245);
	void UMaterialExpressionAdd::StaticRegisterNativesUMaterialExpressionAdd()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionAdd, 391539747);
	void UMaterialExpressionAppendVector::StaticRegisterNativesUMaterialExpressionAppendVector()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionAppendVector, 1577947479);
	void UMaterialExpressionArccosine::StaticRegisterNativesUMaterialExpressionArccosine()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionArccosine, 1511144909);
	void UMaterialExpressionArccosineFast::StaticRegisterNativesUMaterialExpressionArccosineFast()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionArccosineFast, 3602878571);
	void UMaterialExpressionArcsine::StaticRegisterNativesUMaterialExpressionArcsine()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionArcsine, 3846453322);
	void UMaterialExpressionArcsineFast::StaticRegisterNativesUMaterialExpressionArcsineFast()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionArcsineFast, 831415446);
	void UMaterialExpressionArctangent::StaticRegisterNativesUMaterialExpressionArctangent()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionArctangent, 1056118773);
	void UMaterialExpressionArctangent2::StaticRegisterNativesUMaterialExpressionArctangent2()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionArctangent2, 231066457);
	void UMaterialExpressionArctangent2Fast::StaticRegisterNativesUMaterialExpressionArctangent2Fast()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionArctangent2Fast, 362507718);
	void UMaterialExpressionArctangentFast::StaticRegisterNativesUMaterialExpressionArctangentFast()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionArctangentFast, 2823774301);
	void UMaterialExpressionAtmosphericFogColor::StaticRegisterNativesUMaterialExpressionAtmosphericFogColor()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionAtmosphericFogColor, 2780457638);
	void UMaterialExpressionAtmosphericLightColor::StaticRegisterNativesUMaterialExpressionAtmosphericLightColor()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionAtmosphericLightColor, 240754999);
	void UMaterialExpressionAtmosphericLightVector::StaticRegisterNativesUMaterialExpressionAtmosphericLightVector()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionAtmosphericLightVector, 292987631);
	void UMaterialExpressionBlackBody::StaticRegisterNativesUMaterialExpressionBlackBody()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionBlackBody, 3029911495);
static class UEnum* EMaterialAttributeBlend_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialAttributeBlend();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialAttributeBlend, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialAttributeBlend"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialAttributeBlend(EMaterialAttributeBlend_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialAttributeBlend"), false, nullptr, nullptr);
	void UMaterialExpressionBlendMaterialAttributes::StaticRegisterNativesUMaterialExpressionBlendMaterialAttributes()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionBlendMaterialAttributes, 2476067644);
	void UMaterialExpressionBreakMaterialAttributes::StaticRegisterNativesUMaterialExpressionBreakMaterialAttributes()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionBreakMaterialAttributes, 3635188719);
	void UMaterialExpressionBumpOffset::StaticRegisterNativesUMaterialExpressionBumpOffset()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionBumpOffset, 2726450174);
	void UMaterialExpressionCameraPositionWS::StaticRegisterNativesUMaterialExpressionCameraPositionWS()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionCameraPositionWS, 1954952983);
	void UMaterialExpressionCameraVectorWS::StaticRegisterNativesUMaterialExpressionCameraVectorWS()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionCameraVectorWS, 4172269534);
	void UMaterialExpressionCeil::StaticRegisterNativesUMaterialExpressionCeil()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionCeil, 2859973067);
static class UEnum* EClampMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EClampMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EClampMode, Z_Construct_UPackage__Script_Engine(), TEXT("EClampMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EClampMode(EClampMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EClampMode"), false, nullptr, nullptr);
	void UMaterialExpressionClamp::StaticRegisterNativesUMaterialExpressionClamp()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionClamp, 3329051448);
	void UMaterialExpressionCollectionParameter::StaticRegisterNativesUMaterialExpressionCollectionParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionCollectionParameter, 1513941669);
	void UMaterialExpressionComment::StaticRegisterNativesUMaterialExpressionComment()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionComment, 1608563034);
	void UMaterialExpressionComponentMask::StaticRegisterNativesUMaterialExpressionComponentMask()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionComponentMask, 1923900925);
	void UMaterialExpressionConstant::StaticRegisterNativesUMaterialExpressionConstant()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionConstant, 26587574);
	void UMaterialExpressionConstant2Vector::StaticRegisterNativesUMaterialExpressionConstant2Vector()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionConstant2Vector, 3907802711);
	void UMaterialExpressionConstant3Vector::StaticRegisterNativesUMaterialExpressionConstant3Vector()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionConstant3Vector, 3877625979);
	void UMaterialExpressionConstant4Vector::StaticRegisterNativesUMaterialExpressionConstant4Vector()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionConstant4Vector, 3828345066);
	void UMaterialExpressionConstantBiasScale::StaticRegisterNativesUMaterialExpressionConstantBiasScale()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionConstantBiasScale, 2444908905);
	void UMaterialExpressionCosine::StaticRegisterNativesUMaterialExpressionCosine()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionCosine, 1830632588);
	void UMaterialExpressionCrossProduct::StaticRegisterNativesUMaterialExpressionCrossProduct()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionCrossProduct, 3632134254);
static class UEnum* ECustomMaterialOutputType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECustomMaterialOutputType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECustomMaterialOutputType, Z_Construct_UPackage__Script_Engine(), TEXT("ECustomMaterialOutputType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECustomMaterialOutputType(ECustomMaterialOutputType_StaticEnum, TEXT("/Script/Engine"), TEXT("ECustomMaterialOutputType"), false, nullptr, nullptr);
class UScriptStruct* FCustomInput::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCustomInput();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCustomInput_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCustomInput, Z_Construct_UPackage__Script_Engine(), TEXT("CustomInput"), sizeof(FCustomInput), Get_Z_Construct_UScriptStruct_FCustomInput_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCustomInput(FCustomInput::StaticStruct, TEXT("/Script/Engine"), TEXT("CustomInput"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCustomInput
{
	FScriptStruct_Engine_StaticRegisterNativesFCustomInput()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CustomInput")),new UScriptStruct::TCppStructOps<FCustomInput>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCustomInput;
	void UMaterialExpressionCustom::StaticRegisterNativesUMaterialExpressionCustom()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionCustom, 2083074990);
	void UMaterialExpressionCustomOutput::StaticRegisterNativesUMaterialExpressionCustomOutput()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionCustomOutput, 870687959);
	void UMaterialExpressionClearCoatNormalCustomOutput::StaticRegisterNativesUMaterialExpressionClearCoatNormalCustomOutput()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionClearCoatNormalCustomOutput, 2914299049);
	void UMaterialExpressionTangentOutput::StaticRegisterNativesUMaterialExpressionTangentOutput()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTangentOutput, 1946027608);
	void UMaterialExpressionDDX::StaticRegisterNativesUMaterialExpressionDDX()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDDX, 4067206793);
	void UMaterialExpressionDDY::StaticRegisterNativesUMaterialExpressionDDY()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDDY, 2659084221);
	void UMaterialExpressionDecalDerivative::StaticRegisterNativesUMaterialExpressionDecalDerivative()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDecalDerivative, 2362904353);
	void UMaterialExpressionDecalLifetimeOpacity::StaticRegisterNativesUMaterialExpressionDecalLifetimeOpacity()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDecalLifetimeOpacity, 2940189136);
	void UMaterialExpressionDecalMipmapLevel::StaticRegisterNativesUMaterialExpressionDecalMipmapLevel()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDecalMipmapLevel, 4064431242);
	void UMaterialExpressionDepthFade::StaticRegisterNativesUMaterialExpressionDepthFade()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDepthFade, 4182090522);
static class UEnum* EDepthOfFieldFunctionValue_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDepthOfFieldFunctionValue();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDepthOfFieldFunctionValue, Z_Construct_UPackage__Script_Engine(), TEXT("EDepthOfFieldFunctionValue"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDepthOfFieldFunctionValue(EDepthOfFieldFunctionValue_StaticEnum, TEXT("/Script/Engine"), TEXT("EDepthOfFieldFunctionValue"), false, nullptr, nullptr);
	void UMaterialExpressionDepthOfFieldFunction::StaticRegisterNativesUMaterialExpressionDepthOfFieldFunction()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDepthOfFieldFunction, 2168037535);
	void UMaterialExpressionDeriveNormalZ::StaticRegisterNativesUMaterialExpressionDeriveNormalZ()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDeriveNormalZ, 3103991602);
	void UMaterialExpressionDesaturation::StaticRegisterNativesUMaterialExpressionDesaturation()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDesaturation, 1392496614);
	void UMaterialExpressionDistance::StaticRegisterNativesUMaterialExpressionDistance()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDistance, 1799649628);
	void UMaterialExpressionDistanceCullFade::StaticRegisterNativesUMaterialExpressionDistanceCullFade()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDistanceCullFade, 3518596888);
	void UMaterialExpressionDistanceFieldGradient::StaticRegisterNativesUMaterialExpressionDistanceFieldGradient()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDistanceFieldGradient, 635374348);
	void UMaterialExpressionDistanceToNearestSurface::StaticRegisterNativesUMaterialExpressionDistanceToNearestSurface()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDistanceToNearestSurface, 13787191);
	void UMaterialExpressionDivide::StaticRegisterNativesUMaterialExpressionDivide()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDivide, 3984463801);
	void UMaterialExpressionDotProduct::StaticRegisterNativesUMaterialExpressionDotProduct()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDotProduct, 1370868549);
	void UMaterialExpressionDynamicParameter::StaticRegisterNativesUMaterialExpressionDynamicParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionDynamicParameter, 327410345);
	void UMaterialExpressionEyeAdaptation::StaticRegisterNativesUMaterialExpressionEyeAdaptation()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionEyeAdaptation, 721400691);
	void UMaterialExpressionFeatureLevelSwitch::StaticRegisterNativesUMaterialExpressionFeatureLevelSwitch()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionFeatureLevelSwitch, 1164256571);
	void UMaterialExpressionFloor::StaticRegisterNativesUMaterialExpressionFloor()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionFloor, 3906164199);
	void UMaterialExpressionFmod::StaticRegisterNativesUMaterialExpressionFmod()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionFmod, 2040615205);
	void UMaterialExpressionFontSample::StaticRegisterNativesUMaterialExpressionFontSample()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionFontSample, 1598715589);
	void UMaterialExpressionFontSampleParameter::StaticRegisterNativesUMaterialExpressionFontSampleParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionFontSampleParameter, 2904409360);
	void UMaterialExpressionFrac::StaticRegisterNativesUMaterialExpressionFrac()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionFrac, 1690499963);
	void UMaterialExpressionFresnel::StaticRegisterNativesUMaterialExpressionFresnel()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionFresnel, 304833786);
static class UEnum* EFunctionInputType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFunctionInputType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EFunctionInputType, Z_Construct_UPackage__Script_Engine(), TEXT("EFunctionInputType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EFunctionInputType(EFunctionInputType_StaticEnum, TEXT("/Script/Engine"), TEXT("EFunctionInputType"), false, nullptr, nullptr);
	void UMaterialExpressionFunctionInput::StaticRegisterNativesUMaterialExpressionFunctionInput()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionFunctionInput, 160916795);
	void UMaterialExpressionFunctionOutput::StaticRegisterNativesUMaterialExpressionFunctionOutput()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionFunctionOutput, 1974913924);
	void UMaterialExpressionGetMaterialAttributes::StaticRegisterNativesUMaterialExpressionGetMaterialAttributes()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionGetMaterialAttributes, 3800814251);
	void UMaterialExpressionGIReplace::StaticRegisterNativesUMaterialExpressionGIReplace()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionGIReplace, 1551464113);
	void UMaterialExpressionIf::StaticRegisterNativesUMaterialExpressionIf()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionIf, 443570549);
	void UMaterialExpressionLightmapUVs::StaticRegisterNativesUMaterialExpressionLightmapUVs()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionLightmapUVs, 1866039582);
	void UMaterialExpressionLightmassReplace::StaticRegisterNativesUMaterialExpressionLightmassReplace()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionLightmassReplace, 1068152660);
	void UMaterialExpressionLightVector::StaticRegisterNativesUMaterialExpressionLightVector()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionLightVector, 169989754);
	void UMaterialExpressionLinearInterpolate::StaticRegisterNativesUMaterialExpressionLinearInterpolate()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionLinearInterpolate, 2948115833);
	void UMaterialExpressionLogarithm2::StaticRegisterNativesUMaterialExpressionLogarithm2()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionLogarithm2, 19730467);
	void UMaterialExpressionMakeMaterialAttributes::StaticRegisterNativesUMaterialExpressionMakeMaterialAttributes()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionMakeMaterialAttributes, 939250549);
class UScriptStruct* FFunctionExpressionOutput::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFunctionExpressionOutput();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFunctionExpressionOutput_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFunctionExpressionOutput, Z_Construct_UPackage__Script_Engine(), TEXT("FunctionExpressionOutput"), sizeof(FFunctionExpressionOutput), Get_Z_Construct_UScriptStruct_FFunctionExpressionOutput_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFunctionExpressionOutput(FFunctionExpressionOutput::StaticStruct, TEXT("/Script/Engine"), TEXT("FunctionExpressionOutput"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFunctionExpressionOutput
{
	FScriptStruct_Engine_StaticRegisterNativesFFunctionExpressionOutput()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FunctionExpressionOutput")),new UScriptStruct::TCppStructOps<FFunctionExpressionOutput>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFunctionExpressionOutput;
class UScriptStruct* FFunctionExpressionInput::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFunctionExpressionInput();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFunctionExpressionInput_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFunctionExpressionInput, Z_Construct_UPackage__Script_Engine(), TEXT("FunctionExpressionInput"), sizeof(FFunctionExpressionInput), Get_Z_Construct_UScriptStruct_FFunctionExpressionInput_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFunctionExpressionInput(FFunctionExpressionInput::StaticStruct, TEXT("/Script/Engine"), TEXT("FunctionExpressionInput"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFunctionExpressionInput
{
	FScriptStruct_Engine_StaticRegisterNativesFFunctionExpressionInput()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FunctionExpressionInput")),new UScriptStruct::TCppStructOps<FFunctionExpressionInput>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFunctionExpressionInput;
	void UMaterialExpressionMaterialFunctionCall::StaticRegisterNativesUMaterialExpressionMaterialFunctionCall()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionMaterialFunctionCall, 2948642549);
	void UMaterialExpressionMaterialProxyReplace::StaticRegisterNativesUMaterialExpressionMaterialProxyReplace()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionMaterialProxyReplace, 3413466154);
	void UMaterialExpressionMax::StaticRegisterNativesUMaterialExpressionMax()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionMax, 2005597268);
	void UMaterialExpressionMin::StaticRegisterNativesUMaterialExpressionMin()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionMin, 649895429);
	void UMaterialExpressionMultiply::StaticRegisterNativesUMaterialExpressionMultiply()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionMultiply, 3735197930);
static class UEnum* ENoiseFunction_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENoiseFunction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENoiseFunction, Z_Construct_UPackage__Script_Engine(), TEXT("ENoiseFunction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENoiseFunction(ENoiseFunction_StaticEnum, TEXT("/Script/Engine"), TEXT("ENoiseFunction"), false, nullptr, nullptr);
	void UMaterialExpressionNoise::StaticRegisterNativesUMaterialExpressionNoise()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionNoise, 818544507);
	void UMaterialExpressionNormalize::StaticRegisterNativesUMaterialExpressionNormalize()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionNormalize, 1466661050);
	void UMaterialExpressionObjectBounds::StaticRegisterNativesUMaterialExpressionObjectBounds()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionObjectBounds, 1876200916);
	void UMaterialExpressionObjectOrientation::StaticRegisterNativesUMaterialExpressionObjectOrientation()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionObjectOrientation, 100085442);
	void UMaterialExpressionObjectPositionWS::StaticRegisterNativesUMaterialExpressionObjectPositionWS()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionObjectPositionWS, 1211285810);
	void UMaterialExpressionObjectRadius::StaticRegisterNativesUMaterialExpressionObjectRadius()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionObjectRadius, 2214788362);
	void UMaterialExpressionOneMinus::StaticRegisterNativesUMaterialExpressionOneMinus()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionOneMinus, 50613960);
	void UMaterialExpressionPanner::StaticRegisterNativesUMaterialExpressionPanner()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPanner, 1763428450);
	void UMaterialExpressionParameter::StaticRegisterNativesUMaterialExpressionParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParameter, 2110190080);
	void UMaterialExpressionScalarParameter::StaticRegisterNativesUMaterialExpressionScalarParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionScalarParameter, 1136013820);
	void UMaterialExpressionStaticBoolParameter::StaticRegisterNativesUMaterialExpressionStaticBoolParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionStaticBoolParameter, 2706353969);
	void UMaterialExpressionStaticSwitchParameter::StaticRegisterNativesUMaterialExpressionStaticSwitchParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionStaticSwitchParameter, 3309862966);
	void UMaterialExpressionStaticComponentMaskParameter::StaticRegisterNativesUMaterialExpressionStaticComponentMaskParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionStaticComponentMaskParameter, 1554990079);
	void UMaterialExpressionVectorParameter::StaticRegisterNativesUMaterialExpressionVectorParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionVectorParameter, 3815765805);
	void UMaterialExpressionParticleColor::StaticRegisterNativesUMaterialExpressionParticleColor()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleColor, 3990635750);
	void UMaterialExpressionParticleDirection::StaticRegisterNativesUMaterialExpressionParticleDirection()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleDirection, 1560354024);
	void UMaterialExpressionParticleMacroUV::StaticRegisterNativesUMaterialExpressionParticleMacroUV()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleMacroUV, 326052973);
	void UMaterialExpressionParticleMotionBlurFade::StaticRegisterNativesUMaterialExpressionParticleMotionBlurFade()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleMotionBlurFade, 978562061);
	void UMaterialExpressionParticlePositionWS::StaticRegisterNativesUMaterialExpressionParticlePositionWS()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticlePositionWS, 741388366);
	void UMaterialExpressionParticleRadius::StaticRegisterNativesUMaterialExpressionParticleRadius()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleRadius, 1571523883);
	void UMaterialExpressionParticleRandom::StaticRegisterNativesUMaterialExpressionParticleRandom()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleRandom, 1661578578);
	void UMaterialExpressionParticleRelativeTime::StaticRegisterNativesUMaterialExpressionParticleRelativeTime()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleRelativeTime, 1058805016);
	void UMaterialExpressionParticleSize::StaticRegisterNativesUMaterialExpressionParticleSize()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleSize, 4129442459);
	void UMaterialExpressionParticleSpeed::StaticRegisterNativesUMaterialExpressionParticleSpeed()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleSpeed, 3996704911);
	void UMaterialExpressionPerInstanceFadeAmount::StaticRegisterNativesUMaterialExpressionPerInstanceFadeAmount()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPerInstanceFadeAmount, 1307908829);
	void UMaterialExpressionPerInstanceRandom::StaticRegisterNativesUMaterialExpressionPerInstanceRandom()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPerInstanceRandom, 832612576);
	void UMaterialExpressionPixelDepth::StaticRegisterNativesUMaterialExpressionPixelDepth()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPixelDepth, 1626981917);
	void UMaterialExpressionPixelNormalWS::StaticRegisterNativesUMaterialExpressionPixelNormalWS()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPixelNormalWS, 2647342439);
	void UMaterialExpressionPower::StaticRegisterNativesUMaterialExpressionPower()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPower, 350232037);
	void UMaterialExpressionPrecomputedAOMask::StaticRegisterNativesUMaterialExpressionPrecomputedAOMask()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPrecomputedAOMask, 602754416);
	void UMaterialExpressionPreSkinnedNormal::StaticRegisterNativesUMaterialExpressionPreSkinnedNormal()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPreSkinnedNormal, 2187362762);
	void UMaterialExpressionPreSkinnedPosition::StaticRegisterNativesUMaterialExpressionPreSkinnedPosition()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPreSkinnedPosition, 3331369628);
	void UMaterialExpressionPreviousFrameSwitch::StaticRegisterNativesUMaterialExpressionPreviousFrameSwitch()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionPreviousFrameSwitch, 900032754);
	void UMaterialExpressionQualitySwitch::StaticRegisterNativesUMaterialExpressionQualitySwitch()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionQualitySwitch, 4099687277);
	void UMaterialExpressionReflectionVectorWS::StaticRegisterNativesUMaterialExpressionReflectionVectorWS()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionReflectionVectorWS, 257414509);
	void UMaterialExpressionReroute::StaticRegisterNativesUMaterialExpressionReroute()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionReroute, 1140376209);
	void UMaterialExpressionRotateAboutAxis::StaticRegisterNativesUMaterialExpressionRotateAboutAxis()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionRotateAboutAxis, 2371771165);
	void UMaterialExpressionRotator::StaticRegisterNativesUMaterialExpressionRotator()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionRotator, 1139756599);
	void UMaterialExpressionRound::StaticRegisterNativesUMaterialExpressionRound()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionRound, 4038430163);
	void UMaterialExpressionSaturate::StaticRegisterNativesUMaterialExpressionSaturate()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSaturate, 3852746380);
static class UEnum* EMaterialSceneAttributeInputMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialSceneAttributeInputMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialSceneAttributeInputMode, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialSceneAttributeInputMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialSceneAttributeInputMode(EMaterialSceneAttributeInputMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialSceneAttributeInputMode"), false, nullptr, nullptr);
	void UMaterialExpressionSceneColor::StaticRegisterNativesUMaterialExpressionSceneColor()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSceneColor, 3341189219);
	void UMaterialExpressionSceneDepth::StaticRegisterNativesUMaterialExpressionSceneDepth()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSceneDepth, 4197455147);
	void UMaterialExpressionSceneTexelSize::StaticRegisterNativesUMaterialExpressionSceneTexelSize()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSceneTexelSize, 1333828229);
static class UEnum* ESceneTextureId_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESceneTextureId();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESceneTextureId, Z_Construct_UPackage__Script_Engine(), TEXT("ESceneTextureId"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESceneTextureId(ESceneTextureId_StaticEnum, TEXT("/Script/Engine"), TEXT("ESceneTextureId"), false, nullptr, nullptr);
	void UMaterialExpressionSceneTexture::StaticRegisterNativesUMaterialExpressionSceneTexture()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSceneTexture, 4183353040);
static class UEnum* EMaterialExpressionScreenPositionMapping_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialExpressionScreenPositionMapping();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialExpressionScreenPositionMapping, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialExpressionScreenPositionMapping"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialExpressionScreenPositionMapping(EMaterialExpressionScreenPositionMapping_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialExpressionScreenPositionMapping"), false, nullptr, nullptr);
	void UMaterialExpressionScreenPosition::StaticRegisterNativesUMaterialExpressionScreenPosition()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionScreenPosition, 1522054894);
	void UMaterialExpressionSetMaterialAttributes::StaticRegisterNativesUMaterialExpressionSetMaterialAttributes()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSetMaterialAttributes, 4246970533);
	void UMaterialExpressionSine::StaticRegisterNativesUMaterialExpressionSine()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSine, 2211591808);
static class UEnum* ESpeedTreeLODType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESpeedTreeLODType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESpeedTreeLODType, Z_Construct_UPackage__Script_Engine(), TEXT("ESpeedTreeLODType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESpeedTreeLODType(ESpeedTreeLODType_StaticEnum, TEXT("/Script/Engine"), TEXT("ESpeedTreeLODType"), false, nullptr, nullptr);
static class UEnum* ESpeedTreeWindType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESpeedTreeWindType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESpeedTreeWindType, Z_Construct_UPackage__Script_Engine(), TEXT("ESpeedTreeWindType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESpeedTreeWindType(ESpeedTreeWindType_StaticEnum, TEXT("/Script/Engine"), TEXT("ESpeedTreeWindType"), false, nullptr, nullptr);
static class UEnum* ESpeedTreeGeometryType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESpeedTreeGeometryType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESpeedTreeGeometryType, Z_Construct_UPackage__Script_Engine(), TEXT("ESpeedTreeGeometryType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESpeedTreeGeometryType(ESpeedTreeGeometryType_StaticEnum, TEXT("/Script/Engine"), TEXT("ESpeedTreeGeometryType"), false, nullptr, nullptr);
	void UMaterialExpressionSpeedTree::StaticRegisterNativesUMaterialExpressionSpeedTree()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSpeedTree, 3524486779);
	void UMaterialExpressionSphereMask::StaticRegisterNativesUMaterialExpressionSphereMask()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSphereMask, 681075841);
	void UMaterialExpressionSphericalParticleOpacity::StaticRegisterNativesUMaterialExpressionSphericalParticleOpacity()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSphericalParticleOpacity, 947451761);
	void UMaterialExpressionSquareRoot::StaticRegisterNativesUMaterialExpressionSquareRoot()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSquareRoot, 3308121601);
	void UMaterialExpressionStaticBool::StaticRegisterNativesUMaterialExpressionStaticBool()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionStaticBool, 2846898032);
	void UMaterialExpressionStaticSwitch::StaticRegisterNativesUMaterialExpressionStaticSwitch()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionStaticSwitch, 3248276764);
	void UMaterialExpressionSubtract::StaticRegisterNativesUMaterialExpressionSubtract()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionSubtract, 2179774860);
	void UMaterialExpressionTangent::StaticRegisterNativesUMaterialExpressionTangent()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTangent, 3756388935);
	void UMaterialExpressionTextureBase::StaticRegisterNativesUMaterialExpressionTextureBase()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureBase, 3233624945);
	void UMaterialExpressionTextureObject::StaticRegisterNativesUMaterialExpressionTextureObject()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureObject, 306556773);
static class UEnum* ETextureMipValueMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureMipValueMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETextureMipValueMode, Z_Construct_UPackage__Script_Engine(), TEXT("ETextureMipValueMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETextureMipValueMode(ETextureMipValueMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ETextureMipValueMode"), false, nullptr, nullptr);
	void UMaterialExpressionTextureSample::StaticRegisterNativesUMaterialExpressionTextureSample()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureSample, 3652560832);
	void UMaterialExpressionParticleSubUV::StaticRegisterNativesUMaterialExpressionParticleSubUV()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionParticleSubUV, 1183567331);
	void UMaterialExpressionTextureSampleParameter::StaticRegisterNativesUMaterialExpressionTextureSampleParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureSampleParameter, 3028904451);
	void UMaterialExpressionTextureObjectParameter::StaticRegisterNativesUMaterialExpressionTextureObjectParameter()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureObjectParameter, 527380577);
	void UMaterialExpressionTextureSampleParameter2D::StaticRegisterNativesUMaterialExpressionTextureSampleParameter2D()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureSampleParameter2D, 1416495566);
static class UEnum* ETextureColorChannel_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureColorChannel();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETextureColorChannel, Z_Construct_UPackage__Script_Engine(), TEXT("ETextureColorChannel"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETextureColorChannel(ETextureColorChannel_StaticEnum, TEXT("/Script/Engine"), TEXT("ETextureColorChannel"), false, nullptr, nullptr);
	void UMaterialExpressionAntialiasedTextureMask::StaticRegisterNativesUMaterialExpressionAntialiasedTextureMask()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionAntialiasedTextureMask, 3148180173);
	void UMaterialExpressionTextureSampleParameterSubUV::StaticRegisterNativesUMaterialExpressionTextureSampleParameterSubUV()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureSampleParameterSubUV, 2812336762);
	void UMaterialExpressionTextureSampleParameterCube::StaticRegisterNativesUMaterialExpressionTextureSampleParameterCube()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureSampleParameterCube, 4263525017);
	void UMaterialExpressionTextureCoordinate::StaticRegisterNativesUMaterialExpressionTextureCoordinate()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureCoordinate, 2113039777);
static class UEnum* EMaterialExposedTextureProperty_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialExposedTextureProperty();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialExposedTextureProperty, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialExposedTextureProperty"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialExposedTextureProperty(EMaterialExposedTextureProperty_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialExposedTextureProperty"), false, nullptr, nullptr);
	void UMaterialExpressionTextureProperty::StaticRegisterNativesUMaterialExpressionTextureProperty()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTextureProperty, 1850365528);
	void UMaterialExpressionTime::StaticRegisterNativesUMaterialExpressionTime()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTime, 3899517987);
static class UEnum* EMaterialVectorCoordTransform_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialVectorCoordTransform();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialVectorCoordTransform, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialVectorCoordTransform"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialVectorCoordTransform(EMaterialVectorCoordTransform_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialVectorCoordTransform"), false, nullptr, nullptr);
static class UEnum* EMaterialVectorCoordTransformSource_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialVectorCoordTransformSource();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialVectorCoordTransformSource, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialVectorCoordTransformSource"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialVectorCoordTransformSource(EMaterialVectorCoordTransformSource_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialVectorCoordTransformSource"), false, nullptr, nullptr);
	void UMaterialExpressionTransform::StaticRegisterNativesUMaterialExpressionTransform()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTransform, 1760160770);
static class UEnum* EMaterialPositionTransformSource_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialPositionTransformSource();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialPositionTransformSource, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialPositionTransformSource"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialPositionTransformSource(EMaterialPositionTransformSource_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialPositionTransformSource"), false, nullptr, nullptr);
	void UMaterialExpressionTransformPosition::StaticRegisterNativesUMaterialExpressionTransformPosition()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTransformPosition, 1611962888);
	void UMaterialExpressionTruncate::StaticRegisterNativesUMaterialExpressionTruncate()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTruncate, 4172814323);
	void UMaterialExpressionTwoSidedSign::StaticRegisterNativesUMaterialExpressionTwoSidedSign()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionTwoSidedSign, 3940103127);
static class UEnum* EVectorNoiseFunction_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVectorNoiseFunction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EVectorNoiseFunction, Z_Construct_UPackage__Script_Engine(), TEXT("EVectorNoiseFunction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVectorNoiseFunction(EVectorNoiseFunction_StaticEnum, TEXT("/Script/Engine"), TEXT("EVectorNoiseFunction"), false, nullptr, nullptr);
	void UMaterialExpressionVectorNoise::StaticRegisterNativesUMaterialExpressionVectorNoise()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionVectorNoise, 2112648699);
	void UMaterialExpressionVertexColor::StaticRegisterNativesUMaterialExpressionVertexColor()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionVertexColor, 541313168);
	void UMaterialExpressionVertexNormalWS::StaticRegisterNativesUMaterialExpressionVertexNormalWS()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionVertexNormalWS, 480195086);
static class UEnum* EMaterialExposedViewProperty_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialExposedViewProperty();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialExposedViewProperty, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialExposedViewProperty"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialExposedViewProperty(EMaterialExposedViewProperty_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialExposedViewProperty"), false, nullptr, nullptr);
	void UMaterialExpressionViewProperty::StaticRegisterNativesUMaterialExpressionViewProperty()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionViewProperty, 2877969348);
	void UMaterialExpressionViewSize::StaticRegisterNativesUMaterialExpressionViewSize()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionViewSize, 598889702);
static class UEnum* EWorldPositionIncludedOffsets_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EWorldPositionIncludedOffsets();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EWorldPositionIncludedOffsets, Z_Construct_UPackage__Script_Engine(), TEXT("EWorldPositionIncludedOffsets"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EWorldPositionIncludedOffsets(EWorldPositionIncludedOffsets_StaticEnum, TEXT("/Script/Engine"), TEXT("EWorldPositionIncludedOffsets"), false, nullptr, nullptr);
	void UMaterialExpressionWorldPosition::StaticRegisterNativesUMaterialExpressionWorldPosition()
	{
	}
	IMPLEMENT_CLASS(UMaterialExpressionWorldPosition, 3201695857);
	void UMaterialFunction::StaticRegisterNativesUMaterialFunction()
	{
	}
	IMPLEMENT_CLASS(UMaterialFunction, 1042166433);
static class UEnum* EMaterialDecalResponse_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialDecalResponse();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialDecalResponse, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialDecalResponse"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialDecalResponse(EMaterialDecalResponse_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialDecalResponse"), false, nullptr, nullptr);
static class UEnum* EMaterialDomain_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialDomain();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaterialDomain, Z_Construct_UPackage__Script_Engine(), TEXT("EMaterialDomain"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaterialDomain(EMaterialDomain_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaterialDomain"), false, nullptr, nullptr);
static class UEnum* EDecalBlendMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDecalBlendMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDecalBlendMode, Z_Construct_UPackage__Script_Engine(), TEXT("EDecalBlendMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDecalBlendMode(EDecalBlendMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EDecalBlendMode"), false, nullptr, nullptr);
class UScriptStruct* FMaterialParameterCollectionInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialParameterCollectionInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMaterialParameterCollectionInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialParameterCollectionInfo, Z_Construct_UPackage__Script_Engine(), TEXT("MaterialParameterCollectionInfo"), sizeof(FMaterialParameterCollectionInfo), Get_Z_Construct_UScriptStruct_FMaterialParameterCollectionInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialParameterCollectionInfo(FMaterialParameterCollectionInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("MaterialParameterCollectionInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMaterialParameterCollectionInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFMaterialParameterCollectionInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialParameterCollectionInfo")),new UScriptStruct::TCppStructOps<FMaterialParameterCollectionInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMaterialParameterCollectionInfo;
class UScriptStruct* FMaterialFunctionInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialFunctionInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMaterialFunctionInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialFunctionInfo, Z_Construct_UPackage__Script_Engine(), TEXT("MaterialFunctionInfo"), sizeof(FMaterialFunctionInfo), Get_Z_Construct_UScriptStruct_FMaterialFunctionInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialFunctionInfo(FMaterialFunctionInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("MaterialFunctionInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMaterialFunctionInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFMaterialFunctionInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialFunctionInfo")),new UScriptStruct::TCppStructOps<FMaterialFunctionInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMaterialFunctionInfo;
	void UMaterial::StaticRegisterNativesUMaterial()
	{
	}
	IMPLEMENT_CLASS(UMaterial, 3889612886);
class UScriptStruct* FMaterialInstanceBasePropertyOverrides::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialInstanceBasePropertyOverrides();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMaterialInstanceBasePropertyOverrides_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialInstanceBasePropertyOverrides, Z_Construct_UPackage__Script_Engine(), TEXT("MaterialInstanceBasePropertyOverrides"), sizeof(FMaterialInstanceBasePropertyOverrides), Get_Z_Construct_UScriptStruct_FMaterialInstanceBasePropertyOverrides_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialInstanceBasePropertyOverrides(FMaterialInstanceBasePropertyOverrides::StaticStruct, TEXT("/Script/Engine"), TEXT("MaterialInstanceBasePropertyOverrides"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMaterialInstanceBasePropertyOverrides
{
	FScriptStruct_Engine_StaticRegisterNativesFMaterialInstanceBasePropertyOverrides()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialInstanceBasePropertyOverrides")),new UScriptStruct::TCppStructOps<FMaterialInstanceBasePropertyOverrides>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMaterialInstanceBasePropertyOverrides;
class UScriptStruct* FVectorParameterValue::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorParameterValue();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVectorParameterValue_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVectorParameterValue, Z_Construct_UPackage__Script_Engine(), TEXT("VectorParameterValue"), sizeof(FVectorParameterValue), Get_Z_Construct_UScriptStruct_FVectorParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVectorParameterValue(FVectorParameterValue::StaticStruct, TEXT("/Script/Engine"), TEXT("VectorParameterValue"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVectorParameterValue
{
	FScriptStruct_Engine_StaticRegisterNativesFVectorParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("VectorParameterValue")),new UScriptStruct::TCppStructOps<FVectorParameterValue>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVectorParameterValue;
class UScriptStruct* FTextureParameterValue::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTextureParameterValue();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTextureParameterValue_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTextureParameterValue, Z_Construct_UPackage__Script_Engine(), TEXT("TextureParameterValue"), sizeof(FTextureParameterValue), Get_Z_Construct_UScriptStruct_FTextureParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTextureParameterValue(FTextureParameterValue::StaticStruct, TEXT("/Script/Engine"), TEXT("TextureParameterValue"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTextureParameterValue
{
	FScriptStruct_Engine_StaticRegisterNativesFTextureParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TextureParameterValue")),new UScriptStruct::TCppStructOps<FTextureParameterValue>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTextureParameterValue;
class UScriptStruct* FScalarParameterValue::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FScalarParameterValue();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FScalarParameterValue_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FScalarParameterValue, Z_Construct_UPackage__Script_Engine(), TEXT("ScalarParameterValue"), sizeof(FScalarParameterValue), Get_Z_Construct_UScriptStruct_FScalarParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FScalarParameterValue(FScalarParameterValue::StaticStruct, TEXT("/Script/Engine"), TEXT("ScalarParameterValue"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFScalarParameterValue
{
	FScriptStruct_Engine_StaticRegisterNativesFScalarParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ScalarParameterValue")),new UScriptStruct::TCppStructOps<FScalarParameterValue>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFScalarParameterValue;
class UScriptStruct* FFontParameterValue::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFontParameterValue();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFontParameterValue_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFontParameterValue, Z_Construct_UPackage__Script_Engine(), TEXT("FontParameterValue"), sizeof(FFontParameterValue), Get_Z_Construct_UScriptStruct_FFontParameterValue_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFontParameterValue(FFontParameterValue::StaticStruct, TEXT("/Script/Engine"), TEXT("FontParameterValue"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFontParameterValue
{
	FScriptStruct_Engine_StaticRegisterNativesFFontParameterValue()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FontParameterValue")),new UScriptStruct::TCppStructOps<FFontParameterValue>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFontParameterValue;
	void UMaterialInstance::StaticRegisterNativesUMaterialInstance()
	{
	}
	IMPLEMENT_CLASS(UMaterialInstance, 3607597506);
	void UMaterialInstanceConstant::StaticRegisterNativesUMaterialInstanceConstant()
	{
	}
	IMPLEMENT_CLASS(UMaterialInstanceConstant, 2562586807);
	void UMaterialInstanceDynamic::StaticRegisterNativesUMaterialInstanceDynamic()
	{
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "CopyInterpParameters",(Native)&UMaterialInstanceDynamic::execCopyInterpParameters);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "CopyParameterOverrides",(Native)&UMaterialInstanceDynamic::execCopyParameterOverrides);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "K2_CopyMaterialInstanceParameters",(Native)&UMaterialInstanceDynamic::execK2_CopyMaterialInstanceParameters);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "K2_GetScalarParameterValue",(Native)&UMaterialInstanceDynamic::execK2_GetScalarParameterValue);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "K2_GetTextureParameterValue",(Native)&UMaterialInstanceDynamic::execK2_GetTextureParameterValue);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "K2_GetVectorParameterValue",(Native)&UMaterialInstanceDynamic::execK2_GetVectorParameterValue);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "K2_InterpolateMaterialInstanceParams",(Native)&UMaterialInstanceDynamic::execK2_InterpolateMaterialInstanceParams);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "SetScalarParameterValue",(Native)&UMaterialInstanceDynamic::execSetScalarParameterValue);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "SetTextureParameterValue",(Native)&UMaterialInstanceDynamic::execSetTextureParameterValue);
		FNativeFunctionRegistrar::RegisterFunction(UMaterialInstanceDynamic::StaticClass(), "SetVectorParameterValue",(Native)&UMaterialInstanceDynamic::execSetVectorParameterValue);
	}
	IMPLEMENT_CLASS(UMaterialInstanceDynamic, 1155065198);
class UScriptStruct* FCollectionVectorParameter::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollectionVectorParameter();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCollectionVectorParameter_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollectionVectorParameter, Z_Construct_UPackage__Script_Engine(), TEXT("CollectionVectorParameter"), sizeof(FCollectionVectorParameter), Get_Z_Construct_UScriptStruct_FCollectionVectorParameter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollectionVectorParameter(FCollectionVectorParameter::StaticStruct, TEXT("/Script/Engine"), TEXT("CollectionVectorParameter"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCollectionVectorParameter
{
	FScriptStruct_Engine_StaticRegisterNativesFCollectionVectorParameter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollectionVectorParameter")),new UScriptStruct::TCppStructOps<FCollectionVectorParameter>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCollectionVectorParameter;
class UScriptStruct* FCollectionScalarParameter::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollectionScalarParameter();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCollectionScalarParameter_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollectionScalarParameter, Z_Construct_UPackage__Script_Engine(), TEXT("CollectionScalarParameter"), sizeof(FCollectionScalarParameter), Get_Z_Construct_UScriptStruct_FCollectionScalarParameter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollectionScalarParameter(FCollectionScalarParameter::StaticStruct, TEXT("/Script/Engine"), TEXT("CollectionScalarParameter"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCollectionScalarParameter
{
	FScriptStruct_Engine_StaticRegisterNativesFCollectionScalarParameter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollectionScalarParameter")),new UScriptStruct::TCppStructOps<FCollectionScalarParameter>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCollectionScalarParameter;
class UScriptStruct* FCollectionParameterBase::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollectionParameterBase();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FCollectionParameterBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FCollectionParameterBase, Z_Construct_UPackage__Script_Engine(), TEXT("CollectionParameterBase"), sizeof(FCollectionParameterBase), Get_Z_Construct_UScriptStruct_FCollectionParameterBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FCollectionParameterBase(FCollectionParameterBase::StaticStruct, TEXT("/Script/Engine"), TEXT("CollectionParameterBase"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFCollectionParameterBase
{
	FScriptStruct_Engine_StaticRegisterNativesFCollectionParameterBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("CollectionParameterBase")),new UScriptStruct::TCppStructOps<FCollectionParameterBase>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFCollectionParameterBase;
	void UMaterialParameterCollection::StaticRegisterNativesUMaterialParameterCollection()
	{
	}
	IMPLEMENT_CLASS(UMaterialParameterCollection, 468889276);
	void UMaterialParameterCollectionInstance::StaticRegisterNativesUMaterialParameterCollectionInstance()
	{
	}
	IMPLEMENT_CLASS(UMaterialParameterCollectionInstance, 1508070568);
	void UMatineeInterface::StaticRegisterNativesUMatineeInterface()
	{
	}
	IMPLEMENT_CLASS(UMatineeInterface, 3111286741);
	void UMorphTarget::StaticRegisterNativesUMorphTarget()
	{
	}
	IMPLEMENT_CLASS(UMorphTarget, 3152537564);
	void UNavArea_Default::StaticRegisterNativesUNavArea_Default()
	{
	}
	IMPLEMENT_CLASS(UNavArea_Default, 3726150142);
	void UNavArea_LowHeight::StaticRegisterNativesUNavArea_LowHeight()
	{
	}
	IMPLEMENT_CLASS(UNavArea_LowHeight, 2247456709);
	void UNavArea_Null::StaticRegisterNativesUNavArea_Null()
	{
	}
	IMPLEMENT_CLASS(UNavArea_Null, 1587510933);
	void UNavArea_Obstacle::StaticRegisterNativesUNavArea_Obstacle()
	{
	}
	IMPLEMENT_CLASS(UNavArea_Obstacle, 3420837786);
	void UNavAreaMeta::StaticRegisterNativesUNavAreaMeta()
	{
	}
	IMPLEMENT_CLASS(UNavAreaMeta, 164864375);
	void UNavAreaMeta_SwitchByAgent::StaticRegisterNativesUNavAreaMeta_SwitchByAgent()
	{
	}
	IMPLEMENT_CLASS(UNavAreaMeta_SwitchByAgent, 2475114246);
class UScriptStruct* FNavCollisionBox::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavCollisionBox();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavCollisionBox_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavCollisionBox, Z_Construct_UPackage__Script_Engine(), TEXT("NavCollisionBox"), sizeof(FNavCollisionBox), Get_Z_Construct_UScriptStruct_FNavCollisionBox_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavCollisionBox(FNavCollisionBox::StaticStruct, TEXT("/Script/Engine"), TEXT("NavCollisionBox"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavCollisionBox
{
	FScriptStruct_Engine_StaticRegisterNativesFNavCollisionBox()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavCollisionBox")),new UScriptStruct::TCppStructOps<FNavCollisionBox>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavCollisionBox;
class UScriptStruct* FNavCollisionCylinder::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavCollisionCylinder();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNavCollisionCylinder_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNavCollisionCylinder, Z_Construct_UPackage__Script_Engine(), TEXT("NavCollisionCylinder"), sizeof(FNavCollisionCylinder), Get_Z_Construct_UScriptStruct_FNavCollisionCylinder_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNavCollisionCylinder(FNavCollisionCylinder::StaticStruct, TEXT("/Script/Engine"), TEXT("NavCollisionCylinder"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNavCollisionCylinder
{
	FScriptStruct_Engine_StaticRegisterNativesFNavCollisionCylinder()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NavCollisionCylinder")),new UScriptStruct::TCppStructOps<FNavCollisionCylinder>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNavCollisionCylinder;
	void UNavCollision::StaticRegisterNativesUNavCollision()
	{
	}
	IMPLEMENT_CLASS(UNavCollision, 40199543);
	void UNavEdgeProviderInterface::StaticRegisterNativesUNavEdgeProviderInterface()
	{
	}
	IMPLEMENT_CLASS(UNavEdgeProviderInterface, 60693067);
	void UNavigationDataChunk::StaticRegisterNativesUNavigationDataChunk()
	{
	}
	IMPLEMENT_CLASS(UNavigationDataChunk, 1609766465);
	void URecastNavMeshDataChunk::StaticRegisterNativesURecastNavMeshDataChunk()
	{
	}
	IMPLEMENT_CLASS(URecastNavMeshDataChunk, 3263142190);
	void UNavigationPath::StaticRegisterNativesUNavigationPath()
	{
		FNativeFunctionRegistrar::RegisterFunction(UNavigationPath::StaticClass(), "EnableDebugDrawing",(Native)&UNavigationPath::execEnableDebugDrawing);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationPath::StaticClass(), "EnableRecalculationOnInvalidation",(Native)&UNavigationPath::execEnableRecalculationOnInvalidation);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationPath::StaticClass(), "GetDebugString",(Native)&UNavigationPath::execGetDebugString);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationPath::StaticClass(), "GetPathCost",(Native)&UNavigationPath::execGetPathCost);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationPath::StaticClass(), "GetPathLength",(Native)&UNavigationPath::execGetPathLength);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationPath::StaticClass(), "IsPartial",(Native)&UNavigationPath::execIsPartial);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationPath::StaticClass(), "IsStringPulled",(Native)&UNavigationPath::execIsStringPulled);
		FNativeFunctionRegistrar::RegisterFunction(UNavigationPath::StaticClass(), "IsValid",(Native)&UNavigationPath::execIsValid);
	}
	IMPLEMENT_CLASS(UNavigationPath, 1186044975);
	void UNavigationPathGenerator::StaticRegisterNativesUNavigationPathGenerator()
	{
	}
	IMPLEMENT_CLASS(UNavigationPathGenerator, 2325226123);
	void URecastFilter_UseDefaultArea::StaticRegisterNativesURecastFilter_UseDefaultArea()
	{
	}
	IMPLEMENT_CLASS(URecastFilter_UseDefaultArea, 1407215682);
	void UNavLinkTrivial::StaticRegisterNativesUNavLinkTrivial()
	{
	}
	IMPLEMENT_CLASS(UNavLinkTrivial, 1563511561);
	void UNavNodeInterface::StaticRegisterNativesUNavNodeInterface()
	{
	}
	IMPLEMENT_CLASS(UNavNodeInterface, 3883741149);
class UScriptStruct* FPacketSimulationSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPacketSimulationSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPacketSimulationSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPacketSimulationSettings, Z_Construct_UPackage__Script_Engine(), TEXT("PacketSimulationSettings"), sizeof(FPacketSimulationSettings), Get_Z_Construct_UScriptStruct_FPacketSimulationSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPacketSimulationSettings(FPacketSimulationSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("PacketSimulationSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPacketSimulationSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFPacketSimulationSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PacketSimulationSettings")),new UScriptStruct::TCppStructOps<FPacketSimulationSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPacketSimulationSettings;
	void UNetDriver::StaticRegisterNativesUNetDriver()
	{
	}
	IMPLEMENT_CLASS(UNetDriver, 4094451330);
	void UPackageMapClient::StaticRegisterNativesUPackageMapClient()
	{
	}
	IMPLEMENT_CLASS(UPackageMapClient, 2894160298);
	void UPlayer::StaticRegisterNativesUPlayer()
	{
	}
	IMPLEMENT_CLASS(UPlayer, 543295420);
	void UNetConnection::StaticRegisterNativesUNetConnection()
	{
	}
	IMPLEMENT_CLASS(UNetConnection, 452391693);
	void UDemoNetConnection::StaticRegisterNativesUDemoNetConnection()
	{
	}
	IMPLEMENT_CLASS(UDemoNetConnection, 144026712);
class UScriptStruct* FRollbackNetStartupActorInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRollbackNetStartupActorInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRollbackNetStartupActorInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRollbackNetStartupActorInfo, Z_Construct_UPackage__Script_Engine(), TEXT("RollbackNetStartupActorInfo"), sizeof(FRollbackNetStartupActorInfo), Get_Z_Construct_UScriptStruct_FRollbackNetStartupActorInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRollbackNetStartupActorInfo(FRollbackNetStartupActorInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("RollbackNetStartupActorInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRollbackNetStartupActorInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFRollbackNetStartupActorInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RollbackNetStartupActorInfo")),new UScriptStruct::TCppStructOps<FRollbackNetStartupActorInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRollbackNetStartupActorInfo;
class UScriptStruct* FLevelNameAndTime::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelNameAndTime();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLevelNameAndTime_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLevelNameAndTime, Z_Construct_UPackage__Script_Engine(), TEXT("LevelNameAndTime"), sizeof(FLevelNameAndTime), Get_Z_Construct_UScriptStruct_FLevelNameAndTime_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLevelNameAndTime(FLevelNameAndTime::StaticStruct, TEXT("/Script/Engine"), TEXT("LevelNameAndTime"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLevelNameAndTime
{
	FScriptStruct_Engine_StaticRegisterNativesFLevelNameAndTime()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LevelNameAndTime")),new UScriptStruct::TCppStructOps<FLevelNameAndTime>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLevelNameAndTime;
	void UDemoNetDriver::StaticRegisterNativesUDemoNetDriver()
	{
	}
	IMPLEMENT_CLASS(UDemoNetDriver, 3804617741);
	void UObjectLibrary::StaticRegisterNativesUObjectLibrary()
	{
	}
	IMPLEMENT_CLASS(UObjectLibrary, 342916236);
	void UObjectReferencer::StaticRegisterNativesUObjectReferencer()
	{
	}
	IMPLEMENT_CLASS(UObjectReferencer, 4242862450);
	void UOnlineBlueprintCallProxyBase::StaticRegisterNativesUOnlineBlueprintCallProxyBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(UOnlineBlueprintCallProxyBase::StaticClass(), "Activate",(Native)&UOnlineBlueprintCallProxyBase::execActivate);
	}
	IMPLEMENT_CLASS(UOnlineBlueprintCallProxyBase, 1522554077);
	void UOnlineEngineInterface::StaticRegisterNativesUOnlineEngineInterface()
	{
	}
	IMPLEMENT_CLASS(UOnlineEngineInterface, 1902566144);
	void UOnlineSession::StaticRegisterNativesUOnlineSession()
	{
	}
	IMPLEMENT_CLASS(UOnlineSession, 3659154087);
static class UEnum* EEmitterRenderMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEmitterRenderMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEmitterRenderMode, Z_Construct_UPackage__Script_Engine(), TEXT("EEmitterRenderMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEmitterRenderMode(EEmitterRenderMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EEmitterRenderMode"), false, nullptr, nullptr);
static class UEnum* EParticleSubUVInterpMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSubUVInterpMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleSubUVInterpMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleSubUVInterpMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleSubUVInterpMethod(EParticleSubUVInterpMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleSubUVInterpMethod"), false, nullptr, nullptr);
static class UEnum* EParticleBurstMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleBurstMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleBurstMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleBurstMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleBurstMethod(EParticleBurstMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleBurstMethod"), false, nullptr, nullptr);
class UScriptStruct* FParticleBurst::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleBurst();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleBurst_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleBurst, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleBurst"), sizeof(FParticleBurst), Get_Z_Construct_UScriptStruct_FParticleBurst_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleBurst(FParticleBurst::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleBurst"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleBurst
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleBurst()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleBurst")),new UScriptStruct::TCppStructOps<FParticleBurst>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleBurst;
	void UParticleEmitter::StaticRegisterNativesUParticleEmitter()
	{
	}
	IMPLEMENT_CLASS(UParticleEmitter, 2849799979);
static class UEnum* EParticleScreenAlignment_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleScreenAlignment();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleScreenAlignment, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleScreenAlignment"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleScreenAlignment(EParticleScreenAlignment_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleScreenAlignment"), false, nullptr, nullptr);
	void UParticleSpriteEmitter::StaticRegisterNativesUParticleSpriteEmitter()
	{
	}
	IMPLEMENT_CLASS(UParticleSpriteEmitter, 8950093);
	void UParticleLODLevel::StaticRegisterNativesUParticleLODLevel()
	{
	}
	IMPLEMENT_CLASS(UParticleLODLevel, 4200148945);
static class UEnum* EParticleSystemInsignificanceReaction_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSystemInsignificanceReaction();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleSystemInsignificanceReaction, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleSystemInsignificanceReaction"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleSystemInsignificanceReaction(EParticleSystemInsignificanceReaction_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleSystemInsignificanceReaction"), false, nullptr, nullptr);
static class UEnum* EParticleSignificanceLevel_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSignificanceLevel();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleSignificanceLevel, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleSignificanceLevel"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleSignificanceLevel(EParticleSignificanceLevel_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleSignificanceLevel"), false, nullptr, nullptr);
static class UEnum* EParticleSourceSelectionMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSourceSelectionMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleSourceSelectionMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleSourceSelectionMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleSourceSelectionMethod(EParticleSourceSelectionMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleSourceSelectionMethod"), false, nullptr, nullptr);
static class UEnum* EModuleType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EModuleType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EModuleType, Z_Construct_UPackage__Script_Engine(), TEXT("EModuleType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EModuleType(EModuleType_StaticEnum, TEXT("/Script/Engine"), TEXT("EModuleType"), false, nullptr, nullptr);
class UScriptStruct* FParticleRandomSeedInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleRandomSeedInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleRandomSeedInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleRandomSeedInfo, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleRandomSeedInfo"), sizeof(FParticleRandomSeedInfo), Get_Z_Construct_UScriptStruct_FParticleRandomSeedInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleRandomSeedInfo(FParticleRandomSeedInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleRandomSeedInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleRandomSeedInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleRandomSeedInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleRandomSeedInfo")),new UScriptStruct::TCppStructOps<FParticleRandomSeedInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleRandomSeedInfo;
class UScriptStruct* FParticleCurvePair::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleCurvePair();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleCurvePair_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleCurvePair, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleCurvePair"), sizeof(FParticleCurvePair), Get_Z_Construct_UScriptStruct_FParticleCurvePair_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleCurvePair(FParticleCurvePair::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleCurvePair"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleCurvePair
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleCurvePair()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleCurvePair")),new UScriptStruct::TCppStructOps<FParticleCurvePair>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleCurvePair;
	void UParticleModule::StaticRegisterNativesUParticleModule()
	{
	}
	IMPLEMENT_CLASS(UParticleModule, 3402691386);
	void UParticleModuleAccelerationBase::StaticRegisterNativesUParticleModuleAccelerationBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAccelerationBase, 913405593);
	void UParticleModuleAcceleration::StaticRegisterNativesUParticleModuleAcceleration()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAcceleration, 763785598);
	void UParticleModuleAccelerationConstant::StaticRegisterNativesUParticleModuleAccelerationConstant()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAccelerationConstant, 2232114652);
	void UParticleModuleAccelerationDrag::StaticRegisterNativesUParticleModuleAccelerationDrag()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAccelerationDrag, 1130435199);
	void UParticleModuleAccelerationDragScaleOverLife::StaticRegisterNativesUParticleModuleAccelerationDragScaleOverLife()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAccelerationDragScaleOverLife, 190355451);
	void UParticleModuleAccelerationOverLifetime::StaticRegisterNativesUParticleModuleAccelerationOverLifetime()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAccelerationOverLifetime, 945179047);
	void UParticleModuleAttractorBase::StaticRegisterNativesUParticleModuleAttractorBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAttractorBase, 2813038022);
	void UParticleModuleAttractorLine::StaticRegisterNativesUParticleModuleAttractorLine()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAttractorLine, 1947275366);
static class UEnum* EAttractorParticleSelectionMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttractorParticleSelectionMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAttractorParticleSelectionMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EAttractorParticleSelectionMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAttractorParticleSelectionMethod(EAttractorParticleSelectionMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EAttractorParticleSelectionMethod"), false, nullptr, nullptr);
	void UParticleModuleAttractorParticle::StaticRegisterNativesUParticleModuleAttractorParticle()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAttractorParticle, 731794990);
	void UParticleModuleAttractorPoint::StaticRegisterNativesUParticleModuleAttractorPoint()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAttractorPoint, 1488321833);
	void UParticleModuleAttractorPointGravity::StaticRegisterNativesUParticleModuleAttractorPointGravity()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleAttractorPointGravity, 1850971979);
static class UEnum* Beam2SourceTargetTangentMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_Beam2SourceTargetTangentMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_Beam2SourceTargetTangentMethod, Z_Construct_UPackage__Script_Engine(), TEXT("Beam2SourceTargetTangentMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_Beam2SourceTargetTangentMethod(Beam2SourceTargetTangentMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("Beam2SourceTargetTangentMethod"), false, nullptr, nullptr);
static class UEnum* Beam2SourceTargetMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_Beam2SourceTargetMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_Beam2SourceTargetMethod, Z_Construct_UPackage__Script_Engine(), TEXT("Beam2SourceTargetMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_Beam2SourceTargetMethod(Beam2SourceTargetMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("Beam2SourceTargetMethod"), false, nullptr, nullptr);
	void UParticleModuleBeamBase::StaticRegisterNativesUParticleModuleBeamBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleBeamBase, 2629461360);
static class UEnum* BeamModifierType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_BeamModifierType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_BeamModifierType, Z_Construct_UPackage__Script_Engine(), TEXT("BeamModifierType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_BeamModifierType(BeamModifierType_StaticEnum, TEXT("/Script/Engine"), TEXT("BeamModifierType"), false, nullptr, nullptr);
class UScriptStruct* FBeamModifierOptions::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBeamModifierOptions();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBeamModifierOptions_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBeamModifierOptions, Z_Construct_UPackage__Script_Engine(), TEXT("BeamModifierOptions"), sizeof(FBeamModifierOptions), Get_Z_Construct_UScriptStruct_FBeamModifierOptions_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBeamModifierOptions(FBeamModifierOptions::StaticStruct, TEXT("/Script/Engine"), TEXT("BeamModifierOptions"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBeamModifierOptions
{
	FScriptStruct_Engine_StaticRegisterNativesFBeamModifierOptions()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BeamModifierOptions")),new UScriptStruct::TCppStructOps<FBeamModifierOptions>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBeamModifierOptions;
	void UParticleModuleBeamModifier::StaticRegisterNativesUParticleModuleBeamModifier()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleBeamModifier, 3438738565);
	void UParticleModuleBeamNoise::StaticRegisterNativesUParticleModuleBeamNoise()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleBeamNoise, 625815701);
	void UParticleModuleBeamSource::StaticRegisterNativesUParticleModuleBeamSource()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleBeamSource, 3356764247);
	void UParticleModuleBeamTarget::StaticRegisterNativesUParticleModuleBeamTarget()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleBeamTarget, 858366481);
	void UParticleModuleCameraBase::StaticRegisterNativesUParticleModuleCameraBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleCameraBase, 1053311500);
static class UEnum* EParticleCameraOffsetUpdateMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleCameraOffsetUpdateMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleCameraOffsetUpdateMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleCameraOffsetUpdateMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleCameraOffsetUpdateMethod(EParticleCameraOffsetUpdateMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleCameraOffsetUpdateMethod"), false, nullptr, nullptr);
	void UParticleModuleCameraOffset::StaticRegisterNativesUParticleModuleCameraOffset()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleCameraOffset, 2422133001);
static class UEnum* EParticleCollisionComplete_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleCollisionComplete();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleCollisionComplete, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleCollisionComplete"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleCollisionComplete(EParticleCollisionComplete_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleCollisionComplete"), false, nullptr, nullptr);
	void UParticleModuleCollisionBase::StaticRegisterNativesUParticleModuleCollisionBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleCollisionBase, 3438063775);
	void UParticleModuleCollision::StaticRegisterNativesUParticleModuleCollision()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleCollision, 1991365644);
static class UEnum* EParticleCollisionResponse_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleCollisionResponse();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleCollisionResponse, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleCollisionResponse"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleCollisionResponse(EParticleCollisionResponse_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleCollisionResponse"), false, nullptr, nullptr);
	void UParticleModuleCollisionGPU::StaticRegisterNativesUParticleModuleCollisionGPU()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleCollisionGPU, 2855891688);
	void UParticleModuleColorBase::StaticRegisterNativesUParticleModuleColorBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleColorBase, 3021419533);
	void UParticleModuleColor::StaticRegisterNativesUParticleModuleColor()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleColor, 319175055);
	void UParticleModuleColor_Seeded::StaticRegisterNativesUParticleModuleColor_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleColor_Seeded, 2730351094);
	void UParticleModuleColorOverLife::StaticRegisterNativesUParticleModuleColorOverLife()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleColorOverLife, 1676659944);
	void UParticleModuleColorScaleOverLife::StaticRegisterNativesUParticleModuleColorScaleOverLife()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleColorScaleOverLife, 2061534899);
	void UParticleModuleEventBase::StaticRegisterNativesUParticleModuleEventBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleEventBase, 4048357010);
class UScriptStruct* FParticleEvent_GenerateInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleEvent_GenerateInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleEvent_GenerateInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleEvent_GenerateInfo, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleEvent_GenerateInfo"), sizeof(FParticleEvent_GenerateInfo), Get_Z_Construct_UScriptStruct_FParticleEvent_GenerateInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleEvent_GenerateInfo(FParticleEvent_GenerateInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleEvent_GenerateInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleEvent_GenerateInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleEvent_GenerateInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleEvent_GenerateInfo")),new UScriptStruct::TCppStructOps<FParticleEvent_GenerateInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleEvent_GenerateInfo;
	void UParticleModuleEventGenerator::StaticRegisterNativesUParticleModuleEventGenerator()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleEventGenerator, 1388477098);
	void UParticleModuleEventReceiverBase::StaticRegisterNativesUParticleModuleEventReceiverBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleEventReceiverBase, 24052373);
	void UParticleModuleEventReceiverKillParticles::StaticRegisterNativesUParticleModuleEventReceiverKillParticles()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleEventReceiverKillParticles, 3857072225);
	void UParticleModuleEventReceiverSpawn::StaticRegisterNativesUParticleModuleEventReceiverSpawn()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleEventReceiverSpawn, 236646650);
	void UParticleModuleKillBase::StaticRegisterNativesUParticleModuleKillBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleKillBase, 413271628);
	void UParticleModuleKillBox::StaticRegisterNativesUParticleModuleKillBox()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleKillBox, 3613080017);
	void UParticleModuleKillHeight::StaticRegisterNativesUParticleModuleKillHeight()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleKillHeight, 147249427);
	void UParticleModuleLifetimeBase::StaticRegisterNativesUParticleModuleLifetimeBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLifetimeBase, 2224572787);
	void UParticleModuleLifetime::StaticRegisterNativesUParticleModuleLifetime()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLifetime, 2251730061);
	void UParticleModuleLifetime_Seeded::StaticRegisterNativesUParticleModuleLifetime_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLifetime_Seeded, 3992192414);
	void UParticleModuleLightBase::StaticRegisterNativesUParticleModuleLightBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLightBase, 4271561792);
	void UParticleModuleLight::StaticRegisterNativesUParticleModuleLight()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLight, 2331792662);
	void UParticleModuleLight_Seeded::StaticRegisterNativesUParticleModuleLight_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLight_Seeded, 3178844877);
	void UParticleModuleLocationBase::StaticRegisterNativesUParticleModuleLocationBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationBase, 3272290257);
	void UParticleModuleLocation::StaticRegisterNativesUParticleModuleLocation()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocation, 3682752382);
	void UParticleModuleLocation_Seeded::StaticRegisterNativesUParticleModuleLocation_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocation_Seeded, 1319196677);
	void UParticleModuleLocationWorldOffset::StaticRegisterNativesUParticleModuleLocationWorldOffset()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationWorldOffset, 570857638);
	void UParticleModuleLocationWorldOffset_Seeded::StaticRegisterNativesUParticleModuleLocationWorldOffset_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationWorldOffset_Seeded, 887245806);
static class UEnum* ELocationBoneSocketSelectionMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELocationBoneSocketSelectionMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELocationBoneSocketSelectionMethod, Z_Construct_UPackage__Script_Engine(), TEXT("ELocationBoneSocketSelectionMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELocationBoneSocketSelectionMethod(ELocationBoneSocketSelectionMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("ELocationBoneSocketSelectionMethod"), false, nullptr, nullptr);
static class UEnum* ELocationBoneSocketSource_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELocationBoneSocketSource();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELocationBoneSocketSource, Z_Construct_UPackage__Script_Engine(), TEXT("ELocationBoneSocketSource"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELocationBoneSocketSource(ELocationBoneSocketSource_StaticEnum, TEXT("/Script/Engine"), TEXT("ELocationBoneSocketSource"), false, nullptr, nullptr);
class UScriptStruct* FLocationBoneSocketInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLocationBoneSocketInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FLocationBoneSocketInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FLocationBoneSocketInfo, Z_Construct_UPackage__Script_Engine(), TEXT("LocationBoneSocketInfo"), sizeof(FLocationBoneSocketInfo), Get_Z_Construct_UScriptStruct_FLocationBoneSocketInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FLocationBoneSocketInfo(FLocationBoneSocketInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("LocationBoneSocketInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFLocationBoneSocketInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFLocationBoneSocketInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("LocationBoneSocketInfo")),new UScriptStruct::TCppStructOps<FLocationBoneSocketInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFLocationBoneSocketInfo;
	void UParticleModuleLocationBoneSocket::StaticRegisterNativesUParticleModuleLocationBoneSocket()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationBoneSocket, 3086914661);
	void UParticleModuleLocationDirect::StaticRegisterNativesUParticleModuleLocationDirect()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationDirect, 653363466);
static class UEnum* ELocationEmitterSelectionMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELocationEmitterSelectionMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELocationEmitterSelectionMethod, Z_Construct_UPackage__Script_Engine(), TEXT("ELocationEmitterSelectionMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELocationEmitterSelectionMethod(ELocationEmitterSelectionMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("ELocationEmitterSelectionMethod"), false, nullptr, nullptr);
	void UParticleModuleLocationEmitter::StaticRegisterNativesUParticleModuleLocationEmitter()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationEmitter, 3880772303);
	void UParticleModuleLocationEmitterDirect::StaticRegisterNativesUParticleModuleLocationEmitterDirect()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationEmitterDirect, 1584438025);
	void UParticleModuleLocationPrimitiveBase::StaticRegisterNativesUParticleModuleLocationPrimitiveBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationPrimitiveBase, 845026557);
static class UEnum* CylinderHeightAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_CylinderHeightAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_CylinderHeightAxis, Z_Construct_UPackage__Script_Engine(), TEXT("CylinderHeightAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_CylinderHeightAxis(CylinderHeightAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("CylinderHeightAxis"), false, nullptr, nullptr);
	void UParticleModuleLocationPrimitiveCylinder::StaticRegisterNativesUParticleModuleLocationPrimitiveCylinder()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationPrimitiveCylinder, 212361808);
	void UParticleModuleLocationPrimitiveCylinder_Seeded::StaticRegisterNativesUParticleModuleLocationPrimitiveCylinder_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationPrimitiveCylinder_Seeded, 677742030);
	void UParticleModuleLocationPrimitiveSphere::StaticRegisterNativesUParticleModuleLocationPrimitiveSphere()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationPrimitiveSphere, 1315469201);
	void UParticleModuleLocationPrimitiveSphere_Seeded::StaticRegisterNativesUParticleModuleLocationPrimitiveSphere_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationPrimitiveSphere_Seeded, 1872194469);
	void UParticleModuleLocationPrimitiveTriangle::StaticRegisterNativesUParticleModuleLocationPrimitiveTriangle()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationPrimitiveTriangle, 3210370681);
static class UEnum* ELocationSkelVertSurfaceSource_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELocationSkelVertSurfaceSource();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELocationSkelVertSurfaceSource, Z_Construct_UPackage__Script_Engine(), TEXT("ELocationSkelVertSurfaceSource"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELocationSkelVertSurfaceSource(ELocationSkelVertSurfaceSource_StaticEnum, TEXT("/Script/Engine"), TEXT("ELocationSkelVertSurfaceSource"), false, nullptr, nullptr);
	void UParticleModuleLocationSkelVertSurface::StaticRegisterNativesUParticleModuleLocationSkelVertSurface()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleLocationSkelVertSurface, 4016861043);
	void UParticleModulePivotOffset::StaticRegisterNativesUParticleModulePivotOffset()
	{
	}
	IMPLEMENT_CLASS(UParticleModulePivotOffset, 1774314347);
	void UParticleModuleSourceMovement::StaticRegisterNativesUParticleModuleSourceMovement()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSourceMovement, 4049435374);
	void UParticleModuleMaterialBase::StaticRegisterNativesUParticleModuleMaterialBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleMaterialBase, 932767498);
	void UParticleModuleMeshMaterial::StaticRegisterNativesUParticleModuleMeshMaterial()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleMeshMaterial, 2392930197);
	void UParticleModuleOrbitBase::StaticRegisterNativesUParticleModuleOrbitBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleOrbitBase, 4127189546);
static class UEnum* EOrbitChainMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOrbitChainMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EOrbitChainMode, Z_Construct_UPackage__Script_Engine(), TEXT("EOrbitChainMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EOrbitChainMode(EOrbitChainMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EOrbitChainMode"), false, nullptr, nullptr);
class UScriptStruct* FOrbitOptions::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FOrbitOptions();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FOrbitOptions_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FOrbitOptions, Z_Construct_UPackage__Script_Engine(), TEXT("OrbitOptions"), sizeof(FOrbitOptions), Get_Z_Construct_UScriptStruct_FOrbitOptions_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FOrbitOptions(FOrbitOptions::StaticStruct, TEXT("/Script/Engine"), TEXT("OrbitOptions"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFOrbitOptions
{
	FScriptStruct_Engine_StaticRegisterNativesFOrbitOptions()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("OrbitOptions")),new UScriptStruct::TCppStructOps<FOrbitOptions>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFOrbitOptions;
	void UParticleModuleOrbit::StaticRegisterNativesUParticleModuleOrbit()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleOrbit, 423489916);
	void UParticleModuleOrientationBase::StaticRegisterNativesUParticleModuleOrientationBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleOrientationBase, 3268576430);
static class UEnum* EParticleAxisLock_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleAxisLock();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleAxisLock, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleAxisLock"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleAxisLock(EParticleAxisLock_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleAxisLock"), false, nullptr, nullptr);
	void UParticleModuleOrientationAxisLock::StaticRegisterNativesUParticleModuleOrientationAxisLock()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleOrientationAxisLock, 4148129606);
	void UParticleModuleParameterBase::StaticRegisterNativesUParticleModuleParameterBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleParameterBase, 3809261361);
static class UEnum* EEmitterDynamicParameterValue_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEmitterDynamicParameterValue();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEmitterDynamicParameterValue, Z_Construct_UPackage__Script_Engine(), TEXT("EEmitterDynamicParameterValue"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEmitterDynamicParameterValue(EEmitterDynamicParameterValue_StaticEnum, TEXT("/Script/Engine"), TEXT("EEmitterDynamicParameterValue"), false, nullptr, nullptr);
class UScriptStruct* FEmitterDynamicParameter::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEmitterDynamicParameter();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FEmitterDynamicParameter_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FEmitterDynamicParameter, Z_Construct_UPackage__Script_Engine(), TEXT("EmitterDynamicParameter"), sizeof(FEmitterDynamicParameter), Get_Z_Construct_UScriptStruct_FEmitterDynamicParameter_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FEmitterDynamicParameter(FEmitterDynamicParameter::StaticStruct, TEXT("/Script/Engine"), TEXT("EmitterDynamicParameter"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFEmitterDynamicParameter
{
	FScriptStruct_Engine_StaticRegisterNativesFEmitterDynamicParameter()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("EmitterDynamicParameter")),new UScriptStruct::TCppStructOps<FEmitterDynamicParameter>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFEmitterDynamicParameter;
	void UParticleModuleParameterDynamic::StaticRegisterNativesUParticleModuleParameterDynamic()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleParameterDynamic, 1377598755);
	void UParticleModuleParameterDynamic_Seeded::StaticRegisterNativesUParticleModuleParameterDynamic_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleParameterDynamic_Seeded, 1511368297);
static class UEnum* EOpacitySourceMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOpacitySourceMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EOpacitySourceMode, Z_Construct_UPackage__Script_Engine(), TEXT("EOpacitySourceMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EOpacitySourceMode(EOpacitySourceMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EOpacitySourceMode"), false, nullptr, nullptr);
static class UEnum* ESubUVBoundingVertexCount_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESubUVBoundingVertexCount();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESubUVBoundingVertexCount, Z_Construct_UPackage__Script_Engine(), TEXT("ESubUVBoundingVertexCount"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESubUVBoundingVertexCount(ESubUVBoundingVertexCount_StaticEnum, TEXT("/Script/Engine"), TEXT("ESubUVBoundingVertexCount"), false, nullptr, nullptr);
	void USubUVAnimation::StaticRegisterNativesUSubUVAnimation()
	{
	}
	IMPLEMENT_CLASS(USubUVAnimation, 3340084779);
static class UEnum* EEmitterNormalsMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEmitterNormalsMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEmitterNormalsMode, Z_Construct_UPackage__Script_Engine(), TEXT("EEmitterNormalsMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEmitterNormalsMode(EEmitterNormalsMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EEmitterNormalsMode"), false, nullptr, nullptr);
static class UEnum* EParticleSortMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSortMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleSortMode, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleSortMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleSortMode(EParticleSortMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleSortMode"), false, nullptr, nullptr);
static class UEnum* EParticleUVFlipMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleUVFlipMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EParticleUVFlipMode, Z_Construct_UPackage__Script_Engine(), TEXT("EParticleUVFlipMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EParticleUVFlipMode(EParticleUVFlipMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EParticleUVFlipMode"), false, nullptr, nullptr);
	void UParticleModuleRequired::StaticRegisterNativesUParticleModuleRequired()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleRequired, 324932317);
	void UParticleModuleRotationBase::StaticRegisterNativesUParticleModuleRotationBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleRotationBase, 2485538768);
	void UParticleModuleMeshRotation::StaticRegisterNativesUParticleModuleMeshRotation()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleMeshRotation, 2757999823);
	void UParticleModuleMeshRotation_Seeded::StaticRegisterNativesUParticleModuleMeshRotation_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleMeshRotation_Seeded, 519781574);
	void UParticleModuleRotation::StaticRegisterNativesUParticleModuleRotation()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleRotation, 431030014);
	void UParticleModuleRotation_Seeded::StaticRegisterNativesUParticleModuleRotation_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleRotation_Seeded, 4075680092);
	void UParticleModuleRotationOverLifetime::StaticRegisterNativesUParticleModuleRotationOverLifetime()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleRotationOverLifetime, 4239782950);
	void UParticleModuleRotationRateBase::StaticRegisterNativesUParticleModuleRotationRateBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleRotationRateBase, 2689568287);
	void UParticleModuleMeshRotationRate::StaticRegisterNativesUParticleModuleMeshRotationRate()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleMeshRotationRate, 4088340117);
	void UParticleModuleMeshRotationRate_Seeded::StaticRegisterNativesUParticleModuleMeshRotationRate_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleMeshRotationRate_Seeded, 1323028158);
	void UParticleModuleMeshRotationRateMultiplyLife::StaticRegisterNativesUParticleModuleMeshRotationRateMultiplyLife()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleMeshRotationRateMultiplyLife, 2564586215);
	void UParticleModuleMeshRotationRateOverLife::StaticRegisterNativesUParticleModuleMeshRotationRateOverLife()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleMeshRotationRateOverLife, 3389905690);
	void UParticleModuleRotationRate::StaticRegisterNativesUParticleModuleRotationRate()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleRotationRate, 283221124);
	void UParticleModuleRotationRate_Seeded::StaticRegisterNativesUParticleModuleRotationRate_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleRotationRate_Seeded, 1646093319);
	void UParticleModuleRotationRateMultiplyLife::StaticRegisterNativesUParticleModuleRotationRateMultiplyLife()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleRotationRateMultiplyLife, 1612623309);
	void UParticleModuleSizeBase::StaticRegisterNativesUParticleModuleSizeBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSizeBase, 303620786);
	void UParticleModuleSize::StaticRegisterNativesUParticleModuleSize()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSize, 3258945648);
	void UParticleModuleSize_Seeded::StaticRegisterNativesUParticleModuleSize_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSize_Seeded, 218354962);
	void UParticleModuleSizeMultiplyLife::StaticRegisterNativesUParticleModuleSizeMultiplyLife()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSizeMultiplyLife, 3026482001);
	void UParticleModuleSizeScale::StaticRegisterNativesUParticleModuleSizeScale()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSizeScale, 1039699538);
	void UParticleModuleSizeScaleBySpeed::StaticRegisterNativesUParticleModuleSizeScaleBySpeed()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSizeScaleBySpeed, 1594931060);
	void UParticleModuleSpawnBase::StaticRegisterNativesUParticleModuleSpawnBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSpawnBase, 3753186127);
	void UParticleModuleSpawn::StaticRegisterNativesUParticleModuleSpawn()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSpawn, 92577687);
	void UParticleModuleSpawnPerUnit::StaticRegisterNativesUParticleModuleSpawnPerUnit()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSpawnPerUnit, 202843399);
	void UParticleModuleSubUVBase::StaticRegisterNativesUParticleModuleSubUVBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSubUVBase, 1188022078);
	void UParticleModuleSubUV::StaticRegisterNativesUParticleModuleSubUV()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSubUV, 1320752776);
	void UParticleModuleSubUVMovie::StaticRegisterNativesUParticleModuleSubUVMovie()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleSubUVMovie, 3904187475);
	void UParticleModuleTrailBase::StaticRegisterNativesUParticleModuleTrailBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleTrailBase, 1376193695);
static class UEnum* ETrail2SourceMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrail2SourceMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETrail2SourceMethod, Z_Construct_UPackage__Script_Engine(), TEXT("ETrail2SourceMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETrail2SourceMethod(ETrail2SourceMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("ETrail2SourceMethod"), false, nullptr, nullptr);
	void UParticleModuleTrailSource::StaticRegisterNativesUParticleModuleTrailSource()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleTrailSource, 3421536871);
	void UParticleModuleTypeDataBase::StaticRegisterNativesUParticleModuleTypeDataBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleTypeDataBase, 1303543213);
	void UParticleModuleTypeDataAnimTrail::StaticRegisterNativesUParticleModuleTypeDataAnimTrail()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleTypeDataAnimTrail, 1898831473);
static class UEnum* EBeamTaperMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBeamTaperMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBeamTaperMethod, Z_Construct_UPackage__Script_Engine(), TEXT("EBeamTaperMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBeamTaperMethod(EBeamTaperMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("EBeamTaperMethod"), false, nullptr, nullptr);
static class UEnum* EBeam2Method_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBeam2Method();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EBeam2Method, Z_Construct_UPackage__Script_Engine(), TEXT("EBeam2Method"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EBeam2Method(EBeam2Method_StaticEnum, TEXT("/Script/Engine"), TEXT("EBeam2Method"), false, nullptr, nullptr);
class UScriptStruct* FBeamTargetData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBeamTargetData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FBeamTargetData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FBeamTargetData, Z_Construct_UPackage__Script_Engine(), TEXT("BeamTargetData"), sizeof(FBeamTargetData), Get_Z_Construct_UScriptStruct_FBeamTargetData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FBeamTargetData(FBeamTargetData::StaticStruct, TEXT("/Script/Engine"), TEXT("BeamTargetData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFBeamTargetData
{
	FScriptStruct_Engine_StaticRegisterNativesFBeamTargetData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("BeamTargetData")),new UScriptStruct::TCppStructOps<FBeamTargetData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFBeamTargetData;
	void UParticleModuleTypeDataBeam2::StaticRegisterNativesUParticleModuleTypeDataBeam2()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleTypeDataBeam2, 1361885237);
class UScriptStruct* FGPUSpriteResourceData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGPUSpriteResourceData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FGPUSpriteResourceData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGPUSpriteResourceData, Z_Construct_UPackage__Script_Engine(), TEXT("GPUSpriteResourceData"), sizeof(FGPUSpriteResourceData), Get_Z_Construct_UScriptStruct_FGPUSpriteResourceData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGPUSpriteResourceData(FGPUSpriteResourceData::StaticStruct, TEXT("/Script/Engine"), TEXT("GPUSpriteResourceData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFGPUSpriteResourceData
{
	FScriptStruct_Engine_StaticRegisterNativesFGPUSpriteResourceData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GPUSpriteResourceData")),new UScriptStruct::TCppStructOps<FGPUSpriteResourceData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFGPUSpriteResourceData;
class UScriptStruct* FGPUSpriteEmitterInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGPUSpriteEmitterInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FGPUSpriteEmitterInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGPUSpriteEmitterInfo, Z_Construct_UPackage__Script_Engine(), TEXT("GPUSpriteEmitterInfo"), sizeof(FGPUSpriteEmitterInfo), Get_Z_Construct_UScriptStruct_FGPUSpriteEmitterInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGPUSpriteEmitterInfo(FGPUSpriteEmitterInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("GPUSpriteEmitterInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFGPUSpriteEmitterInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFGPUSpriteEmitterInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GPUSpriteEmitterInfo")),new UScriptStruct::TCppStructOps<FGPUSpriteEmitterInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFGPUSpriteEmitterInfo;
class UScriptStruct* FGPUSpriteLocalVectorFieldInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGPUSpriteLocalVectorFieldInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FGPUSpriteLocalVectorFieldInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FGPUSpriteLocalVectorFieldInfo, Z_Construct_UPackage__Script_Engine(), TEXT("GPUSpriteLocalVectorFieldInfo"), sizeof(FGPUSpriteLocalVectorFieldInfo), Get_Z_Construct_UScriptStruct_FGPUSpriteLocalVectorFieldInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FGPUSpriteLocalVectorFieldInfo(FGPUSpriteLocalVectorFieldInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("GPUSpriteLocalVectorFieldInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFGPUSpriteLocalVectorFieldInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFGPUSpriteLocalVectorFieldInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("GPUSpriteLocalVectorFieldInfo")),new UScriptStruct::TCppStructOps<FGPUSpriteLocalVectorFieldInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFGPUSpriteLocalVectorFieldInfo;
	void UParticleModuleTypeDataGpu::StaticRegisterNativesUParticleModuleTypeDataGpu()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleTypeDataGpu, 939989095);
static class UEnum* EMeshCameraFacingOptions_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshCameraFacingOptions();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMeshCameraFacingOptions, Z_Construct_UPackage__Script_Engine(), TEXT("EMeshCameraFacingOptions"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMeshCameraFacingOptions(EMeshCameraFacingOptions_StaticEnum, TEXT("/Script/Engine"), TEXT("EMeshCameraFacingOptions"), false, nullptr, nullptr);
static class UEnum* EMeshCameraFacingUpAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshCameraFacingUpAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMeshCameraFacingUpAxis, Z_Construct_UPackage__Script_Engine(), TEXT("EMeshCameraFacingUpAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMeshCameraFacingUpAxis(EMeshCameraFacingUpAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("EMeshCameraFacingUpAxis"), false, nullptr, nullptr);
static class UEnum* EMeshScreenAlignment_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshScreenAlignment();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMeshScreenAlignment, Z_Construct_UPackage__Script_Engine(), TEXT("EMeshScreenAlignment"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMeshScreenAlignment(EMeshScreenAlignment_StaticEnum, TEXT("/Script/Engine"), TEXT("EMeshScreenAlignment"), false, nullptr, nullptr);
	void UParticleModuleTypeDataMesh::StaticRegisterNativesUParticleModuleTypeDataMesh()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleTypeDataMesh, 2940398536);
static class UEnum* ETrailsRenderAxisOption_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrailsRenderAxisOption();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETrailsRenderAxisOption, Z_Construct_UPackage__Script_Engine(), TEXT("ETrailsRenderAxisOption"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETrailsRenderAxisOption(ETrailsRenderAxisOption_StaticEnum, TEXT("/Script/Engine"), TEXT("ETrailsRenderAxisOption"), false, nullptr, nullptr);
	void UParticleModuleTypeDataRibbon::StaticRegisterNativesUParticleModuleTypeDataRibbon()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleTypeDataRibbon, 1808178508);
	void UParticleModuleVectorFieldBase::StaticRegisterNativesUParticleModuleVectorFieldBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVectorFieldBase, 2785287122);
	void UParticleModuleVectorFieldGlobal::StaticRegisterNativesUParticleModuleVectorFieldGlobal()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVectorFieldGlobal, 1131788678);
	void UParticleModuleVectorFieldLocal::StaticRegisterNativesUParticleModuleVectorFieldLocal()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVectorFieldLocal, 3702165143);
	void UParticleModuleVectorFieldRotation::StaticRegisterNativesUParticleModuleVectorFieldRotation()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVectorFieldRotation, 1852175076);
	void UParticleModuleVectorFieldRotationRate::StaticRegisterNativesUParticleModuleVectorFieldRotationRate()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVectorFieldRotationRate, 2925338671);
	void UParticleModuleVectorFieldScale::StaticRegisterNativesUParticleModuleVectorFieldScale()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVectorFieldScale, 2344120922);
	void UParticleModuleVectorFieldScaleOverLife::StaticRegisterNativesUParticleModuleVectorFieldScaleOverLife()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVectorFieldScaleOverLife, 313858514);
	void UParticleModuleVelocityBase::StaticRegisterNativesUParticleModuleVelocityBase()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVelocityBase, 1014840389);
	void UParticleModuleVelocity::StaticRegisterNativesUParticleModuleVelocity()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVelocity, 3718259809);
	void UParticleModuleVelocity_Seeded::StaticRegisterNativesUParticleModuleVelocity_Seeded()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVelocity_Seeded, 3485013072);
	void UParticleModuleVelocityCone::StaticRegisterNativesUParticleModuleVelocityCone()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVelocityCone, 3485974679);
	void UParticleModuleVelocityInheritParent::StaticRegisterNativesUParticleModuleVelocityInheritParent()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVelocityInheritParent, 3792442558);
	void UParticleModuleVelocityOverLifetime::StaticRegisterNativesUParticleModuleVelocityOverLifetime()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleVelocityOverLifetime, 4013921843);
	void UParticleModuleEventSendToGame::StaticRegisterNativesUParticleModuleEventSendToGame()
	{
	}
	IMPLEMENT_CLASS(UParticleModuleEventSendToGame, 1351966440);
class UScriptStruct* FParticleSystemReplayFrame::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleSystemReplayFrame();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleSystemReplayFrame_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleSystemReplayFrame, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleSystemReplayFrame"), sizeof(FParticleSystemReplayFrame), Get_Z_Construct_UScriptStruct_FParticleSystemReplayFrame_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleSystemReplayFrame(FParticleSystemReplayFrame::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleSystemReplayFrame"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleSystemReplayFrame
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleSystemReplayFrame()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleSystemReplayFrame")),new UScriptStruct::TCppStructOps<FParticleSystemReplayFrame>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleSystemReplayFrame;
class UScriptStruct* FParticleEmitterReplayFrame::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleEmitterReplayFrame();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FParticleEmitterReplayFrame_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FParticleEmitterReplayFrame, Z_Construct_UPackage__Script_Engine(), TEXT("ParticleEmitterReplayFrame"), sizeof(FParticleEmitterReplayFrame), Get_Z_Construct_UScriptStruct_FParticleEmitterReplayFrame_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FParticleEmitterReplayFrame(FParticleEmitterReplayFrame::StaticStruct, TEXT("/Script/Engine"), TEXT("ParticleEmitterReplayFrame"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFParticleEmitterReplayFrame
{
	FScriptStruct_Engine_StaticRegisterNativesFParticleEmitterReplayFrame()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ParticleEmitterReplayFrame")),new UScriptStruct::TCppStructOps<FParticleEmitterReplayFrame>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFParticleEmitterReplayFrame;
	void UParticleSystemReplay::StaticRegisterNativesUParticleSystemReplay()
	{
	}
	IMPLEMENT_CLASS(UParticleSystemReplay, 279237747);
	void UDemoPendingNetGame::StaticRegisterNativesUDemoPendingNetGame()
	{
	}
	IMPLEMENT_CLASS(UDemoPendingNetGame, 3669876483);
class UScriptStruct* FTireFrictionScalePair::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTireFrictionScalePair();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTireFrictionScalePair_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTireFrictionScalePair, Z_Construct_UPackage__Script_Engine(), TEXT("TireFrictionScalePair"), sizeof(FTireFrictionScalePair), Get_Z_Construct_UScriptStruct_FTireFrictionScalePair_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTireFrictionScalePair(FTireFrictionScalePair::StaticStruct, TEXT("/Script/Engine"), TEXT("TireFrictionScalePair"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTireFrictionScalePair
{
	FScriptStruct_Engine_StaticRegisterNativesFTireFrictionScalePair()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TireFrictionScalePair")),new UScriptStruct::TCppStructOps<FTireFrictionScalePair>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTireFrictionScalePair;
	void UPhysicalMaterial::StaticRegisterNativesUPhysicalMaterial()
	{
	}
	IMPLEMENT_CLASS(UPhysicalMaterial, 2282997421);
	void UDEPRECATED_PhysicalMaterialPropertyBase::StaticRegisterNativesUDEPRECATED_PhysicalMaterialPropertyBase()
	{
	}
	IMPLEMENT_CLASS(UDEPRECATED_PhysicalMaterialPropertyBase, 1509422372);
	void UPhysicsCollisionHandler::StaticRegisterNativesUPhysicsCollisionHandler()
	{
	}
	IMPLEMENT_CLASS(UPhysicsCollisionHandler, 1049647288);
class UScriptStruct* FPhysicsConstraintProfileHandle::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPhysicsConstraintProfileHandle();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPhysicsConstraintProfileHandle_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPhysicsConstraintProfileHandle, Z_Construct_UPackage__Script_Engine(), TEXT("PhysicsConstraintProfileHandle"), sizeof(FPhysicsConstraintProfileHandle), Get_Z_Construct_UScriptStruct_FPhysicsConstraintProfileHandle_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPhysicsConstraintProfileHandle(FPhysicsConstraintProfileHandle::StaticStruct, TEXT("/Script/Engine"), TEXT("PhysicsConstraintProfileHandle"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPhysicsConstraintProfileHandle
{
	FScriptStruct_Engine_StaticRegisterNativesFPhysicsConstraintProfileHandle()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PhysicsConstraintProfileHandle")),new UScriptStruct::TCppStructOps<FPhysicsConstraintProfileHandle>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPhysicsConstraintProfileHandle;
	void UPhysicsConstraintTemplate::StaticRegisterNativesUPhysicsConstraintTemplate()
	{
	}
	IMPLEMENT_CLASS(UPhysicsConstraintTemplate, 3044871070);
	void UPhysicsSerializer::StaticRegisterNativesUPhysicsSerializer()
	{
	}
	IMPLEMENT_CLASS(UPhysicsSerializer, 933387571);
static class UEnum* EPlatformInterfaceDataType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPlatformInterfaceDataType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EPlatformInterfaceDataType, Z_Construct_UPackage__Script_Engine(), TEXT("EPlatformInterfaceDataType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPlatformInterfaceDataType(EPlatformInterfaceDataType_StaticEnum, TEXT("/Script/Engine"), TEXT("EPlatformInterfaceDataType"), false, nullptr, nullptr);
class UScriptStruct* FDelegateArray::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDelegateArray();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDelegateArray_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDelegateArray, Z_Construct_UPackage__Script_Engine(), TEXT("DelegateArray"), sizeof(FDelegateArray), Get_Z_Construct_UScriptStruct_FDelegateArray_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDelegateArray(FDelegateArray::StaticStruct, TEXT("/Script/Engine"), TEXT("DelegateArray"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDelegateArray
{
	FScriptStruct_Engine_StaticRegisterNativesFDelegateArray()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DelegateArray")),new UScriptStruct::TCppStructOps<FDelegateArray>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDelegateArray;
class UScriptStruct* FPlatformInterfaceDelegateResult::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPlatformInterfaceDelegateResult();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPlatformInterfaceDelegateResult_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPlatformInterfaceDelegateResult, Z_Construct_UPackage__Script_Engine(), TEXT("PlatformInterfaceDelegateResult"), sizeof(FPlatformInterfaceDelegateResult), Get_Z_Construct_UScriptStruct_FPlatformInterfaceDelegateResult_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPlatformInterfaceDelegateResult(FPlatformInterfaceDelegateResult::StaticStruct, TEXT("/Script/Engine"), TEXT("PlatformInterfaceDelegateResult"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPlatformInterfaceDelegateResult
{
	FScriptStruct_Engine_StaticRegisterNativesFPlatformInterfaceDelegateResult()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PlatformInterfaceDelegateResult")),new UScriptStruct::TCppStructOps<FPlatformInterfaceDelegateResult>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPlatformInterfaceDelegateResult;
class UScriptStruct* FPlatformInterfaceData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPlatformInterfaceData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPlatformInterfaceData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPlatformInterfaceData, Z_Construct_UPackage__Script_Engine(), TEXT("PlatformInterfaceData"), sizeof(FPlatformInterfaceData), Get_Z_Construct_UScriptStruct_FPlatformInterfaceData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPlatformInterfaceData(FPlatformInterfaceData::StaticStruct, TEXT("/Script/Engine"), TEXT("PlatformInterfaceData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPlatformInterfaceData
{
	FScriptStruct_Engine_StaticRegisterNativesFPlatformInterfaceData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PlatformInterfaceData")),new UScriptStruct::TCppStructOps<FPlatformInterfaceData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPlatformInterfaceData;
	void UPlatformInterfaceBase::StaticRegisterNativesUPlatformInterfaceBase()
	{
	}
	IMPLEMENT_CLASS(UPlatformInterfaceBase, 4016502263);
static class UEnum* ECloudStorageDelegate_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECloudStorageDelegate();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECloudStorageDelegate, Z_Construct_UPackage__Script_Engine(), TEXT("ECloudStorageDelegate"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECloudStorageDelegate(ECloudStorageDelegate_StaticEnum, TEXT("/Script/Engine"), TEXT("ECloudStorageDelegate"), false, nullptr, nullptr);
	void UCloudStorageBase::StaticRegisterNativesUCloudStorageBase()
	{
	}
	IMPLEMENT_CLASS(UCloudStorageBase, 2541467935);
static class UEnum* EAdManagerDelegate_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAdManagerDelegate();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAdManagerDelegate, Z_Construct_UPackage__Script_Engine(), TEXT("EAdManagerDelegate"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAdManagerDelegate(EAdManagerDelegate_StaticEnum, TEXT("/Script/Engine"), TEXT("EAdManagerDelegate"), false, nullptr, nullptr);
	void UInGameAdManager::StaticRegisterNativesUInGameAdManager()
	{
	}
	IMPLEMENT_CLASS(UInGameAdManager, 4294477186);
static class UEnum* EMicroTransactionResult_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMicroTransactionResult();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMicroTransactionResult, Z_Construct_UPackage__Script_Engine(), TEXT("EMicroTransactionResult"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMicroTransactionResult(EMicroTransactionResult_StaticEnum, TEXT("/Script/Engine"), TEXT("EMicroTransactionResult"), false, nullptr, nullptr);
static class UEnum* EMicroTransactionDelegate_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMicroTransactionDelegate();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMicroTransactionDelegate, Z_Construct_UPackage__Script_Engine(), TEXT("EMicroTransactionDelegate"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMicroTransactionDelegate(EMicroTransactionDelegate_StaticEnum, TEXT("/Script/Engine"), TEXT("EMicroTransactionDelegate"), false, nullptr, nullptr);
class UScriptStruct* FPurchaseInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPurchaseInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPurchaseInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPurchaseInfo, Z_Construct_UPackage__Script_Engine(), TEXT("PurchaseInfo"), sizeof(FPurchaseInfo), Get_Z_Construct_UScriptStruct_FPurchaseInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPurchaseInfo(FPurchaseInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("PurchaseInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPurchaseInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFPurchaseInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PurchaseInfo")),new UScriptStruct::TCppStructOps<FPurchaseInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPurchaseInfo;
	void UMicroTransactionBase::StaticRegisterNativesUMicroTransactionBase()
	{
	}
	IMPLEMENT_CLASS(UMicroTransactionBase, 2754297190);
static class UEnum* ETwitterIntegrationDelegate_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETwitterIntegrationDelegate();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETwitterIntegrationDelegate, Z_Construct_UPackage__Script_Engine(), TEXT("ETwitterIntegrationDelegate"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETwitterIntegrationDelegate(ETwitterIntegrationDelegate_StaticEnum, TEXT("/Script/Engine"), TEXT("ETwitterIntegrationDelegate"), false, nullptr, nullptr);
static class UEnum* ETwitterRequestMethod_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETwitterRequestMethod();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETwitterRequestMethod, Z_Construct_UPackage__Script_Engine(), TEXT("ETwitterRequestMethod"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETwitterRequestMethod(ETwitterRequestMethod_StaticEnum, TEXT("/Script/Engine"), TEXT("ETwitterRequestMethod"), false, nullptr, nullptr);
	void UTwitterIntegrationBase::StaticRegisterNativesUTwitterIntegrationBase()
	{
		FNativeFunctionRegistrar::RegisterFunction(UTwitterIntegrationBase::StaticClass(), "AuthorizeAccounts",(Native)&UTwitterIntegrationBase::execAuthorizeAccounts);
		FNativeFunctionRegistrar::RegisterFunction(UTwitterIntegrationBase::StaticClass(), "CanShowTweetUI",(Native)&UTwitterIntegrationBase::execCanShowTweetUI);
		FNativeFunctionRegistrar::RegisterFunction(UTwitterIntegrationBase::StaticClass(), "GetAccountName",(Native)&UTwitterIntegrationBase::execGetAccountName);
		FNativeFunctionRegistrar::RegisterFunction(UTwitterIntegrationBase::StaticClass(), "GetNumAccounts",(Native)&UTwitterIntegrationBase::execGetNumAccounts);
		FNativeFunctionRegistrar::RegisterFunction(UTwitterIntegrationBase::StaticClass(), "Init",(Native)&UTwitterIntegrationBase::execInit);
		FNativeFunctionRegistrar::RegisterFunction(UTwitterIntegrationBase::StaticClass(), "ShowTweetUI",(Native)&UTwitterIntegrationBase::execShowTweetUI);
		FNativeFunctionRegistrar::RegisterFunction(UTwitterIntegrationBase::StaticClass(), "TwitterRequest",(Native)&UTwitterIntegrationBase::execTwitterRequest);
	}
	IMPLEMENT_CLASS(UTwitterIntegrationBase, 3285567962);
	void UPlatformInterfaceWebResponse::StaticRegisterNativesUPlatformInterfaceWebResponse()
	{
		FNativeFunctionRegistrar::RegisterFunction(UPlatformInterfaceWebResponse::StaticClass(), "GetHeader",(Native)&UPlatformInterfaceWebResponse::execGetHeader);
		FNativeFunctionRegistrar::RegisterFunction(UPlatformInterfaceWebResponse::StaticClass(), "GetHeaderValue",(Native)&UPlatformInterfaceWebResponse::execGetHeaderValue);
		FNativeFunctionRegistrar::RegisterFunction(UPlatformInterfaceWebResponse::StaticClass(), "GetNumHeaders",(Native)&UPlatformInterfaceWebResponse::execGetNumHeaders);
	}
	IMPLEMENT_CLASS(UPlatformInterfaceWebResponse, 2050354413);
	void ULocalPlayer::StaticRegisterNativesULocalPlayer()
	{
	}
	IMPLEMENT_CLASS(ULocalPlayer, 2165383914);
	void UChildConnection::StaticRegisterNativesUChildConnection()
	{
	}
	IMPLEMENT_CLASS(UChildConnection, 787167110);
	void UPolys::StaticRegisterNativesUPolys()
	{
	}
	IMPLEMENT_CLASS(UPolys, 1123948422);
static class UEnum* EReporterLineStyle_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EReporterLineStyle();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EReporterLineStyle, Z_Construct_UPackage__Script_Engine(), TEXT("EReporterLineStyle"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EReporterLineStyle(EReporterLineStyle_StaticEnum, TEXT("/Script/Engine"), TEXT("EReporterLineStyle"), false, nullptr, nullptr);
	void UReporterBase::StaticRegisterNativesUReporterBase()
	{
	}
	IMPLEMENT_CLASS(UReporterBase, 2263620306);
static class UEnum* ELegendPosition_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELegendPosition();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELegendPosition, Z_Construct_UPackage__Script_Engine(), TEXT("ELegendPosition"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELegendPosition(ELegendPosition_StaticEnum, TEXT("/Script/Engine"), TEXT("ELegendPosition"), false, nullptr, nullptr);
static class UEnum* EGraphDataStyle_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGraphDataStyle();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EGraphDataStyle, Z_Construct_UPackage__Script_Engine(), TEXT("EGraphDataStyle"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGraphDataStyle(EGraphDataStyle_StaticEnum, TEXT("/Script/Engine"), TEXT("EGraphDataStyle"), false, nullptr, nullptr);
static class UEnum* EGraphAxisStyle_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGraphAxisStyle();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EGraphAxisStyle, Z_Construct_UPackage__Script_Engine(), TEXT("EGraphAxisStyle"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EGraphAxisStyle(EGraphAxisStyle_StaticEnum, TEXT("/Script/Engine"), TEXT("EGraphAxisStyle"), false, nullptr, nullptr);
	void UReporterGraph::StaticRegisterNativesUReporterGraph()
	{
	}
	IMPLEMENT_CLASS(UReporterGraph, 4229691252);
	void UReverbEffect::StaticRegisterNativesUReverbEffect()
	{
	}
	IMPLEMENT_CLASS(UReverbEffect, 824151653);
static class UEnum* EConstraintTransform_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EConstraintTransform();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EConstraintTransform, Z_Construct_UPackage__Script_Engine(), TEXT("EConstraintTransform"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EConstraintTransform(EConstraintTransform_StaticEnum, TEXT("/Script/Engine"), TEXT("EConstraintTransform"), false, nullptr, nullptr);
static class UEnum* EControlConstraint_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EControlConstraint();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EControlConstraint, Z_Construct_UPackage__Script_Engine(), TEXT("EControlConstraint"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EControlConstraint(EControlConstraint_StaticEnum, TEXT("/Script/Engine"), TEXT("EControlConstraint"), false, nullptr, nullptr);
class UScriptStruct* FTransformBase::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTransformBase();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTransformBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTransformBase, Z_Construct_UPackage__Script_Engine(), TEXT("TransformBase"), sizeof(FTransformBase), Get_Z_Construct_UScriptStruct_FTransformBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTransformBase(FTransformBase::StaticStruct, TEXT("/Script/Engine"), TEXT("TransformBase"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTransformBase
{
	FScriptStruct_Engine_StaticRegisterNativesFTransformBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TransformBase")),new UScriptStruct::TCppStructOps<FTransformBase>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTransformBase;
class UScriptStruct* FTransformBaseConstraint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTransformBaseConstraint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTransformBaseConstraint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTransformBaseConstraint, Z_Construct_UPackage__Script_Engine(), TEXT("TransformBaseConstraint"), sizeof(FTransformBaseConstraint), Get_Z_Construct_UScriptStruct_FTransformBaseConstraint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTransformBaseConstraint(FTransformBaseConstraint::StaticStruct, TEXT("/Script/Engine"), TEXT("TransformBaseConstraint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTransformBaseConstraint
{
	FScriptStruct_Engine_StaticRegisterNativesFTransformBaseConstraint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TransformBaseConstraint")),new UScriptStruct::TCppStructOps<FTransformBaseConstraint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTransformBaseConstraint;
class UScriptStruct* FRigTransformConstraint::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigTransformConstraint();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FRigTransformConstraint_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FRigTransformConstraint, Z_Construct_UPackage__Script_Engine(), TEXT("RigTransformConstraint"), sizeof(FRigTransformConstraint), Get_Z_Construct_UScriptStruct_FRigTransformConstraint_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FRigTransformConstraint(FRigTransformConstraint::StaticStruct, TEXT("/Script/Engine"), TEXT("RigTransformConstraint"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFRigTransformConstraint
{
	FScriptStruct_Engine_StaticRegisterNativesFRigTransformConstraint()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("RigTransformConstraint")),new UScriptStruct::TCppStructOps<FRigTransformConstraint>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFRigTransformConstraint;
class UScriptStruct* FNode::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNode();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNode_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNode, Z_Construct_UPackage__Script_Engine(), TEXT("Node"), sizeof(FNode), Get_Z_Construct_UScriptStruct_FNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNode(FNode::StaticStruct, TEXT("/Script/Engine"), TEXT("Node"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNode
{
	FScriptStruct_Engine_StaticRegisterNativesFNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("Node")),new UScriptStruct::TCppStructOps<FNode>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNode;
	void URig::StaticRegisterNativesURig()
	{
	}
	IMPLEMENT_CLASS(URig, 75844547);
	void USaveGame::StaticRegisterNativesUSaveGame()
	{
	}
	IMPLEMENT_CLASS(USaveGame, 3761886051);
	void USimpleConstructionScript::StaticRegisterNativesUSimpleConstructionScript()
	{
	}
	IMPLEMENT_CLASS(USimpleConstructionScript, 3255499108);
	void USCS_Node::StaticRegisterNativesUSCS_Node()
	{
	}
	IMPLEMENT_CLASS(USCS_Node, 4096411525);
	void USelection::StaticRegisterNativesUSelection()
	{
	}
	IMPLEMENT_CLASS(USelection, 336870104);
static class UEnum* EImpactDamageOverride_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EImpactDamageOverride();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EImpactDamageOverride, Z_Construct_UPackage__Script_Engine(), TEXT("EImpactDamageOverride"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EImpactDamageOverride(EImpactDamageOverride_StaticEnum, TEXT("/Script/Engine"), TEXT("EImpactDamageOverride"), false, nullptr, nullptr);
class UScriptStruct* FDestructibleParameters::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleParameters();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDestructibleParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDestructibleParameters, Z_Construct_UPackage__Script_Engine(), TEXT("DestructibleParameters"), sizeof(FDestructibleParameters), Get_Z_Construct_UScriptStruct_FDestructibleParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDestructibleParameters(FDestructibleParameters::StaticStruct, TEXT("/Script/Engine"), TEXT("DestructibleParameters"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDestructibleParameters
{
	FScriptStruct_Engine_StaticRegisterNativesFDestructibleParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DestructibleParameters")),new UScriptStruct::TCppStructOps<FDestructibleParameters>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDestructibleParameters;
class UScriptStruct* FDestructibleSpecialHierarchyDepths::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleSpecialHierarchyDepths();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDestructibleSpecialHierarchyDepths_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDestructibleSpecialHierarchyDepths, Z_Construct_UPackage__Script_Engine(), TEXT("DestructibleSpecialHierarchyDepths"), sizeof(FDestructibleSpecialHierarchyDepths), Get_Z_Construct_UScriptStruct_FDestructibleSpecialHierarchyDepths_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDestructibleSpecialHierarchyDepths(FDestructibleSpecialHierarchyDepths::StaticStruct, TEXT("/Script/Engine"), TEXT("DestructibleSpecialHierarchyDepths"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDestructibleSpecialHierarchyDepths
{
	FScriptStruct_Engine_StaticRegisterNativesFDestructibleSpecialHierarchyDepths()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DestructibleSpecialHierarchyDepths")),new UScriptStruct::TCppStructOps<FDestructibleSpecialHierarchyDepths>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDestructibleSpecialHierarchyDepths;
class UScriptStruct* FDestructibleAdvancedParameters::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleAdvancedParameters();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDestructibleAdvancedParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDestructibleAdvancedParameters, Z_Construct_UPackage__Script_Engine(), TEXT("DestructibleAdvancedParameters"), sizeof(FDestructibleAdvancedParameters), Get_Z_Construct_UScriptStruct_FDestructibleAdvancedParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDestructibleAdvancedParameters(FDestructibleAdvancedParameters::StaticStruct, TEXT("/Script/Engine"), TEXT("DestructibleAdvancedParameters"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDestructibleAdvancedParameters
{
	FScriptStruct_Engine_StaticRegisterNativesFDestructibleAdvancedParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DestructibleAdvancedParameters")),new UScriptStruct::TCppStructOps<FDestructibleAdvancedParameters>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDestructibleAdvancedParameters;
class UScriptStruct* FDestructibleDebrisParameters::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleDebrisParameters();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDestructibleDebrisParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDestructibleDebrisParameters, Z_Construct_UPackage__Script_Engine(), TEXT("DestructibleDebrisParameters"), sizeof(FDestructibleDebrisParameters), Get_Z_Construct_UScriptStruct_FDestructibleDebrisParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDestructibleDebrisParameters(FDestructibleDebrisParameters::StaticStruct, TEXT("/Script/Engine"), TEXT("DestructibleDebrisParameters"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDestructibleDebrisParameters
{
	FScriptStruct_Engine_StaticRegisterNativesFDestructibleDebrisParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DestructibleDebrisParameters")),new UScriptStruct::TCppStructOps<FDestructibleDebrisParameters>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDestructibleDebrisParameters;
class UScriptStruct* FDestructibleDamageParameters::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleDamageParameters();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDestructibleDamageParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDestructibleDamageParameters, Z_Construct_UPackage__Script_Engine(), TEXT("DestructibleDamageParameters"), sizeof(FDestructibleDamageParameters), Get_Z_Construct_UScriptStruct_FDestructibleDamageParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDestructibleDamageParameters(FDestructibleDamageParameters::StaticStruct, TEXT("/Script/Engine"), TEXT("DestructibleDamageParameters"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDestructibleDamageParameters
{
	FScriptStruct_Engine_StaticRegisterNativesFDestructibleDamageParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DestructibleDamageParameters")),new UScriptStruct::TCppStructOps<FDestructibleDamageParameters>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDestructibleDamageParameters;
class UScriptStruct* FDestructibleParametersFlag::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleParametersFlag();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDestructibleParametersFlag_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDestructibleParametersFlag, Z_Construct_UPackage__Script_Engine(), TEXT("DestructibleParametersFlag"), sizeof(FDestructibleParametersFlag), Get_Z_Construct_UScriptStruct_FDestructibleParametersFlag_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDestructibleParametersFlag(FDestructibleParametersFlag::StaticStruct, TEXT("/Script/Engine"), TEXT("DestructibleParametersFlag"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDestructibleParametersFlag
{
	FScriptStruct_Engine_StaticRegisterNativesFDestructibleParametersFlag()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DestructibleParametersFlag")),new UScriptStruct::TCppStructOps<FDestructibleParametersFlag>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDestructibleParametersFlag;
class UScriptStruct* FDestructibleDepthParameters::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleDepthParameters();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDestructibleDepthParameters_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDestructibleDepthParameters, Z_Construct_UPackage__Script_Engine(), TEXT("DestructibleDepthParameters"), sizeof(FDestructibleDepthParameters), Get_Z_Construct_UScriptStruct_FDestructibleDepthParameters_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDestructibleDepthParameters(FDestructibleDepthParameters::StaticStruct, TEXT("/Script/Engine"), TEXT("DestructibleDepthParameters"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDestructibleDepthParameters
{
	FScriptStruct_Engine_StaticRegisterNativesFDestructibleDepthParameters()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DestructibleDepthParameters")),new UScriptStruct::TCppStructOps<FDestructibleDepthParameters>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDestructibleDepthParameters;
	void UDestructibleMesh::StaticRegisterNativesUDestructibleMesh()
	{
	}
	IMPLEMENT_CLASS(UDestructibleMesh, 2590534885);
class UScriptStruct* FSkeletalMeshLODGroupSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshLODGroupSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSkeletalMeshLODGroupSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSkeletalMeshLODGroupSettings, Z_Construct_UPackage__Script_Engine(), TEXT("SkeletalMeshLODGroupSettings"), sizeof(FSkeletalMeshLODGroupSettings), Get_Z_Construct_UScriptStruct_FSkeletalMeshLODGroupSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSkeletalMeshLODGroupSettings(FSkeletalMeshLODGroupSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("SkeletalMeshLODGroupSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshLODGroupSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshLODGroupSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SkeletalMeshLODGroupSettings")),new UScriptStruct::TCppStructOps<FSkeletalMeshLODGroupSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSkeletalMeshLODGroupSettings;
	void USkeletalMeshReductionSettings::StaticRegisterNativesUSkeletalMeshReductionSettings()
	{
	}
	IMPLEMENT_CLASS(USkeletalMeshReductionSettings, 738271778);
	void USkeletalMeshSocket::StaticRegisterNativesUSkeletalMeshSocket()
	{
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshSocket::StaticClass(), "GetSocketLocation",(Native)&USkeletalMeshSocket::execGetSocketLocation);
		FNativeFunctionRegistrar::RegisterFunction(USkeletalMeshSocket::StaticClass(), "InitializeSocketFromLocation",(Native)&USkeletalMeshSocket::execInitializeSocketFromLocation);
	}
	IMPLEMENT_CLASS(USkeletalMeshSocket, 2329745477);
	void USlateBrushAsset::StaticRegisterNativesUSlateBrushAsset()
	{
	}
	IMPLEMENT_CLASS(USlateBrushAsset, 813177742);
static class UEnum* ETextureSamplerFilter_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureSamplerFilter();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETextureSamplerFilter, Z_Construct_UPackage__Script_Engine(), TEXT("ETextureSamplerFilter"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETextureSamplerFilter(ETextureSamplerFilter_StaticEnum, TEXT("/Script/Engine"), TEXT("ETextureSamplerFilter"), false, nullptr, nullptr);
static class UEnum* ETexturePowerOfTwoSetting_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETexturePowerOfTwoSetting();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETexturePowerOfTwoSetting, Z_Construct_UPackage__Script_Engine(), TEXT("ETexturePowerOfTwoSetting"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETexturePowerOfTwoSetting(ETexturePowerOfTwoSetting_StaticEnum, TEXT("/Script/Engine"), TEXT("ETexturePowerOfTwoSetting"), false, nullptr, nullptr);
static class UEnum* TextureMipGenSettings_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureMipGenSettings();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_TextureMipGenSettings, Z_Construct_UPackage__Script_Engine(), TEXT("TextureMipGenSettings"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_TextureMipGenSettings(TextureMipGenSettings_StaticEnum, TEXT("/Script/Engine"), TEXT("TextureMipGenSettings"), false, nullptr, nullptr);
static class UEnum* TextureGroup_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureGroup();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_TextureGroup, Z_Construct_UPackage__Script_Engine(), TEXT("TextureGroup"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_TextureGroup(TextureGroup_StaticEnum, TEXT("/Script/Engine"), TEXT("TextureGroup"), false, nullptr, nullptr);
static class UEnum* ETextureSourceFormat_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureSourceFormat();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETextureSourceFormat, Z_Construct_UPackage__Script_Engine(), TEXT("ETextureSourceFormat"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETextureSourceFormat(ETextureSourceFormat_StaticEnum, TEXT("/Script/Engine"), TEXT("ETextureSourceFormat"), false, nullptr, nullptr);
static class UEnum* ETextureSourceArtType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureSourceArtType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETextureSourceArtType, Z_Construct_UPackage__Script_Engine(), TEXT("ETextureSourceArtType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETextureSourceArtType(ETextureSourceArtType_StaticEnum, TEXT("/Script/Engine"), TEXT("ETextureSourceArtType"), false, nullptr, nullptr);
static class UEnum* ETextureMipCount_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureMipCount();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ETextureMipCount, Z_Construct_UPackage__Script_Engine(), TEXT("ETextureMipCount"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ETextureMipCount(ETextureMipCount_StaticEnum, TEXT("/Script/Engine"), TEXT("ETextureMipCount"), false, nullptr, nullptr);
static class UEnum* ECompositeTextureMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECompositeTextureMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECompositeTextureMode, Z_Construct_UPackage__Script_Engine(), TEXT("ECompositeTextureMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECompositeTextureMode(ECompositeTextureMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ECompositeTextureMode"), false, nullptr, nullptr);
static class UEnum* TextureAddress_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureAddress();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_TextureAddress, Z_Construct_UPackage__Script_Engine(), TEXT("TextureAddress"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_TextureAddress(TextureAddress_StaticEnum, TEXT("/Script/Engine"), TEXT("TextureAddress"), false, nullptr, nullptr);
static class UEnum* TextureFilter_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureFilter();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_TextureFilter, Z_Construct_UPackage__Script_Engine(), TEXT("TextureFilter"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_TextureFilter(TextureFilter_StaticEnum, TEXT("/Script/Engine"), TEXT("TextureFilter"), false, nullptr, nullptr);
static class UEnum* TextureCompressionSettings_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureCompressionSettings();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_TextureCompressionSettings, Z_Construct_UPackage__Script_Engine(), TEXT("TextureCompressionSettings"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_TextureCompressionSettings(TextureCompressionSettings_StaticEnum, TEXT("/Script/Engine"), TEXT("TextureCompressionSettings"), false, nullptr, nullptr);
class UScriptStruct* FTexturePlatformData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTexturePlatformData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTexturePlatformData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTexturePlatformData, Z_Construct_UPackage__Script_Engine(), TEXT("TexturePlatformData"), sizeof(FTexturePlatformData), Get_Z_Construct_UScriptStruct_FTexturePlatformData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTexturePlatformData(FTexturePlatformData::StaticStruct, TEXT("/Script/Engine"), TEXT("TexturePlatformData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTexturePlatformData
{
	FScriptStruct_Engine_StaticRegisterNativesFTexturePlatformData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TexturePlatformData")),new UScriptStruct::TCppStructOps<FTexturePlatformData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTexturePlatformData;
class UScriptStruct* FTextureSource::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTextureSource();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTextureSource_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTextureSource, Z_Construct_UPackage__Script_Engine(), TEXT("TextureSource"), sizeof(FTextureSource), Get_Z_Construct_UScriptStruct_FTextureSource_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTextureSource(FTextureSource::StaticStruct, TEXT("/Script/Engine"), TEXT("TextureSource"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTextureSource
{
	FScriptStruct_Engine_StaticRegisterNativesFTextureSource()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TextureSource")),new UScriptStruct::TCppStructOps<FTextureSource>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTextureSource;
	void UTexture::StaticRegisterNativesUTexture()
	{
	}
	IMPLEMENT_CLASS(UTexture, 634396016);
	void USlateTextureAtlasInterface::StaticRegisterNativesUSlateTextureAtlasInterface()
	{
	}
	IMPLEMENT_CLASS(USlateTextureAtlasInterface, 48574581);
static class UEnum* EMaxConcurrentResolutionRule_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaxConcurrentResolutionRule();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EMaxConcurrentResolutionRule, Z_Construct_UPackage__Script_Engine(), TEXT("EMaxConcurrentResolutionRule"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EMaxConcurrentResolutionRule(EMaxConcurrentResolutionRule_StaticEnum, TEXT("/Script/Engine"), TEXT("EMaxConcurrentResolutionRule"), false, nullptr, nullptr);
class UScriptStruct* FSoundConcurrencySettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundConcurrencySettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSoundConcurrencySettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundConcurrencySettings, Z_Construct_UPackage__Script_Engine(), TEXT("SoundConcurrencySettings"), sizeof(FSoundConcurrencySettings), Get_Z_Construct_UScriptStruct_FSoundConcurrencySettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundConcurrencySettings(FSoundConcurrencySettings::StaticStruct, TEXT("/Script/Engine"), TEXT("SoundConcurrencySettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSoundConcurrencySettings
{
	FScriptStruct_Engine_StaticRegisterNativesFSoundConcurrencySettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundConcurrencySettings")),new UScriptStruct::TCppStructOps<FSoundConcurrencySettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSoundConcurrencySettings;
	void USoundConcurrency::StaticRegisterNativesUSoundConcurrency()
	{
	}
	IMPLEMENT_CLASS(USoundConcurrency, 235294825);
	void USoundBase::StaticRegisterNativesUSoundBase()
	{
	}
	IMPLEMENT_CLASS(USoundBase, 442558797);
	void UDialogueSoundWaveProxy::StaticRegisterNativesUDialogueSoundWaveProxy()
	{
	}
	IMPLEMENT_CLASS(UDialogueSoundWaveProxy, 2909742623);
class UScriptStruct* FSoundNodeEditorData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundNodeEditorData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSoundNodeEditorData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundNodeEditorData, Z_Construct_UPackage__Script_Engine(), TEXT("SoundNodeEditorData"), sizeof(FSoundNodeEditorData), Get_Z_Construct_UScriptStruct_FSoundNodeEditorData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundNodeEditorData(FSoundNodeEditorData::StaticStruct, TEXT("/Script/Engine"), TEXT("SoundNodeEditorData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSoundNodeEditorData
{
	FScriptStruct_Engine_StaticRegisterNativesFSoundNodeEditorData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundNodeEditorData")),new UScriptStruct::TCppStructOps<FSoundNodeEditorData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSoundNodeEditorData;
	void USoundCue::StaticRegisterNativesUSoundCue()
	{
	}
	IMPLEMENT_CLASS(USoundCue, 48803180);
static class UEnum* ESoundGroup_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESoundGroup();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ESoundGroup, Z_Construct_UPackage__Script_Engine(), TEXT("ESoundGroup"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ESoundGroup(ESoundGroup_StaticEnum, TEXT("/Script/Engine"), TEXT("ESoundGroup"), false, nullptr, nullptr);
class UScriptStruct* FSoundGroup::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundGroup();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSoundGroup_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundGroup, Z_Construct_UPackage__Script_Engine(), TEXT("SoundGroup"), sizeof(FSoundGroup), Get_Z_Construct_UScriptStruct_FSoundGroup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundGroup(FSoundGroup::StaticStruct, TEXT("/Script/Engine"), TEXT("SoundGroup"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSoundGroup
{
	FScriptStruct_Engine_StaticRegisterNativesFSoundGroup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundGroup")),new UScriptStruct::TCppStructOps<FSoundGroup>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSoundGroup;
	void USoundGroups::StaticRegisterNativesUSoundGroups()
	{
	}
	IMPLEMENT_CLASS(USoundGroups, 3987644317);
static class UEnum* EDecompressionType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDecompressionType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDecompressionType, Z_Construct_UPackage__Script_Engine(), TEXT("EDecompressionType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDecompressionType(EDecompressionType_StaticEnum, TEXT("/Script/Engine"), TEXT("EDecompressionType"), false, nullptr, nullptr);
class UScriptStruct* FStreamedAudioPlatformData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamedAudioPlatformData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStreamedAudioPlatformData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStreamedAudioPlatformData, Z_Construct_UPackage__Script_Engine(), TEXT("StreamedAudioPlatformData"), sizeof(FStreamedAudioPlatformData), Get_Z_Construct_UScriptStruct_FStreamedAudioPlatformData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStreamedAudioPlatformData(FStreamedAudioPlatformData::StaticStruct, TEXT("/Script/Engine"), TEXT("StreamedAudioPlatformData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStreamedAudioPlatformData
{
	FScriptStruct_Engine_StaticRegisterNativesFStreamedAudioPlatformData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StreamedAudioPlatformData")),new UScriptStruct::TCppStructOps<FStreamedAudioPlatformData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStreamedAudioPlatformData;
	void USoundWave::StaticRegisterNativesUSoundWave()
	{
	}
	IMPLEMENT_CLASS(USoundWave, 2707565167);
	void USoundWaveProcedural::StaticRegisterNativesUSoundWaveProcedural()
	{
	}
	IMPLEMENT_CLASS(USoundWaveProcedural, 2292965191);
static class UEnum* EAudioOutputTarget_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAudioOutputTarget();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EAudioOutputTarget, Z_Construct_UPackage__Script_Engine(), TEXT("EAudioOutputTarget"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EAudioOutputTarget(EAudioOutputTarget_StaticEnum, TEXT("/Script/Engine"), TEXT("EAudioOutputTarget"), false, nullptr, nullptr);
class UScriptStruct* FPassiveSoundMixModifier::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPassiveSoundMixModifier();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPassiveSoundMixModifier_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPassiveSoundMixModifier, Z_Construct_UPackage__Script_Engine(), TEXT("PassiveSoundMixModifier"), sizeof(FPassiveSoundMixModifier), Get_Z_Construct_UScriptStruct_FPassiveSoundMixModifier_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPassiveSoundMixModifier(FPassiveSoundMixModifier::StaticStruct, TEXT("/Script/Engine"), TEXT("PassiveSoundMixModifier"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPassiveSoundMixModifier
{
	FScriptStruct_Engine_StaticRegisterNativesFPassiveSoundMixModifier()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PassiveSoundMixModifier")),new UScriptStruct::TCppStructOps<FPassiveSoundMixModifier>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPassiveSoundMixModifier;
class UScriptStruct* FSoundClassProperties::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundClassProperties();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSoundClassProperties_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundClassProperties, Z_Construct_UPackage__Script_Engine(), TEXT("SoundClassProperties"), sizeof(FSoundClassProperties), Get_Z_Construct_UScriptStruct_FSoundClassProperties_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundClassProperties(FSoundClassProperties::StaticStruct, TEXT("/Script/Engine"), TEXT("SoundClassProperties"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSoundClassProperties
{
	FScriptStruct_Engine_StaticRegisterNativesFSoundClassProperties()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundClassProperties")),new UScriptStruct::TCppStructOps<FSoundClassProperties>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSoundClassProperties;
class UScriptStruct* FSoundClassEditorData::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundClassEditorData();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSoundClassEditorData_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundClassEditorData, Z_Construct_UPackage__Script_Engine(), TEXT("SoundClassEditorData"), sizeof(FSoundClassEditorData), Get_Z_Construct_UScriptStruct_FSoundClassEditorData_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundClassEditorData(FSoundClassEditorData::StaticStruct, TEXT("/Script/Engine"), TEXT("SoundClassEditorData"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSoundClassEditorData
{
	FScriptStruct_Engine_StaticRegisterNativesFSoundClassEditorData()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundClassEditorData")),new UScriptStruct::TCppStructOps<FSoundClassEditorData>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSoundClassEditorData;
	void USoundClass::StaticRegisterNativesUSoundClass()
	{
	}
	IMPLEMENT_CLASS(USoundClass, 1173137114);
	void USoundEffectPreset::StaticRegisterNativesUSoundEffectPreset()
	{
	}
	IMPLEMENT_CLASS(USoundEffectPreset, 2763541224);
	void USoundEffectSourcePreset::StaticRegisterNativesUSoundEffectSourcePreset()
	{
	}
	IMPLEMENT_CLASS(USoundEffectSourcePreset, 3287802746);
	void USoundEffectSubmixPreset::StaticRegisterNativesUSoundEffectSubmixPreset()
	{
	}
	IMPLEMENT_CLASS(USoundEffectSubmixPreset, 2025650167);
class UScriptStruct* FSoundClassAdjuster::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundClassAdjuster();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSoundClassAdjuster_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSoundClassAdjuster, Z_Construct_UPackage__Script_Engine(), TEXT("SoundClassAdjuster"), sizeof(FSoundClassAdjuster), Get_Z_Construct_UScriptStruct_FSoundClassAdjuster_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSoundClassAdjuster(FSoundClassAdjuster::StaticStruct, TEXT("/Script/Engine"), TEXT("SoundClassAdjuster"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSoundClassAdjuster
{
	FScriptStruct_Engine_StaticRegisterNativesFSoundClassAdjuster()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SoundClassAdjuster")),new UScriptStruct::TCppStructOps<FSoundClassAdjuster>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSoundClassAdjuster;
class UScriptStruct* FAudioEQEffect::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAudioEQEffect();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAudioEQEffect_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAudioEQEffect, Z_Construct_UPackage__Script_Engine(), TEXT("AudioEQEffect"), sizeof(FAudioEQEffect), Get_Z_Construct_UScriptStruct_FAudioEQEffect_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAudioEQEffect(FAudioEQEffect::StaticStruct, TEXT("/Script/Engine"), TEXT("AudioEQEffect"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAudioEQEffect
{
	FScriptStruct_Engine_StaticRegisterNativesFAudioEQEffect()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AudioEQEffect")),new UScriptStruct::TCppStructOps<FAudioEQEffect>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAudioEQEffect;
	void USoundMix::StaticRegisterNativesUSoundMix()
	{
	}
	IMPLEMENT_CLASS(USoundMix, 11257883);
	void USoundNode::StaticRegisterNativesUSoundNode()
	{
	}
	IMPLEMENT_CLASS(USoundNode, 3587434278);
	void USoundNodeAssetReferencer::StaticRegisterNativesUSoundNodeAssetReferencer()
	{
	}
	IMPLEMENT_CLASS(USoundNodeAssetReferencer, 2832975755);
	void USoundNodeWavePlayer::StaticRegisterNativesUSoundNodeWavePlayer()
	{
	}
	IMPLEMENT_CLASS(USoundNodeWavePlayer, 2697874887);
	void USoundNodeAttenuation::StaticRegisterNativesUSoundNodeAttenuation()
	{
	}
	IMPLEMENT_CLASS(USoundNodeAttenuation, 2188170457);
	void USoundNodeBranch::StaticRegisterNativesUSoundNodeBranch()
	{
	}
	IMPLEMENT_CLASS(USoundNodeBranch, 1361679344);
	void USoundNodeConcatenator::StaticRegisterNativesUSoundNodeConcatenator()
	{
	}
	IMPLEMENT_CLASS(USoundNodeConcatenator, 1330264196);
	void USoundNodeDelay::StaticRegisterNativesUSoundNodeDelay()
	{
	}
	IMPLEMENT_CLASS(USoundNodeDelay, 2663337933);
	void USoundNodeDialoguePlayer::StaticRegisterNativesUSoundNodeDialoguePlayer()
	{
	}
	IMPLEMENT_CLASS(USoundNodeDialoguePlayer, 103812132);
class UScriptStruct* FDistanceDatum::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDistanceDatum();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDistanceDatum_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDistanceDatum, Z_Construct_UPackage__Script_Engine(), TEXT("DistanceDatum"), sizeof(FDistanceDatum), Get_Z_Construct_UScriptStruct_FDistanceDatum_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDistanceDatum(FDistanceDatum::StaticStruct, TEXT("/Script/Engine"), TEXT("DistanceDatum"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDistanceDatum
{
	FScriptStruct_Engine_StaticRegisterNativesFDistanceDatum()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DistanceDatum")),new UScriptStruct::TCppStructOps<FDistanceDatum>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDistanceDatum;
	void USoundNodeDistanceCrossFade::StaticRegisterNativesUSoundNodeDistanceCrossFade()
	{
	}
	IMPLEMENT_CLASS(USoundNodeDistanceCrossFade, 3994328281);
	void USoundNodeParamCrossFade::StaticRegisterNativesUSoundNodeParamCrossFade()
	{
	}
	IMPLEMENT_CLASS(USoundNodeParamCrossFade, 1831078490);
	void USoundNodeDoppler::StaticRegisterNativesUSoundNodeDoppler()
	{
	}
	IMPLEMENT_CLASS(USoundNodeDoppler, 2848772785);
	void USoundNodeEnveloper::StaticRegisterNativesUSoundNodeEnveloper()
	{
	}
	IMPLEMENT_CLASS(USoundNodeEnveloper, 1132327465);
	void USoundNodeGroupControl::StaticRegisterNativesUSoundNodeGroupControl()
	{
	}
	IMPLEMENT_CLASS(USoundNodeGroupControl, 700251602);
	void USoundNodeLooping::StaticRegisterNativesUSoundNodeLooping()
	{
	}
	IMPLEMENT_CLASS(USoundNodeLooping, 3620937778);
	void USoundNodeMature::StaticRegisterNativesUSoundNodeMature()
	{
	}
	IMPLEMENT_CLASS(USoundNodeMature, 3395286239);
	void USoundNodeMixer::StaticRegisterNativesUSoundNodeMixer()
	{
	}
	IMPLEMENT_CLASS(USoundNodeMixer, 1378372192);
	void USoundNodeModulator::StaticRegisterNativesUSoundNodeModulator()
	{
	}
	IMPLEMENT_CLASS(USoundNodeModulator, 597341830);
static class UEnum* ModulationParamMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ModulationParamMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ModulationParamMode, Z_Construct_UPackage__Script_Engine(), TEXT("ModulationParamMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ModulationParamMode(ModulationParamMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ModulationParamMode"), false, nullptr, nullptr);
class UScriptStruct* FModulatorContinuousParams::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FModulatorContinuousParams();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FModulatorContinuousParams_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FModulatorContinuousParams, Z_Construct_UPackage__Script_Engine(), TEXT("ModulatorContinuousParams"), sizeof(FModulatorContinuousParams), Get_Z_Construct_UScriptStruct_FModulatorContinuousParams_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FModulatorContinuousParams(FModulatorContinuousParams::StaticStruct, TEXT("/Script/Engine"), TEXT("ModulatorContinuousParams"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFModulatorContinuousParams
{
	FScriptStruct_Engine_StaticRegisterNativesFModulatorContinuousParams()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ModulatorContinuousParams")),new UScriptStruct::TCppStructOps<FModulatorContinuousParams>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFModulatorContinuousParams;
	void USoundNodeModulatorContinuous::StaticRegisterNativesUSoundNodeModulatorContinuous()
	{
	}
	IMPLEMENT_CLASS(USoundNodeModulatorContinuous, 3351471970);
	void USoundNodeOscillator::StaticRegisterNativesUSoundNodeOscillator()
	{
	}
	IMPLEMENT_CLASS(USoundNodeOscillator, 2617626777);
	void USoundNodeQualityLevel::StaticRegisterNativesUSoundNodeQualityLevel()
	{
	}
	IMPLEMENT_CLASS(USoundNodeQualityLevel, 2485669749);
	void USoundNodeRandom::StaticRegisterNativesUSoundNodeRandom()
	{
	}
	IMPLEMENT_CLASS(USoundNodeRandom, 3772921387);
	void USoundNodeSoundClass::StaticRegisterNativesUSoundNodeSoundClass()
	{
	}
	IMPLEMENT_CLASS(USoundNodeSoundClass, 3768406628);
	void USoundNodeSwitch::StaticRegisterNativesUSoundNodeSwitch()
	{
	}
	IMPLEMENT_CLASS(USoundNodeSwitch, 2027531860);
	void USoundNodeWaveParam::StaticRegisterNativesUSoundNodeWaveParam()
	{
	}
	IMPLEMENT_CLASS(USoundNodeWaveParam, 1891269689);
	void USoundSubmix::StaticRegisterNativesUSoundSubmix()
	{
	}
	IMPLEMENT_CLASS(USoundSubmix, 3634567038);
static class UEnum* EOptimizationType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOptimizationType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EOptimizationType, Z_Construct_UPackage__Script_Engine(), TEXT("EOptimizationType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EOptimizationType(EOptimizationType_StaticEnum, TEXT("/Script/Engine"), TEXT("EOptimizationType"), false, nullptr, nullptr);
static class UEnum* EImportanceLevel_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EImportanceLevel();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EImportanceLevel, Z_Construct_UPackage__Script_Engine(), TEXT("EImportanceLevel"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EImportanceLevel(EImportanceLevel_StaticEnum, TEXT("/Script/Engine"), TEXT("EImportanceLevel"), false, nullptr, nullptr);
static class UEnum* ENormalMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENormalMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ENormalMode, Z_Construct_UPackage__Script_Engine(), TEXT("ENormalMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ENormalMode(ENormalMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ENormalMode"), false, nullptr, nullptr);
class UScriptStruct* FMaterialRemapIndex::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialRemapIndex();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMaterialRemapIndex_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMaterialRemapIndex, Z_Construct_UPackage__Script_Engine(), TEXT("MaterialRemapIndex"), sizeof(FMaterialRemapIndex), Get_Z_Construct_UScriptStruct_FMaterialRemapIndex_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMaterialRemapIndex(FMaterialRemapIndex::StaticStruct, TEXT("/Script/Engine"), TEXT("MaterialRemapIndex"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMaterialRemapIndex
{
	FScriptStruct_Engine_StaticRegisterNativesFMaterialRemapIndex()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MaterialRemapIndex")),new UScriptStruct::TCppStructOps<FMaterialRemapIndex>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMaterialRemapIndex;
class UScriptStruct* FStaticMaterial::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStaticMaterial();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStaticMaterial_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStaticMaterial, Z_Construct_UPackage__Script_Engine(), TEXT("StaticMaterial"), sizeof(FStaticMaterial), Get_Z_Construct_UScriptStruct_FStaticMaterial_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStaticMaterial(FStaticMaterial::StaticStruct, TEXT("/Script/Engine"), TEXT("StaticMaterial"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStaticMaterial
{
	FScriptStruct_Engine_StaticRegisterNativesFStaticMaterial()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StaticMaterial")),new UScriptStruct::TCppStructOps<FStaticMaterial>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStaticMaterial;
class UScriptStruct* FAssetEditorOrbitCameraPosition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAssetEditorOrbitCameraPosition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAssetEditorOrbitCameraPosition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAssetEditorOrbitCameraPosition, Z_Construct_UPackage__Script_Engine(), TEXT("AssetEditorOrbitCameraPosition"), sizeof(FAssetEditorOrbitCameraPosition), Get_Z_Construct_UScriptStruct_FAssetEditorOrbitCameraPosition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAssetEditorOrbitCameraPosition(FAssetEditorOrbitCameraPosition::StaticStruct, TEXT("/Script/Engine"), TEXT("AssetEditorOrbitCameraPosition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAssetEditorOrbitCameraPosition
{
	FScriptStruct_Engine_StaticRegisterNativesFAssetEditorOrbitCameraPosition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AssetEditorOrbitCameraPosition")),new UScriptStruct::TCppStructOps<FAssetEditorOrbitCameraPosition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAssetEditorOrbitCameraPosition;
class UScriptStruct* FMeshSectionInfoMap::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshSectionInfoMap();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMeshSectionInfoMap_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMeshSectionInfoMap, Z_Construct_UPackage__Script_Engine(), TEXT("MeshSectionInfoMap"), sizeof(FMeshSectionInfoMap), Get_Z_Construct_UScriptStruct_FMeshSectionInfoMap_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMeshSectionInfoMap(FMeshSectionInfoMap::StaticStruct, TEXT("/Script/Engine"), TEXT("MeshSectionInfoMap"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMeshSectionInfoMap
{
	FScriptStruct_Engine_StaticRegisterNativesFMeshSectionInfoMap()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MeshSectionInfoMap")),new UScriptStruct::TCppStructOps<FMeshSectionInfoMap>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMeshSectionInfoMap;
class UScriptStruct* FMeshSectionInfo::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshSectionInfo();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMeshSectionInfo_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMeshSectionInfo, Z_Construct_UPackage__Script_Engine(), TEXT("MeshSectionInfo"), sizeof(FMeshSectionInfo), Get_Z_Construct_UScriptStruct_FMeshSectionInfo_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMeshSectionInfo(FMeshSectionInfo::StaticStruct, TEXT("/Script/Engine"), TEXT("MeshSectionInfo"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMeshSectionInfo
{
	FScriptStruct_Engine_StaticRegisterNativesFMeshSectionInfo()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MeshSectionInfo")),new UScriptStruct::TCppStructOps<FMeshSectionInfo>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMeshSectionInfo;
class UScriptStruct* FStaticMeshSourceModel::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStaticMeshSourceModel();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStaticMeshSourceModel_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStaticMeshSourceModel, Z_Construct_UPackage__Script_Engine(), TEXT("StaticMeshSourceModel"), sizeof(FStaticMeshSourceModel), Get_Z_Construct_UScriptStruct_FStaticMeshSourceModel_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStaticMeshSourceModel(FStaticMeshSourceModel::StaticStruct, TEXT("/Script/Engine"), TEXT("StaticMeshSourceModel"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStaticMeshSourceModel
{
	FScriptStruct_Engine_StaticRegisterNativesFStaticMeshSourceModel()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StaticMeshSourceModel")),new UScriptStruct::TCppStructOps<FStaticMeshSourceModel>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStaticMeshSourceModel;
class UScriptStruct* FStaticMeshOptimizationSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStaticMeshOptimizationSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStaticMeshOptimizationSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStaticMeshOptimizationSettings, Z_Construct_UPackage__Script_Engine(), TEXT("StaticMeshOptimizationSettings"), sizeof(FStaticMeshOptimizationSettings), Get_Z_Construct_UScriptStruct_FStaticMeshOptimizationSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStaticMeshOptimizationSettings(FStaticMeshOptimizationSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("StaticMeshOptimizationSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStaticMeshOptimizationSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFStaticMeshOptimizationSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StaticMeshOptimizationSettings")),new UScriptStruct::TCppStructOps<FStaticMeshOptimizationSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStaticMeshOptimizationSettings;
	void UStaticMesh::StaticRegisterNativesUStaticMesh()
	{
		FNativeFunctionRegistrar::RegisterFunction(UStaticMesh::StaticClass(), "GetBoundingBox",(Native)&UStaticMesh::execGetBoundingBox);
		FNativeFunctionRegistrar::RegisterFunction(UStaticMesh::StaticClass(), "GetBounds",(Native)&UStaticMesh::execGetBounds);
		FNativeFunctionRegistrar::RegisterFunction(UStaticMesh::StaticClass(), "GetNumLODs",(Native)&UStaticMesh::execGetNumLODs);
		FNativeFunctionRegistrar::RegisterFunction(UStaticMesh::StaticClass(), "GetNumSections",(Native)&UStaticMesh::execGetNumSections);
	}
	IMPLEMENT_CLASS(UStaticMesh, 3065756701);
	void UStaticMeshSocket::StaticRegisterNativesUStaticMeshSocket()
	{
	}
	IMPLEMENT_CLASS(UStaticMeshSocket, 133093727);
static class UEnum* EVertexAttributeStreamType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVertexAttributeStreamType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EVertexAttributeStreamType, Z_Construct_UPackage__Script_Engine(), TEXT("EVertexAttributeStreamType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVertexAttributeStreamType(EVertexAttributeStreamType_StaticEnum, TEXT("/Script/Engine"), TEXT("EVertexAttributeStreamType"), false, nullptr, nullptr);
	void UVertexAttributeStream::StaticRegisterNativesUVertexAttributeStream()
	{
	}
	IMPLEMENT_CLASS(UVertexAttributeStream, 231662645);
	void USubDSurface::StaticRegisterNativesUSubDSurface()
	{
	}
	IMPLEMENT_CLASS(USubDSurface, 1320429530);
class UScriptStruct* FSubsurfaceProfileStruct::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSubsurfaceProfileStruct();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FSubsurfaceProfileStruct_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FSubsurfaceProfileStruct, Z_Construct_UPackage__Script_Engine(), TEXT("SubsurfaceProfileStruct"), sizeof(FSubsurfaceProfileStruct), Get_Z_Construct_UScriptStruct_FSubsurfaceProfileStruct_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FSubsurfaceProfileStruct(FSubsurfaceProfileStruct::StaticStruct, TEXT("/Script/Engine"), TEXT("SubsurfaceProfileStruct"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFSubsurfaceProfileStruct
{
	FScriptStruct_Engine_StaticRegisterNativesFSubsurfaceProfileStruct()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("SubsurfaceProfileStruct")),new UScriptStruct::TCppStructOps<FSubsurfaceProfileStruct>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFSubsurfaceProfileStruct;
	void USubsurfaceProfile::StaticRegisterNativesUSubsurfaceProfile()
	{
	}
	IMPLEMENT_CLASS(USubsurfaceProfile, 593970201);
	void UTextPropertyTestObject::StaticRegisterNativesUTextPropertyTestObject()
	{
	}
	IMPLEMENT_CLASS(UTextPropertyTestObject, 3435297332);
	void UTexture2D::StaticRegisterNativesUTexture2D()
	{
		FNativeFunctionRegistrar::RegisterFunction(UTexture2D::StaticClass(), "Blueprint_GetSizeX",(Native)&UTexture2D::execBlueprint_GetSizeX);
		FNativeFunctionRegistrar::RegisterFunction(UTexture2D::StaticClass(), "Blueprint_GetSizeY",(Native)&UTexture2D::execBlueprint_GetSizeY);
	}
	IMPLEMENT_CLASS(UTexture2D, 1019302111);
	void ULightMapTexture2D::StaticRegisterNativesULightMapTexture2D()
	{
	}
	IMPLEMENT_CLASS(ULightMapTexture2D, 4148739553);
	void UShadowMapTexture2D::StaticRegisterNativesUShadowMapTexture2D()
	{
	}
	IMPLEMENT_CLASS(UShadowMapTexture2D, 1632246444);
	void UTextureLightProfile::StaticRegisterNativesUTextureLightProfile()
	{
	}
	IMPLEMENT_CLASS(UTextureLightProfile, 2171176586);
	void UTexture2DDynamic::StaticRegisterNativesUTexture2DDynamic()
	{
	}
	IMPLEMENT_CLASS(UTexture2DDynamic, 2547542129);
	void UTextureCube::StaticRegisterNativesUTextureCube()
	{
	}
	IMPLEMENT_CLASS(UTextureCube, 889568872);
	void UTextureRenderTarget::StaticRegisterNativesUTextureRenderTarget()
	{
	}
	IMPLEMENT_CLASS(UTextureRenderTarget, 307374508);
	void UTextureRenderTarget2D::StaticRegisterNativesUTextureRenderTarget2D()
	{
	}
	IMPLEMENT_CLASS(UTextureRenderTarget2D, 928040529);
	void UCanvasRenderTarget2D::ReceiveUpdate(UCanvas* Canvas, int32 Width, int32 Height)
	{
		CanvasRenderTarget2D_eventReceiveUpdate_Parms Parms;
		Parms.Canvas=Canvas;
		Parms.Width=Width;
		Parms.Height=Height;
		ProcessEvent(FindFunctionChecked(ENGINE_ReceiveUpdate),&Parms);
	}
	void UCanvasRenderTarget2D::StaticRegisterNativesUCanvasRenderTarget2D()
	{
		FNativeFunctionRegistrar::RegisterFunction(UCanvasRenderTarget2D::StaticClass(), "CreateCanvasRenderTarget2D",(Native)&UCanvasRenderTarget2D::execCreateCanvasRenderTarget2D);
		FNativeFunctionRegistrar::RegisterFunction(UCanvasRenderTarget2D::StaticClass(), "GetSize",(Native)&UCanvasRenderTarget2D::execGetSize);
		FNativeFunctionRegistrar::RegisterFunction(UCanvasRenderTarget2D::StaticClass(), "UpdateResource",(Native)&UCanvasRenderTarget2D::execUpdateResource);
	}
	IMPLEMENT_CLASS(UCanvasRenderTarget2D, 3906186650);
	void UTextureRenderTargetCube::StaticRegisterNativesUTextureRenderTargetCube()
	{
	}
	IMPLEMENT_CLASS(UTextureRenderTargetCube, 1332544027);
class UScriptStruct* FTextureLODGroup::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTextureLODGroup();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTextureLODGroup_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTextureLODGroup, Z_Construct_UPackage__Script_Engine(), TEXT("TextureLODGroup"), sizeof(FTextureLODGroup), Get_Z_Construct_UScriptStruct_FTextureLODGroup_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTextureLODGroup(FTextureLODGroup::StaticStruct, TEXT("/Script/Engine"), TEXT("TextureLODGroup"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTextureLODGroup
{
	FScriptStruct_Engine_StaticRegisterNativesFTextureLODGroup()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TextureLODGroup")),new UScriptStruct::TCppStructOps<FTextureLODGroup>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTextureLODGroup;
	void UTextureLODSettings::StaticRegisterNativesUTextureLODSettings()
	{
	}
	IMPLEMENT_CLASS(UTextureLODSettings, 2501287689);
	void UDeviceProfile::StaticRegisterNativesUDeviceProfile()
	{
	}
	IMPLEMENT_CLASS(UDeviceProfile, 3361579858);
	void UThumbnailInfo::StaticRegisterNativesUThumbnailInfo()
	{
	}
	IMPLEMENT_CLASS(UThumbnailInfo, 1471815582);
class UScriptStruct* FTTLinearColorTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTLinearColorTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTTLinearColorTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTTLinearColorTrack, Z_Construct_UPackage__Script_Engine(), TEXT("TTLinearColorTrack"), sizeof(FTTLinearColorTrack), Get_Z_Construct_UScriptStruct_FTTLinearColorTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTTLinearColorTrack(FTTLinearColorTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("TTLinearColorTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTTLinearColorTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFTTLinearColorTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TTLinearColorTrack")),new UScriptStruct::TCppStructOps<FTTLinearColorTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTTLinearColorTrack;
class UScriptStruct* FTTVectorTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTVectorTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTTVectorTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTTVectorTrack, Z_Construct_UPackage__Script_Engine(), TEXT("TTVectorTrack"), sizeof(FTTVectorTrack), Get_Z_Construct_UScriptStruct_FTTVectorTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTTVectorTrack(FTTVectorTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("TTVectorTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTTVectorTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFTTVectorTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TTVectorTrack")),new UScriptStruct::TCppStructOps<FTTVectorTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTTVectorTrack;
class UScriptStruct* FTTFloatTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTFloatTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTTFloatTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTTFloatTrack, Z_Construct_UPackage__Script_Engine(), TEXT("TTFloatTrack"), sizeof(FTTFloatTrack), Get_Z_Construct_UScriptStruct_FTTFloatTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTTFloatTrack(FTTFloatTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("TTFloatTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTTFloatTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFTTFloatTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TTFloatTrack")),new UScriptStruct::TCppStructOps<FTTFloatTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTTFloatTrack;
class UScriptStruct* FTTEventTrack::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTEventTrack();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTTEventTrack_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTTEventTrack, Z_Construct_UPackage__Script_Engine(), TEXT("TTEventTrack"), sizeof(FTTEventTrack), Get_Z_Construct_UScriptStruct_FTTEventTrack_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTTEventTrack(FTTEventTrack::StaticStruct, TEXT("/Script/Engine"), TEXT("TTEventTrack"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTTEventTrack
{
	FScriptStruct_Engine_StaticRegisterNativesFTTEventTrack()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TTEventTrack")),new UScriptStruct::TCppStructOps<FTTEventTrack>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTTEventTrack;
class UScriptStruct* FTTTrackBase::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTTrackBase();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTTTrackBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTTTrackBase, Z_Construct_UPackage__Script_Engine(), TEXT("TTTrackBase"), sizeof(FTTTrackBase), Get_Z_Construct_UScriptStruct_FTTTrackBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTTTrackBase(FTTTrackBase::StaticStruct, TEXT("/Script/Engine"), TEXT("TTTrackBase"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTTTrackBase
{
	FScriptStruct_Engine_StaticRegisterNativesFTTTrackBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TTTrackBase")),new UScriptStruct::TCppStructOps<FTTTrackBase>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTTTrackBase;
	void UTimelineTemplate::StaticRegisterNativesUTimelineTemplate()
	{
	}
	IMPLEMENT_CLASS(UTimelineTemplate, 483121311);
class UScriptStruct* FTouchInputControl::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTouchInputControl();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FTouchInputControl_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FTouchInputControl, Z_Construct_UPackage__Script_Engine(), TEXT("TouchInputControl"), sizeof(FTouchInputControl), Get_Z_Construct_UScriptStruct_FTouchInputControl_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FTouchInputControl(FTouchInputControl::StaticStruct, TEXT("/Script/Engine"), TEXT("TouchInputControl"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFTouchInputControl
{
	FScriptStruct_Engine_StaticRegisterNativesFTouchInputControl()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("TouchInputControl")),new UScriptStruct::TCppStructOps<FTouchInputControl>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFTouchInputControl;
	void UTouchInterface::StaticRegisterNativesUTouchInterface()
	{
	}
	IMPLEMENT_CLASS(UTouchInterface, 2877897011);
	void UUserDefinedEnum::StaticRegisterNativesUUserDefinedEnum()
	{
	}
	IMPLEMENT_CLASS(UUserDefinedEnum, 3489161434);
static class UEnum* EUserDefinedStructureStatus_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EUserDefinedStructureStatus();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EUserDefinedStructureStatus, Z_Construct_UPackage__Script_Engine(), TEXT("EUserDefinedStructureStatus"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EUserDefinedStructureStatus(EUserDefinedStructureStatus_StaticEnum, TEXT("/Script/Engine"), TEXT("EUserDefinedStructureStatus"), false, nullptr, nullptr);
	void UUserDefinedStruct::StaticRegisterNativesUUserDefinedStruct()
	{
	}
	IMPLEMENT_CLASS(UUserDefinedStruct, 4196092001);
	void UVectorField::StaticRegisterNativesUVectorField()
	{
	}
	IMPLEMENT_CLASS(UVectorField, 3383421845);
static class UEnum* EVectorFieldConstructionOp_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVectorFieldConstructionOp();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EVectorFieldConstructionOp, Z_Construct_UPackage__Script_Engine(), TEXT("EVectorFieldConstructionOp"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVectorFieldConstructionOp(EVectorFieldConstructionOp_StaticEnum, TEXT("/Script/Engine"), TEXT("EVectorFieldConstructionOp"), false, nullptr, nullptr);
	void UVectorFieldAnimated::StaticRegisterNativesUVectorFieldAnimated()
	{
	}
	IMPLEMENT_CLASS(UVectorFieldAnimated, 3906724063);
	void UVectorFieldStatic::StaticRegisterNativesUVectorFieldStatic()
	{
	}
	IMPLEMENT_CLASS(UVectorFieldStatic, 4011802393);
	void UVisualLoggerAutomationTests::StaticRegisterNativesUVisualLoggerAutomationTests()
	{
	}
	IMPLEMENT_CLASS(UVisualLoggerAutomationTests, 66978965);
	void UVisualLoggerDebugSnapshotInterface::StaticRegisterNativesUVisualLoggerDebugSnapshotInterface()
	{
	}
	IMPLEMENT_CLASS(UVisualLoggerDebugSnapshotInterface, 6848589);
	void UWorldComposition::StaticRegisterNativesUWorldComposition()
	{
	}
	IMPLEMENT_CLASS(UWorldComposition, 1576135123);
class UScriptStruct* FAnimationRecordingSettings::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationRecordingSettings();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimationRecordingSettings_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimationRecordingSettings, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationRecordingSettings"), sizeof(FAnimationRecordingSettings), Get_Z_Construct_UScriptStruct_FAnimationRecordingSettings_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimationRecordingSettings(FAnimationRecordingSettings::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimationRecordingSettings"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimationRecordingSettings
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimationRecordingSettings()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimationRecordingSettings")),new UScriptStruct::TCppStructOps<FAnimationRecordingSettings>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimationRecordingSettings;
static class UEnum* EPostCopyOperation_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPostCopyOperation();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EPostCopyOperation, Z_Construct_UPackage__Script_Engine(), TEXT("EPostCopyOperation"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPostCopyOperation(EPostCopyOperation_StaticEnum, TEXT("/Script/Engine"), TEXT("EPostCopyOperation"), false, nullptr, nullptr);
static class UEnum* EPinHidingMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPinHidingMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EPinHidingMode, Z_Construct_UPackage__Script_Engine(), TEXT("EPinHidingMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EPinHidingMode(EPinHidingMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EPinHidingMode"), false, nullptr, nullptr);
class UScriptStruct* FAnimNode_Base::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_Base();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_Base_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_Base, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_Base"), sizeof(FAnimNode_Base), Get_Z_Construct_UScriptStruct_FAnimNode_Base_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_Base(FAnimNode_Base::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_Base"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_Base
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_Base()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_Base")),new UScriptStruct::TCppStructOps<FAnimNode_Base>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_Base;
class UScriptStruct* FExposedValueHandler::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExposedValueHandler();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FExposedValueHandler_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FExposedValueHandler, Z_Construct_UPackage__Script_Engine(), TEXT("ExposedValueHandler"), sizeof(FExposedValueHandler), Get_Z_Construct_UScriptStruct_FExposedValueHandler_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FExposedValueHandler(FExposedValueHandler::StaticStruct, TEXT("/Script/Engine"), TEXT("ExposedValueHandler"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFExposedValueHandler
{
	FScriptStruct_Engine_StaticRegisterNativesFExposedValueHandler()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ExposedValueHandler")),new UScriptStruct::TCppStructOps<FExposedValueHandler>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFExposedValueHandler;
class UScriptStruct* FExposedValueCopyRecord::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExposedValueCopyRecord();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FExposedValueCopyRecord_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FExposedValueCopyRecord, Z_Construct_UPackage__Script_Engine(), TEXT("ExposedValueCopyRecord"), sizeof(FExposedValueCopyRecord), Get_Z_Construct_UScriptStruct_FExposedValueCopyRecord_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FExposedValueCopyRecord(FExposedValueCopyRecord::StaticStruct, TEXT("/Script/Engine"), TEXT("ExposedValueCopyRecord"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFExposedValueCopyRecord
{
	FScriptStruct_Engine_StaticRegisterNativesFExposedValueCopyRecord()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ExposedValueCopyRecord")),new UScriptStruct::TCppStructOps<FExposedValueCopyRecord>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFExposedValueCopyRecord;
class UScriptStruct* FComponentSpacePoseLink::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentSpacePoseLink();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FComponentSpacePoseLink_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FComponentSpacePoseLink, Z_Construct_UPackage__Script_Engine(), TEXT("ComponentSpacePoseLink"), sizeof(FComponentSpacePoseLink), Get_Z_Construct_UScriptStruct_FComponentSpacePoseLink_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FComponentSpacePoseLink(FComponentSpacePoseLink::StaticStruct, TEXT("/Script/Engine"), TEXT("ComponentSpacePoseLink"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFComponentSpacePoseLink
{
	FScriptStruct_Engine_StaticRegisterNativesFComponentSpacePoseLink()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("ComponentSpacePoseLink")),new UScriptStruct::TCppStructOps<FComponentSpacePoseLink>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFComponentSpacePoseLink;
class UScriptStruct* FPoseLink::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseLink();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPoseLink_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPoseLink, Z_Construct_UPackage__Script_Engine(), TEXT("PoseLink"), sizeof(FPoseLink), Get_Z_Construct_UScriptStruct_FPoseLink_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPoseLink(FPoseLink::StaticStruct, TEXT("/Script/Engine"), TEXT("PoseLink"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPoseLink
{
	FScriptStruct_Engine_StaticRegisterNativesFPoseLink()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PoseLink")),new UScriptStruct::TCppStructOps<FPoseLink>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPoseLink;
class UScriptStruct* FPoseLinkBase::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseLinkBase();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FPoseLinkBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FPoseLinkBase, Z_Construct_UPackage__Script_Engine(), TEXT("PoseLinkBase"), sizeof(FPoseLinkBase), Get_Z_Construct_UScriptStruct_FPoseLinkBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FPoseLinkBase(FPoseLinkBase::StaticStruct, TEXT("/Script/Engine"), TEXT("PoseLinkBase"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFPoseLinkBase
{
	FScriptStruct_Engine_StaticRegisterNativesFPoseLinkBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("PoseLinkBase")),new UScriptStruct::TCppStructOps<FPoseLinkBase>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFPoseLinkBase;
class UScriptStruct* FInputScaleBias::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputScaleBias();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FInputScaleBias_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FInputScaleBias, Z_Construct_UPackage__Script_Engine(), TEXT("InputScaleBias"), sizeof(FInputScaleBias), Get_Z_Construct_UScriptStruct_FInputScaleBias_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FInputScaleBias(FInputScaleBias::StaticStruct, TEXT("/Script/Engine"), TEXT("InputScaleBias"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFInputScaleBias
{
	FScriptStruct_Engine_StaticRegisterNativesFInputScaleBias()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("InputScaleBias")),new UScriptStruct::TCppStructOps<FInputScaleBias>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFInputScaleBias;
class UScriptStruct* FAnimNode_ApplyMeshSpaceAdditive::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ApplyMeshSpaceAdditive();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_ApplyMeshSpaceAdditive_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_ApplyMeshSpaceAdditive, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_ApplyMeshSpaceAdditive"), sizeof(FAnimNode_ApplyMeshSpaceAdditive), Get_Z_Construct_UScriptStruct_FAnimNode_ApplyMeshSpaceAdditive_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_ApplyMeshSpaceAdditive(FAnimNode_ApplyMeshSpaceAdditive::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_ApplyMeshSpaceAdditive"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_ApplyMeshSpaceAdditive
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_ApplyMeshSpaceAdditive()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_ApplyMeshSpaceAdditive")),new UScriptStruct::TCppStructOps<FAnimNode_ApplyMeshSpaceAdditive>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_ApplyMeshSpaceAdditive;
class UScriptStruct* FAnimNode_AssetPlayerBase::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_AssetPlayerBase();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_AssetPlayerBase_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_AssetPlayerBase, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_AssetPlayerBase"), sizeof(FAnimNode_AssetPlayerBase), Get_Z_Construct_UScriptStruct_FAnimNode_AssetPlayerBase_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_AssetPlayerBase(FAnimNode_AssetPlayerBase::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_AssetPlayerBase"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_AssetPlayerBase
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_AssetPlayerBase()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_AssetPlayerBase")),new UScriptStruct::TCppStructOps<FAnimNode_AssetPlayerBase>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_AssetPlayerBase;
class UScriptStruct* FAnimNode_SaveCachedPose::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SaveCachedPose();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_SaveCachedPose_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_SaveCachedPose, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_SaveCachedPose"), sizeof(FAnimNode_SaveCachedPose), Get_Z_Construct_UScriptStruct_FAnimNode_SaveCachedPose_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_SaveCachedPose(FAnimNode_SaveCachedPose::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_SaveCachedPose"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SaveCachedPose
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SaveCachedPose()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_SaveCachedPose")),new UScriptStruct::TCppStructOps<FAnimNode_SaveCachedPose>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_SaveCachedPose;
class UScriptStruct* FAnimNode_SequencePlayer::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SequencePlayer();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_SequencePlayer_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_SequencePlayer, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_SequencePlayer"), sizeof(FAnimNode_SequencePlayer), Get_Z_Construct_UScriptStruct_FAnimNode_SequencePlayer_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_SequencePlayer(FAnimNode_SequencePlayer::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_SequencePlayer"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SequencePlayer
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SequencePlayer()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_SequencePlayer")),new UScriptStruct::TCppStructOps<FAnimNode_SequencePlayer>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_SequencePlayer;
class UScriptStruct* FAnimNode_StateMachine::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_StateMachine();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_StateMachine_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_StateMachine, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_StateMachine"), sizeof(FAnimNode_StateMachine), Get_Z_Construct_UScriptStruct_FAnimNode_StateMachine_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_StateMachine(FAnimNode_StateMachine::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_StateMachine"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_StateMachine
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_StateMachine()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_StateMachine")),new UScriptStruct::TCppStructOps<FAnimNode_StateMachine>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_StateMachine;
class UScriptStruct* FAnimationPotentialTransition::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationPotentialTransition();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimationPotentialTransition_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimationPotentialTransition, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationPotentialTransition"), sizeof(FAnimationPotentialTransition), Get_Z_Construct_UScriptStruct_FAnimationPotentialTransition_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimationPotentialTransition(FAnimationPotentialTransition::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimationPotentialTransition"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimationPotentialTransition
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimationPotentialTransition()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimationPotentialTransition")),new UScriptStruct::TCppStructOps<FAnimationPotentialTransition>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimationPotentialTransition;
class UScriptStruct* FAnimationActiveTransitionEntry::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationActiveTransitionEntry();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimationActiveTransitionEntry_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimationActiveTransitionEntry, Z_Construct_UPackage__Script_Engine(), TEXT("AnimationActiveTransitionEntry"), sizeof(FAnimationActiveTransitionEntry), Get_Z_Construct_UScriptStruct_FAnimationActiveTransitionEntry_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimationActiveTransitionEntry(FAnimationActiveTransitionEntry::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimationActiveTransitionEntry"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimationActiveTransitionEntry
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimationActiveTransitionEntry()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimationActiveTransitionEntry")),new UScriptStruct::TCppStructOps<FAnimationActiveTransitionEntry>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimationActiveTransitionEntry;
class UScriptStruct* FAnimNode_SubInput::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SubInput();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_SubInput_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_SubInput, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_SubInput"), sizeof(FAnimNode_SubInput), Get_Z_Construct_UScriptStruct_FAnimNode_SubInput_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_SubInput(FAnimNode_SubInput::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_SubInput"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SubInput
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SubInput()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_SubInput")),new UScriptStruct::TCppStructOps<FAnimNode_SubInput>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_SubInput;
class UScriptStruct* FAnimNode_SubInstance::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SubInstance();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_SubInstance_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_SubInstance, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_SubInstance"), sizeof(FAnimNode_SubInstance), Get_Z_Construct_UScriptStruct_FAnimNode_SubInstance_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_SubInstance(FAnimNode_SubInstance::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_SubInstance"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SubInstance
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SubInstance()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_SubInstance")),new UScriptStruct::TCppStructOps<FAnimNode_SubInstance>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_SubInstance;
static class UEnum* EEvaluatorMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEvaluatorMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEvaluatorMode, Z_Construct_UPackage__Script_Engine(), TEXT("EEvaluatorMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEvaluatorMode(EEvaluatorMode_StaticEnum, TEXT("/Script/Engine"), TEXT("EEvaluatorMode"), false, nullptr, nullptr);
static class UEnum* EEvaluatorDataSource_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEvaluatorDataSource();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEvaluatorDataSource, Z_Construct_UPackage__Script_Engine(), TEXT("EEvaluatorDataSource"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEvaluatorDataSource(EEvaluatorDataSource_StaticEnum, TEXT("/Script/Engine"), TEXT("EEvaluatorDataSource"), false, nullptr, nullptr);
class UScriptStruct* FAnimNode_TransitionPoseEvaluator::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_TransitionPoseEvaluator();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_TransitionPoseEvaluator_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_TransitionPoseEvaluator, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_TransitionPoseEvaluator"), sizeof(FAnimNode_TransitionPoseEvaluator), Get_Z_Construct_UScriptStruct_FAnimNode_TransitionPoseEvaluator_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_TransitionPoseEvaluator(FAnimNode_TransitionPoseEvaluator::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_TransitionPoseEvaluator"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_TransitionPoseEvaluator
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_TransitionPoseEvaluator()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_TransitionPoseEvaluator")),new UScriptStruct::TCppStructOps<FAnimNode_TransitionPoseEvaluator>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_TransitionPoseEvaluator;
class UScriptStruct* FAnimNode_TransitionResult::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_TransitionResult();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_TransitionResult_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_TransitionResult, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_TransitionResult"), sizeof(FAnimNode_TransitionResult), Get_Z_Construct_UScriptStruct_FAnimNode_TransitionResult_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_TransitionResult(FAnimNode_TransitionResult::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_TransitionResult"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_TransitionResult
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_TransitionResult()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_TransitionResult")),new UScriptStruct::TCppStructOps<FAnimNode_TransitionResult>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_TransitionResult;
class UScriptStruct* FAnimNode_UseCachedPose::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_UseCachedPose();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_UseCachedPose_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_UseCachedPose, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_UseCachedPose"), sizeof(FAnimNode_UseCachedPose), Get_Z_Construct_UScriptStruct_FAnimNode_UseCachedPose_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_UseCachedPose(FAnimNode_UseCachedPose::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_UseCachedPose"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_UseCachedPose
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_UseCachedPose()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_UseCachedPose")),new UScriptStruct::TCppStructOps<FAnimNode_UseCachedPose>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_UseCachedPose;
class UScriptStruct* FAnimNode_ConvertLocalToComponentSpace::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ConvertLocalToComponentSpace();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_ConvertLocalToComponentSpace_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_ConvertLocalToComponentSpace, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_ConvertLocalToComponentSpace"), sizeof(FAnimNode_ConvertLocalToComponentSpace), Get_Z_Construct_UScriptStruct_FAnimNode_ConvertLocalToComponentSpace_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_ConvertLocalToComponentSpace(FAnimNode_ConvertLocalToComponentSpace::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_ConvertLocalToComponentSpace"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_ConvertLocalToComponentSpace
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_ConvertLocalToComponentSpace()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_ConvertLocalToComponentSpace")),new UScriptStruct::TCppStructOps<FAnimNode_ConvertLocalToComponentSpace>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_ConvertLocalToComponentSpace;
class UScriptStruct* FAnimNode_ConvertComponentToLocalSpace::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ConvertComponentToLocalSpace();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_ConvertComponentToLocalSpace_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_ConvertComponentToLocalSpace, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_ConvertComponentToLocalSpace"), sizeof(FAnimNode_ConvertComponentToLocalSpace), Get_Z_Construct_UScriptStruct_FAnimNode_ConvertComponentToLocalSpace_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_ConvertComponentToLocalSpace(FAnimNode_ConvertComponentToLocalSpace::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_ConvertComponentToLocalSpace"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_ConvertComponentToLocalSpace
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_ConvertComponentToLocalSpace()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_ConvertComponentToLocalSpace")),new UScriptStruct::TCppStructOps<FAnimNode_ConvertComponentToLocalSpace>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_ConvertComponentToLocalSpace;
static class UEnum* ECameraAlphaBlendMode_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECameraAlphaBlendMode();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ECameraAlphaBlendMode, Z_Construct_UPackage__Script_Engine(), TEXT("ECameraAlphaBlendMode"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ECameraAlphaBlendMode(ECameraAlphaBlendMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ECameraAlphaBlendMode"), false, nullptr, nullptr);
class UScriptStruct* FDummySpacerCameraTypes::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDummySpacerCameraTypes();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FDummySpacerCameraTypes_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FDummySpacerCameraTypes, Z_Construct_UPackage__Script_Engine(), TEXT("DummySpacerCameraTypes"), sizeof(FDummySpacerCameraTypes), Get_Z_Construct_UScriptStruct_FDummySpacerCameraTypes_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FDummySpacerCameraTypes(FDummySpacerCameraTypes::StaticStruct, TEXT("/Script/Engine"), TEXT("DummySpacerCameraTypes"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFDummySpacerCameraTypes
{
	FScriptStruct_Engine_StaticRegisterNativesFDummySpacerCameraTypes()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("DummySpacerCameraTypes")),new UScriptStruct::TCppStructOps<FDummySpacerCameraTypes>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFDummySpacerCameraTypes;
class UScriptStruct* FIntegralCurve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FIntegralCurve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FIntegralCurve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FIntegralCurve, Z_Construct_UPackage__Script_Engine(), TEXT("IntegralCurve"), sizeof(FIntegralCurve), Get_Z_Construct_UScriptStruct_FIntegralCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FIntegralCurve(FIntegralCurve::StaticStruct, TEXT("/Script/Engine"), TEXT("IntegralCurve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFIntegralCurve
{
	FScriptStruct_Engine_StaticRegisterNativesFIntegralCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("IntegralCurve")),new UScriptStruct::TCppStructOps<FIntegralCurve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFIntegralCurve;
class UScriptStruct* FIntegralKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FIntegralKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FIntegralKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FIntegralKey, Z_Construct_UPackage__Script_Engine(), TEXT("IntegralKey"), sizeof(FIntegralKey), Get_Z_Construct_UScriptStruct_FIntegralKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FIntegralKey(FIntegralKey::StaticStruct, TEXT("/Script/Engine"), TEXT("IntegralKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFIntegralKey
{
	FScriptStruct_Engine_StaticRegisterNativesFIntegralKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("IntegralKey")),new UScriptStruct::TCppStructOps<FIntegralKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFIntegralKey;
class UScriptStruct* FNameCurve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNameCurve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNameCurve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNameCurve, Z_Construct_UPackage__Script_Engine(), TEXT("NameCurve"), sizeof(FNameCurve), Get_Z_Construct_UScriptStruct_FNameCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNameCurve(FNameCurve::StaticStruct, TEXT("/Script/Engine"), TEXT("NameCurve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNameCurve
{
	FScriptStruct_Engine_StaticRegisterNativesFNameCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NameCurve")),new UScriptStruct::TCppStructOps<FNameCurve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNameCurve;
class UScriptStruct* FNameCurveKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNameCurveKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FNameCurveKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FNameCurveKey, Z_Construct_UPackage__Script_Engine(), TEXT("NameCurveKey"), sizeof(FNameCurveKey), Get_Z_Construct_UScriptStruct_FNameCurveKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FNameCurveKey(FNameCurveKey::StaticStruct, TEXT("/Script/Engine"), TEXT("NameCurveKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFNameCurveKey
{
	FScriptStruct_Engine_StaticRegisterNativesFNameCurveKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("NameCurveKey")),new UScriptStruct::TCppStructOps<FNameCurveKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFNameCurveKey;
class UScriptStruct* FStringCurve::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStringCurve();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStringCurve_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStringCurve, Z_Construct_UPackage__Script_Engine(), TEXT("StringCurve"), sizeof(FStringCurve), Get_Z_Construct_UScriptStruct_FStringCurve_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStringCurve(FStringCurve::StaticStruct, TEXT("/Script/Engine"), TEXT("StringCurve"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStringCurve
{
	FScriptStruct_Engine_StaticRegisterNativesFStringCurve()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StringCurve")),new UScriptStruct::TCppStructOps<FStringCurve>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStringCurve;
class UScriptStruct* FStringCurveKey::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStringCurveKey();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStringCurveKey_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStringCurveKey, Z_Construct_UPackage__Script_Engine(), TEXT("StringCurveKey"), sizeof(FStringCurveKey), Get_Z_Construct_UScriptStruct_FStringCurveKey_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStringCurveKey(FStringCurveKey::StaticStruct, TEXT("/Script/Engine"), TEXT("StringCurveKey"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStringCurveKey
{
	FScriptStruct_Engine_StaticRegisterNativesFStringCurveKey()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StringCurveKey")),new UScriptStruct::TCppStructOps<FStringCurveKey>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStringCurveKey;
class UScriptStruct* FMemberReference::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMemberReference();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FMemberReference_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FMemberReference, Z_Construct_UPackage__Script_Engine(), TEXT("MemberReference"), sizeof(FMemberReference), Get_Z_Construct_UScriptStruct_FMemberReference_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FMemberReference(FMemberReference::StaticStruct, TEXT("/Script/Engine"), TEXT("MemberReference"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFMemberReference
{
	FScriptStruct_Engine_StaticRegisterNativesFMemberReference()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("MemberReference")),new UScriptStruct::TCppStructOps<FMemberReference>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFMemberReference;
class UScriptStruct* FStreamableManager::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamableManager();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FStreamableManager_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FStreamableManager, Z_Construct_UPackage__Script_Engine(), TEXT("StreamableManager"), sizeof(FStreamableManager), Get_Z_Construct_UScriptStruct_FStreamableManager_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FStreamableManager(FStreamableManager::StaticStruct, TEXT("/Script/Engine"), TEXT("StreamableManager"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFStreamableManager
{
	FScriptStruct_Engine_StaticRegisterNativesFStreamableManager()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("StreamableManager")),new UScriptStruct::TCppStructOps<FStreamableManager>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFStreamableManager;
static class UEnum* EVertexPaintAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVertexPaintAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EVertexPaintAxis, Z_Construct_UPackage__Script_Engine(), TEXT("EVertexPaintAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EVertexPaintAxis(EVertexPaintAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("EVertexPaintAxis"), false, nullptr, nullptr);
static class UEnum* EDrawDebugItemType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDrawDebugItemType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EDrawDebugItemType, Z_Construct_UPackage__Script_Engine(), TEXT("EDrawDebugItemType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EDrawDebugItemType(EDrawDebugItemType_StaticEnum, TEXT("/Script/Engine"), TEXT("EDrawDebugItemType"), false, nullptr, nullptr);
class UScriptStruct* FAnimInstanceProxy::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimInstanceProxy();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimInstanceProxy_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimInstanceProxy, Z_Construct_UPackage__Script_Engine(), TEXT("AnimInstanceProxy"), sizeof(FAnimInstanceProxy), Get_Z_Construct_UScriptStruct_FAnimInstanceProxy_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimInstanceProxy(FAnimInstanceProxy::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimInstanceProxy"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimInstanceProxy
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimInstanceProxy()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimInstanceProxy")),new UScriptStruct::TCppStructOps<FAnimInstanceProxy>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimInstanceProxy;
class UScriptStruct* FQueuedDrawDebugItem::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FQueuedDrawDebugItem();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FQueuedDrawDebugItem_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FQueuedDrawDebugItem, Z_Construct_UPackage__Script_Engine(), TEXT("QueuedDrawDebugItem"), sizeof(FQueuedDrawDebugItem), Get_Z_Construct_UScriptStruct_FQueuedDrawDebugItem_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FQueuedDrawDebugItem(FQueuedDrawDebugItem::StaticStruct, TEXT("/Script/Engine"), TEXT("QueuedDrawDebugItem"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFQueuedDrawDebugItem
{
	FScriptStruct_Engine_StaticRegisterNativesFQueuedDrawDebugItem()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("QueuedDrawDebugItem")),new UScriptStruct::TCppStructOps<FQueuedDrawDebugItem>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFQueuedDrawDebugItem;
static class UEnum* AnimPhysCollisionType_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_AnimPhysCollisionType();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_AnimPhysCollisionType, Z_Construct_UPackage__Script_Engine(), TEXT("AnimPhysCollisionType"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_AnimPhysCollisionType(AnimPhysCollisionType_StaticEnum, TEXT("/Script/Engine"), TEXT("AnimPhysCollisionType"), false, nullptr, nullptr);
static class UEnum* AnimPhysTwistAxis_StaticEnum()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UEnum* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UEnum* Z_Construct_UEnum_Engine_AnimPhysTwistAxis();
		Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_AnimPhysTwistAxis, Z_Construct_UPackage__Script_Engine(), TEXT("AnimPhysTwistAxis"));
	}
	return Singleton;
}
static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_AnimPhysTwistAxis(AnimPhysTwistAxis_StaticEnum, TEXT("/Script/Engine"), TEXT("AnimPhysTwistAxis"), false, nullptr, nullptr);
class UScriptStruct* FAnimSingleNodeInstanceProxy::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSingleNodeInstanceProxy();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimSingleNodeInstanceProxy_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimSingleNodeInstanceProxy, Z_Construct_UPackage__Script_Engine(), TEXT("AnimSingleNodeInstanceProxy"), sizeof(FAnimSingleNodeInstanceProxy), Get_Z_Construct_UScriptStruct_FAnimSingleNodeInstanceProxy_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimSingleNodeInstanceProxy(FAnimSingleNodeInstanceProxy::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimSingleNodeInstanceProxy"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimSingleNodeInstanceProxy
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimSingleNodeInstanceProxy()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimSingleNodeInstanceProxy")),new UScriptStruct::TCppStructOps<FAnimSingleNodeInstanceProxy>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimSingleNodeInstanceProxy;
class UScriptStruct* FAnimNode_SingleNode::StaticStruct()
{
	extern ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SingleNode();
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FAnimNode_SingleNode_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FAnimNode_SingleNode, Z_Construct_UPackage__Script_Engine(), TEXT("AnimNode_SingleNode"), sizeof(FAnimNode_SingleNode), Get_Z_Construct_UScriptStruct_FAnimNode_SingleNode_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FAnimNode_SingleNode(FAnimNode_SingleNode::StaticStruct, TEXT("/Script/Engine"), TEXT("AnimNode_SingleNode"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SingleNode
{
	FScriptStruct_Engine_StaticRegisterNativesFAnimNode_SingleNode()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("AnimNode_SingleNode")),new UScriptStruct::TCppStructOps<FAnimNode_SingleNode>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFAnimNode_SingleNode;
#if USE_COMPILED_IN_NATIVES
// Cross Module References
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearColor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FQuat();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject();
	COREUOBJECT_API class UClass* Z_Construct_UClass_UObject_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FGuid();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FTransform();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FIntPoint();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FIntVector();
	INPUTCORE_API class UEnum* Z_Construct_UEnum_InputCore_ETouchIndex();
	INPUTCORE_API class UScriptStruct* Z_Construct_UScriptStruct_FKey();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FColor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FStringClassReference();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FVector4();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FUniqueNetIdWrapper();
	INPUTCORE_API class UEnum* Z_Construct_UEnum_InputCore_EControllerHand();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_EMouseCursor();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FBoxSphereBounds();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FStringAssetReference();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FPackedNormal();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FBox();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_EAxis();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FMatrix();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpCurveFloat();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpCurveVector();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpCurveQuat();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FBox2D();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_ELifetimeCondition();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FDateTime();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FPlane();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FControllerEvent();
	SLATE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputChord();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnalogInputEvent();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FKeyEvent();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputEvent();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FPointerEvent();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FTimespan();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FRandomStream();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_ESearchCase();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_ESearchDir();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FButtonStyle();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FCheckBoxStyle();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpCurveVector2D();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpCurveTwoVectors();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FFloatRange();
	PACKETHANDLER_API class UClass* Z_Construct_UClass_UHandlerComponentFactory();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FCompositeFont();
	SLATECORE_API class UClass* Z_Construct_UClass_UFontProviderInterface_NoRegister();
	SLATECORE_API class UEnum* Z_Construct_UEnum_SlateCore_EFontLoadingPolicy();
	SLATECORE_API class UEnum* Z_Construct_UEnum_SlateCore_EFontHinting();
	SLATECORE_API class UClass* Z_Construct_UClass_UFontFaceInterface_NoRegister();
	COREUOBJECT_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpCurveLinearColor();
	SLATECORE_API class UScriptStruct* Z_Construct_UScriptStruct_FSlateBrush();
	COREUOBJECT_API class UEnum* Z_Construct_UEnum_CoreUObject_EPixelFormat();

	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantizeNormal();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantize100();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantize10();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantize();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFastArraySerializer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFastArraySerializerItem();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ConstraintBrokenSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_TimerDynamicDelegate__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshBufferAccess();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESpawnActorCollisionHandlingMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EConstraintFrame();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAngularConstraintMotion();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EComponentSocketType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EComponentMobility();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysicalSurface();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EWalkableSlopeBehavior();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERotatorQuantization();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVectorQuantization();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEndPlayReason();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAutoPossessAI();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAutoReceiveInput();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetDormancy();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetRole();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EUpdateRateShiftBucket();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EShadowMapFlags();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELightMapPaddingType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionEnabled();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETimelineSigType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESleepFamily();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERadialImpulseFalloff();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInputConsumeOptions();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFilterInterpolationType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionResponse();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysicsSceneType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETraceTypeQuery();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EObjectTypeQuery();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOverlapFilterOption();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionChannel();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetworkSmoothingMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMovementMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETriangleSortAxis();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETriangleSortOption();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELightingBuildQuality();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialSamplerType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialTessellationMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialShadingModel();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleCollisionMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrailWidthMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGBufferFormat();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESceneCaptureCompositeMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESceneCaptureSource();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETranslucentSortPolicy();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERefractionMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETranslucencyLightingMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESamplerSourceMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlendMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EIndirectLightingCacheQuality();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESceneDepthPriorityGroup();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttachLocation();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDetachmentRule();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttachmentRule();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EActorMetricsType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAspectRatioAxisConstraint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FUserActivity();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCanvasUVTri();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFontRenderInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDepthFieldGlowInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDebugFloatHistory();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRedirector();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDirectoryPath();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFilePath();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentReference();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstrainComponentPropName();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWalkableSlopeOverride();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRepAttachment();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRepMovement();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimerHandle();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRadialDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRadialDamageParams();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPointDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDamageEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshBuildSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPOV();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimUpdateRateParameters();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSlotDesc();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSlotInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMTDResult();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FOverlapResult();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHitResult();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPrimitiveMaterialRef();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSwarmDebugOptions();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassDebugOptions();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassPrimitiveSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassDirectionalLightSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassPointLightSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassLightSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLocalizedSubtitle();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSubtitleCue();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBasedPosition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFractureEffect();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionImpactData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigidBodyContactInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigidBodyErrorCorrection();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigidBodyState();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionResponseContainer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FResponseChannel();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightingChannels();
	ENGINE_API class UClass* Z_Construct_UClass_UEngineTypes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEngineTypes();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EViewModeIndex();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDemoPlayFailure();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETravelType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETravelFailure();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetworkLagState();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENetworkFailure();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETickingGroup();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMouseLockMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMouseCaptureMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInputEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExposureSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FURL();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FActorComponentTickFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FActorTickFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTickFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTickPrerequisite();
	ENGINE_API class UClass* Z_Construct_UClass_UEngineBaseTypes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEngineBaseTypes();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENodeEnabledState();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENodeAdvancedPins();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENodeTitleType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEdGraphPinDirection();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphTerminalType();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphNode_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphNode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintPinStyleType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphPinReference();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphPinType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSimpleMemberReference();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphPin_Deprecated_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphPin_Deprecated();
	ENGINE_API class UClass* Z_Construct_UClass_UInterface_AssetUserData_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterface_AssetUserData();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorComponentDeactivateSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorComponentActivatedSignature__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EComponentCreationMethod();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_Activate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_AddTickPrerequisiteActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_AddTickPrerequisiteComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_ComponentHasTag();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_Deactivate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_GetComponentTickInterval();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_GetOwner();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_IsActive();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_IsBeingDestroyed();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_IsComponentTickEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_K2_DestroyComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_OnRep_IsActive();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_ReceiveBeginPlay();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_ReceiveEndPlay();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_ReceiveTick();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_RemoveTickPrerequisiteActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_RemoveTickPrerequisiteComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_SetActive();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_SetAutoActivate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_SetComponentTickEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_SetComponentTickInterval();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_SetIsReplicated();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_SetTickableWhenPaused();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_SetTickGroup();
	ENGINE_API class UFunction* Z_Construct_UFunction_UActorComponent_ToggleActive();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UActorComponent();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_PhysicsVolumeChanged__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERelativeTransformSpace();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDetailMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FOverlapInfo();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_DetachFromParent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_DoesSocketExist();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetAllSocketNames();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetAttachParent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetAttachSocketName();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetChildComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetChildrenComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetComponentVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetForwardVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetNumChildrenComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetParentComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetPhysicsVolume();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetRelativeTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetRightVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetSocketLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetSocketQuaternion();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetSocketRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetSocketTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_GetUpVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_IsAnySimulatingPhysics();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_IsSimulatingPhysics();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_IsVisible();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AddLocalOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AddLocalRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AddLocalTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AddRelativeLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AddRelativeRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AddWorldOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AddWorldRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AddWorldTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AttachTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_AttachToComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_DetachFromComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_GetComponentLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_GetComponentRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_GetComponentScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_GetComponentToWorld();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_SetRelativeLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_SetRelativeLocationAndRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_SetRelativeRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_SetRelativeTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_SetWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_SetWorldLocationAndRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_SetWorldRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_K2_SetWorldTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_OnRep_AttachChildren();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_OnRep_AttachParent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_OnRep_AttachSocketName();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_OnRep_Transform();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_OnRep_Visibility();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_ResetRelativeTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_SetAbsolute();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_SetHiddenInGame();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_SetRelativeScale3D();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_SetVisibility();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_SetWorldScale3D();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_SnapTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneComponent_ToggleVisibility();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USceneComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UChildActorComponent_SetChildActorClass();
	ENGINE_API class UClass* Z_Construct_UClass_UChildActorComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UChildActorComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialMergeType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureSizingType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialProxySettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialSimplificationSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelSimplificationDetails();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDynamicTextureInstance();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamableTextureInstance();
	ENGINE_API class UClass* Z_Construct_UClass_ULevel_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULevel();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorEndPlaySignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorDestroyedSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorEndTouchOverSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorBeginTouchOverSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorOnInputTouchEndSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorOnInputTouchBeginSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorOnReleasedSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorOnClickedSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorEndCursorOverSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorBeginCursorOverSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorHitSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorEndOverlapSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorBeginOverlapSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_TakePointDamageSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_TakeAnyDamageSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ActorHasTag();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_AddComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_AddTickPrerequisiteActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_AddTickPrerequisiteComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_DetachRootComponentFromParent();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_DisableInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_EnableInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_FlushNetDormancy();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ForceNetUpdate();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorBounds();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorEnableCollision();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorEyesViewPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorForwardVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorRelativeScale3D();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorRightVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorScale3D();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorTickInterval();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorTimeDilation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetActorUpVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetAllChildActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetAttachedActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetAttachParentActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetAttachParentSocketName();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetComponentByClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetComponentsByClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetComponentsByTag();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetDistanceTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetDotProductTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetGameTimeSinceCreation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetHorizontalDistanceTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetHorizontalDotProductTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetInputAxisKeyValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetInputAxisValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetInputVectorAxisValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetInstigator();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetInstigatorController();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetLifeSpan();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetOverlappingActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetOverlappingComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetOwner();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetParentActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetParentComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetRemoteRole();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetSquaredDistanceTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetTickableWhenPaused();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_GetVerticalDistanceTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_HasAuthority();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_IsActorBeingDestroyed();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_IsActorTickEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_IsChildActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_IsOverlappingActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AddActorLocalOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AddActorLocalRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AddActorLocalTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AddActorWorldOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AddActorWorldRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AddActorWorldTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AttachRootComponentTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AttachRootComponentToActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AttachToActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_AttachToComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_DestroyActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_DestroyComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_DetachFromActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_GetActorLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_GetActorRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_GetRootComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_OnBecomeViewTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_OnEndViewTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_OnReset();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_SetActorLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_SetActorLocationAndRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_SetActorRelativeLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_SetActorRelativeRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_SetActorRelativeTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_SetActorRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_SetActorTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_K2_TeleportTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_MakeMIDForMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_MakeNoise();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_OnRep_AttachmentReplication();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_OnRep_Instigator();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_OnRep_Owner();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_OnRep_ReplicatedMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_OnRep_ReplicateMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorBeginCursorOver();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorBeginOverlap();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorEndCursorOver();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorEndOverlap();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorOnClicked();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorOnInputTouchBegin();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorOnInputTouchEnd();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorOnInputTouchEnter();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorOnInputTouchLeave();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveActorOnReleased();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveAnyDamage();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveBeginPlay();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveDestroyed();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveEndPlay();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveHit();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceivePointDamage();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveRadialDamage();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_ReceiveTick();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_RemoveTickPrerequisiteActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_RemoveTickPrerequisiteComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetActorEnableCollision();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetActorHiddenInGame();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetActorRelativeScale3D();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetActorScale3D();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetActorTickEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetActorTickInterval();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetLifeSpan();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetOwner();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetReplicateMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetReplicates();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetTickableWhenPaused();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SetTickGroup();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_SnapRootComponentTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_TearOff();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_UserConstructionScript();
	ENGINE_API class UFunction* Z_Construct_UFunction_AActor_WasRecentlyRendered();
	ENGINE_API class UClass* Z_Construct_UClass_AActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAmbientSound_AdjustVolume();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAmbientSound_FadeIn();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAmbientSound_FadeOut();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAmbientSound_Play();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAmbientSound_Stop();
	ENGINE_API class UClass* Z_Construct_UClass_AAmbientSound_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AAmbientSound();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBrushType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECsgOper();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGeomSelection();
	ENGINE_API class UClass* Z_Construct_UClass_ABrush_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ABrush();
	ENGINE_API class UClass* Z_Construct_UClass_ABrushShape_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ABrushShape();
	ENGINE_API class UClass* Z_Construct_UClass_AVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AVolume();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ReverbPreset();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInteriorSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FReverbSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAudioVolume_OnRep_bEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAudioVolume_SetEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAudioVolume_SetInteriorSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAudioVolume_SetPriority();
	ENGINE_API class UFunction* Z_Construct_UFunction_AAudioVolume_SetReverbSettings();
	ENGINE_API class UClass* Z_Construct_UClass_AAudioVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AAudioVolume();
	ENGINE_API class UClass* Z_Construct_UClass_ABlockingVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ABlockingVolume();
	ENGINE_API class UClass* Z_Construct_UClass_ACameraBlockingVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACameraBlockingVolume();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCullDistanceSizePair();
	ENGINE_API class UClass* Z_Construct_UClass_ACullDistanceVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACullDistanceVolume();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EStreamingVolumeUsage();
	ENGINE_API class UClass* Z_Construct_UClass_ALevelStreamingVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ALevelStreamingVolume();
	ENGINE_API class UClass* Z_Construct_UClass_ALightmassCharacterIndirectDetailVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ALightmassCharacterIndirectDetailVolume();
	ENGINE_API class UClass* Z_Construct_UClass_ALightmassImportanceVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ALightmassImportanceVolume();
	ENGINE_API class UClass* Z_Construct_UClass_AMeshMergeCullingVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AMeshMergeCullingVolume();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationFilterFlags();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationFilterArea();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationQueryFilter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationQueryFilter();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavigationQueryResult();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavPathEvent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavDataGatheringModeConfig();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavDataGatheringMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavigationOptionFlag();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavDataConfig();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavAgentProperties();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMovementProperties();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavAgentSelector();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationTypes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationTypes();
	ENGINE_API class UClass* Z_Construct_UClass_ANavMeshBoundsVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANavMeshBoundsVolume();
	ENGINE_API class UClass* Z_Construct_UClass_UNavRelevantInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavRelevantInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea();
	ENGINE_API class UFunction* Z_Construct_UFunction_ANavModifierVolume_SetAreaClass();
	ENGINE_API class UClass* Z_Construct_UClass_ANavModifierVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANavModifierVolume();
	ENGINE_API class UClass* Z_Construct_UClass_APhysicsVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APhysicsVolume();
	ENGINE_API class UClass* Z_Construct_UClass_ADefaultPhysicsVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ADefaultPhysicsVolume();
	ENGINE_API class UClass* Z_Construct_UClass_AKillZVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AKillZVolume();
	ENGINE_API class UClass* Z_Construct_UClass_UDamageType_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDamageType();
	ENGINE_API class UClass* Z_Construct_UClass_APainCausingVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APainCausingVolume();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlendableLocation();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendableInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendableInterface();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAutoExposureMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAntiAliasingMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDepthOfFieldMethod();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPostProcessSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWeightedBlendables();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWeightedBlendable();
	ENGINE_API class UClass* Z_Construct_UClass_UScene_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UScene();
	ENGINE_API class UClass* Z_Construct_UClass_UInterface_PostProcessVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterface_PostProcessVolume();
	ENGINE_API class UFunction* Z_Construct_UFunction_APostProcessVolume_AddOrUpdateBlendable();
	ENGINE_API class UClass* Z_Construct_UClass_APostProcessVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APostProcessVolume();
	ENGINE_API class UClass* Z_Construct_UClass_APrecomputedVisibilityOverrideVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APrecomputedVisibilityOverrideVolume();
	ENGINE_API class UClass* Z_Construct_UClass_APrecomputedVisibilityVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APrecomputedVisibilityVolume();
	ENGINE_API class UClass* Z_Construct_UClass_APreCullTrianglesVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APreCullTrianglesVolume();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerVolume();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACameraActor_GetAutoActivatePlayerIndex();
	ENGINE_API class UClass* Z_Construct_UClass_ACameraActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACameraActor();
	ENGINE_API class UClass* Z_Construct_UClass_UNavAgentInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavAgentInterface();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_InstigatedAnyDamageSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_CastToPlayerController();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_ClientSetLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_ClientSetRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_GetControlRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_GetDesiredRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_GetViewTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_IsLocalController();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_IsLocalPlayerController();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_IsLookInputIgnored();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_IsMoveInputIgnored();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_IsPlayerController();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_K2_GetPawn();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_LineOfSightTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_OnRep_Pawn();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_OnRep_PlayerState();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_Possess();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_ReceiveInstigatedAnyDamage();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_ResetIgnoreInputFlags();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_ResetIgnoreLookInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_ResetIgnoreMoveInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_SetControlRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_SetIgnoreLookInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_SetIgnoreMoveInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_SetInitialLocationAndRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_StopMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_AController_UnPossess();
	ENGINE_API class UClass* Z_Construct_UClass_AController_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AController();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLatentActionManager();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLatentActionInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FUniqueNetIdRepl();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPlayerMuteList();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECameraAnimPlaySpace();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECameraProjectionMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMinimalViewInfo();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInitialOscillatorOffset();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVOscillator();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FROscillator();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFOscillator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraShake_BlueprintUpdateCameraShake();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraShake_ReceiveIsFinished();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraShake_ReceivePlayShake();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraShake_ReceiveStopShake();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraShake_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraShake();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EViewTargetBlendFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FViewTargetTransitionParams();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTViewTarget();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCameraCacheEntry();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_AddCameraLensEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_AddNewCameraModifier();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_BlueprintUpdateCamera();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_ClearCameraLensEffects();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_FindCameraModifierByClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_GetCameraLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_GetCameraRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_GetFOVAngle();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_GetOwningPlayerController();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_OnPhotographyMultiPartCaptureEnd();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_OnPhotographyMultiPartCaptureStart();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_OnPhotographySessionEnd();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_OnPhotographySessionStart();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_PhotographyCameraModify();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_PlayCameraAnim();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_PlayCameraShake();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_RemoveCameraLensEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_RemoveCameraModifier();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_SetManualCameraFade();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_StartCameraFade();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_StopAllCameraAnims();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_StopAllCameraShakes();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_StopAllInstancesOfCameraAnim();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_StopAllInstancesOfCameraShake();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_StopCameraAnimInst();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_StopCameraFade();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerCameraManager_StopCameraShake();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerCameraManager_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerCameraManager();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_InputGestureHandlerDynamicSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_InputVectorAxisHandlerDynamicSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_InputAxisHandlerDynamicSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_InputTouchHandlerDynamicSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_InputActionHandlerDynamicSignature__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EControllerAnalogStick();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInputComponent_GetControllerAnalogKeyState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInputComponent_GetControllerAnalogStickState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInputComponent_GetControllerKeyTimeDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInputComponent_GetControllerMouseDelta();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInputComponent_GetControllerVectorKeyState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInputComponent_GetTouchState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInputComponent_IsControllerKeyDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInputComponent_WasControllerKeyJustPressed();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInputComponent_WasControllerKeyJustReleased();
	ENGINE_API class UClass* Z_Construct_UClass_UInputComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInputComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKeyHandleMap();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FIndexedCurve();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERichCurveExtrapolation();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERichCurveTangentWeightMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERichCurveTangentMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERichCurveInterpMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRichCurve();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRichCurveKey();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCurveBase_GetTimeRange();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCurveBase_GetValueRange();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRuntimeFloatCurve();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCurveFloat_GetFloatValue();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveFloat_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveFloat();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FActiveForceFeedbackEffect();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FForceFeedbackChannelDetails();
	ENGINE_API class UClass* Z_Construct_UClass_UForceFeedbackEffect_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UForceFeedbackEffect();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDynamicForceFeedbackAction();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ActivateTouchInterface();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_AddPitchInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_AddRollInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_AddYawInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_Camera();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClearAudioListenerOverride();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientAddTextureStreamingLoc();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientCancelPendingMapChange();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientCapBandwidth();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientClearCameraLensEffects();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientCommitMapChange();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientEnableNetworkVoice();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientEndOnlineSession();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientFlushLevelStreaming();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientForceGarbageCollection();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientGameEnded();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientGotoState();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientIgnoreLookInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientIgnoreMoveInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientMessage();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientMutePlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientPlayCameraAnim();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientPlayCameraShake();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientPlayForceFeedback();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientPlaySound();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientPlaySoundAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientPrepareMapChange();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientPrestreamTextures();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientReceiveLocalizedMessage();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientRepObjRef();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientReset();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientRestart();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientRetryClientRestart();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientReturnToMainMenu();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientSetBlockOnAsyncLoading();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientSetCameraFade();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientSetCameraMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientSetCinematicMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientSetForceMipLevelsToBeResident();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientSetHUD();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientSetSpectatorWaiting();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientSetViewTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientSpawnCameraLensEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientStartOnlineSession();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientStopCameraAnim();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientStopCameraShake();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientStopForceFeedback();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientTeamMessage();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientTravel();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientTravelInternal();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientUnmutePlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientUpdateLevelStreamingStatus();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientVoiceHandshakeComplete();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ClientWasKicked();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ConsoleKey();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_DeprojectMousePositionToWorld();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_DeprojectScreenPositionToWorld();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_EnableCheats();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_FOV();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetFocalLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetHitResultUnderCursor();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetHitResultUnderCursorByChannel();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetHitResultUnderCursorForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetHitResultUnderFinger();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetHitResultUnderFingerByChannel();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetHitResultUnderFingerForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetHUD();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetInputAnalogKeyState();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetInputAnalogStickState();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetInputKeyTimeDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetInputMotionState();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetInputMouseDelta();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetInputTouchState();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetInputVectorKeyState();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetMousePosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetSpectatorPawn();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_GetViewportSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_IsInputKeyDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_LocalTravel();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_OnServerStartedVisualLogger();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_Pause();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_PlayDynamicForceFeedback();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_PlayHapticEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ProjectWorldLocationToScreen();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_RestartLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SendToConsole();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerAcknowledgePossession();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerCamera();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerChangeName();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerCheckClientPossession();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerCheckClientPossessionReliable();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerMutePlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerNotifyLoadedWorld();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerPause();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerRestartPlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerSetSpectatorLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerSetSpectatorWaiting();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerShortTimeout();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerToggleAILogging();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerUnmutePlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerUpdateCamera();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerUpdateLevelVisibility();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerVerifyViewTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerViewNextPlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerViewPrevPlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ServerViewSelf();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SetAudioListenerOverride();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SetCinematicMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SetControllerLightColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SetHapticsByValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SetMouseLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SetName();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SetViewTargetWithBlend();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SetVirtualJoystickVisibility();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_StartFire();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_StopHapticEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_SwitchLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_ToggleSpeaking();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_WasInputKeyJustPressed();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerController_WasInputKeyJustReleased();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerController();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADebugCameraController_GetSelectedActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADebugCameraController_ReceiveOnActivate();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADebugCameraController_ReceiveOnActorSelected();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADebugCameraController_ReceiveOnDeactivate();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADebugCameraController_SetPawnMovementSpeedScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADebugCameraController_ShowDebugSelectedInfo();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADebugCameraController_ToggleDisplay();
	ENGINE_API class UClass* Z_Construct_UClass_ADebugCameraController_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ADebugCameraController();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADecalActor_CreateDynamicMaterialInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADecalActor_GetDecalMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADecalActor_SetDecalMaterial();
	ENGINE_API class UClass* Z_Construct_UClass_ADecalActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ADecalActor();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ActorFractureSignature__DelegateSignature();
	ENGINE_API class UClass* Z_Construct_UClass_ADestructibleActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ADestructibleActor();
	ENGINE_API class UClass* Z_Construct_UClass_ADocumentationActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ADocumentationActor();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ParticleCollisionSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ParticleDeathSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ParticleBurstSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ParticleSpawnSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_Activate();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_Deactivate();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_IsActive();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_OnParticleSystemFinished();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_OnRep_bCurrentlyActive();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_SetActorParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_SetColorParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_SetFloatParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_SetMaterialParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_SetTemplate();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_SetVectorParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_AEmitter_ToggleActive();
	ENGINE_API class UClass* Z_Construct_UClass_AEmitter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AEmitter();
	ENGINE_API class UClass* Z_Construct_UClass_AEmitterCameraLensEffectBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AEmitterCameraLensEffectBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDebugTextInfo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_AddDebugText();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_AddHitBox();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_Deproject();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_DrawLine();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_DrawMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_DrawMaterialSimple();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_DrawMaterialTriangle();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_DrawRect();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_DrawText();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_DrawTexture();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_DrawTextureSimple();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_GetActorsInSelectionRectangle();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_GetOwningPawn();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_GetOwningPlayerController();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_GetTextSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_Project();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_ReceiveDrawHUD();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_ReceiveHitBoxBeginCursorOver();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_ReceiveHitBoxClick();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_ReceiveHitBoxEndCursorOver();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_ReceiveHitBoxRelease();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_RemoveAllDebugStrings();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_RemoveDebugText();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_ShowDebug();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_ShowDebugForReticleTargetToggle();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_ShowDebugToggleSubCategory();
	ENGINE_API class UFunction* Z_Construct_UFunction_AHUD_ShowHUD();
	ENGINE_API class UClass* Z_Construct_UClass_AHUD_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AHUD();
	ENGINE_API class UClass* Z_Construct_UClass_ADebugCameraHUD_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ADebugCameraHUD();
	ENGINE_API class UClass* Z_Construct_UClass_AInfo_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AInfo();
	ENGINE_API class UClass* Z_Construct_UClass_AAtmosphericFog_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AAtmosphericFog();
	ENGINE_API class UFunction* Z_Construct_UFunction_AExponentialHeightFog_OnRep_bEnabled();
	ENGINE_API class UClass* Z_Construct_UClass_AExponentialHeightFog_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AExponentialHeightFog();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_AddControllerPitchInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_AddControllerRollInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_AddControllerYawInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_AddMovementInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_ConsumeMovementInputVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_DetachFromControllerPendingDestroy();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_GetBaseAimRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_GetController();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_GetControlRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_GetLastMovementInputVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_GetMovementBaseActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_GetMovementComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_GetNavAgentLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_GetPendingMovementInputVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_IsControlled();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_IsLocallyControlled();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_IsMoveInputIgnored();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_IsPlayerControlled();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_K2_GetMovementInputVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_LaunchPawn();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_OnRep_Controller();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_OnRep_PlayerState();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_PawnMakeNoise();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_ReceivePossessed();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_ReceiveUnpossessed();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_SetCanAffectNavigationGeneration();
	ENGINE_API class UFunction* Z_Construct_UFunction_APawn_SpawnDefaultController();
	ENGINE_API class UClass* Z_Construct_UClass_APawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APawn();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_CanSpectate();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_ChangeName();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_ChoosePlayerStart();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_FindPlayerStart();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_GetDefaultPawnClassForController();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_GetNumPlayers();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_GetNumSpectators();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_HandleStartingNewPlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_HasMatchStarted();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_InitializeHUDForPlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_InitStartSpot();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_K2_FindPlayerStart();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_K2_OnChangeName();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_K2_OnLogout();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_K2_OnRestartPlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_K2_OnSwapPlayerControllers();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_K2_PostLogin();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_MustSpectate();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_PlayerCanRestart();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_ResetLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_RestartPlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_RestartPlayerAtPlayerStart();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_RestartPlayerAtTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_ReturnToMainMenuHost();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_ShouldReset();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_SpawnDefaultPawnAtTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_SpawnDefaultPawnFor();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameModeBase_StartPlay();
	ENGINE_API class UClass* Z_Construct_UClass_AGameModeBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameModeBase();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_AbortMatch();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_EndMatch();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_GetMatchState();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_HasMatchEnded();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_IsMatchInProgress();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_K2_OnSetMatchState();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_ReadyToEndMatch();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_ReadyToStartMatch();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_RestartGame();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_Say();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_SetBandwidthLimit();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameMode_StartMatch();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EStandbyType();
	ENGINE_API class UClass* Z_Construct_UClass_AGameNetworkManager_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameNetworkManager();
	ENGINE_API class UClass* Z_Construct_UClass_AGameSession_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameSession();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameStateBase_GetPlayerRespawnDelay();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameStateBase_GetPlayerStartTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameStateBase_GetServerWorldTimeSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameStateBase_HasBegunPlay();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameStateBase_HasMatchStarted();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameStateBase_OnRep_GameModeClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameStateBase_OnRep_ReplicatedHasBegunPlay();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameStateBase_OnRep_ReplicatedWorldTimeSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameStateBase_OnRep_SpectatorClass();
	ENGINE_API class UClass* Z_Construct_UClass_AGameStateBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameStateBase();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameState_OnRep_ElapsedTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_AGameState_OnRep_MatchState();
	ENGINE_API class UClass* Z_Construct_UClass_AGameState_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGameState();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerState_OnRep_bIsInactive();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerState_OnRep_PlayerName();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerState_OnRep_Score();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerState_OnRep_UniqueId();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerState_ReceiveCopyProperties();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlayerState_ReceiveOverrideWith();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerState_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerState();
	ENGINE_API class UFunction* Z_Construct_UFunction_ASkyLight_OnRep_bEnabled();
	ENGINE_API class UClass* Z_Construct_UClass_ASkyLight_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASkyLight();
	ENGINE_API class UClass* Z_Construct_UClass_AWindDirectionalSource_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AWindDirectionalSource();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshMergeType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshLODSelectionType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELandscapeCullingPrecision();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshFeatureImportance();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshMergingSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshProxySettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshReductionSettings();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVisibilityAggressiveness();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHierarchicalSimplification();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNetViewer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassWorldInfoSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_AWorldSettings_OnRep_WorldGravityZ();
	ENGINE_API class UClass* Z_Construct_UClass_AWorldSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AWorldSettings();
	ENGINE_API class UClass* Z_Construct_UClass_ALevelBounds_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ALevelBounds();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALevelScriptActor_LevelReset();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALevelScriptActor_RemoteEvent();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALevelScriptActor_SetCinematicMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALevelScriptActor_WorldOriginLocationChanged();
	ENGINE_API class UClass* Z_Construct_UClass_ALevelScriptActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ALevelScriptActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_GetBrightness();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_GetLightColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_IsEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_OnRep_bEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_SetAffectTranslucentLighting();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_SetBrightness();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_SetCastShadows();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_SetEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_SetLightColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_SetLightFunctionFadeDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_SetLightFunctionMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_SetLightFunctionScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_ALight_ToggleEnabled();
	ENGINE_API class UClass* Z_Construct_UClass_ALight_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ALight();
	ENGINE_API class UClass* Z_Construct_UClass_ADirectionalLight_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ADirectionalLight();
	ENGINE_API class UFunction* Z_Construct_UFunction_APointLight_SetLightFalloffExponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_APointLight_SetRadius();
	ENGINE_API class UClass* Z_Construct_UClass_APointLight_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APointLight();
	ENGINE_API class UFunction* Z_Construct_UFunction_ASpotLight_SetInnerConeAngle();
	ENGINE_API class UFunction* Z_Construct_UFunction_ASpotLight_SetOuterConeAngle();
	ENGINE_API class UClass* Z_Construct_UClass_ASpotLight_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASpotLight();
	ENGINE_API class UClass* Z_Construct_UClass_AGeneratedMeshAreaLight_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AGeneratedMeshAreaLight();
	ENGINE_API class UClass* Z_Construct_UClass_ALightmassPortal_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ALightmassPortal();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamingTextureBuildInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamingTexturePrimitiveInfo();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDOFMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBodyInstance();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionResponse();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentEndTouchOverSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentBeginTouchOverSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentOnInputTouchEndSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentOnInputTouchBeginSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentOnReleasedSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentOnClickedSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentEndCursorOverSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentBeginCursorOverSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentSleepSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentWakeSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentEndOverlapSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentBeginOverlapSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentHitSignature__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EHasCustomNavigableGeometry();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECanBeCharacterBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSpriteCategoryInfo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_AddAngularImpulse();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_AddForce();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_AddForceAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_AddImpulse();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_AddImpulseAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_AddRadialForce();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_AddRadialImpulse();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_AddTorque();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_CanCharacterStepUp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_ClearMoveIgnoreActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_ClearMoveIgnoreComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_CopyArrayOfMoveIgnoreActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_CopyArrayOfMoveIgnoreComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_CreateAndSetMaterialInstanceDynamic();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_CreateAndSetMaterialInstanceDynamicFromMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_CreateDynamicMaterialInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetAngularDamping();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetCenterOfMass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetClosestPointOnCollision();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetCollisionEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetCollisionObjectType();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetCollisionProfileName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetCollisionResponseToChannel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetInertiaTensor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetLinearDamping();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetMass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetMassScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetNumMaterials();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetOverlapInfos();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetOverlappingActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetOverlappingComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetPhysicsAngularVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetPhysicsLinearVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetPhysicsLinearVelocityAtPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_GetWalkableSlopeOverride();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_IgnoreActorWhenMoving();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_IgnoreComponentWhenMoving();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_IsAnyRigidBodyAwake();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_IsGravityEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_IsOverlappingActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_IsOverlappingComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_K2_IsCollisionEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_K2_IsPhysicsCollisionEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_K2_IsQueryCollisionEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_K2_LineTraceComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_PutRigidBodyToSleep();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_ScaleByMomentOfInertia();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetAllMassScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetAllPhysicsLinearVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetAngularDamping();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetBoundsScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetCastShadow();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetCenterOfMass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetCollisionEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetCollisionObjectType();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetCollisionProfileName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetCollisionResponseToAllChannels();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetCollisionResponseToChannel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetConstraintMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetCullDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetCustomDepthStencilValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetEnableGravity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetLinearDamping();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetLockedAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetMassOverrideInKg();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetMassScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetMaterialByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetNotifyRigidBodyCollision();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetOnlyOwnerSee();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetOwnerNoSee();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetPhysicsAngularVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetPhysicsLinearVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetPhysicsMaxAngularVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetPhysMaterialOverride();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetRenderCustomDepth();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetRenderInMainPass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetRenderInMono();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetSimulatePhysics();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetTranslucentSortPriority();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_SetWalkableSlopeOverride();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_WakeAllRigidBodies();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPrimitiveComponent_WakeRigidBody();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPrimitiveComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialTextureInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLightmassMaterialInterfaceSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInterface_GetBaseMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInterface_GetPhysicalMaterial();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInterface();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMeshComponent_GetMaterialIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMeshComponent_GetMaterials();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMeshComponent_GetMaterialSlotNames();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMeshComponent_IsMaterialSlotNameValid();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMeshComponent_SetScalarParameterValueOnMaterials();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMeshComponent_SetVectorParameterValueOnMaterials();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStaticMeshComponentLODInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPaintedVertex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStaticMeshComponent_GetLocalBounds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStaticMeshComponent_OnRep_StaticMesh();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStaticMeshComponent_SetForcedLodModel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStaticMeshComponent_SetStaticMesh();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshComponent();
	ENGINE_API class UClass* Z_Construct_UClass_ALODActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ALODActor();
	ENGINE_API class UClass* Z_Construct_UClass_AMaterialInstanceActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AMaterialInstanceActor();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnMatineeEvent__DelegateSignature();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpGroupActorInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCameraCutInfo();
	ENGINE_API class UFunction* Z_Construct_UFunction_AMatineeActor_ChangePlaybackDirection();
	ENGINE_API class UFunction* Z_Construct_UFunction_AMatineeActor_EnableGroupByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_AMatineeActor_Pause();
	ENGINE_API class UFunction* Z_Construct_UFunction_AMatineeActor_Play();
	ENGINE_API class UFunction* Z_Construct_UFunction_AMatineeActor_Reverse();
	ENGINE_API class UFunction* Z_Construct_UFunction_AMatineeActor_SetLoopingState();
	ENGINE_API class UFunction* Z_Construct_UFunction_AMatineeActor_SetPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_AMatineeActor_Stop();
	ENGINE_API class UClass* Z_Construct_UClass_AMatineeActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AMatineeActor();
	ENGINE_API class UClass* Z_Construct_UClass_AMatineeActorCameraAnim_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AMatineeActorCameraAnim();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERuntimeGenerationType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSupportedAreaData();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationData_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationData();
	ENGINE_API class UClass* Z_Construct_UClass_AAbstractNavData_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AAbstractNavData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavGraphNode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavGraphEdge();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationGraph_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationGraph();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERecastPartitioning();
	ENGINE_API class UClass* Z_Construct_UClass_ARecastNavMesh_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ARecastNavMesh();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationGraphNode_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationGraphNode();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationObjectBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationObjectBase();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerStart_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerStart();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerStartPIE_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlayerStartPIE();
	ENGINE_API class UClass* Z_Construct_UClass_UNavPathObserverInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavPathObserverInterface();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavCostDisplay();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationTestingActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANavigationTestingActor();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENavLinkDirection();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationSegmentLink();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationLink();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavigationLinkBase();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkDefinition_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkDefinition();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkHostInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkHostInterface();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_SmartLinkReachedSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_ANavLinkProxy_HasMovingAgents();
	ENGINE_API class UFunction* Z_Construct_UFunction_ANavLinkProxy_IsSmartLinkEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_ANavLinkProxy_ReceiveSmartLinkReached();
	ENGINE_API class UFunction* Z_Construct_UFunction_ANavLinkProxy_ResumePathFollowing();
	ENGINE_API class UFunction* Z_Construct_UFunction_ANavLinkProxy_SetSmartLinkEnabled();
	ENGINE_API class UClass* Z_Construct_UClass_ANavLinkProxy_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANavLinkProxy();
	ENGINE_API class UClass* Z_Construct_UClass_ANote_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ANote();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSystemOcclusionBoundsMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ParticleSystemLODMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSystemUpdateMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNamedEmitterMaterial();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLODSoloTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleSystemLOD();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystem_ContainsEmitterType();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystem_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystem();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnSystemFinished__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleEventType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ParticleReplayState();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSysParamType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleSysParam();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_BeginTrails();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_CreateNamedDynamicMaterialInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_EndTrails();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GenerateParticleEvent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GetBeamEndPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GetBeamSourcePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GetBeamSourceStrength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GetBeamSourceTangent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GetBeamTargetPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GetBeamTargetStrength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GetBeamTargetTangent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GetNamedMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_GetNumActiveParticles();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetActorParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetAutoAttachmentParameters();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetAutoAttachParams();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetBeamEndPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetBeamSourcePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetBeamSourceStrength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetBeamSourceTangent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetBeamTargetPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetBeamTargetStrength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetBeamTargetTangent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetColorParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetEmitterEnable();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetFloatParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetMaterialParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetTemplate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetTrailSourceData();
	ENGINE_API class UFunction* Z_Construct_UFunction_UParticleSystemComponent_SetVectorParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystemComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystemComponent();
	ENGINE_API class UClass* Z_Construct_UClass_AParticleEventManager_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AParticleEventManager();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshUVChannelInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPreviewAssetAttachContainer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPreviewAttachedObjectPair();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimLinkMethod();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimLinkableElement();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimInterpolationType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECurveBlendOption();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAdditiveAnimationType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENotifyFilterType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMontageNotifyTickType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneRotationSource();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneControlSpace();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneAxis();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMarkerSyncData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNotifyTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSyncMarker();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNotifyEvent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPerBoneBlendWeights();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPerBoneBlendWeight();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneReference();
	ENGINE_API class UClass* Z_Construct_UClass_UInterface_CollisionDataProvider_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterface_CollisionDataProvider();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_SkeletalMeshOptimizationType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_SkeletalMeshOptimizationImportance();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMaterial();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClothingAssetData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClothPhysicsProperties();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshLODInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshOptimizationSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTriangleSortSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneMirrorExport();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneMirrorInfo();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMesh_FindSocket();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMesh_FindSocketAndIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMesh_GetBounds();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMesh_GetImportedBounds();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMesh_GetSocketByIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMesh_IsSectionUsingCloth();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMesh_NumSockets();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMesh_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMesh();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimGroupRole();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionRootLock();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationGroupReference();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionMovementParams();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimGroupInstance();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimTickRecord();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMarkerSyncAnimPosition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendFilter();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendSampleData();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimationAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimationAsset();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionFinishVelocityMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionSourceSettingsFlags();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionSourceStatusFlags();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERootMotionAccumulateMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSourceGroup();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_JumpForce();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_MoveToDynamicForce();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_MoveToForce();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_RadialForce();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource_ConstantForce();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSource();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSourceSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionSourceStatus();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_LandedSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_CharacterReachedApexSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_CharacterMovementUpdatedSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_MovementModeChangedSignature__DelegateSignature();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBasedMovementInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSimulatedRootMotionReplicatedMove();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRepRootMotionMontage();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_CanJump();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_CanJumpInternal();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_ClientCheatFly();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_ClientCheatGhost();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_ClientCheatWalk();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_Crouch();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_GetAnimRootMotionTranslationScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_GetBaseRotationOffsetRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_GetBaseTranslationOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_GetCurrentMontage();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_IsJumpProvidingForce();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_IsPlayingNetworkedRootMotionMontage();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_IsPlayingRootMotion();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_Jump();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_K2_OnEndCrouch();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_K2_OnMovementModeChanged();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_K2_OnStartCrouch();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_K2_UpdateCustomMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_LaunchCharacter();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_OnJumped();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_OnLanded();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_OnLaunched();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_OnRep_IsCrouched();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_OnRep_ReplicatedBasedMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_OnRep_RootMotion();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_OnWalkingOffLedge();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_PlayAnimMontage();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_SetReplicateMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_StopAnimMontage();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_StopJumping();
	ENGINE_API class UFunction* Z_Construct_UFunction_ACharacter_UnCrouch();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ACharacter();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADefaultPawn_LookUp();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADefaultPawn_LookUpAtRate();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADefaultPawn_MoveForward();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADefaultPawn_MoveRight();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADefaultPawn_MoveUp_World();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADefaultPawn_Turn();
	ENGINE_API class UFunction* Z_Construct_UFunction_ADefaultPawn_TurnAtRate();
	ENGINE_API class UClass* Z_Construct_UClass_ADefaultPawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ADefaultPawn();
	ENGINE_API class UClass* Z_Construct_UClass_ASpectatorPawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASpectatorPawn();
	ENGINE_API class UClass* Z_Construct_UClass_AReflectionCapture_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AReflectionCapture();
	ENGINE_API class UClass* Z_Construct_UClass_ABoxReflectionCapture_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ABoxReflectionCapture();
	ENGINE_API class UClass* Z_Construct_UClass_APlaneReflectionCapture_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlaneReflectionCapture();
	ENGINE_API class UClass* Z_Construct_UClass_ASphereReflectionCapture_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASphereReflectionCapture();
	ENGINE_API class UClass* Z_Construct_UClass_ARigidBodyBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ARigidBodyBase();
	ENGINE_API class UClass* Z_Construct_UClass_APhysicsConstraintActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APhysicsConstraintActor();
	ENGINE_API class UClass* Z_Construct_UClass_APhysicsThruster_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APhysicsThruster();
	ENGINE_API class UFunction* Z_Construct_UFunction_ARadialForceActor_DisableForce();
	ENGINE_API class UFunction* Z_Construct_UFunction_ARadialForceActor_EnableForce();
	ENGINE_API class UFunction* Z_Construct_UFunction_ARadialForceActor_FireImpulse();
	ENGINE_API class UFunction* Z_Construct_UFunction_ARadialForceActor_ToggleForce();
	ENGINE_API class UClass* Z_Construct_UClass_ARadialForceActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ARadialForceActor();
	ENGINE_API class UClass* Z_Construct_UClass_ASceneCapture_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASceneCapture();
	ENGINE_API class UFunction* Z_Construct_UFunction_APlanarReflection_OnInterpToggle();
	ENGINE_API class UClass* Z_Construct_UClass_APlanarReflection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_APlanarReflection();
	ENGINE_API class UFunction* Z_Construct_UFunction_ASceneCapture2D_OnInterpToggle();
	ENGINE_API class UClass* Z_Construct_UClass_ASceneCapture2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASceneCapture2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_ASceneCaptureCube_OnInterpToggle();
	ENGINE_API class UClass* Z_Construct_UClass_ASceneCaptureCube_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASceneCaptureCube();
	ENGINE_API class UClass* Z_Construct_UClass_UMatineeAnimInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMatineeAnimInterface();
	ENGINE_API class UFunction* Z_Construct_UFunction_ASkeletalMeshActor_OnRep_ReplicatedMaterial0();
	ENGINE_API class UFunction* Z_Construct_UFunction_ASkeletalMeshActor_OnRep_ReplicatedMaterial1();
	ENGINE_API class UFunction* Z_Construct_UFunction_ASkeletalMeshActor_OnRep_ReplicatedMesh();
	ENGINE_API class UFunction* Z_Construct_UFunction_ASkeletalMeshActor_OnRep_ReplicatedPhysAsset();
	ENGINE_API class UClass* Z_Construct_UClass_ASkeletalMeshActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASkeletalMeshActor();
	ENGINE_API class UClass* Z_Construct_UClass_ASplineMeshActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASplineMeshActor();
	ENGINE_API class UClass* Z_Construct_UClass_AStaticMeshActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AStaticMeshActor();
	ENGINE_API class UClass* Z_Construct_UClass_ASubDSurfaceActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ASubDSurfaceActor();
	ENGINE_API class UClass* Z_Construct_UClass_ATargetPoint_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ATargetPoint();
	ENGINE_API class UClass* Z_Construct_UClass_ATextRenderActor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ATextRenderActor();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerBase();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerBox_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerBox();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerCapsule_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerCapsule();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerSphere_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ATriggerSphere();
	ENGINE_API class UClass* Z_Construct_UClass_AVectorFieldVolume_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_AVectorFieldVolume();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UApplicationLifecycleComponent_ApplicationLifetimeDelegate__DelegateSignature();
	ENGINE_API class UClass* Z_Construct_UClass_UApplicationLifecycleComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UApplicationLifecycleComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPlaneConstraintAxisSetting();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_ConstrainDirectionToPlane();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_ConstrainLocationToPlane();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_ConstrainNormalToPlane();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_GetGravityZ();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_GetMaxSpeed();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_GetPhysicsVolume();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_GetPlaneConstraintAxisSetting();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_GetPlaneConstraintNormal();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_GetPlaneConstraintOrigin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_IsExceedingMaxSpeed();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_K2_GetMaxSpeedModifier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_K2_GetModifiedMaxSpeed();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_K2_MoveUpdatedComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_PhysicsVolumeChanged();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_SetPlaneConstraintAxisSetting();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_SetPlaneConstraintEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_SetPlaneConstraintFromVectors();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_SetPlaneConstraintNormal();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_SetPlaneConstraintOrigin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_SetUpdatedComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_SnapUpdatedComponentToPlane();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMovementComponent_StopMovementImmediately();
	ENGINE_API class UClass* Z_Construct_UClass_UMovementComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMovementComponent();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UInterpToMovementComponent_OnInterpToResetDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UInterpToMovementComponent_OnInterpToWaitEndDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UInterpToMovementComponent_OnInterpToWaitBeginDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UInterpToMovementComponent_OnInterpToStopDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UInterpToMovementComponent_OnInterpToReverseDelegate__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInterpToBehaviourType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpControlPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInterpToMovementComponent_FinaliseControlPoints();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInterpToMovementComponent_RestartMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInterpToMovementComponent_StopSimulating();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpToMovementComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpToMovementComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavMovementComponent_IsCrouching();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavMovementComponent_IsFalling();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavMovementComponent_IsFlying();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavMovementComponent_IsMovingOnGround();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavMovementComponent_IsSwimming();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavMovementComponent_StopActiveMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavMovementComponent_StopMovementKeepPathing();
	ENGINE_API class UClass* Z_Construct_UClass_UNavMovementComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavMovementComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPawnMovementComponent_AddInputVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPawnMovementComponent_ConsumeInputVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPawnMovementComponent_GetLastInputVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPawnMovementComponent_GetPawnOwner();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPawnMovementComponent_GetPendingInputVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPawnMovementComponent_IsMoveInputIgnored();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPawnMovementComponent_K2_GetInputVector();
	ENGINE_API class UClass* Z_Construct_UClass_UPawnMovementComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPawnMovementComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSmartName();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSmartNameContainer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSmartNameMapping();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveMetaData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimCurveType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneTranslationRetargetingMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVirtualBone();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSlotGroup();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigConfiguration();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNameMapping();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneReductionSetting();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FReferencePose();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoneNode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletonToMeshLinkup();
	ENGINE_API class UClass* Z_Construct_UClass_USkeleton_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeleton();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAlphaBlendOption();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAlphaBlend();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRawCurveTracks();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTransformCurve();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorCurve();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFloatCurve();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimCurveBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimCurveParam();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETypeAdvanceAnim();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSequenceBase_GetPlayLength();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSequenceBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSequenceBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSegment();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRootMotionExtractionStep();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompositeBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompositeBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimNotifyEventType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimMontageInstance();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBranchingPointMarker();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBranchingPoint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSlotAnimationTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCompositeSection();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMontage_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMontage();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavAvoidanceMask();
	ENGINE_API class UClass* Z_Construct_UClass_URVOAvoidanceInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_URVOAvoidanceInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UNetworkPredictionInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNetworkPredictionInterface();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCharacterMovementComponentPostPhysicsTickFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFindFloorResult();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_AddForce();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_AddImpulse();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_CalcVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_CapsuleTouched();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_ClientAckGoodMove();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_ClientAdjustPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_ClientAdjustRootMotionPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_ClientAdjustRootMotionSourcePosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_ClientVeryShortAdjustPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_DisableMovement();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetAnalogInputModifier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetCharacterOwner();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetCurrentAcceleration();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetImpartedMovementBaseVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetMaxAcceleration();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetMaxBrakingDeceleration();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetMaxJumpHeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetMovementBase();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetPerchRadiusThreshold();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_GetValidPerchRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_IsWalkable();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_IsWalking();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_K2_ComputeFloorDist();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_K2_FindFloor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_K2_GetModifiedMaxAcceleration();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_K2_GetWalkableFloorAngle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_K2_GetWalkableFloorZ();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_ServerMove();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_ServerMoveDual();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_ServerMoveDualHybridRootMotion();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_ServerMoveOld();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetAvoidanceEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetAvoidanceGroup();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetAvoidanceGroupMask();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetGroupsToAvoid();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetGroupsToAvoidMask();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetGroupsToIgnore();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetGroupsToIgnoreMask();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetMovementMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetWalkableFloorAngle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCharacterMovementComponent_SetWalkableFloorZ();
	ENGINE_API class UClass* Z_Construct_UClass_UCharacterMovementComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCharacterMovementComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UFloatingPawnMovement_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UFloatingPawnMovement();
	ENGINE_API class UClass* Z_Construct_UClass_USpectatorPawnMovement_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpectatorPawnMovement();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UProjectileMovementComponent_OnProjectileStopDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UProjectileMovementComponent_OnProjectileBounceDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_UProjectileMovementComponent_LimitVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UProjectileMovementComponent_SetVelocityInLocalSpace();
	ENGINE_API class UFunction* Z_Construct_UFunction_UProjectileMovementComponent_StopSimulating();
	ENGINE_API class UClass* Z_Construct_UClass_UProjectileMovementComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UProjectileMovementComponent();
	ENGINE_API class UClass* Z_Construct_UClass_URotatingMovementComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_URotatingMovementComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationInvokerComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationInvokerComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavRelevantComponent_SetNavigationRelevancy();
	ENGINE_API class UClass* Z_Construct_UClass_UNavRelevantComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavRelevantComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkCustomInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkCustomInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkCustomComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkCustomComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavModifierComponent_SetAreaClass();
	ENGINE_API class UClass* Z_Construct_UClass_UNavModifierComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavModifierComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPawnNoiseEmitterComponent_MakeNoise();
	ENGINE_API class UClass* Z_Construct_UClass_UPawnNoiseEmitterComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPawnNoiseEmitterComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELinearConstraintMotion();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTwistConstraint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConeConstraint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearConstraint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstraintBaseParams();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAngularDriveMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAngularDriveConstraint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLinearDriveConstraint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstraintDrive();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstraintInstance();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConstraintProfileProperties();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPhysicalAnimationData();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicalAnimationComponent_ApplyPhysicalAnimationProfileBelow();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicalAnimationComponent_ApplyPhysicalAnimationSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicalAnimationComponent_ApplyPhysicalAnimationSettingsBelow();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicalAnimationComponent_SetSkeletalMeshComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicalAnimationComponent_SetStrengthMultiplyer();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicalAnimationComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicalAnimationComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_GetGrabbedComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_GetTargetLocationAndRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_GrabComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_GrabComponentAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_GrabComponentAtLocationWithRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_ReleaseComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_SetAngularDamping();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_SetAngularStiffness();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_SetInterpolationSpeed();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_SetLinearDamping();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_SetLinearStiffness();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_SetTargetLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_SetTargetLocationAndRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsHandleComponent_SetTargetRotation();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsHandleComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsHandleComponent();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UPlatformEventsComponent_PlatformEventDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlatformEventsComponent_IsInLaptopMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlatformEventsComponent_IsInTabletMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlatformEventsComponent_SupportsConvertibleLaptops();
	ENGINE_API class UClass* Z_Construct_UClass_UPlatformEventsComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPlatformEventsComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAtmospherePrecomputeParameters();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_DisableGroundScattering();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_DisableSunDisk();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetAltitudeScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetDefaultBrightness();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetDefaultLightColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetDensityMultiplier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetDensityOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetDistanceOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetDistanceScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetFogMultiplier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetPrecomputeParams();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetStartDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_SetSunMultiplier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAtmosphericFogComponent_StartPrecompute();
	ENGINE_API class UClass* Z_Construct_UClass_UAtmosphericFogComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAtmosphericFogComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttenuationShape();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttenuationDistanceModel();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBaseAttenuationSettings();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESoundSpatializationAlgorithm();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESoundDistanceCalc();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundAttenuationSettings();
	ENGINE_API class UClass* Z_Construct_UClass_USoundAttenuation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundAttenuation();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnAudioPlaybackPercent__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnQueueSubtitles__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnAudioFinished__DelegateSignature();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAudioComponentParam();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_AdjustAttenuation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_AdjustVolume();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_BP_GetAttenuationSettingsToApply();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_FadeIn();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_FadeOut();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_IsPlaying();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_Play();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_SetBoolParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_SetFloatParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_SetIntParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_SetPaused();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_SetPitchMultiplier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_SetSound();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_SetUISound();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_SetVolumeMultiplier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_SetWaveParameter();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAudioComponent_Stop();
	ENGINE_API class UClass* Z_Construct_UClass_UAudioComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAudioComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_AddOrUpdateBlendable();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_GetCameraView();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_SetAspectRatio();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_SetConstraintAspectRatio();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_SetFieldOfView();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_SetOrthoFarClipPlane();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_SetOrthoNearClipPlane();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_SetOrthoWidth();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_SetPostProcessBlendWeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_SetProjectionMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraComponent_SetUseFieldOfViewForLOD();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDecalComponent_CreateDynamicMaterialInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDecalComponent_GetDecalMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDecalComponent_GetFadeDuration();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDecalComponent_GetFadeStartDelay();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDecalComponent_SetDecalMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDecalComponent_SetFadeOut();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDecalComponent_SetSortOrder();
	ENGINE_API class UClass* Z_Construct_UClass_UDecalComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDecalComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetDirectionalInscatteringColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetDirectionalInscatteringExponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetDirectionalInscatteringStartDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetFogCutoffDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetFogDensity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetFogHeightFalloff();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetFogInscatteringColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetFogMaxOpacity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetFullyDirectionalInscatteringColorDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetInscatteringColorCubemap();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetInscatteringTextureTint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetNonDirectionalInscatteringColorDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UExponentialHeightFogComponent_SetStartDistance();
	ENGINE_API class UClass* Z_Construct_UClass_UExponentialHeightFogComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UExponentialHeightFogComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FForceFeedbackAttenuationSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UForceFeedbackAttenuation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UForceFeedbackAttenuation();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnForceFeedbackFinished__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_UForceFeedbackComponent_AdjustAttenuation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UForceFeedbackComponent_BP_GetAttenuationSettingsToApply();
	ENGINE_API class UFunction* Z_Construct_UFunction_UForceFeedbackComponent_Play();
	ENGINE_API class UFunction* Z_Construct_UFunction_UForceFeedbackComponent_SetForceFeedbackEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_UForceFeedbackComponent_SetIntensityMultiplier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UForceFeedbackComponent_Stop();
	ENGINE_API class UClass* Z_Construct_UClass_UForceFeedbackComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UForceFeedbackComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponentBase_GetLightColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponentBase_SetCastShadows();
	ENGINE_API class UClass* Z_Construct_UClass_ULightComponentBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULightComponentBase();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetAffectDynamicIndirectLighting();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetAffectTranslucentLighting();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetBloomScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetBloomThreshold();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetBloomTint();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetEnableLightShaftBloom();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetIESTexture();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetIndirectLightingIntensity();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetIntensity();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetLightColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetLightFunctionDisabledBrightness();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetLightFunctionFadeDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetLightFunctionMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetLightFunctionScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULightComponent_SetTemperature();
	ENGINE_API class UClass* Z_Construct_UClass_ULightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULightComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDirectionalLightComponent_SetCascadeDistributionExponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDirectionalLightComponent_SetCascadeTransitionFraction();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDirectionalLightComponent_SetDynamicShadowCascades();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDirectionalLightComponent_SetDynamicShadowDistanceMovableLight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDirectionalLightComponent_SetDynamicShadowDistanceStationaryLight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDirectionalLightComponent_SetEnableLightShaftOcclusion();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDirectionalLightComponent_SetLightShaftOverrideDirection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDirectionalLightComponent_SetOcclusionMaskDarkness();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDirectionalLightComponent_SetShadowDistanceFadeoutFraction();
	ENGINE_API class UClass* Z_Construct_UClass_UDirectionalLightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDirectionalLightComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPointLightComponent_SetAttenuationRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPointLightComponent_SetLightFalloffExponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPointLightComponent_SetSourceLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPointLightComponent_SetSourceRadius();
	ENGINE_API class UClass* Z_Construct_UClass_UPointLightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPointLightComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USpotLightComponent_SetInnerConeAngle();
	ENGINE_API class UFunction* Z_Construct_UFunction_USpotLightComponent_SetOuterConeAngle();
	ENGINE_API class UClass* Z_Construct_UClass_USpotLightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpotLightComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESkyLightSourceType();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkyLightComponent_RecaptureSky();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkyLightComponent_SetCubemap();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkyLightComponent_SetCubemapBlend();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkyLightComponent_SetIndirectLightingIntensity();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkyLightComponent_SetIntensity();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkyLightComponent_SetLightColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkyLightComponent_SetMinOcclusion();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkyLightComponent_SetOcclusionTint();
	ENGINE_API class UClass* Z_Construct_UClass_USkyLightComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkyLightComponent();
	ENGINE_API class UClass* Z_Construct_UClass_ULightmassPortalComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULightmassPortalComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationGraphNodeComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationGraphNodeComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_BreakConstraint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_GetConstraintForce();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_GetCurrentSwing1();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_GetCurrentSwing2();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_GetCurrentTwist();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularDriveMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularDriveParams();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularOrientationDrive();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularOrientationTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularSwing1Limit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularSwing2Limit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularTwistLimit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularVelocityDrive();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularVelocityDriveSLERP();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularVelocityDriveTwistAndSwing();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetAngularVelocityTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetConstrainedComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetConstraintReferenceFrame();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetConstraintReferenceOrientation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetConstraintReferencePosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetDisableCollision();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetLinearDriveParams();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetLinearPositionDrive();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetLinearPositionTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetLinearVelocityDrive();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetLinearVelocityTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetLinearXLimit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetLinearYLimit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetLinearZLimit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetOrientationDriveSLERP();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsConstraintComponent_SetOrientationDriveTwistAndSwing();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsConstraintComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsConstraintComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsSpringComponent_GetNormalizedCompressionScalar();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsSpringComponent_GetSpringCurrentEndPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsSpringComponent_GetSpringDirection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPhysicsSpringComponent_GetSpringRestingPoint();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsSpringComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsSpringComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsThrusterComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsThrusterComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UShapeComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UShapeComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPostProcessComponent_AddOrUpdateBlendable();
	ENGINE_API class UClass* Z_Construct_UClass_UPostProcessComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPostProcessComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UArrowComponent_SetArrowColor_DEPRECATED();
	ENGINE_API class UFunction* Z_Construct_UFunction_UArrowComponent_SetArrowColor_New();
	ENGINE_API class UClass* Z_Construct_UClass_UArrowComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UArrowComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBillboardComponent_SetSprite();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBillboardComponent_SetSpriteAndUV();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBillboardComponent_SetUV();
	ENGINE_API class UClass* Z_Construct_UClass_UBillboardComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBillboardComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UBrushComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBrushComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UDrawFrustumComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDrawFrustumComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBatchedPoint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBatchedLine();
	ENGINE_API class UClass* Z_Construct_UClass_ULineBatchComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULineBatchComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialSpriteElement();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialBillboardComponent_AddElement();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialBillboardComponent_SetElements();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialBillboardComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialBillboardComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneSpaces();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshComponentUpdateFlag();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysBodyOp();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBoneVisibilityStatus();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkelMeshComponentLODInfo();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_BoneIsChildOf();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_ClearVertexColorOverride();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_FindClosestBone_K2();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_GetBoneIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_GetBoneName();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_GetNumBones();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_GetParentBone();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_GetSocketBoneName();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_HideBoneByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_IsBoneHiddenByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_SetForcedLOD();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_SetMasterPoseComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_SetMinLOD();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_SetPhysicsAsset();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_SetSkeletalMesh();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_SetVertexColorOverride_LinearColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_TransformFromBoneSpace();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_TransformToBoneSpace();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkinnedMeshComponent_UnHideBoneByName();
	ENGINE_API class UClass* Z_Construct_UClass_USkinnedMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkinnedMeshComponent();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_ComponentFractureSignature__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDestructibleComponent_ApplyDamage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDestructibleComponent_ApplyRadiusDamage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDestructibleComponent_GetDestructibleMesh();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDestructibleComponent_SetDestructibleMesh();
	ENGINE_API class UClass* Z_Construct_UClass_UDestructibleComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDestructibleComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_CopyPoseFromSkeletalComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_GetBoneLocationByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_GetBoneRotationByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_GetBoneScaleByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_GetBoneTransformByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_ResetBoneTransformByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_SetBoneLocationByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_SetBoneRotationByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_SetBoneScaleByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPoseableMeshComponent_SetBoneTransformByName();
	ENGINE_API class UClass* Z_Construct_UClass_UPoseableMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPoseableMeshComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSingleAnimationPlayData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseSnapshot();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysicsTransformUpdateMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimationMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EKinematicBonesUpdateToPhysics();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshComponentClothTickFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshComponentEndPhysicsTickFunction();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_AccumulateAllBodiesBelowPhysicsBlendWeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_AddForceToAllBodiesBelow();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_AddImpulseToAllBodiesBelow();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_BindClothToMasterPoseComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_BreakConstraint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_ClearMorphTargets();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_FindConstraintBoneName();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_ForceClothNextUpdateTeleport();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_ForceClothNextUpdateTeleportAndReset();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetAnimationMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetAnimInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetBoneMass();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetClothMaxDistanceScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetCurrentJointAngles();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetMorphTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetPlayRate();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetPostProcessInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_GetSkeletalCenterOfMass();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_IsBodyGravityEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_IsClothingSimulationSuspended();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_IsPlaying();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_K2_GetClosestPointOnPhysicsAsset();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_OverrideAnimationData();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_Play();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_PlayAnimation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_ResetAllBodiesSimulatePhysics();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_ResetClothTeleportMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_ResumeClothingSimulation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAllBodiesBelowPhysicsBlendWeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAllBodiesBelowSimulatePhysics();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAllBodiesPhysicsBlendWeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAllBodiesSimulatePhysics();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAllMotorsAngularDriveParams();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAllMotorsAngularPositionDrive();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAllMotorsAngularVelocityDrive();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAngularLimits();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAnimation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAnimationMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetAnimInstanceClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetBodyNotifyRigidBodyCollision();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetClothMaxDistanceScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetConstraintProfile();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetConstraintProfileForAll();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetEnableBodyGravity();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetEnableGravityOnAllBodiesBelow();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetEnablePhysicsBlending();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetMorphTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetNotifyRigidBodyCollisionBelow();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetPhysicsBlendWeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetPlayRate();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SetUpdateAnimationInEditor();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SnapshotPose();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_Stop();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_SuspendClothingSimulation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshComponent_UnbindClothFromMasterPoseComponent();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInstancedStaticMeshMappingInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInstancedStaticMeshInstanceData();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_AddInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_AddInstanceWorldSpace();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_ClearInstances();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_GetInstanceCount();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_GetInstancesOverlappingBox();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_GetInstancesOverlappingSphere();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_GetInstanceTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_RemoveInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_SetCullDistances();
	ENGINE_API class UFunction* Z_Construct_UFunction_UInstancedStaticMeshComponent_UpdateInstanceTransform();
	ENGINE_API class UClass* Z_Construct_UClass_UInstancedStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInstancedStaticMeshComponent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClusterNode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHierarchicalInstancedStaticMeshComponent_RemoveInstances();
	ENGINE_API class UClass* Z_Construct_UClass_UHierarchicalInstancedStaticMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UHierarchicalInstancedStaticMeshComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESplineMeshAxis();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSplineMeshParams();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetBoundaryMax();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetBoundaryMin();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetEndOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetEndPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetEndRoll();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetEndScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetEndTangent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetForwardAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetSplineUpDir();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetStartOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetStartPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetStartRoll();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetStartScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_GetStartTangent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetBoundaryMax();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetBoundaryMin();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetEndOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetEndPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetEndRoll();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetEndScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetEndTangent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetForwardAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetSplineUpDir();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetStartAndEnd();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetStartOffset();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetStartPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetStartRoll();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetStartScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_SetStartTangent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineMeshComponent_UpdateMesh();
	ENGINE_API class UClass* Z_Construct_UClass_USplineMeshComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USplineMeshComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UModelComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UModelComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkRenderingComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkRenderingComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UNavMeshRenderingComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavMeshRenderingComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UNavTestRenderingComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavTestRenderingComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBoxComponent_GetScaledBoxExtent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBoxComponent_GetUnscaledBoxExtent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBoxComponent_SetBoxExtent();
	ENGINE_API class UClass* Z_Construct_UClass_UBoxComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBoxComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetScaledCapsuleHalfHeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetScaledCapsuleHalfHeight_WithoutHemisphere();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetScaledCapsuleRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetScaledCapsuleSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetScaledCapsuleSize_WithoutHemisphere();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetShapeScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetUnscaledCapsuleHalfHeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetUnscaledCapsuleHalfHeight_WithoutHemisphere();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetUnscaledCapsuleRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetUnscaledCapsuleSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_GetUnscaledCapsuleSize_WithoutHemisphere();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_SetCapsuleHalfHeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_SetCapsuleRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCapsuleComponent_SetCapsuleSize();
	ENGINE_API class UClass* Z_Construct_UClass_UCapsuleComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCapsuleComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USphereComponent_GetScaledSphereRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_USphereComponent_GetShapeScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_USphereComponent_GetUnscaledSphereRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_USphereComponent_SetSphereRadius();
	ENGINE_API class UClass* Z_Construct_UClass_USphereComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USphereComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UDrawSphereComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDrawSphereComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESplineCoordinateSpace();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESplinePointType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSplinePoint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSplineCurves();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_AddPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_AddPoints();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_AddSplineLocalPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_AddSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_AddSplinePointAtIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_AddSplineWorldPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_ClearSplinePoints();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindDirectionClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindInputKeyClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindLocationClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindRightVectorClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindRollClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindRotationClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindScaleClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindTangentClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindTransformClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_FindUpVectorClosestToWorldLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetArriveTangentAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetDefaultUpVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetDirectionAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetDirectionAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetDirectionAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetDistanceAlongSplineAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetInputKeyAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetLeaveTangentAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetLocalLocationAndTangentAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetLocationAndTangentAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetLocationAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetLocationAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetLocationAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetNumberOfSplinePoints();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetRightVectorAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetRightVectorAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetRightVectorAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetRollAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetRollAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetRollAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetRotationAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetRotationAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetRotationAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetScaleAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetScaleAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetScaleAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetSplineLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetSplinePointType();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetTangentAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetTangentAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetTangentAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetTransformAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetTransformAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetTransformAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetUpVectorAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetUpVectorAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetUpVectorAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetWorldDirectionAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetWorldDirectionAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetWorldLocationAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetWorldLocationAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetWorldLocationAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetWorldRotationAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetWorldRotationAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_GetWorldTangentAtDistanceAlongSpline();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_IsClosedLoop();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_RemoveSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetClosedLoop();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetClosedLoopAtPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetDefaultUpVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetDrawDebug();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetLocationAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetSelectedSplineSegmentColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetSplineLocalPoints();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetSplinePoints();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetSplinePointType();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetSplineWorldPoints();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetTangentAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetTangentsAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetUnselectedSplineSegmentColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetUpVectorAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_SetWorldLocationAtSplinePoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_USplineComponent_UpdateSpline();
	ENGINE_API class UClass* Z_Construct_UClass_USplineComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USplineComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USubDSurfaceComponent_SetMesh();
	ENGINE_API class UClass* Z_Construct_UClass_USubDSurfaceComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USubDSurfaceComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVerticalTextAligment();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EHorizTextAligment();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_GetTextLocalSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_GetTextWorldSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_K2_SetText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetFont();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetHorizontalAlignment();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetHorizSpacingAdjust();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetTextMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetTextRenderColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetVerticalAlignment();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetVertSpacingAdjust();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetWorldSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetXScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTextRenderComponent_SetYScale();
	ENGINE_API class UClass* Z_Construct_UClass_UTextRenderComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextRenderComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UVectorFieldComponent_SetIntensity();
	ENGINE_API class UClass* Z_Construct_UClass_UVectorFieldComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UVectorFieldComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_URadialForceComponent_AddObjectTypeToAffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_URadialForceComponent_FireImpulse();
	ENGINE_API class UFunction* Z_Construct_UFunction_URadialForceComponent_RemoveObjectTypeToAffect();
	ENGINE_API class UClass* Z_Construct_UClass_URadialForceComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_URadialForceComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EReflectionSourceType();
	ENGINE_API class UClass* Z_Construct_UClass_UReflectionCaptureComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UReflectionCaptureComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UBoxReflectionCaptureComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBoxReflectionCaptureComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UPlaneReflectionCaptureComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPlaneReflectionCaptureComponent();
	ENGINE_API class UClass* Z_Construct_UClass_USphereReflectionCaptureComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USphereReflectionCaptureComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UScriptViewportClient_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UScriptViewportClient();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDebugDisplayProperty();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameViewportClient_SetConsoleTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameViewportClient_ShowTitleSafeArea();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameViewportClient_SSSwapControllers();
	ENGINE_API class UClass* Z_Construct_UClass_UGameViewportClient_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UGameViewportClient();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEngineShowFlagsSetting();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponent_ClearShowOnlyComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponent_HideActorComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponent_HideComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponent_RemoveShowOnlyActorComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponent_RemoveShowOnlyComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponent_ShowOnlyActorComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponent_ShowOnlyComponent();
	ENGINE_API class UClass* Z_Construct_UClass_USceneCaptureComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USceneCaptureComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UPlanarReflectionComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPlanarReflectionComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponent2D_AddOrUpdateBlendable();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponent2D_CaptureScene();
	ENGINE_API class UClass* Z_Construct_UClass_USceneCaptureComponent2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USceneCaptureComponent2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_USceneCaptureComponentCube_CaptureScene();
	ENGINE_API class UClass* Z_Construct_UClass_USceneCaptureComponentCube_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USceneCaptureComponentCube();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USpringArmComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EStereoLayerShape();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EStereoLayerType();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerComponent_GetPriority();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerComponent_GetQuadSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerComponent_GetTexture();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerComponent_GetUVRect();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerComponent_MarkTextureForUpdate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerComponent_SetPriority();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerComponent_SetQuadSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerComponent_SetTexture();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerComponent_SetUVRect();
	ENGINE_API class UClass* Z_Construct_UClass_UStereoLayerComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStereoLayerComponent();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EWindSourceType();
	ENGINE_API class UFunction* Z_Construct_UFunction_UWindDirectionalSourceComponent_SetMaximumGustAmount();
	ENGINE_API class UFunction* Z_Construct_UFunction_UWindDirectionalSourceComponent_SetMinimumGustAmount();
	ENGINE_API class UFunction* Z_Construct_UFunction_UWindDirectionalSourceComponent_SetRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_UWindDirectionalSourceComponent_SetSpeed();
	ENGINE_API class UFunction* Z_Construct_UFunction_UWindDirectionalSourceComponent_SetStrength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UWindDirectionalSourceComponent_SetWindType();
	ENGINE_API class UClass* Z_Construct_UClass_UWindDirectionalSourceComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UWindDirectionalSourceComponent();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnTimelineLinearColor__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnTimelineVector__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnTimelineFloat__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnTimelineEvent__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETimelineDirection();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETimelineLengthMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimeline();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimelineLinearColorTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimelineFloatTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimelineVectorTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTimelineEventEntry();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_GetIgnoreTimeDilation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_GetPlaybackPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_GetPlayRate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_GetTimelineLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_IsLooping();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_IsPlaying();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_IsReversing();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_OnRep_Timeline();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_Play();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_PlayFromStart();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_Reverse();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_ReverseFromEnd();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetFloatCurve();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetIgnoreTimeDilation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetLinearColorCurve();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetLooping();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetNewTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetPlaybackPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetPlayRate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetTimelineLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetTimelineLengthMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_SetVectorCurve();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTimelineComponent_Stop();
	ENGINE_API class UClass* Z_Construct_UClass_UTimelineComponent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTimelineComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UAISystemBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAISystemBase();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimComposite_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimComposite();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAdditiveBasePoseType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_AnimationKeyFormat();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_AnimationCompressionFormat();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCompressedTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FScaleTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRotationTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTranslationTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTrackToSkeletonMap();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSequenceTrackContainer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRawAnimSequenceTrack();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSequence_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSequence();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENotifyTriggerMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlendSpaceAxis();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPerBoneInterpolation();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGridBlendSample();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorElement();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendSample();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendParameter();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpolationParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendSpaceBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendSpaceBase();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendSpace_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendSpace();
	ENGINE_API class UClass* Z_Construct_UClass_UAimOffsetBlendSpace_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAimOffsetBlendSpace();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendSpace1D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendSpace1D();
	ENGINE_API class UClass* Z_Construct_UClass_UAimOffsetBlendSpace1D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAimOffsetBlendSpace1D();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseDataContainer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseData();
	ENGINE_API class UClass* Z_Construct_UClass_UPoseAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPoseAsset();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETransitionLogicType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETransitionBlendMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBakedAnimationStateMachine();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBakedAnimationState();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBakedStateExitTransition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationTransitionBetweenStates();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationState();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationStateBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationTransitionRule();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimStateMachineTypes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimStateMachineTypes();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimClassInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimClassInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimClassData_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimClassData();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_Automatic_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_Automatic();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_BitwiseCompressOnly_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_BitwiseCompressOnly();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_LeastDestructive_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_LeastDestructive();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_RemoveEverySecondKey_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_RemoveEverySecondKey();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_RemoveLinearKeys_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_RemoveLinearKeys();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_PerTrackCompression_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_PerTrackCompression();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_RemoveTrivialKeys_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimCompress_RemoveTrivialKeys();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnMontageBlendingOutStartedMCDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnAllMontageInstancesEndedMCDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnMontageEndedMCDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnMontageStartedMCDelegate__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMontagePlayReturnType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAnimCurveType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSlotEvaluationPose();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FA2CSPose();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FA2Pose();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_BlueprintInitializeAnimation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_BlueprintPostEvaluateAnimation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_BlueprintUpdateAnimation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_CalculateDirection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_ClearMorphTargets();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetAnimAssetPlayerLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetAnimAssetPlayerTimeFraction();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetAnimAssetPlayerTimeFromEnd();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetAnimAssetPlayerTimeFromEndFraction();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetCurrentActiveMontage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetCurrentStateElapsedTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetCurrentStateName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetCurveValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceAssetPlayerLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceAssetPlayerTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceAssetPlayerTimeFraction();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceAssetPlayerTimeFromEnd();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceAssetPlayerTimeFromEndFraction();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceCurrentStateElapsedTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceMachineWeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceStateWeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceTransitionCrossfadeDuration();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceTransitionTimeElapsed();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetInstanceTransitionTimeElapsedFraction();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetOwningActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetOwningComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetRelevantAnimLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetRelevantAnimTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetRelevantAnimTimeFraction();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetRelevantAnimTimeRemaining();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetRelevantAnimTimeRemainingFraction();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetStateWeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetSyncGroupPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_GetTimeToClosestMarker();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_HasMarkerBeenHitThisFrame();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_IsAnyMontagePlaying();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_IsPlayingSlotAnimation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_IsSyncGroupBetweenMarkers();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_LockAIResources();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_GetBlendTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_GetCurrentSection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_GetIsStopped();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_GetPlayRate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_GetPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_IsActive();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_IsPlaying();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_JumpToSection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_JumpToSectionsEnd();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_Pause();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_Play();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_Resume();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_SetNextSection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_SetPlayRate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_SetPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_Montage_Stop();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_PlaySlotAnimation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_PlaySlotAnimationAsDynamicMontage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_SavePoseSnapshot();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_SetMorphTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_SetRootMotionMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_SnapshotPose();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_StopSlotAnimation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_TryGetPawnOwner();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimInstance_UnlockAIResources();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimInstance_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimInstance();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_PostEvaluateAnimEvent__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_GetLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_PlayAnim();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_SetAnimationAsset();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_SetBlendSpaceInput();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_SetLooping();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_SetPlaying();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_SetPlayRate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_SetPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_SetPositionWithPreviousTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_SetPreviewCurveOverride();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_SetReverse();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimSingleNodeInstance_StopAnim();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSingleNodeInstance_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSingleNodeInstance();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMetaData_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimMetaData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBranchingPointNotifyPayload();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimNotify_GetNotifyName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimNotify_Received_Notify();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotify_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotify();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotify_PlayParticleEffect_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotify_PlayParticleEffect();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotify_PlaySound_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotify_PlaySound();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotify_ResetClothingSimulation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotify_ResetClothingSimulation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimNotifyState_GetNotifyName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimNotifyState_Received_NotifyBegin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimNotifyState_Received_NotifyEnd();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimNotifyState_Received_NotifyTick();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotifyState_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotifyState();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotifyState_TimedParticleEffect_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotifyState_TimedParticleEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAnimNotifyState_Trail_OverridePSTemplate();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotifyState_Trail_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimNotifyState_Trail();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSetMeshLinkup();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSet_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimSet();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAssetImportInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UAssetImportData_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAssetImportData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAssetMapping();
	ENGINE_API class UClass* Z_Construct_UClass_UAssetMappingTable_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAssetMappingTable();
	ENGINE_API class UClass* Z_Construct_UClass_UAssetUserData_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAssetUserData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLaunchOnTestSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorMapPerformanceTestDefinition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuildPromotionTestSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintEditorPromotionSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleEditorPromotionSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialEditorPromotionSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuildPromotionNewProjectSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuildPromotionOpenAssetSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuildPromotionImportWorkflowSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorImportWorkflowDefinition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditorImportExportTestDefinition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FImportFactorySettingValues();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExternalToolDefinition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FOpenTestAsset();
	ENGINE_API class UClass* Z_Construct_UClass_UAutomationTestSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAutomationTestSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavAvoidanceData();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAvoidanceManager_GetAvoidanceVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAvoidanceManager_GetAvoidanceVelocityForComponent();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAvoidanceManager_GetAvoidanceVelocityIgnoringUID();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAvoidanceManager_GetNewAvoidanceUID();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAvoidanceManager_GetObjectCount();
	ENGINE_API class UFunction* Z_Construct_UFunction_UAvoidanceManager_RegisterMovementComponent();
	ENGINE_API class UClass* Z_Construct_UClass_UAvoidanceManager_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAvoidanceManager();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlendProfileBoneEntry();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendProfile_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlendProfile();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintAsyncActionBase_Activate();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintAsyncActionBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintAsyncActionBase();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintCore_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintCore();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintNativizationFlag();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintCompileMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBlueprintStatus();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEditedDocumentInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBPInterfaceDescription();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBPVariableDescription();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBPVariableMetaDataEntry();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCompilerNativizationOptions();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprint_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimParentNodeAssetOverride();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimGroupInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimBlueprint_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimBlueprint();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelScriptBlueprint_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelScriptBlueprint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintFunctionLibrary_MakeStringAssetReference();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintMapLibrary_Map_Add();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintMapLibrary_Map_Clear();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintMapLibrary_Map_Contains();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintMapLibrary_Map_Find();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintMapLibrary_Map_Keys();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintMapLibrary_Map_Length();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintMapLibrary_Map_Remove();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintMapLibrary_Map_Values();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintMapLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintMapLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameInstance_DebugCreatePlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameInstance_DebugRemovePlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameInstance_HandleNetworkError();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameInstance_HandleTravelError();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameInstance_ReceiveInit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameInstance_ReceiveShutdown();
	ENGINE_API class UClass* Z_Construct_UClass_UGameInstance_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UGameInstance();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UPlatformGameInstance_PlatformScreenOrientationChangedDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UPlatformGameInstance_PlatformReceivedLocalNotificationDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UPlatformGameInstance_PlatformReceivedRemoteNotificationDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UPlatformGameInstance_PlatformFailedToRegisterForRemoteNotificationsDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UPlatformGameInstance_PlatformRegisteredForUserNotificationsDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UPlatformGameInstance_PlatformRegisteredForRemoteNotificationsDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UPlatformGameInstance_PlatformDelegate__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EScreenOrientation();
	ENGINE_API class UClass* Z_Construct_UClass_UPlatformGameInstance_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPlatformGameInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintPlatformLibrary_CancelLocalNotification();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintPlatformLibrary_ClearAllLocalNotifications();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintPlatformLibrary_GetLaunchNotification();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintPlatformLibrary_ScheduleLocalNotificationAtTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintPlatformLibrary_ScheduleLocalNotificationFromNow();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintPlatformLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintPlatformLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_Add();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_AddItems();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_Clear();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_Contains();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_Difference();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_Intersection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_Length();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_Remove();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_RemoveItems();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_ToArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UBlueprintSetLibrary_Set_Union();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintSetLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintSetLibrary();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDataTableCategoryHandle();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDataTableRowHandle();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTableRowBase();
	ENGINE_API class UClass* Z_Construct_UClass_UDataTable_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDataTable();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEvaluateCurveTableResult();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDataTableFunctionLibrary_EvaluateCurveTableRow();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDataTableFunctionLibrary_GetDataTableRowFromName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UDataTableFunctionLibrary_GetDataTableRowNames();
	ENGINE_API class UClass* Z_Construct_UClass_UDataTableFunctionLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDataTableFunctionLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_UDebugDrawService_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDebugDrawService();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UKismetSystemLibrary_OnAssetClassLoaded__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_UKismetSystemLibrary_OnAssetLoaded__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EQuitPreference();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMoveComponentAction();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDrawDebugTrace();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGenericStruct();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_AddFloatHistorySample();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_BoxOverlapActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_BoxOverlapComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_BoxTraceMulti();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_BoxTraceMultiForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_BoxTraceSingle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_BoxTraceSingleForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_CanLaunchURL();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_CapsuleOverlapActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_CapsuleOverlapComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_CapsuleTraceMulti();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_CapsuleTraceMultiForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_CapsuleTraceSingle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_CapsuleTraceSingleForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_CollectGarbage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ComponentOverlapActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ComponentOverlapComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ControlScreensaver();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_Conv_AssetClassToClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_Conv_AssetToObject();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_Conv_InterfaceToObject();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_CreateCopyForUndoBuffer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_Delay();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DoesImplementInterface();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugArrow();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugBox();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugCamera();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugCapsule();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugCircle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugCone();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugConeInDegrees();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugCoordinateSystem();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugCylinder();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugFloatHistoryLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugFloatHistoryTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugFrustum();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugLine();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugPlane();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugPoint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugSphere();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_DrawDebugString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ExecuteConsoleCommand();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_FlushDebugStrings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_FlushPersistentDebugLines();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ForceCloseAdBanner();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetActorBounds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetActorListFromComponentList();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetAdIDCount();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetClassDisplayName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetCommandLine();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetComponentBounds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetConvenientWindowedResolutions();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetDeviceId();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetDisplayName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetEngineVersion();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetGameBundleId();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetGameName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetGameTimeInSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetLocalCurrencyCode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetLocalCurrencySymbol();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetMinYResolutionFor3DView();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetMinYResolutionForUI();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetObjectName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetPathName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetPlatformUserName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetPreferredLanguages();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetRenderingDetailMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetRenderingMaterialQualityLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetSupportedFullscreenResolutions();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetUniqueDeviceId();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_GetVolumeButtonsHandledBySystem();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_HideAdBanner();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsControllerAssignedToGamepad();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsDedicatedServer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsInterstitialAdAvailable();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsInterstitialAdRequested();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsLoggedIn();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsPackagedForDistribution();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsServer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsStandalone();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsValid();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_IsValidClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_ClearAndInvalidateTimerHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_ClearTimer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_ClearTimerDelegate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_ClearTimerHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_GetTimerElapsedTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_GetTimerElapsedTimeDelegate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_GetTimerElapsedTimeHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_GetTimerRemainingTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_GetTimerRemainingTimeDelegate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_GetTimerRemainingTimeHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_InvalidateTimerHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_IsTimerActive();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_IsTimerActiveDelegate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_IsTimerActiveHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_IsTimerPaused();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_IsTimerPausedDelegate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_IsTimerPausedHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_IsValidTimerHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_PauseTimer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_PauseTimerDelegate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_PauseTimerHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_SetTimer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_SetTimerDelegate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_TimerExists();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_TimerExistsDelegate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_TimerExistsHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_UnPauseTimer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_UnPauseTimerDelegate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_K2_UnPauseTimerHandle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_LaunchURL();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_LineTraceMulti();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_LineTraceMultiForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_LineTraceSingle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_LineTraceSingleForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_LoadAsset();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_LoadAssetClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_LoadInterstitialAd();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_MakeLiteralBool();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_MakeLiteralByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_MakeLiteralFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_MakeLiteralInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_MakeLiteralName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_MakeLiteralString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_MakeLiteralText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_MoveComponentTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_PrintString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_PrintText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_PrintWarning();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_QuitGame();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_RegisterForRemoteNotifications();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ResetGamepadAssignments();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ResetGamepadAssignmentToController();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_RetriggerableDelay();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetAssetClassPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetAssetPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetBoolPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetBytePropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetClassPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetCollisionProfileNameProperty();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetFloatPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetInterfacePropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetIntPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetLinearColorPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetNamePropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetObjectPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetRotatorPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetStringPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetStructurePropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetSuppressViewportTransitionMessage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetTextPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetTransformPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetUserActivity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetVectorPropertyByName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetVolumeButtonsHandledBySystem();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SetWindowTitle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ShowAdBanner();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ShowInterstitialAd();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ShowPlatformSpecificAchievementsScreen();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_ShowPlatformSpecificLeaderboardScreen();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SphereOverlapActors();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SphereOverlapComponents();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SphereTraceMulti();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SphereTraceMultiForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SphereTraceSingle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_SphereTraceSingleForObjects();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetSystemLibrary_StackTrace();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetSystemLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetSystemLibrary();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGrammaticalNumber();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGrammaticalGender();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDialogueWaveParameter();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDialogueContext();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESuggestProjVelocityTraceOption();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPredictProjectilePathResult();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPredictProjectilePathPointData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPredictProjectilePathParams();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_ActivateReverbEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_ApplyDamage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_ApplyPointDamage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_ApplyRadialDamage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_ApplyRadialDamageWithFalloff();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_AreAnyListenersWithinRange();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_AreSubtitlesEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_BeginDeferredActorSpawnFromClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_BeginSpawningActorFromBlueprint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_BeginSpawningActorFromClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_Blueprint_PredictProjectilePath_Advanced();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_Blueprint_PredictProjectilePath_ByObjectType();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_Blueprint_PredictProjectilePath_ByTraceChannel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_BlueprintSuggestProjectileVelocity();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_BreakHitResult();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_CancelAsyncLoading();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_ClearSoundMixClassOverride();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_ClearSoundMixModifiers();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_CreatePlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_CreateSaveGameObject();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_CreateSaveGameObjectFromBlueprint();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_CreateSound2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_DeactivateReverbEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_DeleteGameInSlot();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_DeprojectScreenToWorld();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_DoesSaveGameExist();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_EnableLiveStreaming();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_FindCollisionUV();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_FinishSpawningActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_FlushLevelStreaming();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetAccurateRealTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetActorArrayAverageLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetActorArrayBounds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetAllActorsOfClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetAllActorsWithInterface();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetAllActorsWithTag();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetAudioTimeSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetCurrentLevelName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetCurrentReverbEffect();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetGameInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetGameMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetGameState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetGlobalTimeDilation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetIntOption();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetKeyValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetObjectClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetPlatformName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetPlayerCameraManager();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetPlayerCharacter();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetPlayerController();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetPlayerControllerID();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetPlayerPawn();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetRealTimeSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetStreamingLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetSurfaceType();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetTimeSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetUnpausedTimeSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetWorldDeltaSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GetWorldOriginLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_GrassOverlappingSphereCount();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_HasLaunchOption();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_HasOption();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_IsGamePaused();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_LoadGameFromSlot();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_LoadStreamLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_MakeHitResult();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_OpenLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_ParseOption();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_PlayDialogue2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_PlayDialogueAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_PlaySound2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_PlaySoundAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_PlayWorldCameraShake();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_PopSoundMixModifier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_ProjectWorldToScreen();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_PushSoundMixModifier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_RebaseLocalOriginOntoZero();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_RebaseZeroOriginOntoLocal();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_RemovePlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SaveGameToSlot();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SetBaseSoundMix();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SetGamePaused();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SetGlobalListenerFocusParameters();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SetGlobalPitchModulation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SetGlobalTimeDilation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SetPlayerControllerID();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SetSoundMixClassOverride();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SetSubtitlesEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SetWorldOriginLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnDecalAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnDecalAttached();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnDialogue2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnDialogueAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnDialogueAttached();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnEmitterAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnEmitterAttached();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnForceFeedbackAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnForceFeedbackAttached();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnObject();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnSound2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnSoundAtLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SpawnSoundAttached();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_SuggestProjectileVelocity_CustomArc();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameplayStatics_UnloadStreamLevel();
	ENGINE_API class UClass* Z_Construct_UClass_UGameplayStatics_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UGameplayStatics();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EHMDWornState();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EHMDTrackingOrigin();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOrientPositionSelector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_EnableHMD();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_EnableLowPersistenceMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_GetHMDDeviceName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_GetNumOfTrackingSensors();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_GetOrientationAndPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_GetPositionalTrackingCameraParameters();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_GetScreenPercentage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_GetTrackingOrigin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_GetTrackingSensorParameters();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_GetVRFocusState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_GetWorldToMetersScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_HasValidTrackingPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_IsHeadMountedDisplayConnected();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_IsHeadMountedDisplayEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_IsInLowPersistenceMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_ResetOrientationAndPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_SetClippingPlanes();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_SetTrackingOrigin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UHeadMountedDisplayFunctionLibrary_SetWorldToMetersScale();
	ENGINE_API class UClass* Z_Construct_UClass_UHeadMountedDisplayFunctionLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UHeadMountedDisplayFunctionLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Add();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_AddUnique();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Append();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Clear();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Contains();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Find();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Get();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Insert();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_IsValidIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_LastIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Length();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Remove();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_RemoveItem();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Resize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Set();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_Array_Shuffle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_FilterArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetArrayLibrary_SetArrayPropertyByName();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetArrayLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetArrayLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetGuidLibrary_Conv_GuidToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetGuidLibrary_EqualEqual_GuidGuid();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetGuidLibrary_Invalidate_Guid();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetGuidLibrary_IsValid_Guid();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetGuidLibrary_NewGuid();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetGuidLibrary_NotEqual_GuidGuid();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetGuidLibrary_Parse_StringToGuid();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetGuidLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetGuidLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_CalibrateTilt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_ControllerEvent_GetAnalogValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_ControllerEvent_GetEffectingButton();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_ControllerEvent_GetUserIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_EqualEqual_InputChordInputChord();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_EqualEqual_KeyKey();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_GetAnalogValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_GetKey();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_GetUserIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsAltDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsCommandDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsControlDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsLeftAltDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsLeftCommandDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsLeftControlDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsLeftShiftDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsRepeat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsRightAltDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsRightCommandDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsRightControlDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsRightShiftDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_InputEvent_IsShiftDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_Key_GetDisplayName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_Key_IsFloatAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_Key_IsGamepadKey();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_Key_IsKeyboardKey();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_Key_IsModifierKey();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_Key_IsMouseButton();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_Key_IsVectorAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_GetCursorDelta();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_GetEffectingButton();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_GetGestureDelta();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_GetLastScreenSpacePosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_GetPointerIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_GetScreenSpacePosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_GetTouchpadIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_GetUserIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_GetWheelDelta();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_IsMouseButtonDown();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetInputLibrary_PointerEvent_IsTouchEvent();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetInputLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetInputLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMaterialLibrary_CreateDynamicMaterialInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMaterialLibrary_GetScalarParameterValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMaterialLibrary_GetVectorParameterValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMaterialLibrary_SetScalarParameterValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMaterialLibrary_SetVectorParameterValue();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetMaterialLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetMaterialLibrary();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELerpInterpolationMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEasingFunc();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorSpringState();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFloatSpringState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Abs();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Abs_Int();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Acos();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_DateTimeTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_TimespanTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_Vector2DFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_Vector2DVector2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_VectorFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_VectorInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_VectorVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_And_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Asin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Atan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Atan2();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BMax();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BMin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanAND();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanNAND();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanNOR();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanOR();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanXOR();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakDateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakRandomStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakRotIntoAxes();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakVector2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_CInterpTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Clamp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClampAngle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClampAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClampVectorSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClassIsChildOf();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ComposeRotators();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ComposeTransforms();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_ByteToFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_ByteToInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_ColorToLinearColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_FloatToLinearColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_FloatToVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToBool();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToIntVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntVectorToVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_LinearColorToColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_LinearColorToVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_RotatorToVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_Vector2DToVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToLinearColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToVector2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ConvertTransformToRelative();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Cos();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_CreateVectorFromYawPitch();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Cross_VectorVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_CrossProduct2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeFromIsoString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeFromString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeMaxValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeMinValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DaysInMonth();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DaysInYear();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAcos();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAsin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAtan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAtan2();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegCos();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegreesToRadians();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegSin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegTan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_Vector2DFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Dot_VectorVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_DotProduct2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Ease();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_BoolBool();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ClassClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_DateTimeDateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_NameName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ObjectObject();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_RotatorRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_TimespanTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_TransformTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_Vector2DVector2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_VectorVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Exp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FCeil();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FClamp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FFloor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindClosestPointOnLine();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindClosestPointOnSegment();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindLookAtRotation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindNearestPointsOnLineSegments();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FInterpEaseInOut();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FInterpTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FInterpTo_Constant();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FixedTurn();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FloatSpringInterp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FMax();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FMin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FMod();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Fraction();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromDays();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromHours();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromMilliseconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromMinutes();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FTrunc();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_FTruncVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetAxes();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDay();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDayOfYear();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDays();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDirectionUnitVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDuration();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetForwardVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetHour();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetHour12();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetHours();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMaxElement();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMillisecond();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMilliseconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMinElement();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMinute();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMinutes();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMonth();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetPI();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetPointDistanceToLine();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetPointDistanceToSegment();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetReflectionVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetRightVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetSecond();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTAU();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTimeOfDay();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalDays();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalHours();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalMilliseconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalMinutes();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalSeconds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetUpVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetVectorArrayAverage();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetYawPitchFromVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetYear();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_DateTimeDateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_TimespanTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_DateTimeDateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_TimespanTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterGreater_VectorRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_GridSnap_Float();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_HSVToRGB();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_HSVToRGB_Vector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Hypotenuse();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_InRange_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseLerp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseTransformDirection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseTransformLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_InvertTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsAfternoon();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsLeapYear();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsMorning();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsPointInBox();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsPointInBoxWithTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Lerp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_DateTimeDateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_TimespanTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_DateTimeDateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_TimespanTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessLess_VectorRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinearColorLerp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinearColorLerpUsingHSV();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinePlaneIntersection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinePlaneIntersection_OriginNormal();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Loge();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeBox();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeBox2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeDateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakePlaneFromPointAndNormal();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakePulsatingValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRandomStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotationFromAxes();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromX();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromXY();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromXZ();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromY();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromYX();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromYZ();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZ();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZX();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZY();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeVector2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MapRangeClamped();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MapRangeUnclamped();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Max();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MaxOfByteArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MaxOfFloatArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MaxOfIntArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Min();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinimumAreaRectangle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinOfByteArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinOfFloatArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinOfIntArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MirrorVectorByNormal();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_IntFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_LinearColorFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_LinearColorLinearColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_RotatorFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_RotatorInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_TimespanFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_Vector2DFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_Vector2DVector2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MultiplyByPi();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_MultiplyMultiply_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NearlyEqual_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NearlyEqual_TransformTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NegateRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NegateVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Normal();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Normal2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NormalizeAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NormalizedDeltaRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NormalizeToRange();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Not_Int();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Not_PreBool();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_BoolBool();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ClassClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_DateTimeDateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_NameName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ObjectObject();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_RotatorRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_TimespanTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_Vector2DVector2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_VectorVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Now();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Or_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Percent_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Percent_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Percent_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_PointsAreCoplanar();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ProjectPointOnToPlane();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ProjectVectorOnToPlane();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ProjectVectorOnToVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RadiansToDegrees();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBool();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBoolFromStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBoolWithWeight();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBoolWithWeightFromStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloatFromStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloatInRange();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloatInRangeFromStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomInteger();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerFromStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerInRange();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerInRangeFromStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomPointInBoundingBox();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomRotatorFromStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorFromStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInCone();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeWithYawAndPitch();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_REase();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ResetFloatSpringState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ResetRandomStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_ResetVectorSpringState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RGBToHSV();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RGBToHSV_Vector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RInterpTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RInterpTo_Constant();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RLerp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RotateAngleAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_RotatorFromAxisAndAngle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Round();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SeedRandomStream();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectObject();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectTransform();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SetRandomStreamSeed();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SignOfFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_SignOfInteger();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Sin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Sqrt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Square();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_ByteByte();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_DateTimeDateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_DateTimeTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_FloatFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_IntInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_TimespanTimespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_Vector2DFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_Vector2DVector2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Tan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TEase();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanFromString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanMaxValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanMinValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanRatio();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanZeroValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TInterpTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TLerp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Today();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TransformDirection();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_TransformLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_UtcNow();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_VEase();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Vector2DInterpTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Vector2DInterpTo_Constant();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_VectorSpringInterp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_VInterpTo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_VInterpTo_Constant();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_VLerp();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSize2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSize2DSquared();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSizeSquared();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetMathLibrary_Xor_IntInt();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetMathLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetMathLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_BitIsMarked();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_ClearAllBits();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_ClearBit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_GetEnumeratorName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_GetEnumeratorUserFriendlyName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_GetEnumeratorValueFromIndex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_GetFirstUnmarkedBit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_GetRandomUnmarkedBit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_GetUnmarkedBit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_GetValidValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_HasMarkedBit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_HasUnmarkedBit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetNodeHelperLibrary_MarkBit();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetNodeHelperLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetNodeHelperLibrary();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDrawToRenderTargetContext();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetRenderingLibrary_BeginDrawCanvasToRenderTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetRenderingLibrary_ClearRenderTarget2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetRenderingLibrary_CreateRenderTarget2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetRenderingLibrary_DrawMaterialToRenderTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetRenderingLibrary_EndDrawCanvasToRenderTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetRenderingLibrary_ExportRenderTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetRenderingLibrary_ExportTexture2D();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetRenderingLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetRenderingLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_Bool();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_Color();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_Float();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_Int();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_IntVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_Name();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_Object();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_Rotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_Vector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_BuildString_Vector2d();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Concat_StrStr();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Contains();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_BoolToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_ByteToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_ColorToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_FloatToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_IntToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_IntVectorToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_NameToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_ObjectToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_RotatorToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_StringToColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_StringToFloat();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_StringToInt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_StringToName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_StringToRotator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_StringToVector();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_StringToVector2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_TransformToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_Vector2dToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Conv_VectorToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_CullArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_EndsWith();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_EqualEqual_StriStri();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_EqualEqual_StrStr();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_FindSubstring();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_GetCharacterArrayFromString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_GetCharacterAsNumber();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_GetSubstring();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_IsNumeric();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_JoinStringArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Left();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_LeftChop();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_LeftPad();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Len();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_MatchesWildcard();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Mid();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_NotEqual_StriStri();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_NotEqual_StrStr();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_ParseIntoArray();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Replace();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_ReplaceInline();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Reverse();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Right();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_RightChop();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_RightPad();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Split();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_StartsWith();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_TimeSecondsToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_ToLower();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_ToUpper();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_Trim();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetStringLibrary_TrimTrailing();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetStringLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetStringLibrary();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFormatArgumentType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextGender();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERoundingMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFormatArgumentData();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsCurrency_Float();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsCurrency_Integer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsCurrencyBase();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsDate_DateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsDateTime_DateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsPercent_Float();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsTime_DateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsTimespan_Timespan();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsTimeZoneDate_DateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsTimeZoneDateTime_DateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_AsTimeZoneTime_DateTime();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_BoolToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_ByteToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_ColorToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_FloatToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_IntToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_NameToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_ObjectToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_RotatorToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_StringToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_TextToString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_TransformToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_Vector2dToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Conv_VectorToText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_EqualEqual_IgnoreCase_TextText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_EqualEqual_TextText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_FindTextInLocalizationTable();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_Format();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_GetEmptyText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_NotEqual_IgnoreCase_TextText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_NotEqual_TextText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_TextIsCultureInvariant();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_TextIsEmpty();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_TextIsTransient();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_TextTrimPreceding();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_TextTrimPrecedingAndTrailing();
	ENGINE_API class UFunction* Z_Construct_UFunction_UKismetTextLibrary_TextTrimTrailing();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetTextLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UKismetTextLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMeshVertexPainterKismetLibrary_PaintVerticesLerpAlongAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMeshVertexPainterKismetLibrary_PaintVerticesSingleColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMeshVertexPainterKismetLibrary_RemovePaintedVertices();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshVertexPainterKismetLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshVertexPainterKismetLibrary();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnNavDataGenerigEvent__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_FNavigationSystemRunMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_FindPathToActorSynchronously();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_FindPathToLocationSynchronously();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_GetNavigationSystem();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_GetPathCost();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_GetPathLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_GetRandomPointInNavigableRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_GetRandomReachablePointInRadius();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_IsNavigationBeingBuilt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_IsNavigationBeingBuiltOrLocked();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_NavigationRaycast();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_OnNavigationBoundsUpdated();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_ProjectPointToNavigation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_RegisterNavigationInvoker();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_ResetMaxSimultaneousTileGenerationJobsCount();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_SetGeometryGatheringMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_SetMaxSimultaneousTileGenerationJobsCount();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_SimpleMoveToActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_SimpleMoveToLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationSystem_UnregisterNavigationInvoker();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationSystem_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationSystem();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerFunctionLibrary_EnableAutoLoadingSplashScreen();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerFunctionLibrary_HideSplashScreen();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerFunctionLibrary_SetSplashScreen();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStereoLayerFunctionLibrary_ShowSplashScreen();
	ENGINE_API class UClass* Z_Construct_UClass_UStereoLayerFunctionLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStereoLayerFunctionLibrary();
	ENGINE_API class UFunction* Z_Construct_UFunction_UVisualLoggerKismetLibrary_LogBox();
	ENGINE_API class UFunction* Z_Construct_UFunction_UVisualLoggerKismetLibrary_LogLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UVisualLoggerKismetLibrary_LogText();
	ENGINE_API class UClass* Z_Construct_UClass_UVisualLoggerKismetLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UVisualLoggerKismetLibrary();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintCookedComponentInstancingData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintComponentChangedPropertyInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEventGraphFastCallPair();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintDebugData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPointerToUberGraphFrame();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDebuggingInfoForSingleFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNodeToCodeAssociation();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintGeneratedClass_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBlueprintGeneratedClass();
	ENGINE_API class UClass* Z_Construct_UClass_UPoseWatch_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPoseWatch();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimBlueprintDebugData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationFrameSnapshot();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStateMachineDebugData();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimBlueprintGeneratedClass_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimBlueprintGeneratedClass();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBodyCollisionResponse();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPhysicsType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECollisionTraceFlag();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKShapeElem();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKConvexElem();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKBoxElem();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKSphereElem();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKSphylElem();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKAggregateGeom();
	ENGINE_API class UClass* Z_Construct_UClass_UBodySetup_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBodySetup();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAggregateGeometry2D();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoxElement2D();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCircleElement2D();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FConvexElement2D();
	ENGINE_API class UClass* Z_Construct_UClass_UBodySetup2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBodySetup2D();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPhysicalAnimationProfile();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsAsset();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalBodySetup_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalBodySetup();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputBlendPose();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBranchFilter();
	ENGINE_API class UClass* Z_Construct_UClass_UBoneMaskFilter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBoneMaskFilter();
	ENGINE_API class UClass* Z_Construct_UClass_UBookMark_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBookMark();
	ENGINE_API class UClass* Z_Construct_UClass_UBookMark2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBookMark2D();
	ENGINE_API class UClass* Z_Construct_UClass_UBreakpoint_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBreakpoint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBuilderPoly();
	ENGINE_API class UClass* Z_Construct_UClass_UBrushBuilder_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UBrushBuilder();
	ENGINE_API class UClass* Z_Construct_UClass_UButtonStyleAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UButtonStyleAsset();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraAnim_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraAnim();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraAnimInst_SetDuration();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraAnimInst_SetScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraAnimInst_Stop();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraAnimInst_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraAnimInst();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraModifier_BlueprintModifyCamera();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraModifier_BlueprintModifyPostProcess();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraModifier_DisableModifier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraModifier_EnableModifier();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraModifier_GetViewTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCameraModifier_IsDisabled();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraModifier_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraModifier();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraModifier_CameraShake_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCameraModifier_CameraShake();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWrappedStringElement();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTextSizingParameters();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCanvasIcon();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_Deproject();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_DrawBorder();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_DrawBox();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_DrawLine();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_DrawMaterial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_DrawMaterialTriangle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_DrawPolygon();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_DrawText();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_DrawTexture();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_DrawTriangle();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_Project();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_StrLen();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvas_K2_TextSize();
	ENGINE_API class UClass* Z_Construct_UClass_UCanvas_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCanvas();
	ENGINE_API class UClass* Z_Construct_UClass_UChannel_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UChannel();
	ENGINE_API class UClass* Z_Construct_UClass_UActorChannel_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UActorChannel();
	ENGINE_API class UClass* Z_Construct_UClass_UControlChannel_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UControlChannel();
	ENGINE_API class UClass* Z_Construct_UClass_UVoiceChannel_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UVoiceChannel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_BugIt();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_BugItGo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_BugItStringCreator();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ChangeSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_CheatScript();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DamageTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DebugCapsuleSweep();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DebugCapsuleSweepCapture();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DebugCapsuleSweepChannel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DebugCapsuleSweepClear();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DebugCapsuleSweepComplex();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DebugCapsuleSweepPawn();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DebugCapsuleSweepSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DestroyAll();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DestroyAllPawnsExceptTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DestroyPawns();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DestroyTarget();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DisableDebugCamera();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DumpChatState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DumpOnlineSessionState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DumpPartyState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_DumpVoiceMutingState();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_EnableDebugCamera();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_FlushLog();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_Fly();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_FreezeFrame();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_Ghost();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_God();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_InvertMouse();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_LogLoc();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_OnlyLoadLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_PlayersOnly();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_RebuildNavigation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ReceiveEndPlay();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ReceiveInitCheatManager();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ServerToggleAILogging();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_SetMouseSensitivityToDefault();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_SetNavDrawDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_SetWorldOrigin();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_Slomo();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_StreamLevelIn();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_StreamLevelOut();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_Summon();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_Teleport();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_TestCollisionDistance();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ToggleAILogging();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ToggleDebugCamera();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ViewActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ViewClass();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ViewPlayer();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_ViewSelf();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCheatManager_Walk();
	ENGINE_API class UClass* Z_Construct_UClass_UCheatManager_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCheatManager();
	ENGINE_API class UClass* Z_Construct_UClass_UCheckBoxStyleAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCheckBoxStyleAsset();
	ENGINE_API class UClass* Z_Construct_UClass_UCommandlet_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCommandlet();
	ENGINE_API class UClass* Z_Construct_UClass_UPluginCommandlet_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPluginCommandlet();
	ENGINE_API class UClass* Z_Construct_UClass_USmokeTestCommandlet_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USmokeTestCommandlet();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAutoCompleteNode();
	ENGINE_API class UClass* Z_Construct_UClass_UConsole_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UConsole();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRuntimeCurveLinearColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCurveLinearColor_GetLinearColorValue();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveLinearColor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveLinearColor();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCurveVector_GetVectorValue();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveVector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveVector();
	ENGINE_API class UClass* Z_Construct_UClass_UDEPRECATED_CurveEdPresetCurve_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDEPRECATED_CurveEdPresetCurve();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNamedCurveValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCurveSourceInterface_GetBindingName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCurveSourceInterface_GetCurves();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCurveSourceInterface_GetCurveValue();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveSourceInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveSourceInterface();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveTableRowHandle();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveTable_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCurveTable();
	ENGINE_API class UClass* Z_Construct_UClass_UDataAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDataAsset();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPreviewMeshCollectionEntry();
	ENGINE_API class UClass* Z_Construct_UClass_UPreviewMeshCollection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPreviewMeshCollection();
	ENGINE_API class UClass* Z_Construct_UClass_UTireType_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTireType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleChunkParameters();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFractureMaterial();
	ENGINE_API class UClass* Z_Construct_UClass_UDestructibleFractureSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDestructibleFractureSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UDeveloperSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDeveloperSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimationSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAnimationSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAudioQualitySettings();
	ENGINE_API class UClass* Z_Construct_UClass_UAudioSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UAudioSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCustomProfile();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCustomChannelSetup();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionResponseTemplate();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollisionProfileName();
	ENGINE_API class UClass* Z_Construct_UClass_UCollisionProfile_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCollisionProfile();
	ENGINE_API class UClass* Z_Construct_UClass_UStreamingSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStreamingSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UGarbageCollectionSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UGarbageCollectionSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshSimplificationSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMeshSimplificationSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UNetworkSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNetworkSettings();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFrictionCombineMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESettingsLockedAxis();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESettingsDOF();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPhysicalSurfaceName();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsSettings();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAutoExposureMethodUI();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEarlyZPass();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECustomDepthStencil();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMobileMSAASampleCount();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECompositingSampleCount();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EClearSceneOptions();
	ENGINE_API class UClass* Z_Construct_UClass_URendererSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_URendererSettings();
	ENGINE_API class UClass* Z_Construct_UClass_URendererOverrideSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_URendererOverrideSettings();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EUIScalingRule();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ERenderFocusRule();
	ENGINE_API class UClass* Z_Construct_UClass_UUserInterfaceSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UUserInterfaceSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UDeviceProfileManager_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDeviceProfileManager();
	ENGINE_API class UClass* Z_Construct_UClass_UDialogueVoice_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDialogueVoice();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDialogueContextMapping();
	ENGINE_API class UClass* Z_Construct_UClass_UDialogueWave_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDialogueWave();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_DistributionParamMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRawDistribution();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDistributionLookupTable();
	ENGINE_API class UClass* Z_Construct_UClass_UDistribution_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistribution();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRawDistributionFloat();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFloatDistribution();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloat_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloat();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatConstant_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatConstant();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatParameterBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatParameterBase();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatParticleParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatParticleParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatConstantCurve_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatConstantCurve();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatUniform_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatUniform();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatUniformCurve_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionFloatUniformCurve();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDistributionVectorMirrorFlags();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDistributionVectorLockFlags();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRawDistributionVector();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector4Distribution();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorDistribution();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVector();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorConstant_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorConstant();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorParameterBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorParameterBase();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorParticleParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorParticleParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorConstantCurve_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorConstantCurve();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorUniform_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorUniform();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorUniformCurve_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDistributionVectorUniformCurve();
	ENGINE_API class UClass* Z_Construct_UClass_UDPICustomScalingRule_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDPICustomScalingRule();
	ENGINE_API class UClass* Z_Construct_UClass_UDynamicBlueprintBinding_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDynamicBlueprintBinding();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintComponentDelegateBinding();
	ENGINE_API class UClass* Z_Construct_UClass_UComponentDelegateBinding_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UComponentDelegateBinding();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputDelegateBinding();
	ENGINE_API class UClass* Z_Construct_UClass_UInputDelegateBinding_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInputDelegateBinding();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputActionDelegateBinding();
	ENGINE_API class UClass* Z_Construct_UClass_UInputActionDelegateBinding_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInputActionDelegateBinding();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputAxisDelegateBinding();
	ENGINE_API class UClass* Z_Construct_UClass_UInputAxisDelegateBinding_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInputAxisDelegateBinding();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputAxisKeyDelegateBinding();
	ENGINE_API class UClass* Z_Construct_UClass_UInputAxisKeyDelegateBinding_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInputAxisKeyDelegateBinding();
	ENGINE_API class UClass* Z_Construct_UClass_UInputVectorAxisDelegateBinding_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInputVectorAxisDelegateBinding();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputKeyDelegateBinding();
	ENGINE_API class UClass* Z_Construct_UClass_UInputKeyDelegateBinding_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInputKeyDelegateBinding();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBlueprintInputTouchDelegateBinding();
	ENGINE_API class UClass* Z_Construct_UClass_UInputTouchDelegateBinding_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInputTouchDelegateBinding();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGraphReference();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraph_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraph();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphNode_Documentation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphNode_Documentation();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECanCreateConnectionResponse();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGraphType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction_NewNode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEdGraphSchemaAction();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphSchema_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEdGraphSchema();
	ENGINE_API class UClass* Z_Construct_UClass_UImportantToggleSettingInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UImportantToggleSettingInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UEndUserSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEndUserSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UPendingNetGame_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPendingNetGame();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelCollection();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStartAsyncSimulationFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEndPhysicsTickFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStartPhysicsTickFunction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelViewportInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UWorld_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UWorld();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EConsoleType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETransitionType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFullyLoadPackageType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPluginRedirect();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStructRedirect();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClassRedirect();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGameNameRedirect();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FScreenMessageString();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDropNoteInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStatColorMapping();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStatColorMapEntry();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FWorldContext();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNamedNetDriver();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNetDriverDefinition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelStreamingStatus();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFullyLoadedPackagesInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UEngine_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEngine();
	ENGINE_API class UClass* Z_Construct_UClass_UGameEngine_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UGameEngine();
	ENGINE_API class UClass* Z_Construct_UClass_UEngineHandlerComponentFactory_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEngineHandlerComponentFactory();
	ENGINE_API class UClass* Z_Construct_UClass_UExporter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UExporter();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFontImportCharacterSet();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFontImportOptionsData();
	ENGINE_API class UClass* Z_Construct_UClass_UFontImportOptions_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UFontImportOptions();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFontCacheType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFontCharacter();
	ENGINE_API class UClass* Z_Construct_UClass_UFont_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UFont();
	ENGINE_API class UClass* Z_Construct_UClass_UFontFace_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UFontFace();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnGameUserSettingsUINeedsUpdate__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EWindowMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_ApplyHardwareBenchmarkResults();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_ApplyNonResolutionSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_ApplyResolutionSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_ApplySettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_ConfirmVideoMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_EnableHDRDisplayOutput();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetAntiAliasingQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetAudioQualityLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetDefaultResolution();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetDefaultResolutionScale();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetDefaultWindowMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetDefaultWindowPosition();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetDesktopResolution();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetFoliageQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetFrameRateLimit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetFullscreenMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetGameUserSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetLastConfirmedFullscreenMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetLastConfirmedScreenResolution();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetOverallScalabilityLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetPostProcessingQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetPreferredFullscreenMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetResolutionScaleInformation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetResolutionScaleInformationEx();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetScreenResolution();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetShadowQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetTextureQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetViewDistanceQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_GetVisualEffectQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_IsDirty();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_IsFullscreenModeDirty();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_IsScreenResolutionDirty();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_IsVSyncDirty();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_IsVSyncEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_LoadSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_ResetToCurrentSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_RevertVideoMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_RunHardwareBenchmark();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SaveSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetAntiAliasingQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetAudioQualityLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetBenchmarkFallbackValues();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetFoliageQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetFrameRateLimit();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetFullscreenMode();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetOverallScalabilityLevel();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetPostProcessingQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetResolutionScaleNormalized();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetResolutionScaleValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetResolutionScaleValueEx();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetScreenResolution();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetShadowQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetTextureQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetToDefaults();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetViewDistanceQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetVisualEffectQuality();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SetVSyncEnabled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_SupportsHDRDisplayOutput();
	ENGINE_API class UFunction* Z_Construct_UFunction_UGameUserSettings_ValidateSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UGameUserSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UGameUserSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FActiveHapticFeedbackEffect();
	ENGINE_API class UClass* Z_Construct_UClass_UHapticFeedbackEffect_Base_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UHapticFeedbackEffect_Base();
	ENGINE_API class UClass* Z_Construct_UClass_UHapticFeedbackEffect_Buffer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UHapticFeedbackEffect_Buffer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FHapticFeedbackDetails_Curve();
	ENGINE_API class UClass* Z_Construct_UClass_UHapticFeedbackEffect_Curve_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UHapticFeedbackEffect_Curve();
	ENGINE_API class UClass* Z_Construct_UClass_UHapticFeedbackEffect_SoundWave_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UHapticFeedbackEffect_SoundWave();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentOverrideRecord();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentKey();
	ENGINE_API class UClass* Z_Construct_UClass_UInheritableComponentHandler_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInheritableComponentHandler();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputAxisKeyMapping();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputActionKeyMapping();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputAxisConfigEntry();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputAxisProperties();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FKeyBind();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlayerInput_ClearSmoothing();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlayerInput_InvertAxis();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlayerInput_InvertAxisKey();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlayerInput_SetBind();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlayerInput_SetMouseSensitivity();
	ENGINE_API class UClass* Z_Construct_UClass_UPlayerInput_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPlayerInput();
	ENGINE_API class UClass* Z_Construct_UClass_UInputSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInputSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveEdTab();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCurveEdEntry();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpCurveEdSetup_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpCurveEdSetup();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpData_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpData();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpFilter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpFilter();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpFilter_Classes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpFilter_Classes();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpFilter_Custom_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpFilter_Custom();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpEdSelKey();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroup_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroup();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCameraPreviewInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupCamera_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupCamera();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupDirector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupDirector();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupInst_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupInst();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupInstCamera_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupInstCamera();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupInstDirector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpGroupInstDirector();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrackActiveCondition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSubTrackGroup();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSupportedSubTrackInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrack_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBoolTrackKey();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackBoolProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackBoolProp();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDirectorTrackCut();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackDirector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackDirector();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEventTrackKey();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackEvent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackEvent();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimControlTrackKey();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackAnimControl_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackAnimControl();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFade_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFade();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatAnimBPParam_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatAnimBPParam();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatMaterialParam_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatMaterialParam();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatParticleParam_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatParticleParam();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackFloatProp();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInterpTrackMoveRotMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpLookupTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInterpLookupPoint();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackMove_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackMove();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EInterpMoveAxis();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackMoveAxis_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackMoveAxis();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackSlomo_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackSlomo();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackLinearColorBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackLinearColorBase();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackLinearColorProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackLinearColorProp();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleReplayTrackKey();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackParticleReplay_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackParticleReplay();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrackToggleAction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FToggleTrackKey();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackToggle_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackToggle();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackVectorBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackVectorBase();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackAudioMaster_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackAudioMaster();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackColorProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackColorProp();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackColorScale_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackColorScale();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundTrackKey();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackSound_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackSound();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackVectorMaterialParam_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackVectorMaterialParam();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackVectorProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackVectorProp();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVisibilityTrackCondition();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVisibilityTrackAction();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVisibilityTrackKey();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackVisibility_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackVisibility();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInst_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInst();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstAnimControl_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstAnimControl();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstAudioMaster_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstAudioMaster();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstColorScale_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstColorScale();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstDirector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstDirector();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstEvent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstEvent();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFade_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFade();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFloatAnimBPParam_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFloatAnimBPParam();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFloatMaterialParam_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFloatMaterialParam();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFloatParticleParam_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFloatParticleParam();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstMove_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstMove();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstParticleReplay_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstParticleReplay();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstProperty_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstProperty();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstBoolProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstBoolProp();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstColorProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstColorProp();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFloatProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstFloatProp();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstLinearColorProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstLinearColorProp();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstVectorProp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstVectorProp();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstSlomo_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstSlomo();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstSound_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstSound();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstToggle_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstToggle();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstVectorMaterialParam_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstVectorMaterialParam();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstVisibility_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInterpTrackInstVisibility();
	ENGINE_API class UClass* Z_Construct_UClass_UIntSerialization_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UIntSerialization();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLayerActorStats();
	ENGINE_API class UClass* Z_Construct_UClass_ULayer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULayer();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_LevelStreamingVisibilityStatus__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_LevelStreamingLoadedStatus__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULevelStreaming_CreateInstance();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULevelStreaming_GetLevelScriptActor();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULevelStreaming_IsLevelLoaded();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULevelStreaming_IsLevelVisible();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULevelStreaming_IsStreamingStatePending();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreaming_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreaming();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreamingAlwaysLoaded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreamingAlwaysLoaded();
	ENGINE_API class UFunction* Z_Construct_UFunction_ULevelStreamingKismet_LoadLevelInstance();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreamingKismet_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreamingKismet();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreamingPersistent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULevelStreamingPersistent();
	ENGINE_API class UClass* Z_Construct_UClass_ULightmappedSurfaceCollection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULightmappedSurfaceCollection();
	ENGINE_API class UClass* Z_Construct_UClass_ULightmassPrimitiveSettingsObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULightmassPrimitiveSettingsObject();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FClientReceiveData();
	ENGINE_API class UClass* Z_Construct_UClass_ULocalMessage_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULocalMessage();
	ENGINE_API class UClass* Z_Construct_UClass_UEngineMessage_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UEngineMessage();
	ENGINE_API class UClass* Z_Construct_UClass_UMapBuildDataRegistry_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMapBuildDataRegistry();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExpressionOutput();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialAttributesInput();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExpressionInput();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpression_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpression();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAbs_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAbs();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionActorPositionWS_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionActorPositionWS();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAdd_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAdd();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAppendVector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAppendVector();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArccosine_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArccosine();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArccosineFast_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArccosineFast();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArcsine_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArcsine();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArcsineFast_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArcsineFast();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArctangent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArctangent();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArctangent2_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArctangent2();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArctangent2Fast_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArctangent2Fast();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArctangentFast_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionArctangentFast();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAtmosphericFogColor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAtmosphericFogColor();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAtmosphericLightColor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAtmosphericLightColor();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAtmosphericLightVector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAtmosphericLightVector();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionBlackBody_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionBlackBody();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialAttributeBlend();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionBlendMaterialAttributes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionBlendMaterialAttributes();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionBreakMaterialAttributes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionBreakMaterialAttributes();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionBumpOffset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionBumpOffset();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCameraPositionWS_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCameraPositionWS();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCameraVectorWS_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCameraVectorWS();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCeil_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCeil();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EClampMode();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionClamp_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionClamp();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCollectionParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCollectionParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionComment_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionComment();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionComponentMask_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionComponentMask();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstant_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstant();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstant2Vector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstant2Vector();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstant3Vector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstant3Vector();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstant4Vector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstant4Vector();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstantBiasScale_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionConstantBiasScale();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCosine_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCosine();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCrossProduct_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCrossProduct();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECustomMaterialOutputType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCustomInput();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCustom_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCustom();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCustomOutput_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionCustomOutput();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionClearCoatNormalCustomOutput_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionClearCoatNormalCustomOutput();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTangentOutput_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTangentOutput();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDDX_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDDX();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDDY_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDDY();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDecalDerivative_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDecalDerivative();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDecalLifetimeOpacity_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDecalLifetimeOpacity();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDecalMipmapLevel_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDecalMipmapLevel();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDepthFade_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDepthFade();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDepthOfFieldFunctionValue();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDepthOfFieldFunction_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDepthOfFieldFunction();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDeriveNormalZ_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDeriveNormalZ();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDesaturation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDesaturation();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDistance_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDistance();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDistanceCullFade_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDistanceCullFade();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDistanceFieldGradient_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDistanceFieldGradient();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDistanceToNearestSurface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDistanceToNearestSurface();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDivide_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDivide();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDotProduct_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDotProduct();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDynamicParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionDynamicParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionEyeAdaptation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionEyeAdaptation();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFeatureLevelSwitch_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFeatureLevelSwitch();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFloor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFloor();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFmod_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFmod();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFontSample_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFontSample();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFontSampleParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFontSampleParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFrac_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFrac();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFresnel_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFresnel();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EFunctionInputType();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFunctionInput_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFunctionInput();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFunctionOutput_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionFunctionOutput();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionGetMaterialAttributes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionGetMaterialAttributes();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionGIReplace_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionGIReplace();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionIf_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionIf();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLightmapUVs_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLightmapUVs();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLightmassReplace_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLightmassReplace();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLightVector_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLightVector();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLinearInterpolate_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLinearInterpolate();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLogarithm2_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionLogarithm2();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMakeMaterialAttributes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMakeMaterialAttributes();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFunctionExpressionOutput();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFunctionExpressionInput();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMaterialFunctionCall_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMaterialFunctionCall();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMaterialProxyReplace_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMaterialProxyReplace();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMax_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMax();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMin_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMin();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMultiply_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionMultiply();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENoiseFunction();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionNoise_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionNoise();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionNormalize_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionNormalize();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionObjectBounds_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionObjectBounds();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionObjectOrientation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionObjectOrientation();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionObjectPositionWS_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionObjectPositionWS();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionObjectRadius_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionObjectRadius();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionOneMinus_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionOneMinus();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPanner_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPanner();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionScalarParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionScalarParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticBoolParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticBoolParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticSwitchParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticSwitchParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticComponentMaskParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticComponentMaskParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionVectorParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionVectorParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleColor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleColor();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleDirection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleDirection();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleMacroUV_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleMacroUV();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleMotionBlurFade_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleMotionBlurFade();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticlePositionWS_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticlePositionWS();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleRadius_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleRadius();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleRandom_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleRandom();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleRelativeTime_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleRelativeTime();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleSize_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleSize();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleSpeed_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleSpeed();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPerInstanceFadeAmount_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPerInstanceFadeAmount();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPerInstanceRandom_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPerInstanceRandom();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPixelDepth_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPixelDepth();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPixelNormalWS_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPixelNormalWS();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPower_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPower();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPrecomputedAOMask_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPrecomputedAOMask();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPreSkinnedNormal_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPreSkinnedNormal();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPreSkinnedPosition_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPreSkinnedPosition();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPreviousFrameSwitch_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionPreviousFrameSwitch();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionQualitySwitch_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionQualitySwitch();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionReflectionVectorWS_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionReflectionVectorWS();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionReroute_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionReroute();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionRotateAboutAxis_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionRotateAboutAxis();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionRotator_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionRotator();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionRound_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionRound();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSaturate_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSaturate();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialSceneAttributeInputMode();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSceneColor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSceneColor();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSceneDepth_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSceneDepth();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSceneTexelSize_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSceneTexelSize();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESceneTextureId();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSceneTexture_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSceneTexture();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialExpressionScreenPositionMapping();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionScreenPosition_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionScreenPosition();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSetMaterialAttributes_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSetMaterialAttributes();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSine_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSine();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESpeedTreeLODType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESpeedTreeWindType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESpeedTreeGeometryType();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSpeedTree_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSpeedTree();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSphereMask_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSphereMask();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSphericalParticleOpacity_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSphericalParticleOpacity();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSquareRoot_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSquareRoot();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticBool_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticBool();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticSwitch_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionStaticSwitch();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSubtract_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionSubtract();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTangent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTangent();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureBase();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureObject();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureMipValueMode();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSample_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSample();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleSubUV_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionParticleSubUV();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSampleParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSampleParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureObjectParameter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureObjectParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSampleParameter2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSampleParameter2D();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureColorChannel();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAntialiasedTextureMask_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionAntialiasedTextureMask();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSampleParameterSubUV_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSampleParameterSubUV();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSampleParameterCube_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureSampleParameterCube();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureCoordinate_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureCoordinate();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialExposedTextureProperty();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureProperty_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTextureProperty();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTime_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTime();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialVectorCoordTransform();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialVectorCoordTransformSource();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTransform_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTransform();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialPositionTransformSource();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTransformPosition_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTransformPosition();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTruncate_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTruncate();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTwoSidedSign_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionTwoSidedSign();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVectorNoiseFunction();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionVectorNoise_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionVectorNoise();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionVertexColor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionVertexColor();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionVertexNormalWS_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionVertexNormalWS();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialExposedViewProperty();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionViewProperty_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionViewProperty();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionViewSize_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionViewSize();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EWorldPositionIncludedOffsets();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionWorldPosition_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialExpressionWorldPosition();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialFunction_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialFunction();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialDecalResponse();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaterialDomain();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDecalBlendMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialParameterCollectionInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialFunctionInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVector2MaterialInput();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorMaterialInput();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FScalarMaterialInput();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FColorMaterialInput();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialInput();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterial();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialInstanceBasePropertyOverrides();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FVectorParameterValue();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTextureParameterValue();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FScalarParameterValue();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FFontParameterValue();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInstance_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInstance();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInstanceConstant_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInstanceConstant();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_CopyInterpParameters();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_CopyParameterOverrides();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_K2_CopyMaterialInstanceParameters();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_K2_GetScalarParameterValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_K2_GetTextureParameterValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_K2_GetVectorParameterValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_K2_InterpolateMaterialInstanceParams();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_SetScalarParameterValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_SetTextureParameterValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UMaterialInstanceDynamic_SetVectorParameterValue();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInstanceDynamic_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialInstanceDynamic();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollectionVectorParameter();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollectionScalarParameter();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FCollectionParameterBase();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialParameterCollection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialParameterCollection();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialParameterCollectionInstance_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMaterialParameterCollectionInstance();
	ENGINE_API class UClass* Z_Construct_UClass_UMatineeInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMatineeInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UMorphTarget_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMorphTarget();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea_Default_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea_Default();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea_LowHeight_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea_LowHeight();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea_Null_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea_Null();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea_Obstacle_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavArea_Obstacle();
	ENGINE_API class UClass* Z_Construct_UClass_UNavAreaMeta_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavAreaMeta();
	ENGINE_API class UClass* Z_Construct_UClass_UNavAreaMeta_SwitchByAgent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavAreaMeta_SwitchByAgent();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavCollisionBox();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNavCollisionCylinder();
	ENGINE_API class UClass* Z_Construct_UClass_UNavCollision_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavCollision();
	ENGINE_API class UClass* Z_Construct_UClass_UNavEdgeProviderInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavEdgeProviderInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationDataChunk_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationDataChunk();
	ENGINE_API class UClass* Z_Construct_UClass_URecastNavMeshDataChunk_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_URecastNavMeshDataChunk();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnNavigationPathUpdated__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationPath_EnableDebugDrawing();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationPath_EnableRecalculationOnInvalidation();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationPath_GetDebugString();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationPath_GetPathCost();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationPath_GetPathLength();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationPath_IsPartial();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationPath_IsStringPulled();
	ENGINE_API class UFunction* Z_Construct_UFunction_UNavigationPath_IsValid();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationPath_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationPath();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationPathGenerator_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavigationPathGenerator();
	ENGINE_API class UClass* Z_Construct_UClass_URecastFilter_UseDefaultArea_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_URecastFilter_UseDefaultArea();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkTrivial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavLinkTrivial();
	ENGINE_API class UClass* Z_Construct_UClass_UNavNodeInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNavNodeInterface();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPacketSimulationSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UNetDriver_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNetDriver();
	ENGINE_API class UClass* Z_Construct_UClass_UPackageMapClient_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPackageMapClient();
	ENGINE_API class UClass* Z_Construct_UClass_UPlayer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPlayer();
	ENGINE_API class UClass* Z_Construct_UClass_UNetConnection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UNetConnection();
	ENGINE_API class UClass* Z_Construct_UClass_UDemoNetConnection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDemoNetConnection();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRollbackNetStartupActorInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLevelNameAndTime();
	ENGINE_API class UClass* Z_Construct_UClass_UDemoNetDriver_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDemoNetDriver();
	ENGINE_API class UClass* Z_Construct_UClass_UObjectLibrary_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UObjectLibrary();
	ENGINE_API class UClass* Z_Construct_UClass_UObjectReferencer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UObjectReferencer();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_EmptyOnlineDelegate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_UOnlineBlueprintCallProxyBase_Activate();
	ENGINE_API class UClass* Z_Construct_UClass_UOnlineBlueprintCallProxyBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UOnlineBlueprintCallProxyBase();
	ENGINE_API class UClass* Z_Construct_UClass_UOnlineEngineInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UOnlineEngineInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UOnlineSession_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UOnlineSession();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEmitterRenderMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSubUVInterpMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleBurstMethod();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleBurst();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleEmitter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleEmitter();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleScreenAlignment();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSpriteEmitter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSpriteEmitter();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleLODLevel_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleLODLevel();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSystemInsignificanceReaction();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSignificanceLevel();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSourceSelectionMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EModuleType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleRandomSeedInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleCurvePair();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModule_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModule();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAcceleration_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAcceleration();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationConstant_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationConstant();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationDrag_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationDrag();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationDragScaleOverLife_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationDragScaleOverLife();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationOverLifetime_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAccelerationOverLifetime();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorLine_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorLine();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAttractorParticleSelectionMethod();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorParticle_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorParticle();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorPoint_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorPoint();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorPointGravity_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleAttractorPointGravity();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_Beam2SourceTargetTangentMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_Beam2SourceTargetMethod();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_BeamModifierType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBeamModifierOptions();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamModifier_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamModifier();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamNoise_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamNoise();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamSource_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamSource();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamTarget_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleBeamTarget();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCameraBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCameraBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleCameraOffsetUpdateMethod();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCameraOffset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCameraOffset();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleCollisionComplete();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCollisionBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCollisionBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCollision_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCollision();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleCollisionResponse();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCollisionGPU_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleCollisionGPU();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColorBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColorBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColor_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColor();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColor_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColor_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColorOverLife_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColorOverLife();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColorScaleOverLife_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleColorScaleOverLife();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleEvent_GenerateInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventGenerator_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventGenerator();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventReceiverBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventReceiverBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventReceiverKillParticles_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventReceiverKillParticles();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventReceiverSpawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventReceiverSpawn();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleKillBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleKillBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleKillBox_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleKillBox();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleKillHeight_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleKillHeight();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLifetimeBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLifetimeBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLifetime_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLifetime();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLifetime_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLifetime_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLightBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLightBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLight_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLight();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLight_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLight_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocation();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocation_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocation_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationWorldOffset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationWorldOffset();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationWorldOffset_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationWorldOffset_Seeded();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELocationBoneSocketSelectionMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELocationBoneSocketSource();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FLocationBoneSocketInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationBoneSocket_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationBoneSocket();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationDirect_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationDirect();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELocationEmitterSelectionMethod();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationEmitter_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationEmitter();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationEmitterDirect_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationEmitterDirect();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_CylinderHeightAxis();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveCylinder_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveCylinder();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveCylinder_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveCylinder_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveSphere_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveSphere();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveSphere_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveSphere_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveTriangle_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationPrimitiveTriangle();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELocationSkelVertSurfaceSource();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationSkelVertSurface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleLocationSkelVertSurface();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModulePivotOffset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModulePivotOffset();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSourceMovement_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSourceMovement();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMaterialBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMaterialBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshMaterial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshMaterial();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleOrbitBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleOrbitBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOrbitChainMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FOrbitOptions();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleOrbit_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleOrbit();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleOrientationBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleOrientationBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleAxisLock();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleOrientationAxisLock_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleOrientationAxisLock();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleParameterBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleParameterBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEmitterDynamicParameterValue();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FEmitterDynamicParameter();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleParameterDynamic_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleParameterDynamic();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleParameterDynamic_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleParameterDynamic_Seeded();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOpacitySourceMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESubUVBoundingVertexCount();
	ENGINE_API class UClass* Z_Construct_UClass_USubUVAnimation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USubUVAnimation();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEmitterNormalsMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleSortMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EParticleUVFlipMode();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRequired_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRequired();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotation();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotation_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotation_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotation();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotation_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotation_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationOverLifetime_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationOverLifetime();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationRateBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationRateBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotationRate_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotationRate();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotationRate_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotationRate_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotationRateMultiplyLife_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotationRateMultiplyLife();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotationRateOverLife_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleMeshRotationRateOverLife();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationRate_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationRate();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationRate_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationRate_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationRateMultiplyLife_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleRotationRateMultiplyLife();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSizeBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSizeBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSize_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSize();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSize_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSize_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSizeMultiplyLife_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSizeMultiplyLife();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSizeScale_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSizeScale();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSizeScaleBySpeed_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSizeScaleBySpeed();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSpawnBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSpawnBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSpawn_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSpawn();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSpawnPerUnit_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSpawnPerUnit();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSubUVBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSubUVBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSubUV_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSubUV();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSubUVMovie_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleSubUVMovie();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTrailBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTrailBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrail2SourceMethod();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTrailSource_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTrailSource();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataAnimTrail_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataAnimTrail();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBeamTaperMethod();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EBeam2Method();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FBeamTargetData();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataBeam2_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataBeam2();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGPUSpriteResourceData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGPUSpriteEmitterInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FGPUSpriteLocalVectorFieldInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataGpu_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataGpu();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshCameraFacingOptions();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshCameraFacingUpAxis();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMeshScreenAlignment();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataMesh_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataMesh();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETrailsRenderAxisOption();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataRibbon_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleTypeDataRibbon();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldGlobal_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldGlobal();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldLocal_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldLocal();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldRotation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldRotation();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldRotationRate_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldRotationRate();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldScale_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldScale();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldScaleOverLife_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVectorFieldScaleOverLife();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocityBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocityBase();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocity_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocity();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocity_Seeded_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocity_Seeded();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocityCone_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocityCone();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocityInheritParent_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocityInheritParent();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocityOverLifetime_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleVelocityOverLifetime();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventSendToGame_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleModuleEventSendToGame();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleSystemReplayFrame();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FParticleEmitterReplayFrame();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystemReplay_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UParticleSystemReplay();
	ENGINE_API class UClass* Z_Construct_UClass_UDemoPendingNetGame_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDemoPendingNetGame();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTireFrictionScalePair();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicalMaterial_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicalMaterial();
	ENGINE_API class UClass* Z_Construct_UClass_UDEPRECATED_PhysicalMaterialPropertyBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDEPRECATED_PhysicalMaterialPropertyBase();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsCollisionHandler_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsCollisionHandler();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPhysicsConstraintProfileHandle();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsConstraintTemplate_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsConstraintTemplate();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsSerializer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPhysicsSerializer();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_PlatformInterfaceDelegate__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPlatformInterfaceDataType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDelegateArray();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPlatformInterfaceDelegateResult();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPlatformInterfaceData();
	ENGINE_API class UClass* Z_Construct_UClass_UPlatformInterfaceBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPlatformInterfaceBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECloudStorageDelegate();
	ENGINE_API class UClass* Z_Construct_UClass_UCloudStorageBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCloudStorageBase();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnUserClosedAdvertisement__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnUserClickedBanner__DelegateSignature();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAdManagerDelegate();
	ENGINE_API class UClass* Z_Construct_UClass_UInGameAdManager_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UInGameAdManager();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMicroTransactionResult();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMicroTransactionDelegate();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPurchaseInfo();
	ENGINE_API class UClass* Z_Construct_UClass_UMicroTransactionBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UMicroTransactionBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETwitterIntegrationDelegate();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETwitterRequestMethod();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTwitterIntegrationBase_AuthorizeAccounts();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTwitterIntegrationBase_CanShowTweetUI();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTwitterIntegrationBase_GetAccountName();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTwitterIntegrationBase_GetNumAccounts();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTwitterIntegrationBase_Init();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTwitterIntegrationBase_ShowTweetUI();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTwitterIntegrationBase_TwitterRequest();
	ENGINE_API class UClass* Z_Construct_UClass_UTwitterIntegrationBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTwitterIntegrationBase();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlatformInterfaceWebResponse_GetHeader();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlatformInterfaceWebResponse_GetHeaderValue();
	ENGINE_API class UFunction* Z_Construct_UFunction_UPlatformInterfaceWebResponse_GetNumHeaders();
	ENGINE_API class UClass* Z_Construct_UClass_UPlatformInterfaceWebResponse_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPlatformInterfaceWebResponse();
	ENGINE_API class UClass* Z_Construct_UClass_ULocalPlayer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULocalPlayer();
	ENGINE_API class UClass* Z_Construct_UClass_UChildConnection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UChildConnection();
	ENGINE_API class UClass* Z_Construct_UClass_UPolys_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UPolys();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EReporterLineStyle();
	ENGINE_API class UClass* Z_Construct_UClass_UReporterBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UReporterBase();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ELegendPosition();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGraphDataStyle();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EGraphAxisStyle();
	ENGINE_API class UClass* Z_Construct_UClass_UReporterGraph_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UReporterGraph();
	ENGINE_API class UClass* Z_Construct_UClass_UReverbEffect_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UReverbEffect();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EConstraintTransform();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EControlConstraint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTransformBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTransformBaseConstraint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FRigTransformConstraint();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNode();
	ENGINE_API class UClass* Z_Construct_UClass_URig_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_URig();
	ENGINE_API class UClass* Z_Construct_UClass_USaveGame_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USaveGame();
	ENGINE_API class UClass* Z_Construct_UClass_USimpleConstructionScript_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USimpleConstructionScript();
	ENGINE_API class UClass* Z_Construct_UClass_USCS_Node_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USCS_Node();
	ENGINE_API class UClass* Z_Construct_UClass_USelection_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USelection();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EImpactDamageOverride();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleParameters();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleSpecialHierarchyDepths();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleAdvancedParameters();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleDebrisParameters();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleDamageParameters();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleParametersFlag();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDestructibleDepthParameters();
	ENGINE_API class UClass* Z_Construct_UClass_UDestructibleMesh_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDestructibleMesh();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSkeletalMeshLODGroupSettings();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshReductionSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshReductionSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshSocket_GetSocketLocation();
	ENGINE_API class UFunction* Z_Construct_UFunction_USkeletalMeshSocket_InitializeSocketFromLocation();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshSocket_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USkeletalMeshSocket();
	ENGINE_API class UClass* Z_Construct_UClass_USlateBrushAsset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USlateBrushAsset();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureSamplerFilter();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETexturePowerOfTwoSetting();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureMipGenSettings();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureGroup();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureSourceFormat();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureSourceArtType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ETextureMipCount();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECompositeTextureMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureAddress();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureFilter();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_TextureCompressionSettings();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTexturePlatformData();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTextureSource();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture();
	ENGINE_API class UClass* Z_Construct_UClass_USlateTextureAtlasInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USlateTextureAtlasInterface();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EMaxConcurrentResolutionRule();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundConcurrencySettings();
	ENGINE_API class UClass* Z_Construct_UClass_USoundConcurrency_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundConcurrency();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundBase();
	ENGINE_API class UClass* Z_Construct_UClass_UDialogueSoundWaveProxy_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDialogueSoundWaveProxy();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundNodeEditorData();
	ENGINE_API class UClass* Z_Construct_UClass_USoundCue_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundCue();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ESoundGroup();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundGroup();
	ENGINE_API class UClass* Z_Construct_UClass_USoundGroups_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundGroups();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDecompressionType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamedAudioPlatformData();
	ENGINE_API class UClass* Z_Construct_UClass_USoundWave_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundWave();
	ENGINE_API class UClass* Z_Construct_UClass_USoundWaveProcedural_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundWaveProcedural();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EAudioOutputTarget();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPassiveSoundMixModifier();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundClassProperties();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundClassEditorData();
	ENGINE_API class UClass* Z_Construct_UClass_USoundClass_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundClass();
	ENGINE_API class UClass* Z_Construct_UClass_USoundEffectPreset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundEffectPreset();
	ENGINE_API class UClass* Z_Construct_UClass_USoundEffectSourcePreset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundEffectSourcePreset();
	ENGINE_API class UClass* Z_Construct_UClass_USoundEffectSubmixPreset_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundEffectSubmixPreset();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSoundClassAdjuster();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAudioEQEffect();
	ENGINE_API class UClass* Z_Construct_UClass_USoundMix_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundMix();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNode_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNode();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeAssetReferencer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeAssetReferencer();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeWavePlayer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeWavePlayer();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeAttenuation_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeAttenuation();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeBranch_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeBranch();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeConcatenator_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeConcatenator();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeDelay_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeDelay();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeDialoguePlayer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeDialoguePlayer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDistanceDatum();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeDistanceCrossFade_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeDistanceCrossFade();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeParamCrossFade_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeParamCrossFade();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeDoppler_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeDoppler();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeEnveloper_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeEnveloper();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeGroupControl_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeGroupControl();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeLooping_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeLooping();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeMature_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeMature();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeMixer_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeMixer();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeModulator_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeModulator();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ModulationParamMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FModulatorContinuousParams();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeModulatorContinuous_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeModulatorContinuous();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeOscillator_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeOscillator();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeQualityLevel_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeQualityLevel();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeRandom_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeRandom();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeSoundClass_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeSoundClass();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeSwitch_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeSwitch();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeWaveParam_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundNodeWaveParam();
	ENGINE_API class UClass* Z_Construct_UClass_USoundSubmix_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USoundSubmix();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EOptimizationType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EImportanceLevel();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ENormalMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMaterialRemapIndex();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStaticMaterial();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAssetEditorOrbitCameraPosition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshSectionInfoMap();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMeshSectionInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStaticMeshSourceModel();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStaticMeshOptimizationSettings();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStaticMesh_GetBoundingBox();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStaticMesh_GetBounds();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStaticMesh_GetNumLODs();
	ENGINE_API class UFunction* Z_Construct_UFunction_UStaticMesh_GetNumSections();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMesh_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMesh();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshSocket_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UStaticMeshSocket();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVertexAttributeStreamType();
	ENGINE_API class UClass* Z_Construct_UClass_UVertexAttributeStream_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UVertexAttributeStream();
	ENGINE_API class UClass* Z_Construct_UClass_USubDSurface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USubDSurface();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FSubsurfaceProfileStruct();
	ENGINE_API class UClass* Z_Construct_UClass_USubsurfaceProfile_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_USubsurfaceProfile();
	ENGINE_API class UClass* Z_Construct_UClass_UTextPropertyTestObject_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextPropertyTestObject();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTexture2D_Blueprint_GetSizeX();
	ENGINE_API class UFunction* Z_Construct_UFunction_UTexture2D_Blueprint_GetSizeY();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2D();
	ENGINE_API class UClass* Z_Construct_UClass_ULightMapTexture2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_ULightMapTexture2D();
	ENGINE_API class UClass* Z_Construct_UClass_UShadowMapTexture2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UShadowMapTexture2D();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureLightProfile_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureLightProfile();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2DDynamic_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTexture2DDynamic();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureCube_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureCube();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTarget_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTarget();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTarget2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTarget2D();
	ENGINE_API class UFunction* Z_Construct_UDelegateFunction_Engine_OnCanvasRenderTargetUpdate__DelegateSignature();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvasRenderTarget2D_CreateCanvasRenderTarget2D();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvasRenderTarget2D_GetSize();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvasRenderTarget2D_ReceiveUpdate();
	ENGINE_API class UFunction* Z_Construct_UFunction_UCanvasRenderTarget2D_UpdateResource();
	ENGINE_API class UClass* Z_Construct_UClass_UCanvasRenderTarget2D_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UCanvasRenderTarget2D();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTargetCube_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureRenderTargetCube();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTextureLODGroup();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureLODSettings_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTextureLODSettings();
	ENGINE_API class UClass* Z_Construct_UClass_UDeviceProfile_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UDeviceProfile();
	ENGINE_API class UClass* Z_Construct_UClass_UThumbnailInfo_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UThumbnailInfo();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTLinearColorTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTVectorTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTFloatTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTEventTrack();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTTTrackBase();
	ENGINE_API class UClass* Z_Construct_UClass_UTimelineTemplate_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTimelineTemplate();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FTouchInputControl();
	ENGINE_API class UClass* Z_Construct_UClass_UTouchInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UTouchInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UUserDefinedEnum_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UUserDefinedEnum();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EUserDefinedStructureStatus();
	ENGINE_API class UClass* Z_Construct_UClass_UUserDefinedStruct_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UUserDefinedStruct();
	ENGINE_API class UClass* Z_Construct_UClass_UVectorField_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UVectorField();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVectorFieldConstructionOp();
	ENGINE_API class UClass* Z_Construct_UClass_UVectorFieldAnimated_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UVectorFieldAnimated();
	ENGINE_API class UClass* Z_Construct_UClass_UVectorFieldStatic_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UVectorFieldStatic();
	ENGINE_API class UClass* Z_Construct_UClass_UVisualLoggerAutomationTests_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UVisualLoggerAutomationTests();
	ENGINE_API class UClass* Z_Construct_UClass_UVisualLoggerDebugSnapshotInterface_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UVisualLoggerDebugSnapshotInterface();
	ENGINE_API class UClass* Z_Construct_UClass_UWorldComposition_NoRegister();
	ENGINE_API class UClass* Z_Construct_UClass_UWorldComposition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationRecordingSettings();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPostCopyOperation();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EPinHidingMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_Base();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExposedValueHandler();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FExposedValueCopyRecord();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FComponentSpacePoseLink();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseLink();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FPoseLinkBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FInputScaleBias();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ApplyMeshSpaceAdditive();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_AssetPlayerBase();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SaveCachedPose();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SequencePlayer();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_StateMachine();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationPotentialTransition();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimationActiveTransitionEntry();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SubInput();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SubInstance();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEvaluatorMode();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EEvaluatorDataSource();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_TransitionPoseEvaluator();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_TransitionResult();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_UseCachedPose();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ConvertLocalToComponentSpace();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_ConvertComponentToLocalSpace();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_ECameraAlphaBlendMode();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FDummySpacerCameraTypes();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FIntegralCurve();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FIntegralKey();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNameCurve();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FNameCurveKey();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStringCurve();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStringCurveKey();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FMemberReference();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FStreamableManager();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EVertexPaintAxis();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_EDrawDebugItemType();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimInstanceProxy();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FQueuedDrawDebugItem();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_AnimPhysCollisionType();
	ENGINE_API class UEnum* Z_Construct_UEnum_Engine_AnimPhysTwistAxis();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimSingleNodeInstanceProxy();
	ENGINE_API class UScriptStruct* Z_Construct_UScriptStruct_FAnimNode_SingleNode();
	ENGINE_API class UPackage* Z_Construct_UPackage__Script_Engine();
	UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantizeNormal()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantizeNormal_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("Vector_NetQuantizeNormal"), sizeof(FVector_NetQuantizeNormal), Get_Z_Construct_UScriptStruct_FVector_NetQuantizeNormal_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Vector_NetQuantizeNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FVector(), new UScriptStruct::TCppStructOps<FVector_NetQuantizeNormal>, EStructFlags(0x00000011));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/NetSerialization.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("FVector_NetQuantizeNormal\n\n16 bits per component\nValid range: -1..+1 inclusive"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantizeNormal_CRC() { return 2270802407U; }
	UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantize100()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantize100_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("Vector_NetQuantize100"), sizeof(FVector_NetQuantize100), Get_Z_Construct_UScriptStruct_FVector_NetQuantize100_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Vector_NetQuantize100"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FVector(), new UScriptStruct::TCppStructOps<FVector_NetQuantize100>, EStructFlags(0x00000011));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/NetSerialization.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("FVector_NetQuantize100\n\n2 decimal place of precision.\nUp to 30 bits per component.\nValid range: 2^30 / 100 = +/- 10,737,418.24"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantize100_CRC() { return 3596187134U; }
	UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantize10()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantize10_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("Vector_NetQuantize10"), sizeof(FVector_NetQuantize10), Get_Z_Construct_UScriptStruct_FVector_NetQuantize10_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Vector_NetQuantize10"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FVector(), new UScriptStruct::TCppStructOps<FVector_NetQuantize10>, EStructFlags(0x00000011));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/NetSerialization.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("FVector_NetQuantize10\n\n1 decimal place of precision.\nUp to 24 bits per component.\nValid range: 2^24 / 10 = +/- 1,677,721.6"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantize10_CRC() { return 4078102840U; }
	UScriptStruct* Z_Construct_UScriptStruct_FVector_NetQuantize()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantize_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("Vector_NetQuantize"), sizeof(FVector_NetQuantize), Get_Z_Construct_UScriptStruct_FVector_NetQuantize_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Vector_NetQuantize"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FVector(), new UScriptStruct::TCppStructOps<FVector_NetQuantize>, EStructFlags(0x00000011));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/NetSerialization.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("FVector_NetQuantize\n\n0 decimal place of precision.\nUp to 20 bits per component.\nValid range: 2^20 = +/- 1,048,576\n\nNote: this is the historical UE format for vector net serialization"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FVector_NetQuantize_CRC() { return 2877019719U; }
	UScriptStruct* Z_Construct_UScriptStruct_FFastArraySerializer()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FFastArraySerializer_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("FastArraySerializer"), sizeof(FFastArraySerializer), Get_Z_Construct_UScriptStruct_FFastArraySerializer_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FastArraySerializer"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FFastArraySerializer>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/NetSerialization.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Base struct for wrapping the array used in Fast TArray Replication"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FFastArraySerializer_CRC() { return 3113350580U; }
	UScriptStruct* Z_Construct_UScriptStruct_FFastArraySerializerItem()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FFastArraySerializerItem_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("FastArraySerializerItem"), sizeof(FFastArraySerializerItem), Get_Z_Construct_UScriptStruct_FFastArraySerializerItem_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FastArraySerializerItem"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FFastArraySerializerItem>, EStructFlags(0x00000001));
			UProperty* NewProp_MostRecentArrayReplicationKey = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MostRecentArrayReplicationKey"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MostRecentArrayReplicationKey, FFastArraySerializerItem), 0x0010000080000000);
			UProperty* NewProp_ReplicationKey = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReplicationKey"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReplicationKey, FFastArraySerializerItem), 0x0010000080000000);
			UProperty* NewProp_ReplicationID = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ReplicationID"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ReplicationID, FFastArraySerializerItem), 0x0010000080000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/NetSerialization.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Base struct for items using Fast TArray Replication"));
			MetaData->SetValue(NewProp_MostRecentArrayReplicationKey, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/NetSerialization.h"));
			MetaData->SetValue(NewProp_ReplicationKey, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/NetSerialization.h"));
			MetaData->SetValue(NewProp_ReplicationID, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/NetSerialization.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FFastArraySerializerItem_CRC() { return 2422061065U; }
	UFunction* Z_Construct_UDelegateFunction_Engine_ConstraintBrokenSignature__DelegateSignature()
	{
		struct _Script_Engine_eventConstraintBrokenSignature_Parms
		{
			int32 ConstraintIndex;
		};
		UObject* Outer=Z_Construct_UPackage__Script_Engine();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ConstraintBrokenSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_Engine_eventConstraintBrokenSignature_Parms));
			UProperty* NewProp_ConstraintIndex = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ConstraintIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ConstraintIndex, _Script_Engine_eventConstraintBrokenSignature_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Dynamic delegate to use by components that want to route the broken-event into blueprints"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_Engine_TimerDynamicDelegate__DelegateSignature()
	{
		UObject* Outer=Z_Construct_UPackage__Script_Engine();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TimerDynamicDelegate__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00120000, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnFunction;
	}
	UEnum* Z_Construct_UEnum_Engine_EMeshBufferAccess()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EMeshBufferAccess_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMeshBufferAccess"), 0, Get_Z_Construct_UEnum_Engine_EMeshBufferAccess_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMeshBufferAccess"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMeshBufferAccess::Default")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMeshBufferAccess::ForceCPUAndGPU")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMeshBufferAccess::EMeshBufferAccess_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EMeshBufferAccess");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Default.ToolTip"), TEXT("Access will be determined based on the assets used in the mesh and hardware / software capability."));
			MetaData->SetValue(ReturnEnum, TEXT("ForceCPUAndGPU.ToolTip"), TEXT("Force access on both CPU and GPU."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Which processors will have access to Mesh Vertex Buffers."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EMeshBufferAccess_CRC() { return 1397037106U; }
	UEnum* Z_Construct_UEnum_Engine_ESpawnActorCollisionHandlingMethod()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ESpawnActorCollisionHandlingMethod_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESpawnActorCollisionHandlingMethod"), 0, Get_Z_Construct_UEnum_Engine_ESpawnActorCollisionHandlingMethod_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESpawnActorCollisionHandlingMethod"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnActorCollisionHandlingMethod::Undefined")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnActorCollisionHandlingMethod::AlwaysSpawn")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnActorCollisionHandlingMethod::AdjustIfPossibleButAlwaysSpawn")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnActorCollisionHandlingMethod::AdjustIfPossibleButDontSpawnIfColliding")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnActorCollisionHandlingMethod::DontSpawnIfColliding")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESpawnActorCollisionHandlingMethod::ESpawnActorCollisionHandlingMethod_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ESpawnActorCollisionHandlingMethod");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AdjustIfPossibleButAlwaysSpawn.DisplayName"), TEXT("Try To Adjust Location, But Always Spawn"));
			MetaData->SetValue(ReturnEnum, TEXT("AdjustIfPossibleButAlwaysSpawn.ToolTip"), TEXT("Actor will try to find a nearby non-colliding location (based on shape components), but will always spawn even if one cannot be found."));
			MetaData->SetValue(ReturnEnum, TEXT("AdjustIfPossibleButDontSpawnIfColliding.DisplayName"), TEXT("Try To Adjust Location, Don't Spawn If Still Colliding"));
			MetaData->SetValue(ReturnEnum, TEXT("AdjustIfPossibleButDontSpawnIfColliding.ToolTip"), TEXT("Actor will try to find a nearby non-colliding location (based on shape components), but will NOT spawn unless one is found."));
			MetaData->SetValue(ReturnEnum, TEXT("AlwaysSpawn.DisplayName"), TEXT("Always Spawn, Ignore Collisions"));
			MetaData->SetValue(ReturnEnum, TEXT("AlwaysSpawn.ToolTip"), TEXT("Actor will spawn in desired location, regardless of collisions."));
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("DontSpawnIfColliding.DisplayName"), TEXT("Do Not Spawn"));
			MetaData->SetValue(ReturnEnum, TEXT("DontSpawnIfColliding.ToolTip"), TEXT("Actor will fail to spawn."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Defines available strategies for handling the case where an actor is spawned in such a way that it penetrates blocking collision."));
			MetaData->SetValue(ReturnEnum, TEXT("Undefined.DisplayName"), TEXT("Default"));
			MetaData->SetValue(ReturnEnum, TEXT("Undefined.ToolTip"), TEXT("Fall back to default settings."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ESpawnActorCollisionHandlingMethod_CRC() { return 1315637520U; }
	UEnum* Z_Construct_UEnum_Engine_EConstraintFrame()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EConstraintFrame_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EConstraintFrame"), 0, Get_Z_Construct_UEnum_Engine_EConstraintFrame_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EConstraintFrame"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EConstraintFrame::Frame1")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EConstraintFrame::Frame2")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EConstraintFrame::EConstraintFrame_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EConstraintFrame::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum to indicate which frame we want."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EConstraintFrame_CRC() { return 3545112970U; }
	UEnum* Z_Construct_UEnum_Engine_EAngularConstraintMotion()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EAngularConstraintMotion_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EAngularConstraintMotion"), 0, Get_Z_Construct_UEnum_Engine_EAngularConstraintMotion_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAngularConstraintMotion"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ACM_Free")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ACM_Limited")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ACM_Locked")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ACM_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EAngularConstraintMotion");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ACM_Free.DisplayName"), TEXT("Free"));
			MetaData->SetValue(ReturnEnum, TEXT("ACM_Free.ToolTip"), TEXT("No constraint against this axis."));
			MetaData->SetValue(ReturnEnum, TEXT("ACM_Limited.DisplayName"), TEXT("Limited"));
			MetaData->SetValue(ReturnEnum, TEXT("ACM_Limited.ToolTip"), TEXT("Limited freedom along this axis."));
			MetaData->SetValue(ReturnEnum, TEXT("ACM_Locked.DisplayName"), TEXT("Locked"));
			MetaData->SetValue(ReturnEnum, TEXT("ACM_Locked.ToolTip"), TEXT("Fully constraint against this axis."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("ANGULAR DOF"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EAngularConstraintMotion_CRC() { return 298772093U; }
	UEnum* Z_Construct_UEnum_Engine_EComponentSocketType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EComponentSocketType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EComponentSocketType"), 0, Get_Z_Construct_UEnum_Engine_EComponentSocketType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EComponentSocketType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentSocketType::Invalid")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentSocketType::Bone")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentSocketType::Socket")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentSocketType::EComponentSocketType_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EComponentSocketType::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Bone.ToolTip"), TEXT("Skeletal bone."));
			MetaData->SetValue(ReturnEnum, TEXT("Invalid.ToolTip"), TEXT("Not a valid socket or bone name."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Socket.ToolTip"), TEXT("Socket."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Type of a socket on a scene component."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EComponentSocketType_CRC() { return 2736881096U; }
	UEnum* Z_Construct_UEnum_Engine_EComponentMobility()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EComponentMobility_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EComponentMobility"), 0, Get_Z_Construct_UEnum_Engine_EComponentMobility_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EComponentMobility"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentMobility::Static")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentMobility::Stationary")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentMobility::Movable")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentMobility::EComponentMobility_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EComponentMobility::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Movable.ToolTip"), TEXT("Movable objects can be moved and changed in game.\n- Totally dynamic\n- Can cast dynamic shadows\n- Slowest rendering"));
			MetaData->SetValue(ReturnEnum, TEXT("Static.ToolTip"), TEXT("Static objects cannot be moved or changed in game.\n- Allows baked lighting\n- Fastest rendering"));
			MetaData->SetValue(ReturnEnum, TEXT("Stationary.ToolTip"), TEXT("A stationary light will only have its shadowing and bounced lighting from static geometry baked by Lightmass, all other lighting will be dynamic.\n- It can change color and intensity in game.\n- Can't move\n- Allows partial baked lighting\n- Dynamic shadows"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Describes how often this component is allowed to move."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EComponentMobility_CRC() { return 2143018288U; }
	UEnum* Z_Construct_UEnum_Engine_EPhysicalSurface()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EPhysicalSurface_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EPhysicalSurface"), 0, Get_Z_Construct_UEnum_Engine_EPhysicalSurface_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPhysicalSurface"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType_Default")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType1")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType2")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType3")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType4")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType5")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType6")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType7")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType8")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType9")), 9));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType10")), 10));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType11")), 11));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType12")), 12));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType13")), 13));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType14")), 14));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType15")), 15));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType16")), 16));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType17")), 17));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType18")), 18));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType19")), 19));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType20")), 20));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType21")), 21));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType22")), 22));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType23")), 23));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType24")), 24));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType25")), 25));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType26")), 26));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType27")), 27));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType28")), 28));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType29")), 29));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType30")), 30));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType31")), 31));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType32")), 32));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType33")), 33));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType34")), 34));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType35")), 35));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType36")), 36));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType37")), 37));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType38")), 38));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType39")), 39));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType40")), 40));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType41")), 41));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType42")), 42));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType43")), 43));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType44")), 44));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType45")), 45));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType46")), 46));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType47")), 47));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType48")), 48));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType49")), 49));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType50")), 50));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType51")), 51));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType52")), 52));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType53")), 53));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType54")), 54));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType55")), 55));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType56")), 56));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType57")), 57));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType58")), 58));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType59")), 59));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType60")), 60));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType61")), 61));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType62")), 62));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SurfaceType_Max")), 63));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EPhysicalSurface_MAX")), 64));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EPhysicalSurface");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType1.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType10.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType11.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType12.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType13.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType14.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType15.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType16.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType17.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType18.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType19.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType2.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType20.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType21.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType22.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType23.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType24.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType25.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType26.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType27.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType28.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType29.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType3.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType30.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType31.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType32.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType33.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType34.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType35.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType36.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType37.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType38.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType39.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType4.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType40.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType41.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType42.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType43.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType44.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType45.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType46.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType47.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType48.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType49.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType5.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType50.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType51.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType52.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType53.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType54.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType55.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType56.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType57.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType58.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType59.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType6.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType60.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType61.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType62.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType7.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType8.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType9.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType_Default.DisplayName"), TEXT("Default"));
			MetaData->SetValue(ReturnEnum, TEXT("SurfaceType_Max.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Types of surfaces in the game."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EPhysicalSurface_CRC() { return 2008505291U; }
	UEnum* Z_Construct_UEnum_Engine_EWalkableSlopeBehavior()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EWalkableSlopeBehavior_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EWalkableSlopeBehavior"), 0, Get_Z_Construct_UEnum_Engine_EWalkableSlopeBehavior_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EWalkableSlopeBehavior"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("WalkableSlope_Default")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("WalkableSlope_Increase")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("WalkableSlope_Decrease")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("WalkableSlope_Unwalkable")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("WalkableSlope_Max")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EWalkableSlopeBehavior");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Controls behavior of WalkableSlopeOverride, determining how to affect walkability of surfaces for Characters.\n@see FWalkableSlopeOverride\n@see UCharacterMovementComponent::GetWalkableFloorAngle(), UCharacterMovementComponent::SetWalkableFloorAngle()"));
			MetaData->SetValue(ReturnEnum, TEXT("WalkableSlope_Decrease.DisplayName"), TEXT("Decrease Walkable Slope"));
			MetaData->SetValue(ReturnEnum, TEXT("WalkableSlope_Decrease.ToolTip"), TEXT("Decrease walkable slope.\nMakes it harder to walk up a surface, by restricting traversal to lower-than-usual angles.\n@see FWalkableSlopeOverride::WalkableSlopeAngle"));
			MetaData->SetValue(ReturnEnum, TEXT("WalkableSlope_Default.DisplayName"), TEXT("Unchanged"));
			MetaData->SetValue(ReturnEnum, TEXT("WalkableSlope_Default.ToolTip"), TEXT("Don't affect the walkable slope. Walkable slope angle will be ignored."));
			MetaData->SetValue(ReturnEnum, TEXT("WalkableSlope_Increase.DisplayName"), TEXT("Increase Walkable Slope"));
			MetaData->SetValue(ReturnEnum, TEXT("WalkableSlope_Increase.ToolTip"), TEXT("Increase walkable slope.\nMakes it easier to walk up a surface, by allowing traversal over higher-than-usual angles.\n@see FWalkableSlopeOverride::WalkableSlopeAngle"));
			MetaData->SetValue(ReturnEnum, TEXT("WalkableSlope_Max.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("WalkableSlope_Unwalkable.DisplayName"), TEXT("Unwalkable"));
			MetaData->SetValue(ReturnEnum, TEXT("WalkableSlope_Unwalkable.ToolTip"), TEXT("Make surface unwalkable.\nNote: WalkableSlopeAngle will be ignored."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EWalkableSlopeBehavior_CRC() { return 3767988958U; }
	UEnum* Z_Construct_UEnum_Engine_ERotatorQuantization()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ERotatorQuantization_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ERotatorQuantization"), 0, Get_Z_Construct_UEnum_Engine_ERotatorQuantization_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ERotatorQuantization"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ERotatorQuantization::ByteComponents")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ERotatorQuantization::ShortComponents")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ERotatorQuantization::ERotatorQuantization_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ERotatorQuantization");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ByteComponents.ToolTip"), TEXT("The rotator will be compressed to 8 bits per component."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ShortComponents.ToolTip"), TEXT("The rotator will be compressed to 16 bits per component."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ERotatorQuantization_CRC() { return 3090394581U; }
	UEnum* Z_Construct_UEnum_Engine_EVectorQuantization()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EVectorQuantization_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EVectorQuantization"), 0, Get_Z_Construct_UEnum_Engine_EVectorQuantization_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EVectorQuantization"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EVectorQuantization::RoundWholeNumber")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EVectorQuantization::RoundOneDecimal")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EVectorQuantization::RoundTwoDecimals")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EVectorQuantization::EVectorQuantization_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EVectorQuantization");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("RoundOneDecimal.ToolTip"), TEXT("Each vector component will be rounded, preserving one decimal place."));
			MetaData->SetValue(ReturnEnum, TEXT("RoundTwoDecimals.ToolTip"), TEXT("Each vector component will be rounded, preserving two decimal places."));
			MetaData->SetValue(ReturnEnum, TEXT("RoundWholeNumber.ToolTip"), TEXT("Each vector component will be rounded to the nearest whole number."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EVectorQuantization_CRC() { return 3647072680U; }
	UEnum* Z_Construct_UEnum_Engine_EEndPlayReason()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EEndPlayReason_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EEndPlayReason"), 0, Get_Z_Construct_UEnum_Engine_EEndPlayReason_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEndPlayReason"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EEndPlayReason::Destroyed")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EEndPlayReason::LevelTransition")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EEndPlayReason::EndPlayInEditor")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EEndPlayReason::RemovedFromWorld")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EEndPlayReason::Quit")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EEndPlayReason::EEndPlayReason_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EEndPlayReason::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Destroyed.ToolTip"), TEXT("When the Actor or Component is explicitly destroyed."));
			MetaData->SetValue(ReturnEnum, TEXT("EndPlayInEditor.ToolTip"), TEXT("When the world is being unloaded because PIE is ending."));
			MetaData->SetValue(ReturnEnum, TEXT("LevelTransition.ToolTip"), TEXT("When the world is being unloaded for a level transition."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Quit.ToolTip"), TEXT("When the application is being exited."));
			MetaData->SetValue(ReturnEnum, TEXT("RemovedFromWorld.ToolTip"), TEXT("When the level it is a member of is streamed out."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EEndPlayReason_CRC() { return 4277716468U; }
	UEnum* Z_Construct_UEnum_Engine_EAutoPossessAI()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EAutoPossessAI_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EAutoPossessAI"), 0, Get_Z_Construct_UEnum_Engine_EAutoPossessAI_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAutoPossessAI"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoPossessAI::Disabled")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoPossessAI::PlacedInWorld")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoPossessAI::Spawned")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoPossessAI::PlacedInWorldOrSpawned")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoPossessAI::EAutoPossessAI_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EAutoPossessAI");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Disabled.ToolTip"), TEXT("Feature is disabled (do not automatically possess AI)."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("PlacedInWorld.ToolTip"), TEXT("Only possess by an AI Controller if Pawn is placed in the world."));
			MetaData->SetValue(ReturnEnum, TEXT("PlacedInWorldOrSpawned.ToolTip"), TEXT("Pawn is automatically possessed by an AI Controller whenever it is created."));
			MetaData->SetValue(ReturnEnum, TEXT("Spawned.ToolTip"), TEXT("Only possess by an AI Controller if Pawn is spawned after the world has loaded."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EAutoPossessAI_CRC() { return 3868617500U; }
	UEnum* Z_Construct_UEnum_Engine_EAutoReceiveInput()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EAutoReceiveInput_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EAutoReceiveInput"), 0, Get_Z_Construct_UEnum_Engine_EAutoReceiveInput_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAutoReceiveInput"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::Disabled")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::Player0")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::Player1")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::Player2")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::Player3")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::Player4")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::Player5")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::Player6")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::Player7")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAutoReceiveInput::EAutoReceiveInput_MAX")), 9));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EAutoReceiveInput::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EAutoReceiveInput_CRC() { return 1033902165U; }
	UEnum* Z_Construct_UEnum_Engine_ENetDormancy()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ENetDormancy_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENetDormancy"), 0, Get_Z_Construct_UEnum_Engine_ENetDormancy_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENetDormancy"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DORM_Never")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DORM_Awake")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DORM_DormantAll")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DORM_DormantPartial")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DORM_Initial")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("DORN_MAX")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetDormancy_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ENetDormancy");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("DORM_Awake.ToolTip"), TEXT("This actor can go dormant, but is not currently dormant. Game code will tell it when it go dormant."));
			MetaData->SetValue(ReturnEnum, TEXT("DORM_DormantAll.ToolTip"), TEXT("This actor wants to go fully dormant for all connections."));
			MetaData->SetValue(ReturnEnum, TEXT("DORM_DormantPartial.ToolTip"), TEXT("This actor may want to go dormant for some connections, GetNetDormancy() will be called to find out which."));
			MetaData->SetValue(ReturnEnum, TEXT("DORM_Initial.ToolTip"), TEXT("This actor is initially dormant for all connection if it was placed in map."));
			MetaData->SetValue(ReturnEnum, TEXT("DORM_Never.ToolTip"), TEXT("This actor can never go network dormant."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ENetDormancy_CRC() { return 1884113747U; }
	UEnum* Z_Construct_UEnum_Engine_ENetRole()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ENetRole_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENetRole"), 0, Get_Z_Construct_UEnum_Engine_ENetRole_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENetRole"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ROLE_None")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ROLE_SimulatedProxy")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ROLE_AutonomousProxy")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ROLE_Authority")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ROLE_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ENetRole");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ROLE_Authority.ToolTip"), TEXT("Authoritative control over the actor."));
			MetaData->SetValue(ReturnEnum, TEXT("ROLE_AutonomousProxy.ToolTip"), TEXT("Locally autonomous proxy of this actor."));
			MetaData->SetValue(ReturnEnum, TEXT("ROLE_None.ToolTip"), TEXT("No role at all."));
			MetaData->SetValue(ReturnEnum, TEXT("ROLE_SimulatedProxy.ToolTip"), TEXT("Locally simulated proxy of this actor."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ENetRole_CRC() { return 1495354753U; }
	UEnum* Z_Construct_UEnum_Engine_EUpdateRateShiftBucket()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EUpdateRateShiftBucket_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EUpdateRateShiftBucket"), 0, Get_Z_Construct_UEnum_Engine_EUpdateRateShiftBucket_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EUpdateRateShiftBucket"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EUpdateRateShiftBucket::ShiftBucket0")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EUpdateRateShiftBucket::ShiftBucket1")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EUpdateRateShiftBucket::ShiftBucket2")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EUpdateRateShiftBucket::ShiftBucket3")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EUpdateRateShiftBucket::ShiftBucket4")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EUpdateRateShiftBucket::ShiftBucket5")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EUpdateRateShiftBucket::ShiftBucketMax")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EUpdateRateShiftBucket::EUpdateRateShiftBucket_MAX")), 7));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EUpdateRateShiftBucket");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum for controlling buckets for update rate optimizations if we need to stagger\nMultiple actor populations separately."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EUpdateRateShiftBucket_CRC() { return 1099753051U; }
	UEnum* Z_Construct_UEnum_Engine_EShadowMapFlags()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EShadowMapFlags_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EShadowMapFlags"), 0, Get_Z_Construct_UEnum_Engine_EShadowMapFlags_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EShadowMapFlags"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SMF_None")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SMF_Streamed")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SMF_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EShadowMapFlags");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SMF_None.ToolTip"), TEXT("No flags."));
			MetaData->SetValue(ReturnEnum, TEXT("SMF_Streamed.ToolTip"), TEXT("Shadowmap should be placed in a streaming texture."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Bit-field flags that affects storage (e.g. packing, streaming) and other info about a shadowmap."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EShadowMapFlags_CRC() { return 1648439013U; }
	UEnum* Z_Construct_UEnum_Engine_ELightMapPaddingType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ELightMapPaddingType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ELightMapPaddingType"), 0, Get_Z_Construct_UEnum_Engine_ELightMapPaddingType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELightMapPaddingType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("LMPT_NormalPadding")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("LMPT_PrePadding")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("LMPT_NoPadding")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("LMPT_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ELightMapPaddingType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ELightMapPaddingType_CRC() { return 2799382871U; }
	UEnum* Z_Construct_UEnum_Engine_ECollisionEnabled()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ECollisionEnabled_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECollisionEnabled"), 0, Get_Z_Construct_UEnum_Engine_ECollisionEnabled_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECollisionEnabled"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECollisionEnabled::NoCollision")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECollisionEnabled::QueryOnly")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECollisionEnabled::PhysicsOnly")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECollisionEnabled::QueryAndPhysics")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECollisionEnabled::ECollisionEnabled_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ECollisionEnabled::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NoCollision.DisplayName"), TEXT("No Collision"));
			MetaData->SetValue(ReturnEnum, TEXT("NoCollision.ToolTip"), TEXT("Will not create any representation in the physics engine. Cannot be used for spatial queries (raycasts, sweeps, overlaps) or simulation (rigid body, constraints). Best performance possible (especially for moving objects)"));
			MetaData->SetValue(ReturnEnum, TEXT("PhysicsOnly.DisplayName"), TEXT("Physics Only (No Query Collision)"));
			MetaData->SetValue(ReturnEnum, TEXT("PhysicsOnly.ToolTip"), TEXT("Only used only for physics simulation (rigid body, constraints). Cannot be used for spatial queries (raycasts, sweeps, overlaps). Useful for jiggly bits on characters that do not need per bone detection. Performance gains by keeping data out of query tree"));
			MetaData->SetValue(ReturnEnum, TEXT("QueryAndPhysics.DisplayName"), TEXT("Collision Enabled (Query and Physics)"));
			MetaData->SetValue(ReturnEnum, TEXT("QueryAndPhysics.ToolTip"), TEXT("Can be used for both spatial queries (raycasts, sweeps, overlaps) and simulation (rigid body, constraints)."));
			MetaData->SetValue(ReturnEnum, TEXT("QueryOnly.DisplayName"), TEXT("Query Only (No Physics Collision)"));
			MetaData->SetValue(ReturnEnum, TEXT("QueryOnly.ToolTip"), TEXT("Only used for spatial queries (raycasts, sweeps, and overlaps). Cannot be used for simulation (rigid body, constraints). Useful for character movement and things that do not need physical simulation. Performance gains by keeping data out of simulation tree."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum used to describe what type of collision is enabled on a body."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ECollisionEnabled_CRC() { return 2064028211U; }
	UEnum* Z_Construct_UEnum_Engine_ETimelineSigType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETimelineSigType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETimelineSigType"), 0, Get_Z_Construct_UEnum_Engine_ETimelineSigType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETimelineSigType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETS_EventSignature")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETS_FloatSignature")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETS_VectorSignature")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETS_LinearColorSignature")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETS_InvalidSignature")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETS_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ETimelineSigType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum used to indicate what type of timeline signature a function matches."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETimelineSigType_CRC() { return 1811705653U; }
	UEnum* Z_Construct_UEnum_Engine_ESleepFamily()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ESleepFamily_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESleepFamily"), 0, Get_Z_Construct_UEnum_Engine_ESleepFamily_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESleepFamily"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESleepFamily::Normal")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESleepFamily::Sensitive")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESleepFamily::Custom")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ESleepFamily::ESleepFamily_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ESleepFamily");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Custom.ToolTip"), TEXT("Specify your own sleep threshold multiplier"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Normal.ToolTip"), TEXT("Engine defaults."));
			MetaData->SetValue(ReturnEnum, TEXT("Sensitive.ToolTip"), TEXT("A family of values with a lower sleep threshold; good for slower pendulum-like physics."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Presets of values used in considering when put this body to sleep."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ESleepFamily_CRC() { return 3656423168U; }
	UEnum* Z_Construct_UEnum_Engine_ERadialImpulseFalloff()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ERadialImpulseFalloff_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ERadialImpulseFalloff"), 0, Get_Z_Construct_UEnum_Engine_ERadialImpulseFalloff_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ERadialImpulseFalloff"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("RIF_Constant")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("RIF_Linear")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("RIF_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ERadialImpulseFalloff");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("RIF_Constant.ToolTip"), TEXT("Impulse is a constant strength, up to the limit of its range."));
			MetaData->SetValue(ReturnEnum, TEXT("RIF_Linear.ToolTip"), TEXT("Impulse should get linearly weaker the further from origin."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum for controlling the falloff of strength of a radial impulse as a function of distance from Origin."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ERadialImpulseFalloff_CRC() { return 1719885069U; }
	UEnum* Z_Construct_UEnum_Engine_EInputConsumeOptions()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EInputConsumeOptions_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EInputConsumeOptions"), 0, Get_Z_Construct_UEnum_Engine_EInputConsumeOptions_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EInputConsumeOptions"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ICO_ConsumeAll")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ICO_ConsumeBoundKeys")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ICO_ConsumeNone")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ICO_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EInputConsumeOptions");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ICO_ConsumeAll.ToolTip"), TEXT("This component consumes all input and no components lower in the stack are processed."));
			MetaData->SetValue(ReturnEnum, TEXT("ICO_ConsumeBoundKeys.ToolTip"), TEXT("This component consumes all events for a keys it has bound (whether or not they are handled successfully).  Components lower in the stack will not receive events from these keys."));
			MetaData->SetValue(ReturnEnum, TEXT("ICO_ConsumeNone.ToolTip"), TEXT("All input events will be available to components lower in the stack."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EInputConsumeOptions_CRC() { return 1519599522U; }
	UEnum* Z_Construct_UEnum_Engine_EFilterInterpolationType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EFilterInterpolationType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EFilterInterpolationType"), 0, Get_Z_Construct_UEnum_Engine_EFilterInterpolationType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EFilterInterpolationType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BSIT_Average")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BSIT_Linear")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BSIT_Cubic")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BSIT_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EFilterInterpolationType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BSIT_Average.DisplayName"), TEXT("Averaged Interpolation"));
			MetaData->SetValue(ReturnEnum, TEXT("BSIT_Cubic.DisplayName"), TEXT("Cubic Interpolation"));
			MetaData->SetValue(ReturnEnum, TEXT("BSIT_Linear.DisplayName"), TEXT("Linear Interpolation"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EFilterInterpolationType_CRC() { return 1736686718U; }
	UEnum* Z_Construct_UEnum_Engine_ECollisionResponse()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ECollisionResponse_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECollisionResponse"), 0, Get_Z_Construct_UEnum_Engine_ECollisionResponse_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECollisionResponse"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECR_Ignore")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECR_Overlap")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECR_Block")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECR_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ECollisionResponse");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ECR_Block.DisplayName"), TEXT("Block"));
			MetaData->SetValue(ReturnEnum, TEXT("ECR_Ignore.DisplayName"), TEXT("Ignore"));
			MetaData->SetValue(ReturnEnum, TEXT("ECR_Overlap.DisplayName"), TEXT("Overlap"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum indicating how each type should respond"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ECollisionResponse_CRC() { return 2311809801U; }
	UEnum* Z_Construct_UEnum_Engine_EPhysicsSceneType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EPhysicsSceneType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EPhysicsSceneType"), 0, Get_Z_Construct_UEnum_Engine_EPhysicsSceneType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EPhysicsSceneType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("PST_Sync")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("PST_Cloth")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("PST_Async")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("PST_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EPhysicsSceneType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("PST_Async.ToolTip"), TEXT("The asynchronous scene, which may run while Unreal simulation code runs."));
			MetaData->SetValue(ReturnEnum, TEXT("PST_Cloth.ToolTip"), TEXT("The cloth scene, which may run while Unreal simulation code runs."));
			MetaData->SetValue(ReturnEnum, TEXT("PST_Sync.ToolTip"), TEXT("The synchronous scene, which must finish before Unreal simulation code is run."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum indicating which physics scene to use."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EPhysicsSceneType_CRC() { return 2081692637U; }
	UEnum* Z_Construct_UEnum_Engine_ETraceTypeQuery()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETraceTypeQuery_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETraceTypeQuery"), 0, Get_Z_Construct_UEnum_Engine_ETraceTypeQuery_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETraceTypeQuery"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery1")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery2")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery3")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery4")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery5")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery6")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery7")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery8")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery9")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery10")), 9));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery11")), 10));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery12")), 11));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery13")), 12));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery14")), 13));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery15")), 14));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery16")), 15));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery17")), 16));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery18")), 17));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery19")), 18));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery20")), 19));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery21")), 20));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery22")), 21));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery23")), 22));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery24")), 23));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery25")), 24));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery26")), 25));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery27")), 26));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery28")), 27));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery29")), 28));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery30")), 29));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery31")), 30));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery32")), 31));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TraceTypeQuery_MAX")), 32));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETraceTypeQuery_MAX")), 33));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ETraceTypeQuery");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery1.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery10.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery11.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery12.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery13.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery14.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery15.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery16.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery17.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery18.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery19.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery2.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery20.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery21.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery22.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery23.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery24.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery25.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery26.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery27.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery28.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery29.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery3.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery30.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery31.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery32.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery4.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery5.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery6.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery7.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery8.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery9.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TraceTypeQuery_MAX.Hidden"), TEXT(""));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETraceTypeQuery_CRC() { return 2113845511U; }
	UEnum* Z_Construct_UEnum_Engine_EObjectTypeQuery()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EObjectTypeQuery_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EObjectTypeQuery"), 0, Get_Z_Construct_UEnum_Engine_EObjectTypeQuery_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EObjectTypeQuery"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery1")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery2")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery3")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery4")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery5")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery6")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery7")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery8")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery9")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery10")), 9));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery11")), 10));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery12")), 11));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery13")), 12));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery14")), 13));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery15")), 14));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery16")), 15));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery17")), 16));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery18")), 17));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery19")), 18));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery20")), 19));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery21")), 20));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery22")), 21));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery23")), 22));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery24")), 23));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery25")), 24));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery26")), 25));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery27")), 26));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery28")), 27));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery29")), 28));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery30")), 29));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery31")), 30));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery32")), 31));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ObjectTypeQuery_MAX")), 32));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EObjectTypeQuery_MAX")), 33));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EObjectTypeQuery");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery1.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery10.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery11.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery12.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery13.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery14.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery15.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery16.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery17.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery18.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery19.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery2.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery20.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery21.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery22.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery23.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery24.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery25.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery26.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery27.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery28.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery29.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery3.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery30.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery31.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery32.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery4.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery5.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery6.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery7.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery8.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery9.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ObjectTypeQuery_MAX.Hidden"), TEXT(""));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EObjectTypeQuery_CRC() { return 2755415318U; }
	UEnum* Z_Construct_UEnum_Engine_EOverlapFilterOption()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EOverlapFilterOption_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EOverlapFilterOption"), 0, Get_Z_Construct_UEnum_Engine_EOverlapFilterOption_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EOverlapFilterOption"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("OverlapFilter_All")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("OverlapFilter_DynamicOnly")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("OverlapFilter_StaticOnly")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("OverlapFilter_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EOverlapFilterOption");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("OverlapFilter_All.DisplayName"), TEXT("AllObjects"));
			MetaData->SetValue(ReturnEnum, TEXT("OverlapFilter_All.ToolTip"), TEXT("returns both overlaps with both dynamic and static components"));
			MetaData->SetValue(ReturnEnum, TEXT("OverlapFilter_DynamicOnly.DisplayName"), TEXT("AllDynamicObjects"));
			MetaData->SetValue(ReturnEnum, TEXT("OverlapFilter_DynamicOnly.ToolTip"), TEXT("returns only overlaps with dynamic actors (far fewer results in practice, much more efficient)"));
			MetaData->SetValue(ReturnEnum, TEXT("OverlapFilter_StaticOnly.DisplayName"), TEXT("AllStaticObjects"));
			MetaData->SetValue(ReturnEnum, TEXT("OverlapFilter_StaticOnly.ToolTip"), TEXT("returns only overlaps with static actors (fewer results, more efficient)"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("@note, if you change this, change GetCollisionChannelFromOverlapFilter() to match"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EOverlapFilterOption_CRC() { return 834116166U; }
	UEnum* Z_Construct_UEnum_Engine_ECollisionChannel()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ECollisionChannel_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ECollisionChannel"), 0, Get_Z_Construct_UEnum_Engine_ECollisionChannel_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ECollisionChannel"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_WorldStatic")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_WorldDynamic")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_Pawn")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_Visibility")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_Camera")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_PhysicsBody")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_Vehicle")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_Destructible")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_EngineTraceChannel1")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_EngineTraceChannel2")), 9));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_EngineTraceChannel3")), 10));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_EngineTraceChannel4")), 11));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_EngineTraceChannel5")), 12));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_EngineTraceChannel6")), 13));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel1")), 14));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel2")), 15));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel3")), 16));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel4")), 17));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel5")), 18));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel6")), 19));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel7")), 20));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel8")), 21));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel9")), 22));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel10")), 23));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel11")), 24));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel12")), 25));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel13")), 26));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel14")), 27));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel15")), 28));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel16")), 29));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel17")), 30));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_GameTraceChannel18")), 31));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_OverlapAll_Deprecated")), 32));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ECC_MAX")), 33));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ECollisionChannel");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_Camera.DisplayName"), TEXT("Camera"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_Camera.TraceQuery"), TEXT("1"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_Destructible.DisplayName"), TEXT("Destructible"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_EngineTraceChannel1.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_EngineTraceChannel1.ToolTip"), TEXT("Reserved for gizmo collision"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_EngineTraceChannel2.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_EngineTraceChannel3.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_EngineTraceChannel4.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_EngineTraceChannel5.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_EngineTraceChannel6.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel1.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel10.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel11.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel12.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel13.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel14.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel15.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel16.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel17.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel18.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel2.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel3.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel4.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel5.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel6.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel7.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel8.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_GameTraceChannel9.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_OverlapAll_Deprecated.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_OverlapAll_Deprecated.ToolTip"), TEXT("Add only nonserialized/transient flags below // NOTE!!!! THESE ARE BEING DEPRECATED BUT STILL THERE FOR BLUEPRINT. PLEASE DO NOT USE THEM IN CODE"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_Pawn.DisplayName"), TEXT("Pawn"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_PhysicsBody.DisplayName"), TEXT("PhysicsBody"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_Vehicle.DisplayName"), TEXT("Vehicle"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_Visibility.DisplayName"), TEXT("Visibility"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_Visibility.TraceQuery"), TEXT("1"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_WorldDynamic.DisplayName"), TEXT("WorldDynamic"));
			MetaData->SetValue(ReturnEnum, TEXT("ECC_WorldStatic.DisplayName"), TEXT("WorldStatic"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum indicating different type of objects for rigid-body collision purposes."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ECollisionChannel_CRC() { return 4177126408U; }
	UEnum* Z_Construct_UEnum_Engine_ENetworkSmoothingMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ENetworkSmoothingMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENetworkSmoothingMode"), 0, Get_Z_Construct_UEnum_Engine_ENetworkSmoothingMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENetworkSmoothingMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkSmoothingMode::Disabled")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkSmoothingMode::Linear")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkSmoothingMode::Exponential")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkSmoothingMode::Replay")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkSmoothingMode::ENetworkSmoothingMode_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ENetworkSmoothingMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Disabled.DisplayName"), TEXT("Disabled"));
			MetaData->SetValue(ReturnEnum, TEXT("Disabled.ToolTip"), TEXT("No smoothing, only change position as network position updates are received."));
			MetaData->SetValue(ReturnEnum, TEXT("Exponential.DisplayName"), TEXT("Exponential"));
			MetaData->SetValue(ReturnEnum, TEXT("Exponential.ToolTip"), TEXT("Exponential. Faster as you are further from target."));
			MetaData->SetValue(ReturnEnum, TEXT("Linear.DisplayName"), TEXT("Linear"));
			MetaData->SetValue(ReturnEnum, TEXT("Linear.ToolTip"), TEXT("Linear interpolation from source to target."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Replay.DisplayName"), TEXT("Replay"));
			MetaData->SetValue(ReturnEnum, TEXT("Replay.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("Replay.ToolTip"), TEXT("Special linear interpolation designed specifically for replays. Not intended as a selectable mode in-editor."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Smoothing approach used by network interpolation for Characters."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ENetworkSmoothingMode_CRC() { return 1803884387U; }
	UEnum* Z_Construct_UEnum_Engine_EMovementMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EMovementMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMovementMode"), 0, Get_Z_Construct_UEnum_Engine_EMovementMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMovementMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MOVE_None")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MOVE_Walking")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MOVE_NavWalking")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MOVE_Falling")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MOVE_Swimming")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MOVE_Flying")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MOVE_Custom")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MOVE_MAX")), 7));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EMovementMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Custom.DisplayName"), TEXT("Custom"));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Custom.ToolTip"), TEXT("User-defined custom movement mode, including many possible sub-modes."));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Falling.DisplayName"), TEXT("Falling"));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Falling.ToolTip"), TEXT("Falling under the effects of gravity, such as after jumping or walking off the edge of a surface."));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Flying.DisplayName"), TEXT("Flying"));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Flying.ToolTip"), TEXT("Flying, ignoring the effects of gravity. Affected by the current physics volume's fluid friction."));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_MAX.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_NavWalking.DisplayName"), TEXT("Navmesh Walking"));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_NavWalking.ToolTip"), TEXT("Simplified walking on navigation data (e.g. navmesh).\nIf bGenerateOverlapEvents is true, then we will perform sweeps with each navmesh move.\nIf bGenerateOverlapEvents is false then movement is cheaper but characters can overlap other objects without some extra process to repel/resolve their collisions."));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_None.DisplayName"), TEXT("None"));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_None.ToolTip"), TEXT("None (movement is disabled)."));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Swimming.DisplayName"), TEXT("Swimming"));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Swimming.ToolTip"), TEXT("Swimming through a fluid volume, under the effects of gravity and buoyancy."));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Walking.DisplayName"), TEXT("Walking"));
			MetaData->SetValue(ReturnEnum, TEXT("MOVE_Walking.ToolTip"), TEXT("Walking on a surface."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Movement modes for Characters."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EMovementMode_CRC() { return 3724900460U; }
	UEnum* Z_Construct_UEnum_Engine_ETriangleSortAxis()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETriangleSortAxis_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETriangleSortAxis"), 0, Get_Z_Construct_UEnum_Engine_ETriangleSortAxis_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETriangleSortAxis"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TSA_X_Axis")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TSA_Y_Axis")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TSA_Z_Axis")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TSA_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ETriangleSortAxis");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum to specify which axis to use for the forward vector when using TRISORT_CustomLeftRight sort mode."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETriangleSortAxis_CRC() { return 3896496899U; }
	UEnum* Z_Construct_UEnum_Engine_ETriangleSortOption()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETriangleSortOption_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETriangleSortOption"), 0, Get_Z_Construct_UEnum_Engine_ETriangleSortOption_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETriangleSortOption"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRISORT_None")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRISORT_CenterRadialDistance")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRISORT_Random")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRISORT_MergeContiguous")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRISORT_Custom")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRISORT_CustomLeftRight")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRISORT_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ETriangleSortOption");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETriangleSortOption_CRC() { return 2062422439U; }
	UEnum* Z_Construct_UEnum_Engine_ELightingBuildQuality()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ELightingBuildQuality_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ELightingBuildQuality"), 0, Get_Z_Construct_UEnum_Engine_ELightingBuildQuality_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ELightingBuildQuality"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("Quality_Preview")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("Quality_Medium")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("Quality_High")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("Quality_Production")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("Quality_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ELightingBuildQuality");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Lighting build quality enumeration"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ELightingBuildQuality_CRC() { return 1116331883U; }
	UEnum* Z_Construct_UEnum_Engine_EMaterialSamplerType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EMaterialSamplerType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMaterialSamplerType"), 0, Get_Z_Construct_UEnum_Engine_EMaterialSamplerType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMaterialSamplerType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SAMPLERTYPE_Color")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SAMPLERTYPE_Grayscale")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SAMPLERTYPE_Alpha")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SAMPLERTYPE_Normal")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SAMPLERTYPE_Masks")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SAMPLERTYPE_DistanceFieldFont")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SAMPLERTYPE_LinearColor")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SAMPLERTYPE_LinearGrayscale")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SAMPLERTYPE_MAX")), 8));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EMaterialSamplerType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SAMPLERTYPE_Alpha.DisplayName"), TEXT("Alpha"));
			MetaData->SetValue(ReturnEnum, TEXT("SAMPLERTYPE_Color.DisplayName"), TEXT("Color"));
			MetaData->SetValue(ReturnEnum, TEXT("SAMPLERTYPE_DistanceFieldFont.DisplayName"), TEXT("Distance Field Font"));
			MetaData->SetValue(ReturnEnum, TEXT("SAMPLERTYPE_Grayscale.DisplayName"), TEXT("Grayscale"));
			MetaData->SetValue(ReturnEnum, TEXT("SAMPLERTYPE_LinearColor.DisplayName"), TEXT("Linear Color"));
			MetaData->SetValue(ReturnEnum, TEXT("SAMPLERTYPE_LinearGrayscale.DisplayName"), TEXT("Linear Grayscale"));
			MetaData->SetValue(ReturnEnum, TEXT("SAMPLERTYPE_Masks.DisplayName"), TEXT("Masks"));
			MetaData->SetValue(ReturnEnum, TEXT("SAMPLERTYPE_Normal.DisplayName"), TEXT("Normal"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EMaterialSamplerType_CRC() { return 951293477U; }
	UEnum* Z_Construct_UEnum_Engine_EMaterialTessellationMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EMaterialTessellationMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMaterialTessellationMode"), 0, Get_Z_Construct_UEnum_Engine_EMaterialTessellationMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMaterialTessellationMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MTM_NoTessellation")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MTM_FlatTessellation")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MTM_PNTriangles")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MTM_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EMaterialTessellationMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("MTM_FlatTessellation.DisplayName"), TEXT("Flat Tessellation"));
			MetaData->SetValue(ReturnEnum, TEXT("MTM_FlatTessellation.ToolTip"), TEXT("Simple tessellation."));
			MetaData->SetValue(ReturnEnum, TEXT("MTM_NoTessellation.DisplayName"), TEXT("No Tessellation"));
			MetaData->SetValue(ReturnEnum, TEXT("MTM_NoTessellation.ToolTip"), TEXT("Tessellation disabled."));
			MetaData->SetValue(ReturnEnum, TEXT("MTM_PNTriangles.DisplayName"), TEXT("PN Triangles"));
			MetaData->SetValue(ReturnEnum, TEXT("MTM_PNTriangles.ToolTip"), TEXT("Simple spline based tessellation."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("This is used by the drawing passes to determine tessellation policy, so changes here need to be supported in native code."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EMaterialTessellationMode_CRC() { return 2810272013U; }
	UEnum* Z_Construct_UEnum_Engine_EMaterialShadingModel()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EMaterialShadingModel_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMaterialShadingModel"), 0, Get_Z_Construct_UEnum_Engine_EMaterialShadingModel_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMaterialShadingModel"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_Unlit")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_DefaultLit")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_Subsurface")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_PreintegratedSkin")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_ClearCoat")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_SubsurfaceProfile")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_TwoSidedFoliage")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_Hair")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_Cloth")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_Eye")), 9));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("MSM_MAX")), 10));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EMaterialShadingModel");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_ClearCoat.DisplayName"), TEXT("Clear Coat"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_Cloth.DisplayName"), TEXT("Cloth"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_DefaultLit.DisplayName"), TEXT("Default Lit"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_Eye.DisplayName"), TEXT("Eye"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_Hair.DisplayName"), TEXT("Hair"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_PreintegratedSkin.DisplayName"), TEXT("Preintegrated Skin"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_Subsurface.DisplayName"), TEXT("Subsurface"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_SubsurfaceProfile.DisplayName"), TEXT("Subsurface Profile"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_TwoSidedFoliage.DisplayName"), TEXT("Two Sided Foliage"));
			MetaData->SetValue(ReturnEnum, TEXT("MSM_Unlit.DisplayName"), TEXT("Unlit"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Note: Check UMaterialInstance::Serialize if changed!"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EMaterialShadingModel_CRC() { return 1010620168U; }
	UEnum* Z_Construct_UEnum_Engine_EParticleCollisionMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EParticleCollisionMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EParticleCollisionMode"), 0, Get_Z_Construct_UEnum_Engine_EParticleCollisionMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EParticleCollisionMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EParticleCollisionMode::SceneDepth")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EParticleCollisionMode::DistanceField")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EParticleCollisionMode::EParticleCollisionMode_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EParticleCollisionMode::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("DistanceField.DisplayName"), TEXT("Distance Field"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SceneDepth.DisplayName"), TEXT("Scene Depth"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EParticleCollisionMode_CRC() { return 3162831303U; }
	UEnum* Z_Construct_UEnum_Engine_ETrailWidthMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETrailWidthMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETrailWidthMode"), 0, Get_Z_Construct_UEnum_Engine_ETrailWidthMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETrailWidthMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETrailWidthMode_FromCentre")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETrailWidthMode_FromFirst")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETrailWidthMode_FromSecond")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETrailWidthMode_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ETrailWidthMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ETrailWidthMode_FromCentre.DisplayName"), TEXT("From Centre"));
			MetaData->SetValue(ReturnEnum, TEXT("ETrailWidthMode_FromFirst.DisplayName"), TEXT("From First Socket"));
			MetaData->SetValue(ReturnEnum, TEXT("ETrailWidthMode_FromSecond.DisplayName"), TEXT("From Second Socket"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Controls the way that the width scale property affects animation trails."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETrailWidthMode_CRC() { return 1615356107U; }
	UEnum* Z_Construct_UEnum_Engine_EGBufferFormat()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EGBufferFormat_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EGBufferFormat"), 0, Get_Z_Construct_UEnum_Engine_EGBufferFormat_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EGBufferFormat"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGBufferFormat::Force8BitsPerChannel")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGBufferFormat::Default")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGBufferFormat::HighPrecisionNormals")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGBufferFormat::Force16BitsPerChannel")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGBufferFormat::EGBufferFormat_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EGBufferFormat::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Default.ToolTip"), TEXT("See GBuffer allocation function for layout details."));
			MetaData->SetValue(ReturnEnum, TEXT("Force16BitsPerChannel.DisplayName"), TEXT("Force 16 Bits Per Channel"));
			MetaData->SetValue(ReturnEnum, TEXT("Force16BitsPerChannel.ToolTip"), TEXT("Forces all GBuffers to 16 bits per channel. Intended as profiling for best quality."));
			MetaData->SetValue(ReturnEnum, TEXT("Force8BitsPerChannel.DisplayName"), TEXT("Force 8 Bits Per Channel"));
			MetaData->SetValue(ReturnEnum, TEXT("Force8BitsPerChannel.ToolTip"), TEXT("Forces all GBuffers to 8 bits per channel. Intended as profiling for best performance."));
			MetaData->SetValue(ReturnEnum, TEXT("HighPrecisionNormals.ToolTip"), TEXT("Same as Default except normals are encoded at 16 bits per channel."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("* Enumerates available GBufferFormats.\n// When this enum is updated please update CVarGBufferFormat comments"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EGBufferFormat_CRC() { return 2337334188U; }
	UEnum* Z_Construct_UEnum_Engine_ESceneCaptureCompositeMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ESceneCaptureCompositeMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESceneCaptureCompositeMode"), 0, Get_Z_Construct_UEnum_Engine_ESceneCaptureCompositeMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESceneCaptureCompositeMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCCM_Overwrite")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCCM_Additive")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCCM_Composite")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCCM_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ESceneCaptureCompositeMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SCCM_Additive.DisplayName"), TEXT("Additive"));
			MetaData->SetValue(ReturnEnum, TEXT("SCCM_Composite.DisplayName"), TEXT("Composite"));
			MetaData->SetValue(ReturnEnum, TEXT("SCCM_Overwrite.DisplayName"), TEXT("Overwrite"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ESceneCaptureCompositeMode_CRC() { return 1290752145U; }
	UEnum* Z_Construct_UEnum_Engine_ESceneCaptureSource()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ESceneCaptureSource_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESceneCaptureSource"), 0, Get_Z_Construct_UEnum_Engine_ESceneCaptureSource_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESceneCaptureSource"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCS_SceneColorHDR")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCS_SceneColorHDRNoAlpha")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCS_FinalColorLDR")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCS_SceneColorSceneDepth")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCS_SceneDepth")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCS_Normal")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCS_BaseColor")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SCS_MAX")), 7));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ESceneCaptureSource");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SCS_BaseColor.DisplayName"), TEXT("BaseColor in RGB (Deferred Renderer only)"));
			MetaData->SetValue(ReturnEnum, TEXT("SCS_FinalColorLDR.DisplayName"), TEXT("Final Color (LDR) in RGB"));
			MetaData->SetValue(ReturnEnum, TEXT("SCS_Normal.DisplayName"), TEXT("Normal in RGB (Deferred Renderer only)"));
			MetaData->SetValue(ReturnEnum, TEXT("SCS_SceneColorHDR.DisplayName"), TEXT("SceneColor (HDR) in RGB, Inv Opacity in A"));
			MetaData->SetValue(ReturnEnum, TEXT("SCS_SceneColorHDRNoAlpha.DisplayName"), TEXT("SceneColor (HDR) in RGB, 0 in A"));
			MetaData->SetValue(ReturnEnum, TEXT("SCS_SceneColorSceneDepth.DisplayName"), TEXT("SceneColor (HDR) in RGB, SceneDepth in A"));
			MetaData->SetValue(ReturnEnum, TEXT("SCS_SceneDepth.DisplayName"), TEXT("SceneDepth in R"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ESceneCaptureSource_CRC() { return 3554090351U; }
	UEnum* Z_Construct_UEnum_Engine_ETranslucentSortPolicy()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETranslucentSortPolicy_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETranslucentSortPolicy"), 0, Get_Z_Construct_UEnum_Engine_ETranslucentSortPolicy_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETranslucentSortPolicy"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETranslucentSortPolicy::SortByDistance")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETranslucentSortPolicy::SortByProjectedZ")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETranslucentSortPolicy::SortAlongAxis")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETranslucentSortPolicy::ETranslucentSortPolicy_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ETranslucentSortPolicy::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SortAlongAxis.ToolTip"), TEXT("Sort based on the projection onto a fixed axis. (Best for 2D games.)"));
			MetaData->SetValue(ReturnEnum, TEXT("SortByDistance.ToolTip"), TEXT("Sort based on distance from camera centerpoint to bounding sphere centerpoint. (Default, best for 3D games.)"));
			MetaData->SetValue(ReturnEnum, TEXT("SortByProjectedZ.ToolTip"), TEXT("Sort based on the post-projection Z distance to the camera."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enumerates available options for the translucency sort policy."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETranslucentSortPolicy_CRC() { return 1626939346U; }
	UEnum* Z_Construct_UEnum_Engine_ERefractionMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ERefractionMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ERefractionMode"), 0, Get_Z_Construct_UEnum_Engine_ERefractionMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ERefractionMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("RM_IndexOfRefraction")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("RM_PixelNormalOffset")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("RM_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ERefractionMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("RM_IndexOfRefraction.DisplayName"), TEXT("Index Of Refraction"));
			MetaData->SetValue(ReturnEnum, TEXT("RM_IndexOfRefraction.ToolTip"), TEXT("Refraction is computed based on the camera vector entering a medium whose index of refraction is defined by the Refraction material input.\nThe new medium's surface is defined by the material's normal.  With this mode, a flat plane seen from the side will have a constant refraction offset.\nThis is a physical model of refraction but causes reading outside the scene color texture so is a poor fit for large refractive surfaces like water."));
			MetaData->SetValue(ReturnEnum, TEXT("RM_PixelNormalOffset.DisplayName"), TEXT("Pixel Normal Offset"));
			MetaData->SetValue(ReturnEnum, TEXT("RM_PixelNormalOffset.ToolTip"), TEXT("The refraction offset into Scene Color is computed based on the difference between the per-pixel normal and the per-vertex normal.\nWith this mode, a material whose normal is the default (0, 0, 1) will never cause any refraction.  This mode is only valid with tangent space normals.\nThe refraction material input scales the offset, although a value of 1.0 maps to no refraction, and a value of 2 maps to a scale of 1.0 on the offset.\nThis is a non-physical model of refraction but is useful on large refractive surfaces like water, since offsets have to stay small to avoid reading outside scene color."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Determines how the refraction offset should be computed for the material."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ERefractionMode_CRC() { return 2011425622U; }
	UEnum* Z_Construct_UEnum_Engine_ETranslucencyLightingMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETranslucencyLightingMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETranslucencyLightingMode"), 0, Get_Z_Construct_UEnum_Engine_ETranslucencyLightingMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETranslucencyLightingMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TLM_VolumetricNonDirectional")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TLM_VolumetricDirectional")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TLM_VolumetricPerVertexNonDirectional")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TLM_VolumetricPerVertexDirectional")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TLM_Surface")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TLM_SurfacePerPixelLighting")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TLM_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ETranslucencyLightingMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_Surface.DisplayName"), TEXT("Surface TranslucencyVolume"));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_Surface.ToolTip"), TEXT("Lighting will be calculated for a surface. The light in accumulated in a volume so the result is blurry,\nlimited distance but the per pixel cost is very low. Use this on translucent surfaces like glass and water.\nOnly diffuse lighting is supported."));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_SurfacePerPixelLighting.DisplayName"), TEXT("Surface ForwardShading"));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_SurfacePerPixelLighting.ToolTip"), TEXT("Lighting will be calculated for a surface. Use this on translucent surfaces like glass and water.\nThis is implemented with forward shading so specular highlights from local lights are supported, however many deferred-only features are not.\nThis is the most expensive translucency lighting method as each light's contribution is computed per-pixel."));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_VolumetricDirectional.DisplayName"), TEXT("Volumetric Directional"));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_VolumetricDirectional.ToolTip"), TEXT("Lighting will be calculated for a volume, with directionality so that the normal of the material is taken into account.\nNote that the default particle tangent space is facing the camera, so enable bGenerateSphericalParticleNormals to get a more useful tangent space."));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_VolumetricNonDirectional.DisplayName"), TEXT("Volumetric NonDirectional"));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_VolumetricNonDirectional.ToolTip"), TEXT("Lighting will be calculated for a volume, without directionality.  Use this on particle effects like smoke and dust.\nThis is the cheapest per-pixel lighting method, however the material normal is not taken into account."));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_VolumetricPerVertexDirectional.DisplayName"), TEXT("Volumetric PerVertex Directional"));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_VolumetricPerVertexDirectional.ToolTip"), TEXT("Same as Volumetric Directional, but lighting is only evaluated at vertices so the pixel shader cost is significantly less.\nNote that lighting still comes from a volume texture, so it is limited in range.  Directional lights become unshadowed in the distance."));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_VolumetricPerVertexNonDirectional.DisplayName"), TEXT("Volumetric PerVertex NonDirectional"));
			MetaData->SetValue(ReturnEnum, TEXT("TLM_VolumetricPerVertexNonDirectional.ToolTip"), TEXT("Same as Volumetric Non Directional, but lighting is only evaluated at vertices so the pixel shader cost is significantly less.\nNote that lighting still comes from a volume texture, so it is limited in range.  Directional lights become unshadowed in the distance."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETranslucencyLightingMode_CRC() { return 1464620778U; }
	UEnum* Z_Construct_UEnum_Engine_ESamplerSourceMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ESamplerSourceMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESamplerSourceMode"), 0, Get_Z_Construct_UEnum_Engine_ESamplerSourceMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESamplerSourceMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SSM_FromTextureAsset")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SSM_Wrap_WorldGroupSettings")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SSM_Clamp_WorldGroupSettings")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SSM_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ESamplerSourceMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SSM_Clamp_WorldGroupSettings.DisplayName"), TEXT("Shared: Clamp"));
			MetaData->SetValue(ReturnEnum, TEXT("SSM_Clamp_WorldGroupSettings.ToolTip"), TEXT("Shared sampler source that does not consume a sampler slot.  Uses clamp addressing and gets filter mode from the world texture group."));
			MetaData->SetValue(ReturnEnum, TEXT("SSM_FromTextureAsset.DisplayName"), TEXT("From texture asset"));
			MetaData->SetValue(ReturnEnum, TEXT("SSM_FromTextureAsset.ToolTip"), TEXT("Get the sampler from the texture.  Every unique texture will consume a sampler slot, which are limited in number."));
			MetaData->SetValue(ReturnEnum, TEXT("SSM_Wrap_WorldGroupSettings.DisplayName"), TEXT("Shared: Wrap"));
			MetaData->SetValue(ReturnEnum, TEXT("SSM_Wrap_WorldGroupSettings.ToolTip"), TEXT("Shared sampler source that does not consume a sampler slot.  Uses wrap addressing and gets filter mode from the world texture group."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ESamplerSourceMode_CRC() { return 1930641384U; }
	UEnum* Z_Construct_UEnum_Engine_EBlendMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EBlendMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EBlendMode"), 0, Get_Z_Construct_UEnum_Engine_EBlendMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBlendMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BLEND_Opaque")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BLEND_Masked")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BLEND_Translucent")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BLEND_Additive")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BLEND_Modulate")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BLEND_AlphaComposite")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BLEND_MAX")), 6));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EBlendMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BLEND_Additive.DisplayName"), TEXT("Additive"));
			MetaData->SetValue(ReturnEnum, TEXT("BLEND_AlphaComposite.DisplayName"), TEXT("AlphaComposite (Premultiplied Alpha)"));
			MetaData->SetValue(ReturnEnum, TEXT("BLEND_Masked.DisplayName"), TEXT("Masked"));
			MetaData->SetValue(ReturnEnum, TEXT("BLEND_Modulate.DisplayName"), TEXT("Modulate"));
			MetaData->SetValue(ReturnEnum, TEXT("BLEND_Opaque.DisplayName"), TEXT("Opaque"));
			MetaData->SetValue(ReturnEnum, TEXT("BLEND_Translucent.DisplayName"), TEXT("Translucent"));
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Note: This is mirrored in Lightmass, be sure to update the blend mode structure and logic there if this changes. // Note: Check UMaterialInstance::Serialize if changed!!"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EBlendMode_CRC() { return 3166800029U; }
	UEnum* Z_Construct_UEnum_Engine_EIndirectLightingCacheQuality()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EIndirectLightingCacheQuality_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EIndirectLightingCacheQuality"), 0, Get_Z_Construct_UEnum_Engine_EIndirectLightingCacheQuality_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EIndirectLightingCacheQuality"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ILCQ_Off")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ILCQ_Point")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ILCQ_Volume")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ILCQ_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EIndirectLightingCacheQuality");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ILCQ_Off.ToolTip"), TEXT("The indirect lighting cache will be disabled for this object, so no GI from stationary lights on movable objects."));
			MetaData->SetValue(ReturnEnum, TEXT("ILCQ_Point.ToolTip"), TEXT("A single indirect lighting sample computed at the bounds origin will be interpolated which fades over time to newer results."));
			MetaData->SetValue(ReturnEnum, TEXT("ILCQ_Volume.ToolTip"), TEXT("The object will get a 5x5x5 stable volume of interpolated indirect lighting, which allows gradients of lighting intensity across the receiving object."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EIndirectLightingCacheQuality_CRC() { return 203301167U; }
	UEnum* Z_Construct_UEnum_Engine_ESceneDepthPriorityGroup()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ESceneDepthPriorityGroup_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ESceneDepthPriorityGroup"), 0, Get_Z_Construct_UEnum_Engine_ESceneDepthPriorityGroup_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ESceneDepthPriorityGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SDPG_World")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SDPG_Foreground")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("SDPG_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ESceneDepthPriorityGroup");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SDPG_Foreground.ToolTip"), TEXT("Foreground scene DPG."));
			MetaData->SetValue(ReturnEnum, TEXT("SDPG_World.ToolTip"), TEXT("World scene DPG."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("A priority for sorting scene elements by depth.\nElements with higher priority occlude elements with lower priority, disregarding distance."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ESceneDepthPriorityGroup_CRC() { return 1900160999U; }
	UEnum* Z_Construct_UEnum_Engine_EAttachLocation()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EAttachLocation_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EAttachLocation"), 0, Get_Z_Construct_UEnum_Engine_EAttachLocation_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAttachLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAttachLocation::KeepRelativeOffset")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAttachLocation::KeepWorldPosition")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAttachLocation::SnapToTarget")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAttachLocation::SnapToTargetIncludingScale")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAttachLocation::EAttachLocation_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EAttachLocation::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("KeepRelativeOffset.ToolTip"), TEXT("Keeps current relative transform as the relative transform to the new parent."));
			MetaData->SetValue(ReturnEnum, TEXT("KeepWorldPosition.ToolTip"), TEXT("Automatically calculates the relative transform such that the attached component maintains the same world transform."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SnapToTarget.DisplayName"), TEXT("Snap to Target, Keep World Scale"));
			MetaData->SetValue(ReturnEnum, TEXT("SnapToTarget.ToolTip"), TEXT("Snaps location and rotation to the attach point. Calculates the relative scale so that the final world scale of the component remains the same."));
			MetaData->SetValue(ReturnEnum, TEXT("SnapToTargetIncludingScale.DisplayName"), TEXT("Snap to Target, Including Scale"));
			MetaData->SetValue(ReturnEnum, TEXT("SnapToTargetIncludingScale.ToolTip"), TEXT("Snaps entire transform to target, including scale."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EAttachLocation_CRC() { return 1355144556U; }
	UEnum* Z_Construct_UEnum_Engine_EDetachmentRule()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EDetachmentRule_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EDetachmentRule"), 0, Get_Z_Construct_UEnum_Engine_EDetachmentRule_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EDetachmentRule"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EDetachmentRule::KeepRelative")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EDetachmentRule::KeepWorld")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EDetachmentRule::EDetachmentRule_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EDetachmentRule");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("KeepRelative.ToolTip"), TEXT("Keeps current relative transform."));
			MetaData->SetValue(ReturnEnum, TEXT("KeepWorld.ToolTip"), TEXT("Automatically calculates the relative transform such that the detached component maintains the same world transform."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Rules for detaching components - needs to be kept synced to EAttachmentRule"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EDetachmentRule_CRC() { return 4230391437U; }
	UEnum* Z_Construct_UEnum_Engine_EAttachmentRule()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EAttachmentRule_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EAttachmentRule"), 0, Get_Z_Construct_UEnum_Engine_EAttachmentRule_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAttachmentRule"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAttachmentRule::KeepRelative")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAttachmentRule::KeepWorld")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAttachmentRule::SnapToTarget")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EAttachmentRule::EAttachmentRule_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EAttachmentRule");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("KeepRelative.ToolTip"), TEXT("Keeps current relative transform as the relative transform to the new parent."));
			MetaData->SetValue(ReturnEnum, TEXT("KeepWorld.ToolTip"), TEXT("Automatically calculates the relative transform such that the attached component maintains the same world transform."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("SnapToTarget.ToolTip"), TEXT("Snaps transform to the attach point"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Rules for attaching components - needs to be kept synced to EDetachmentRule"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EAttachmentRule_CRC() { return 2989507041U; }
	UEnum* Z_Construct_UEnum_Engine_EActorMetricsType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EActorMetricsType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EActorMetricsType"), 0, Get_Z_Construct_UEnum_Engine_EActorMetricsType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EActorMetricsType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("METRICS_VERTS")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("METRICS_TRIS")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("METRICS_SECTIONS")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("METRICS_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EActorMetricsType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("The type of metric we want about the actor *"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EActorMetricsType_CRC() { return 376611694U; }
	UEnum* Z_Construct_UEnum_Engine_EAspectRatioAxisConstraint()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EAspectRatioAxisConstraint_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EAspectRatioAxisConstraint"), 0, Get_Z_Construct_UEnum_Engine_EAspectRatioAxisConstraint_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EAspectRatioAxisConstraint"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("AspectRatio_MaintainYFOV")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("AspectRatio_MaintainXFOV")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("AspectRatio_MajorAxisFOV")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("AspectRatio_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EAspectRatioAxisConstraint");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("AspectRatio_MaintainXFOV.DisplayName"), TEXT("Maintain X-Axis FOV"));
			MetaData->SetValue(ReturnEnum, TEXT("AspectRatio_MaintainYFOV.DisplayName"), TEXT("Maintain Y-Axis FOV"));
			MetaData->SetValue(ReturnEnum, TEXT("AspectRatio_MajorAxisFOV.DisplayName"), TEXT("Maintain Major Axis FOV"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EAspectRatioAxisConstraint_CRC() { return 2344436394U; }
	UScriptStruct* Z_Construct_UScriptStruct_FUserActivity()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FUserActivity_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("UserActivity"), sizeof(FUserActivity), Get_Z_Construct_UScriptStruct_FUserActivity_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("UserActivity"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FUserActivity>, EStructFlags(0x00000001));
			UProperty* NewProp_ActionName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ActionName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ActionName, FUserActivity), 0x0010000000000004);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("The description of a user activity"));
			MetaData->SetValue(NewProp_ActionName, TEXT("Category"), TEXT("Activity"));
			MetaData->SetValue(NewProp_ActionName, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ActionName, TEXT("ToolTip"), TEXT("Describes the user's activity"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FUserActivity_CRC() { return 3923377621U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCanvasUVTri()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FCanvasUVTri_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("CanvasUVTri"), sizeof(FCanvasUVTri), Get_Z_Construct_UScriptStruct_FCanvasUVTri_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CanvasUVTri"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCanvasUVTri>, EStructFlags(0x00000001));
			UProperty* NewProp_V2_Color = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("V2_Color"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(V2_Color, FCanvasUVTri), 0x0010000000000005, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_V2_UV = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("V2_UV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(V2_UV, FCanvasUVTri), 0x0010000000000005, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_V2_Pos = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("V2_Pos"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(V2_Pos, FCanvasUVTri), 0x0010000000000005, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_V1_Color = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("V1_Color"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(V1_Color, FCanvasUVTri), 0x0010000000000005, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_V1_UV = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("V1_UV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(V1_UV, FCanvasUVTri), 0x0010000000000005, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_V1_Pos = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("V1_Pos"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(V1_Pos, FCanvasUVTri), 0x0010000000000005, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_V0_Color = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("V0_Color"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(V0_Color, FCanvasUVTri), 0x0010000000000005, Z_Construct_UScriptStruct_FLinearColor());
			UProperty* NewProp_V0_UV = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("V0_UV"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(V0_UV, FCanvasUVTri), 0x0010000000000005, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_V0_Pos = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("V0_Pos"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(V0_Pos, FCanvasUVTri), 0x0010000000000005, Z_Construct_UScriptStruct_FVector2D());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Simple 2d triangle with UVs"));
			MetaData->SetValue(NewProp_V2_Color, TEXT("Category"), TEXT("CanvasUVTri"));
			MetaData->SetValue(NewProp_V2_Color, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_V2_Color, TEXT("ToolTip"), TEXT("Color of third vertex"));
			MetaData->SetValue(NewProp_V2_UV, TEXT("Category"), TEXT("CanvasUVTri"));
			MetaData->SetValue(NewProp_V2_UV, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_V2_UV, TEXT("ToolTip"), TEXT("UV of third vertex"));
			MetaData->SetValue(NewProp_V2_Pos, TEXT("Category"), TEXT("CanvasUVTri"));
			MetaData->SetValue(NewProp_V2_Pos, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_V2_Pos, TEXT("ToolTip"), TEXT("Position of third vertex"));
			MetaData->SetValue(NewProp_V1_Color, TEXT("Category"), TEXT("CanvasUVTri"));
			MetaData->SetValue(NewProp_V1_Color, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_V1_Color, TEXT("ToolTip"), TEXT("Color of second vertex"));
			MetaData->SetValue(NewProp_V1_UV, TEXT("Category"), TEXT("CanvasUVTri"));
			MetaData->SetValue(NewProp_V1_UV, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_V1_UV, TEXT("ToolTip"), TEXT("UV of second vertex"));
			MetaData->SetValue(NewProp_V1_Pos, TEXT("Category"), TEXT("CanvasUVTri"));
			MetaData->SetValue(NewProp_V1_Pos, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_V1_Pos, TEXT("ToolTip"), TEXT("Position of second vertex"));
			MetaData->SetValue(NewProp_V0_Color, TEXT("Category"), TEXT("CanvasUVTri"));
			MetaData->SetValue(NewProp_V0_Color, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_V0_Color, TEXT("ToolTip"), TEXT("Color of first vertex"));
			MetaData->SetValue(NewProp_V0_UV, TEXT("Category"), TEXT("CanvasUVTri"));
			MetaData->SetValue(NewProp_V0_UV, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_V0_UV, TEXT("ToolTip"), TEXT("UV of first vertex"));
			MetaData->SetValue(NewProp_V0_Pos, TEXT("Category"), TEXT("CanvasUVTri"));
			MetaData->SetValue(NewProp_V0_Pos, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_V0_Pos, TEXT("ToolTip"), TEXT("Position of first vertex"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCanvasUVTri_CRC() { return 2110381540U; }
	UScriptStruct* Z_Construct_UScriptStruct_FFontRenderInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FFontRenderInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("FontRenderInfo"), sizeof(FFontRenderInfo), Get_Z_Construct_UScriptStruct_FFontRenderInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FontRenderInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FFontRenderInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_GlowInfo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GlowInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GlowInfo, FFontRenderInfo), 0x0010000000000004, Z_Construct_UScriptStruct_FDepthFieldGlowInfo());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableShadow, FFontRenderInfo, uint8);
			UProperty* NewProp_bEnableShadow = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEnableShadow"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableShadow, FFontRenderInfo), 0x0010000000000004, CPP_BOOL_PROPERTY_BITMASK(bEnableShadow, FFontRenderInfo), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bClipText, FFontRenderInfo, uint8);
			UProperty* NewProp_bClipText = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bClipText"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bClipText, FFontRenderInfo), 0x0010000000000004, CPP_BOOL_PROPERTY_BITMASK(bClipText, FFontRenderInfo), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("information used in font rendering"));
			MetaData->SetValue(NewProp_GlowInfo, TEXT("Category"), TEXT("FontInfo"));
			MetaData->SetValue(NewProp_GlowInfo, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GlowInfo, TEXT("ToolTip"), TEXT("depth field glow parameters (only usable if font was imported with a depth field)"));
			MetaData->SetValue(NewProp_bEnableShadow, TEXT("Category"), TEXT("FontInfo"));
			MetaData->SetValue(NewProp_bEnableShadow, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bEnableShadow, TEXT("ToolTip"), TEXT("whether to turn on shadowing"));
			MetaData->SetValue(NewProp_bClipText, TEXT("Category"), TEXT("FontInfo"));
			MetaData->SetValue(NewProp_bClipText, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bClipText, TEXT("ToolTip"), TEXT("whether to clip text"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FFontRenderInfo_CRC() { return 1112083060U; }
	UScriptStruct* Z_Construct_UScriptStruct_FDepthFieldGlowInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FDepthFieldGlowInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DepthFieldGlowInfo"), sizeof(FDepthFieldGlowInfo), Get_Z_Construct_UScriptStruct_FDepthFieldGlowInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DepthFieldGlowInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDepthFieldGlowInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_GlowInnerRadius = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GlowInnerRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GlowInnerRadius, FDepthFieldGlowInfo), 0x0010000000000004, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_GlowOuterRadius = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GlowOuterRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GlowOuterRadius, FDepthFieldGlowInfo), 0x0010000000000004, Z_Construct_UScriptStruct_FVector2D());
			UProperty* NewProp_GlowColor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GlowColor"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(GlowColor, FDepthFieldGlowInfo), 0x0010000000000004, Z_Construct_UScriptStruct_FLinearColor());
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEnableGlow, FDepthFieldGlowInfo, uint8);
			UProperty* NewProp_bEnableGlow = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bEnableGlow"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEnableGlow, FDepthFieldGlowInfo), 0x0010000000000004, CPP_BOOL_PROPERTY_BITMASK(bEnableGlow, FDepthFieldGlowInfo), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("info for glow when using depth field rendering"));
			MetaData->SetValue(NewProp_GlowInnerRadius, TEXT("Category"), TEXT("Glow"));
			MetaData->SetValue(NewProp_GlowInnerRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GlowInnerRadius, TEXT("ToolTip"), TEXT("if bEnableGlow, outline glow inner radius (0 to 1, 0.5 is edge of character silhouette)\nglow influence will be 1 at GlowInnerRadius.X and 0 at GlowInnerRadius.Y"));
			MetaData->SetValue(NewProp_GlowOuterRadius, TEXT("Category"), TEXT("Glow"));
			MetaData->SetValue(NewProp_GlowOuterRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GlowOuterRadius, TEXT("ToolTip"), TEXT("if bEnableGlow, outline glow outer radius (0 to 1, 0.5 is edge of character silhouette)\nglow influence will be 0 at GlowOuterRadius.X and 1 at GlowOuterRadius.Y"));
			MetaData->SetValue(NewProp_GlowColor, TEXT("Category"), TEXT("Glow"));
			MetaData->SetValue(NewProp_GlowColor, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GlowColor, TEXT("ToolTip"), TEXT("base color to use for the glow"));
			MetaData->SetValue(NewProp_bEnableGlow, TEXT("Category"), TEXT("Glow"));
			MetaData->SetValue(NewProp_bEnableGlow, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bEnableGlow, TEXT("ToolTip"), TEXT("whether to turn on the outline glow (depth field fonts only)"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDepthFieldGlowInfo_CRC() { return 3667203612U; }
	UScriptStruct* Z_Construct_UScriptStruct_FDebugFloatHistory()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FDebugFloatHistory_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DebugFloatHistory"), sizeof(FDebugFloatHistory), Get_Z_Construct_UScriptStruct_FDebugFloatHistory_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DebugFloatHistory"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDebugFloatHistory>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoAdjustMinMax, FDebugFloatHistory, bool);
			UProperty* NewProp_bAutoAdjustMinMax = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bAutoAdjustMinMax"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoAdjustMinMax, FDebugFloatHistory), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bAutoAdjustMinMax, FDebugFloatHistory), sizeof(bool), true);
			UProperty* NewProp_MaxValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxValue, FDebugFloatHistory), 0x0010000000000005);
			UProperty* NewProp_MinValue = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MinValue"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MinValue, FDebugFloatHistory), 0x0010000000000005);
			UProperty* NewProp_MaxSamples = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxSamples"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MaxSamples, FDebugFloatHistory), 0x0010000000000005);
			UProperty* NewProp_Samples = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Samples"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Samples, FDebugFloatHistory), 0x0040000000002000);
			UProperty* NewProp_Samples_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Samples, TEXT("Samples"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure for recording float values and displaying them as an Histogram through DrawDebugFloatHistory."));
			MetaData->SetValue(NewProp_bAutoAdjustMinMax, TEXT("Category"), TEXT("DebugFloatHistory"));
			MetaData->SetValue(NewProp_bAutoAdjustMinMax, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bAutoAdjustMinMax, TEXT("ToolTip"), TEXT("Auto adjust Min/Max as new values are recorded?"));
			MetaData->SetValue(NewProp_MaxValue, TEXT("Category"), TEXT("DebugFloatHistory"));
			MetaData->SetValue(NewProp_MaxValue, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_MaxValue, TEXT("ToolTip"), TEXT("Max value to record."));
			MetaData->SetValue(NewProp_MinValue, TEXT("Category"), TEXT("DebugFloatHistory"));
			MetaData->SetValue(NewProp_MinValue, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_MinValue, TEXT("ToolTip"), TEXT("Min value to record."));
			MetaData->SetValue(NewProp_MaxSamples, TEXT("Category"), TEXT("DebugFloatHistory"));
			MetaData->SetValue(NewProp_MaxSamples, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_MaxSamples, TEXT("ToolTip"), TEXT("Max Samples to record."));
			MetaData->SetValue(NewProp_Samples, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Samples, TEXT("ToolTip"), TEXT("Samples"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDebugFloatHistory_CRC() { return 3299721538U; }
	UScriptStruct* Z_Construct_UScriptStruct_FRedirector()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FRedirector_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("Redirector"), sizeof(FRedirector), Get_Z_Construct_UScriptStruct_FRedirector_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Redirector"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FRedirector>, EStructFlags(0x00000201));
			UProperty* NewProp_NewName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NewName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(NewName, FRedirector), 0x0010000000000000);
			UProperty* NewProp_OldName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OldName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(OldName, FRedirector), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("This is used for redirecting old name to new name\nWe use manually parsing array, but that makes harder to modify from property setting\nSo adding this USTRUCT to support it properly"));
			MetaData->SetValue(NewProp_NewName, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_NewName, TEXT("ToolTip"), TEXT("Types of objects that this physics objects will collide with."));
			MetaData->SetValue(NewProp_OldName, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FRedirector_CRC() { return 566277307U; }
	UScriptStruct* Z_Construct_UScriptStruct_FDirectoryPath()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FDirectoryPath_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DirectoryPath"), sizeof(FDirectoryPath), Get_Z_Construct_UScriptStruct_FDirectoryPath_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DirectoryPath"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDirectoryPath>, EStructFlags(0x00000001));
			UProperty* NewProp_Path = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Path"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Path, FDirectoryPath), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure for directory paths that are displayed in the UI."));
			MetaData->SetValue(NewProp_Path, TEXT("Category"), TEXT("Path"));
			MetaData->SetValue(NewProp_Path, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Path, TEXT("ToolTip"), TEXT("The path to the directory."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDirectoryPath_CRC() { return 3799628874U; }
	UScriptStruct* Z_Construct_UScriptStruct_FFilePath()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FFilePath_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("FilePath"), sizeof(FFilePath), Get_Z_Construct_UScriptStruct_FFilePath_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FilePath"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FFilePath>, EStructFlags(0x00000001));
			UProperty* NewProp_FilePath = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FilePath"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(FilePath, FFilePath), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure for file paths that are displayed in the UI."));
			MetaData->SetValue(NewProp_FilePath, TEXT("Category"), TEXT("FilePath"));
			MetaData->SetValue(NewProp_FilePath, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_FilePath, TEXT("ToolTip"), TEXT("The path to the file."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FFilePath_CRC() { return 3454821145U; }
	UScriptStruct* Z_Construct_UScriptStruct_FComponentReference()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FComponentReference_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("ComponentReference"), sizeof(FComponentReference), Get_Z_Construct_UScriptStruct_FComponentReference_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ComponentReference"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FComponentReference>, EStructFlags(0x00000201));
			UProperty* NewProp_ComponentProperty = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ComponentProperty"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ComponentProperty, FComponentReference), 0x0010000000000001);
			UProperty* NewProp_OtherActor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OtherActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(OtherActor, FComponentReference), 0x0010000000000801, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct that allows for different ways to reference a component.\nIf just an Actor is specified, will return RootComponent of that Actor."));
			MetaData->SetValue(NewProp_ComponentProperty, TEXT("Category"), TEXT("Component"));
			MetaData->SetValue(NewProp_ComponentProperty, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ComponentProperty, TEXT("ToolTip"), TEXT("Name of component property to use"));
			MetaData->SetValue(NewProp_OtherActor, TEXT("Category"), TEXT("Component"));
			MetaData->SetValue(NewProp_OtherActor, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_OtherActor, TEXT("ToolTip"), TEXT("Pointer to a different Actor that owns the Component."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FComponentReference_CRC() { return 4186579239U; }
	UScriptStruct* Z_Construct_UScriptStruct_FConstrainComponentPropName()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FConstrainComponentPropName_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("ConstrainComponentPropName"), sizeof(FConstrainComponentPropName), Get_Z_Construct_UScriptStruct_FConstrainComponentPropName_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ConstrainComponentPropName"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FConstrainComponentPropName>, EStructFlags(0x00000001));
			UProperty* NewProp_ComponentName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ComponentName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(ComponentName, FConstrainComponentPropName), 0x0010000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct used to specify the property name of the component to constrain"));
			MetaData->SetValue(NewProp_ComponentName, TEXT("Category"), TEXT("Constraint"));
			MetaData->SetValue(NewProp_ComponentName, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ComponentName, TEXT("ToolTip"), TEXT("Name of property"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FConstrainComponentPropName_CRC() { return 1599584047U; }
	UScriptStruct* Z_Construct_UScriptStruct_FWalkableSlopeOverride()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FWalkableSlopeOverride_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("WalkableSlopeOverride"), sizeof(FWalkableSlopeOverride), Get_Z_Construct_UScriptStruct_FWalkableSlopeOverride_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("WalkableSlopeOverride"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FWalkableSlopeOverride>, EStructFlags(0x00000001));
			UProperty* NewProp_WalkableSlopeAngle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WalkableSlopeAngle"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(WalkableSlopeAngle, FWalkableSlopeOverride), 0x0010000000000005);
			UProperty* NewProp_WalkableSlopeBehavior = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WalkableSlopeBehavior"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(WalkableSlopeBehavior, FWalkableSlopeOverride), 0x0010000000000005, Z_Construct_UEnum_Engine_EWalkableSlopeBehavior());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct allowing control over \"walkable\" normals, by allowing a restriction or relaxation of what steepness is normally walkable."));
			MetaData->SetValue(NewProp_WalkableSlopeAngle, TEXT("Category"), TEXT("WalkableSlopeOverride"));
			MetaData->SetValue(NewProp_WalkableSlopeAngle, TEXT("ClampMax"), TEXT("90"));
			MetaData->SetValue(NewProp_WalkableSlopeAngle, TEXT("ClampMin"), TEXT("0"));
			MetaData->SetValue(NewProp_WalkableSlopeAngle, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_WalkableSlopeAngle, TEXT("ToolTip"), TEXT("Override walkable slope angle (in degrees), applying the rules of the Walkable Slope Behavior.\n@see GetWalkableSlopeAngle(), SetWalkableSlopeAngle()"));
			MetaData->SetValue(NewProp_WalkableSlopeAngle, TEXT("UIMax"), TEXT("90"));
			MetaData->SetValue(NewProp_WalkableSlopeAngle, TEXT("UIMin"), TEXT("0"));
			MetaData->SetValue(NewProp_WalkableSlopeBehavior, TEXT("Category"), TEXT("WalkableSlopeOverride"));
			MetaData->SetValue(NewProp_WalkableSlopeBehavior, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_WalkableSlopeBehavior, TEXT("ToolTip"), TEXT("Behavior of this surface (whether we affect the walkable slope).\n@see GetWalkableSlopeBehavior(), SetWalkableSlopeBehavior()"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FWalkableSlopeOverride_CRC() { return 1650350953U; }
	UScriptStruct* Z_Construct_UScriptStruct_FRepAttachment()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FRepAttachment_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("RepAttachment"), sizeof(FRepAttachment), Get_Z_Construct_UScriptStruct_FRepAttachment_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RepAttachment"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FRepAttachment>, EStructFlags(0x00000005));
			UProperty* NewProp_AttachComponent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AttachComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AttachComponent, FRepAttachment), 0x0010000000080008, Z_Construct_UClass_USceneComponent_NoRegister());
			UProperty* NewProp_AttachSocket = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AttachSocket"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(AttachSocket, FRepAttachment), 0x0010000000000000);
			UProperty* NewProp_RotationOffset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RotationOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RotationOffset, FRepAttachment), 0x0010000000000000, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_RelativeScale3D = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RelativeScale3D"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(RelativeScale3D, FRepAttachment), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantize100());
			UProperty* NewProp_LocationOffset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LocationOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LocationOffset, FRepAttachment), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantize100());
			UProperty* NewProp_AttachParent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AttachParent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(AttachParent, FRepAttachment), 0x0010000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Handles attachment replication to clients. Movement replication will not happen while AttachParent is non-nullptr"));
			MetaData->SetValue(NewProp_AttachComponent, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_AttachComponent, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_AttachSocket, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_RotationOffset, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_RelativeScale3D, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LocationOffset, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_AttachParent, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FRepAttachment_CRC() { return 1120513975U; }
	UScriptStruct* Z_Construct_UScriptStruct_FRepMovement()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FRepMovement_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("RepMovement"), sizeof(FRepMovement), Get_Z_Construct_UScriptStruct_FRepMovement_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RepMovement"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FRepMovement>, EStructFlags(0x00000201));
			UProperty* NewProp_RotationQuantizationLevel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RotationQuantizationLevel"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(RotationQuantizationLevel, FRepMovement), 0x0010040000010001, Z_Construct_UEnum_Engine_ERotatorQuantization());
			UProperty* NewProp_RotationQuantizationLevel_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_RotationQuantizationLevel, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_VelocityQuantizationLevel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("VelocityQuantizationLevel"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(VelocityQuantizationLevel, FRepMovement), 0x0010040000010001, Z_Construct_UEnum_Engine_EVectorQuantization());
			UProperty* NewProp_VelocityQuantizationLevel_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_VelocityQuantizationLevel, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_LocationQuantizationLevel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LocationQuantizationLevel"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(LocationQuantizationLevel, FRepMovement), 0x0010040000010001, Z_Construct_UEnum_Engine_EVectorQuantization());
			UProperty* NewProp_LocationQuantizationLevel_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_LocationQuantizationLevel, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRepPhysics, FRepMovement, uint8);
			UProperty* NewProp_bRepPhysics = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bRepPhysics"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRepPhysics, FRepMovement), 0x0010000000002000, CPP_BOOL_PROPERTY_BITMASK(bRepPhysics, FRepMovement), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSimulatedPhysicSleep, FRepMovement, uint8);
			UProperty* NewProp_bSimulatedPhysicSleep = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bSimulatedPhysicSleep"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSimulatedPhysicSleep, FRepMovement), 0x0010000000002000, CPP_BOOL_PROPERTY_BITMASK(bSimulatedPhysicSleep, FRepMovement), sizeof(uint8), false);
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, FRepMovement), 0x0010000000002000, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, FRepMovement), 0x0010000000002000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_AngularVelocity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AngularVelocity"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AngularVelocity, FRepMovement), 0x0010000000002000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_LinearVelocity = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LinearVelocity"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LinearVelocity, FRepMovement), 0x0010000000002000, Z_Construct_UScriptStruct_FVector());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Replicated movement data of our RootComponent.\nStruct used for efficient replication as velocity and location are generally replicated together (this saves a repindex)\nand velocity.Z is commonly zero (most position replications are for walking pawns)."));
			MetaData->SetValue(NewProp_RotationQuantizationLevel, TEXT("Category"), TEXT("Replication"));
			MetaData->SetValue(NewProp_RotationQuantizationLevel, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_RotationQuantizationLevel, TEXT("ToolTip"), TEXT("Allows tuning the compression level for replicated rotation. You should only need to change this from the default if you see visual artifacts."));
			MetaData->SetValue(NewProp_VelocityQuantizationLevel, TEXT("Category"), TEXT("Replication"));
			MetaData->SetValue(NewProp_VelocityQuantizationLevel, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_VelocityQuantizationLevel, TEXT("ToolTip"), TEXT("Allows tuning the compression level for the replicated velocity vectors. You should only need to change this from the default if you see visual artifacts."));
			MetaData->SetValue(NewProp_LocationQuantizationLevel, TEXT("Category"), TEXT("Replication"));
			MetaData->SetValue(NewProp_LocationQuantizationLevel, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LocationQuantizationLevel, TEXT("ToolTip"), TEXT("Allows tuning the compression level for the replicated location vector. You should only need to change this from the default if you see visual artifacts."));
			MetaData->SetValue(NewProp_bRepPhysics, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bRepPhysics, TEXT("ToolTip"), TEXT("If set, additional physic data (angular velocity) will be replicated."));
			MetaData->SetValue(NewProp_bSimulatedPhysicSleep, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bSimulatedPhysicSleep, TEXT("ToolTip"), TEXT("If set, RootComponent should be sleeping."));
			MetaData->SetValue(NewProp_Rotation, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Location, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_AngularVelocity, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LinearVelocity, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FRepMovement_CRC() { return 4224042334U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTimerHandle()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FTimerHandle_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("TimerHandle"), sizeof(FTimerHandle), Get_Z_Construct_UScriptStruct_FTimerHandle_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TimerHandle"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTimerHandle>, EStructFlags(0x00000001));
			UProperty* NewProp_Handle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Handle"), RF_Public|RF_Transient|RF_MarkAsNative) UUInt64Property(CPP_PROPERTY_BASE(Handle, FTimerHandle), 0x0040000000002000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Unique handle that can be used to distinguish timers that have identical delegates."));
			MetaData->SetValue(NewProp_Handle, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTimerHandle_CRC() { return 2306305145U; }
	UScriptStruct* Z_Construct_UScriptStruct_FRadialDamageEvent()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FRadialDamageEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("RadialDamageEvent"), sizeof(FRadialDamageEvent), Get_Z_Construct_UScriptStruct_FRadialDamageEvent_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RadialDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FDamageEvent(), new UScriptStruct::TCppStructOps<FRadialDamageEvent>, EStructFlags(0x00000205));
			UProperty* NewProp_ComponentHits = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ComponentHits"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ComponentHits, FRadialDamageEvent), 0x0010008000000000);
			UProperty* NewProp_ComponentHits_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ComponentHits, TEXT("ComponentHits"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000008000000000, Z_Construct_UScriptStruct_FHitResult());
			UProperty* NewProp_Origin = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Origin"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Origin, FRadialDamageEvent), 0x0010000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Params = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Params"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Params, FRadialDamageEvent), 0x0010000000000000, Z_Construct_UScriptStruct_FRadialDamageParams());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ComponentHits, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ComponentHits, TEXT("ToolTip"), TEXT("@fixme, will not replicate properly?  component pointer"));
			MetaData->SetValue(NewProp_Origin, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Params, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FRadialDamageEvent_CRC() { return 3167458361U; }
	UScriptStruct* Z_Construct_UScriptStruct_FRadialDamageParams()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FRadialDamageParams_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("RadialDamageParams"), sizeof(FRadialDamageParams), Get_Z_Construct_UScriptStruct_FRadialDamageParams_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RadialDamageParams"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FRadialDamageParams>, EStructFlags(0x00000201));
			UProperty* NewProp_DamageFalloff = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageFalloff"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DamageFalloff, FRadialDamageParams), 0x0010000000000001);
			UProperty* NewProp_OuterRadius = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OuterRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(OuterRadius, FRadialDamageParams), 0x0010000000000001);
			UProperty* NewProp_InnerRadius = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("InnerRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(InnerRadius, FRadialDamageParams), 0x0010000000000001);
			UProperty* NewProp_MinimumDamage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MinimumDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(MinimumDamage, FRadialDamageParams), 0x0010000000000001);
			UProperty* NewProp_BaseDamage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BaseDamage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BaseDamage, FRadialDamageParams), 0x0010000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_DamageFalloff, TEXT("Category"), TEXT("RadialDamageParams"));
			MetaData->SetValue(NewProp_DamageFalloff, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_OuterRadius, TEXT("Category"), TEXT("RadialDamageParams"));
			MetaData->SetValue(NewProp_OuterRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_InnerRadius, TEXT("Category"), TEXT("RadialDamageParams"));
			MetaData->SetValue(NewProp_InnerRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_MinimumDamage, TEXT("Category"), TEXT("RadialDamageParams"));
			MetaData->SetValue(NewProp_MinimumDamage, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_BaseDamage, TEXT("Category"), TEXT("RadialDamageParams"));
			MetaData->SetValue(NewProp_BaseDamage, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FRadialDamageParams_CRC() { return 531822578U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPointDamageEvent()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FPointDamageEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("PointDamageEvent"), sizeof(FPointDamageEvent), Get_Z_Construct_UScriptStruct_FPointDamageEvent_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PointDamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FDamageEvent(), new UScriptStruct::TCppStructOps<FPointDamageEvent>, EStructFlags(0x00000205));
			UProperty* NewProp_HitInfo = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("HitInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(HitInfo, FPointDamageEvent), 0x0010008000000000, Z_Construct_UScriptStruct_FHitResult());
			UProperty* NewProp_ShotDirection = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShotDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ShotDirection, FPointDamageEvent), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantizeNormal());
			UProperty* NewProp_Damage = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Damage"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Damage, FPointDamageEvent), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_HitInfo, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ShotDirection, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ShotDirection, TEXT("ToolTip"), TEXT("Direction the shot came from. Should be normalized."));
			MetaData->SetValue(NewProp_Damage, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Damage, TEXT("ToolTip"), TEXT("skipping ImpulseMag for now"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPointDamageEvent_CRC() { return 662501518U; }
	UScriptStruct* Z_Construct_UScriptStruct_FDamageEvent()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FDamageEvent_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("DamageEvent"), sizeof(FDamageEvent), Get_Z_Construct_UScriptStruct_FDamageEvent_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("DamageEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FDamageEvent>, EStructFlags(0x00000201));
			UProperty* NewProp_DamageTypeClass = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DamageTypeClass"), RF_Public|RF_Transient|RF_MarkAsNative) UClassProperty(CPP_PROPERTY_BASE(DamageTypeClass, FDamageEvent), 0x0014000000000000, Z_Construct_UClass_UDamageType_NoRegister(), UClass::StaticClass());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_DamageTypeClass, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_DamageTypeClass, TEXT("ToolTip"), TEXT("Optional DamageType for this event.  If nullptr, UDamageType will be assumed."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FDamageEvent_CRC() { return 2039284226U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMeshBuildSettings()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FMeshBuildSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MeshBuildSettings"), sizeof(FMeshBuildSettings), Get_Z_Construct_UScriptStruct_FMeshBuildSettings_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MeshBuildSettings"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMeshBuildSettings>, EStructFlags(0x00000001));
			UProperty* NewProp_DistanceFieldReplacementMesh = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DistanceFieldReplacementMesh"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DistanceFieldReplacementMesh, FMeshBuildSettings), 0x0010000000000001, Z_Construct_UClass_UStaticMesh_NoRegister());
			UProperty* NewProp_DistanceFieldBias = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DistanceFieldBias"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DistanceFieldBias, FMeshBuildSettings), 0x0010000000000001);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bGenerateDistanceFieldAsIfTwoSided, FMeshBuildSettings, bool);
			UProperty* NewProp_bGenerateDistanceFieldAsIfTwoSided = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bGenerateDistanceFieldAsIfTwoSided"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bGenerateDistanceFieldAsIfTwoSided, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bGenerateDistanceFieldAsIfTwoSided, FMeshBuildSettings), sizeof(bool), true);
			UProperty* NewProp_DistanceFieldResolutionScale = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DistanceFieldResolutionScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DistanceFieldResolutionScale, FMeshBuildSettings), 0x0010000000000001);
			UProperty* NewProp_BuildScale3D = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BuildScale3D"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(BuildScale3D, FMeshBuildSettings), 0x0010000000000001, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_BuildScale = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BuildScale"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BuildScale_DEPRECATED, FMeshBuildSettings), 0x0010000020000000);
			UProperty* NewProp_DstLightmapIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DstLightmapIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(DstLightmapIndex, FMeshBuildSettings), 0x0010000000000001);
			UProperty* NewProp_SrcLightmapIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SrcLightmapIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(SrcLightmapIndex, FMeshBuildSettings), 0x0010000000000001);
			UProperty* NewProp_MinLightmapResolution = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MinLightmapResolution"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MinLightmapResolution, FMeshBuildSettings), 0x0010000000000001);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bGenerateLightmapUVs, FMeshBuildSettings, bool);
			UProperty* NewProp_bGenerateLightmapUVs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bGenerateLightmapUVs"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bGenerateLightmapUVs, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bGenerateLightmapUVs, FMeshBuildSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseFullPrecisionUVs, FMeshBuildSettings, bool);
			UProperty* NewProp_bUseFullPrecisionUVs = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseFullPrecisionUVs"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseFullPrecisionUVs, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bUseFullPrecisionUVs, FMeshBuildSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseHighPrecisionTangentBasis, FMeshBuildSettings, bool);
			UProperty* NewProp_bUseHighPrecisionTangentBasis = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseHighPrecisionTangentBasis"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseHighPrecisionTangentBasis, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bUseHighPrecisionTangentBasis, FMeshBuildSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bBuildReversedIndexBuffer, FMeshBuildSettings, bool);
			UProperty* NewProp_bBuildReversedIndexBuffer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bBuildReversedIndexBuffer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bBuildReversedIndexBuffer, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bBuildReversedIndexBuffer, FMeshBuildSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bBuildAdjacencyBuffer, FMeshBuildSettings, bool);
			UProperty* NewProp_bBuildAdjacencyBuffer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bBuildAdjacencyBuffer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bBuildAdjacencyBuffer, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bBuildAdjacencyBuffer, FMeshBuildSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRemoveDegenerates, FMeshBuildSettings, bool);
			UProperty* NewProp_bRemoveDegenerates = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bRemoveDegenerates"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRemoveDegenerates, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bRemoveDegenerates, FMeshBuildSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRecomputeTangents, FMeshBuildSettings, bool);
			UProperty* NewProp_bRecomputeTangents = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bRecomputeTangents"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRecomputeTangents, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bRecomputeTangents, FMeshBuildSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bRecomputeNormals, FMeshBuildSettings, bool);
			UProperty* NewProp_bRecomputeNormals = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bRecomputeNormals"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bRecomputeNormals, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bRecomputeNormals, FMeshBuildSettings), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseMikkTSpace, FMeshBuildSettings, bool);
			UProperty* NewProp_bUseMikkTSpace = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseMikkTSpace"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseMikkTSpace, FMeshBuildSettings), 0x0010000000000001, CPP_BOOL_PROPERTY_BITMASK(bUseMikkTSpace, FMeshBuildSettings), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Settings applied when building a mesh."));
			MetaData->SetValue(NewProp_DistanceFieldReplacementMesh, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_DistanceFieldReplacementMesh, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_DistanceFieldBias, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_DistanceFieldBias, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_DistanceFieldBias, TEXT("ToolTip"), TEXT("Adding a constant distance effectively shrinks the distance field representation.\nThis is useful for preventing self shadowing aritfacts when doing some minor ambient animation.\nThin walls will be affected more severely than large hollow objects, because thin walls don't have a large negative region."));
			MetaData->SetValue(NewProp_bGenerateDistanceFieldAsIfTwoSided, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bGenerateDistanceFieldAsIfTwoSided, TEXT("DisplayName"), TEXT("Two-Sided Distance Field Generation"));
			MetaData->SetValue(NewProp_bGenerateDistanceFieldAsIfTwoSided, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bGenerateDistanceFieldAsIfTwoSided, TEXT("ToolTip"), TEXT("Whether to generate the distance field treating every triangle hit as a front face.\nWhen enabled prevents the distance field from being discarded due to the mesh being open, but also lowers Distance Field AO quality."));
			MetaData->SetValue(NewProp_DistanceFieldResolutionScale, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_DistanceFieldResolutionScale, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_DistanceFieldResolutionScale, TEXT("ToolTip"), TEXT("Scale to apply to the mesh when allocating the distance field volume texture.\nThe default scale is 1, which is assuming that the mesh will be placed unscaled in the world."));
			MetaData->SetValue(NewProp_BuildScale3D, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_BuildScale3D, TEXT("DisplayName"), TEXT("Build Scale"));
			MetaData->SetValue(NewProp_BuildScale3D, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_BuildScale3D, TEXT("ToolTip"), TEXT("The local scale applied when building the mesh"));
			MetaData->SetValue(NewProp_BuildScale, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_DstLightmapIndex, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_DstLightmapIndex, TEXT("DisplayName"), TEXT("Destination Lightmap Index"));
			MetaData->SetValue(NewProp_DstLightmapIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_SrcLightmapIndex, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_SrcLightmapIndex, TEXT("DisplayName"), TEXT("Source Lightmap Index"));
			MetaData->SetValue(NewProp_SrcLightmapIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_MinLightmapResolution, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_MinLightmapResolution, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bGenerateLightmapUVs, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bGenerateLightmapUVs, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseFullPrecisionUVs, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bUseFullPrecisionUVs, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseFullPrecisionUVs, TEXT("ToolTip"), TEXT("If true, UVs will be stored at full floating point precision."));
			MetaData->SetValue(NewProp_bUseHighPrecisionTangentBasis, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bUseHighPrecisionTangentBasis, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseHighPrecisionTangentBasis, TEXT("ToolTip"), TEXT("If true, Tangents will be stored at 16 bit vs 8 bit precision."));
			MetaData->SetValue(NewProp_bBuildReversedIndexBuffer, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bBuildReversedIndexBuffer, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bBuildReversedIndexBuffer, TEXT("ToolTip"), TEXT("Required to optimize mesh in mirrored transform. Double index buffer size."));
			MetaData->SetValue(NewProp_bBuildAdjacencyBuffer, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bBuildAdjacencyBuffer, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bBuildAdjacencyBuffer, TEXT("ToolTip"), TEXT("Required for PNT tessellation but can be slow. Recommend disabling for larger meshes."));
			MetaData->SetValue(NewProp_bRemoveDegenerates, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bRemoveDegenerates, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bRemoveDegenerates, TEXT("ToolTip"), TEXT("If true, degenerate triangles will be removed."));
			MetaData->SetValue(NewProp_bRecomputeTangents, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bRecomputeTangents, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bRecomputeTangents, TEXT("ToolTip"), TEXT("If true, tangents in the raw mesh are ignored and recomputed."));
			MetaData->SetValue(NewProp_bRecomputeNormals, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bRecomputeNormals, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bRecomputeNormals, TEXT("ToolTip"), TEXT("If true, normals in the raw mesh are ignored and recomputed."));
			MetaData->SetValue(NewProp_bUseMikkTSpace, TEXT("Category"), TEXT("BuildSettings"));
			MetaData->SetValue(NewProp_bUseMikkTSpace, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseMikkTSpace, TEXT("ToolTip"), TEXT("If true, degenerate triangles will be removed."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMeshBuildSettings_CRC() { return 360997156U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPOV()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FPOV_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("POV"), sizeof(FPOV), Get_Z_Construct_UScriptStruct_FPOV_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("POV"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPOV>, EStructFlags(0x00000001));
			UProperty* NewProp_FOV = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FOV"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(FOV, FPOV), 0x0010000000000005);
			UProperty* NewProp_Rotation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Rotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Rotation, FPOV), 0x0010000000000005, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, FPOV), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Point Of View type."));
			MetaData->SetValue(NewProp_FOV, TEXT("Category"), TEXT("POV"));
			MetaData->SetValue(NewProp_FOV, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_FOV, TEXT("ToolTip"), TEXT("FOV angle"));
			MetaData->SetValue(NewProp_Rotation, TEXT("Category"), TEXT("POV"));
			MetaData->SetValue(NewProp_Rotation, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Rotation, TEXT("ToolTip"), TEXT("Rotation"));
			MetaData->SetValue(NewProp_Location, TEXT("Category"), TEXT("POV"));
			MetaData->SetValue(NewProp_Location, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Location, TEXT("ToolTip"), TEXT("Location"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPOV_CRC() { return 175731722U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAnimUpdateRateParameters()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FAnimUpdateRateParameters_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("AnimUpdateRateParameters"), sizeof(FAnimUpdateRateParameters), Get_Z_Construct_UScriptStruct_FAnimUpdateRateParameters_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AnimUpdateRateParameters"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAnimUpdateRateParameters>, EStructFlags(0x00000001));
			UProperty* NewProp_ShiftBucket = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShiftBucket"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(ShiftBucket, FAnimUpdateRateParameters), 0x0010000000000000, Z_Construct_UEnum_Engine_EUpdateRateShiftBucket());
			UProperty* NewProp_ShiftBucket_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_ShiftBucket, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_MaxEvalRateForInterpolation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MaxEvalRateForInterpolation"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(MaxEvalRateForInterpolation, FAnimUpdateRateParameters), 0x0010000000000000);
			UProperty* NewProp_LODToFrameSkipMap = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LODToFrameSkipMap"), RF_Public|RF_Transient|RF_MarkAsNative) UMapProperty(CPP_PROPERTY_BASE(LODToFrameSkipMap, FAnimUpdateRateParameters), 0x0010000000000000);
			UProperty* NewProp_LODToFrameSkipMap_Key_KeyProp = new(EC_InternalUseOnlyConstructor, NewProp_LODToFrameSkipMap, TEXT("LODToFrameSkipMap_Key"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_LODToFrameSkipMap_ValueProp = new(EC_InternalUseOnlyConstructor, NewProp_LODToFrameSkipMap, TEXT("LODToFrameSkipMap"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(FObjectInitializer(), EC_CppProperty, 1, 0x0000000000000000);
			UProperty* NewProp_BaseVisibleDistanceFactorThesholds = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BaseVisibleDistanceFactorThesholds"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(BaseVisibleDistanceFactorThesholds, FAnimUpdateRateParameters), 0x0010000000000000);
			UProperty* NewProp_BaseVisibleDistanceFactorThesholds_Inner = new(EC_InternalUseOnlyConstructor, NewProp_BaseVisibleDistanceFactorThesholds, TEXT("BaseVisibleDistanceFactorThesholds"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_BaseNonRenderedUpdateRate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BaseNonRenderedUpdateRate"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(BaseNonRenderedUpdateRate, FAnimUpdateRateParameters), 0x0010000000000000);
			UProperty* NewProp_AdditionalTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AdditionalTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AdditionalTime, FAnimUpdateRateParameters), 0x0010000000002000);
			UProperty* NewProp_TickedPoseOffestTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TickedPoseOffestTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TickedPoseOffestTime, FAnimUpdateRateParameters), 0x0010000000002000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSkipEvaluation, FAnimUpdateRateParameters, bool);
			UProperty* NewProp_bSkipEvaluation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bSkipEvaluation"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSkipEvaluation, FAnimUpdateRateParameters), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bSkipEvaluation, FAnimUpdateRateParameters), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSkipUpdate, FAnimUpdateRateParameters, bool);
			UProperty* NewProp_bSkipUpdate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bSkipUpdate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSkipUpdate, FAnimUpdateRateParameters), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bSkipUpdate, FAnimUpdateRateParameters), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShouldUseLodMap, FAnimUpdateRateParameters, bool);
			UProperty* NewProp_bShouldUseLodMap = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bShouldUseLodMap"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShouldUseLodMap, FAnimUpdateRateParameters), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bShouldUseLodMap, FAnimUpdateRateParameters), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInterpolateSkippedFrames, FAnimUpdateRateParameters, bool);
			UProperty* NewProp_bInterpolateSkippedFrames = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bInterpolateSkippedFrames"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInterpolateSkippedFrames, FAnimUpdateRateParameters), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bInterpolateSkippedFrames, FAnimUpdateRateParameters), sizeof(bool), true);
			UProperty* NewProp_EvaluationRate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EvaluationRate"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(EvaluationRate, FAnimUpdateRateParameters), 0x0010000000000000);
			UProperty* NewProp_UpdateRate = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("UpdateRate"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(UpdateRate, FAnimUpdateRateParameters), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Container for Animation Update Rate parameters.\nThey are shared for all components of an Actor, so they can be updated in sync."));
			MetaData->SetValue(NewProp_ShiftBucket, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ShiftBucket, TEXT("ToolTip"), TEXT("The bucket to use when deciding which counter to use to calculate shift values"));
			MetaData->SetValue(NewProp_MaxEvalRateForInterpolation, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_MaxEvalRateForInterpolation, TEXT("ToolTip"), TEXT("Max Evaluation Rate allowed for interpolation to be enabled. Beyond, interpolation will be turned off."));
			MetaData->SetValue(NewProp_LODToFrameSkipMap, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LODToFrameSkipMap, TEXT("ToolTip"), TEXT("Map of LOD levels to frame skip amounts. if bShouldUseLodMap is set these values will be used for\nthe frameskip amounts and the distance factor thresholds will be ignored. The flag and these values\nshould be configured using the customization callback when parameters are created for a component."));
			MetaData->SetValue(NewProp_BaseVisibleDistanceFactorThesholds, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_BaseVisibleDistanceFactorThesholds, TEXT("ToolTip"), TEXT("Array of MaxDistanceFactor to use for AnimUpdateRate when mesh is visible (rendered).\nMaxDistanceFactor is size on screen, as used by LODs\nExample:\n            BaseVisibleDistanceFactorThesholds.Add(0.4f)\n            BaseVisibleDistanceFactorThesholds.Add(0.2f)\nmeans:\n            0 frame skip, MaxDistanceFactor > 0.4f\n            1 frame skip, MaxDistanceFactor > 0.2f\n            2 frame skip, MaxDistanceFactor > 0.0f"));
			MetaData->SetValue(NewProp_BaseNonRenderedUpdateRate, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_BaseNonRenderedUpdateRate, TEXT("ToolTip"), TEXT("Rate of animation evaluation when non rendered (off screen and dedicated servers).\na value of 4 means evaluated 1 frame, then 3 frames skipped"));
			MetaData->SetValue(NewProp_AdditionalTime, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_AdditionalTime, TEXT("ToolTip"), TEXT("Total time of the last series of skipped updates"));
			MetaData->SetValue(NewProp_TickedPoseOffestTime, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_TickedPoseOffestTime, TEXT("ToolTip"), TEXT("Track time we have lost via skipping"));
			MetaData->SetValue(NewProp_bSkipEvaluation, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bSkipEvaluation, TEXT("ToolTip"), TEXT("(This frame) animation evaluation should be skipped."));
			MetaData->SetValue(NewProp_bSkipUpdate, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bSkipUpdate, TEXT("ToolTip"), TEXT("(This frame) animation update should be skipped."));
			MetaData->SetValue(NewProp_bShouldUseLodMap, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bShouldUseLodMap, TEXT("ToolTip"), TEXT("Whether or not to use the defined LOD/Frameskip map instead of separate distance factor thresholds"));
			MetaData->SetValue(NewProp_bInterpolateSkippedFrames, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bInterpolateSkippedFrames, TEXT("ToolTip"), TEXT("When skipping a frame, should it be interpolated or frozen?"));
			MetaData->SetValue(NewProp_EvaluationRate, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EvaluationRate, TEXT("ToolTip"), TEXT("How often animation will be evaluated. 1 = every frame, 2 = every 2 frames, etc.\nhas to be a multiple of UpdateRate."));
			MetaData->SetValue(NewProp_UpdateRate, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_UpdateRate, TEXT("ToolTip"), TEXT("How often animation will be updated/ticked. 1 = every frame, 2 = every 2 frames, etc."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAnimUpdateRateParameters_CRC() { return 3800362447U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAnimSlotDesc()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FAnimSlotDesc_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("AnimSlotDesc"), sizeof(FAnimSlotDesc), Get_Z_Construct_UScriptStruct_FAnimSlotDesc_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AnimSlotDesc"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAnimSlotDesc>, EStructFlags(0x00000001));
			UProperty* NewProp_NumChannels = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("NumChannels"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NumChannels, FAnimSlotDesc), 0x0010000000000000);
			UProperty* NewProp_SlotName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SlotName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(SlotName, FAnimSlotDesc), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Used to indicate each slot name and how many channels they have."));
			MetaData->SetValue(NewProp_NumChannels, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_NumChannels, TEXT("ToolTip"), TEXT("Number of channels that are available in this slot."));
			MetaData->SetValue(NewProp_SlotName, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_SlotName, TEXT("ToolTip"), TEXT("Name of the slot."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAnimSlotDesc_CRC() { return 2728298735U; }
	UScriptStruct* Z_Construct_UScriptStruct_FAnimSlotInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FAnimSlotInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("AnimSlotInfo"), sizeof(FAnimSlotInfo), Get_Z_Construct_UScriptStruct_FAnimSlotInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AnimSlotInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FAnimSlotInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_ChannelWeights = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ChannelWeights"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ChannelWeights, FAnimSlotInfo), 0x0010000000000000);
			UProperty* NewProp_ChannelWeights_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ChannelWeights, TEXT("ChannelWeights"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_SlotName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("SlotName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(SlotName, FAnimSlotInfo), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct used for passing information from Matinee to an Actor for blending animations during a sequence."));
			MetaData->SetValue(NewProp_ChannelWeights, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ChannelWeights, TEXT("ToolTip"), TEXT("Strength of each Channel within this Slot. Channel indexs are determined by track order in Matinee."));
			MetaData->SetValue(NewProp_SlotName, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_SlotName, TEXT("ToolTip"), TEXT("Name of slot that we want to play the animtion in."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FAnimSlotInfo_CRC() { return 2294015824U; }
	UScriptStruct* Z_Construct_UScriptStruct_FMTDResult()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FMTDResult_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("MTDResult"), sizeof(FMTDResult), Get_Z_Construct_UScriptStruct_FMTDResult_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("MTDResult"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FMTDResult>, EStructFlags(0x00000201));
			UProperty* NewProp_Distance = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Distance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Distance, FMTDResult), 0x0010000000000000);
			UProperty* NewProp_Direction = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Direction"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Direction, FMTDResult), 0x0010000000000000, Z_Construct_UScriptStruct_FVector());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure containing information about minimum translation direction (MTD)"));
			MetaData->SetValue(NewProp_Distance, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Distance, TEXT("ToolTip"), TEXT("Distance required to move along the MTD vector (Direction)."));
			MetaData->SetValue(NewProp_Direction, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Direction, TEXT("ToolTip"), TEXT("Normalized direction of the minimum translation required to fix penetration."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FMTDResult_CRC() { return 3850115596U; }
	UScriptStruct* Z_Construct_UScriptStruct_FOverlapResult()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FOverlapResult_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("OverlapResult"), sizeof(FOverlapResult), Get_Z_Construct_UScriptStruct_FOverlapResult_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("OverlapResult"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FOverlapResult>, EStructFlags(0x00000205));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bBlockingHit, FOverlapResult, uint8);
			UProperty* NewProp_bBlockingHit = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bBlockingHit"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bBlockingHit, FOverlapResult), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bBlockingHit, FOverlapResult), sizeof(uint8), false);
			UProperty* NewProp_Component = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Component"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(Component, FOverlapResult), 0x0014000000080008, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(Actor, FOverlapResult), 0x0014000000000000, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure containing information about one hit of an overlap test"));
			MetaData->SetValue(NewProp_bBlockingHit, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bBlockingHit, TEXT("ToolTip"), TEXT("Indicates if this hit was requesting a block - if false, was requesting a touch instead"));
			MetaData->SetValue(NewProp_Component, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Component, TEXT("ToolTip"), TEXT("PrimitiveComponent that the check hit."));
			MetaData->SetValue(NewProp_Actor, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Actor, TEXT("ToolTip"), TEXT("Actor that the check hit."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FOverlapResult_CRC() { return 2844134326U; }
	UScriptStruct* Z_Construct_UScriptStruct_FHitResult()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FHitResult_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("HitResult"), sizeof(FHitResult), Get_Z_Construct_UScriptStruct_FHitResult_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("HitResult"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FHitResult>, EStructFlags(0x00000205));
			UProperty* NewProp_FaceIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FaceIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(FaceIndex, FHitResult), 0x0010000000000000);
			UProperty* NewProp_BoneName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BoneName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(BoneName, FHitResult), 0x0010000000000000);
			UProperty* NewProp_Component = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Component"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(Component, FHitResult), 0x0014000000080008, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			UProperty* NewProp_Actor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Actor"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(Actor, FHitResult), 0x0014000000000000, Z_Construct_UClass_AActor_NoRegister());
			UProperty* NewProp_PhysMaterial = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PhysMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(PhysMaterial, FHitResult), 0x0014000000000000, Z_Construct_UClass_UPhysicalMaterial_NoRegister());
			UProperty* NewProp_Item = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Item"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Item, FHitResult), 0x0010000000000000);
			UProperty* NewProp_PenetrationDepth = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PenetrationDepth"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(PenetrationDepth, FHitResult), 0x0010000000000000);
			UProperty* NewProp_TraceEnd = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TraceEnd"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceEnd, FHitResult), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantize());
			UProperty* NewProp_TraceStart = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TraceStart"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TraceStart, FHitResult), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantize());
			UProperty* NewProp_ImpactNormal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ImpactNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ImpactNormal, FHitResult), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantizeNormal());
			UProperty* NewProp_Normal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Normal"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Normal, FHitResult), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantizeNormal());
			UProperty* NewProp_ImpactPoint = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ImpactPoint"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ImpactPoint, FHitResult), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantize());
			UProperty* NewProp_Location = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Location"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Location, FHitResult), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantize());
			UProperty* NewProp_Distance = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Distance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Distance, FHitResult), 0x0010000000000000);
			UProperty* NewProp_Time = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Time"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Time, FHitResult), 0x0010000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStartPenetrating, FHitResult, uint8);
			UProperty* NewProp_bStartPenetrating = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bStartPenetrating"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStartPenetrating, FHitResult), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bStartPenetrating, FHitResult), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bBlockingHit, FHitResult, uint8);
			UProperty* NewProp_bBlockingHit = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bBlockingHit"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bBlockingHit, FHitResult), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bBlockingHit, FHitResult), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnStruct, TEXT("HasNativeBreak"), TEXT("Engine.GameplayStatics.BreakHitResult"));
			MetaData->SetValue(ReturnStruct, TEXT("HasNativeMake"), TEXT("Engine.GameplayStatics.MakeHitResult"));
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Structure containing information about one hit of a trace, such as point of impact and surface normal at that point."));
			MetaData->SetValue(NewProp_FaceIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_FaceIndex, TEXT("ToolTip"), TEXT("Face index we hit (for complex hits with triangle meshes)."));
			MetaData->SetValue(NewProp_BoneName, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_BoneName, TEXT("ToolTip"), TEXT("Name of bone we hit (for skeletal meshes)."));
			MetaData->SetValue(NewProp_Component, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Component, TEXT("ToolTip"), TEXT("PrimitiveComponent hit by the trace."));
			MetaData->SetValue(NewProp_Actor, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Actor, TEXT("ToolTip"), TEXT("Actor hit by the trace."));
			MetaData->SetValue(NewProp_PhysMaterial, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_PhysMaterial, TEXT("ToolTip"), TEXT("Physical material that was hit.\n@note Must set bReturnPhysicalMaterial on the swept PrimitiveComponent or in the query params for this to be returned."));
			MetaData->SetValue(NewProp_Item, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Item, TEXT("ToolTip"), TEXT("Extra data about item that was hit (hit primitive specific)."));
			MetaData->SetValue(NewProp_PenetrationDepth, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_PenetrationDepth, TEXT("ToolTip"), TEXT("If this test started in penetration (bStartPenetrating is true) and a depenetration vector can be computed,\nthis value is the distance along Normal that will result in moving out of penetration.\nIf the distance cannot be computed, this distance will be zero."));
			MetaData->SetValue(NewProp_TraceEnd, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_TraceEnd, TEXT("ToolTip"), TEXT("End location of the trace; this is NOT where the impact occurred (if any), but the furthest point in the attempted sweep.\nFor example if a sphere is swept against the world, this would be the center of the sphere if there was no blocking hit."));
			MetaData->SetValue(NewProp_TraceStart, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_TraceStart, TEXT("ToolTip"), TEXT("Start location of the trace.\nFor example if a sphere is swept against the world, this is the starting location of the center of the sphere."));
			MetaData->SetValue(NewProp_ImpactNormal, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ImpactNormal, TEXT("ToolTip"), TEXT("Normal of the hit in world space, for the object that was hit by the sweep, if any.\nFor example if a box hits a flat plane, this is a normalized vector pointing out from the plane.\nIn the case of impact with a corner or edge of a surface, usually the \"most opposing\" normal (opposed to the query direction) is chosen."));
			MetaData->SetValue(NewProp_Normal, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Normal, TEXT("ToolTip"), TEXT("Normal of the hit in world space, for the object that was swept. Equal to ImpactNormal for line tests.\nThis is computed for capsules and spheres, otherwise it will be the same as ImpactNormal.\nExample: for a sphere trace test, this is a normalized vector pointing in towards the center of the sphere at the point of impact."));
			MetaData->SetValue(NewProp_ImpactPoint, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ImpactPoint, TEXT("ToolTip"), TEXT("Location in world space of the actual contact of the trace shape (box, sphere, ray, etc) with the impacted object.\nExample: for a sphere trace test, this is the point where the surface of the sphere touches the other object.\n@note: In the case of initial overlap (bStartPenetrating=true), ImpactPoint will be the same as Location because there is no meaningful single impact point to report."));
			MetaData->SetValue(NewProp_Location, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Location, TEXT("ToolTip"), TEXT("The location in world space where the moving shape would end up against the impacted object, if there is a hit. Equal to the point of impact for line tests.\nExample: for a sphere trace test, this is the point where the center of the sphere would be located when it touched the other object.\nFor swept movement (but not queries) this may not equal the final location of the shape since hits are pulled back slightly to prevent precision issues from overlapping another surface."));
			MetaData->SetValue(NewProp_Distance, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Distance, TEXT("ToolTip"), TEXT("The distance from the TraceStart to the ImpactPoint in world space. This value is 0 if there was an initial overlap (trace started inside another colliding object)."));
			MetaData->SetValue(NewProp_Time, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Time, TEXT("ToolTip"), TEXT("'Time' of impact along trace direction (ranging from 0.0 to 1.0) if there is a hit, indicating time between TraceStart and TraceEnd.\nFor swept movement (but not queries) this may be pulled back slightly from the actual time of impact, to prevent precision problems with adjacent geometry."));
			MetaData->SetValue(NewProp_bStartPenetrating, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bStartPenetrating, TEXT("ToolTip"), TEXT("Whether the trace started in penetration, i.e. with an initial blocking overlap.\nIn the case of penetration, if PenetrationDepth > 0.f, then it will represent the distance along the Normal vector that will result in\nminimal contact between the swept shape and the object that was hit. In this case, ImpactNormal will be the normal opposed to movement at that location\n(ie, Normal may not equal ImpactNormal). ImpactPoint will be the same as Location, since there is no single impact point to report."));
			MetaData->SetValue(NewProp_bBlockingHit, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bBlockingHit, TEXT("ToolTip"), TEXT("Indicates if this hit was a result of blocking collision. If false, there was no hit or it was an overlap/touch instead."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FHitResult_CRC() { return 3989373602U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPrimitiveMaterialRef()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FPrimitiveMaterialRef_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("PrimitiveMaterialRef"), sizeof(FPrimitiveMaterialRef), Get_Z_Construct_UScriptStruct_FPrimitiveMaterialRef_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PrimitiveMaterialRef"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FPrimitiveMaterialRef>, EStructFlags(0x00000005));
			UProperty* NewProp_ElementIndex = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ElementIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ElementIndex, FPrimitiveMaterialRef), 0x0010000000000000);
			UProperty* NewProp_Decal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Decal"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Decal, FPrimitiveMaterialRef), 0x0010000000080008, Z_Construct_UClass_UDecalComponent_NoRegister());
			UProperty* NewProp_Primitive = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Primitive"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Primitive, FPrimitiveMaterialRef), 0x0010000000080008, Z_Construct_UClass_UPrimitiveComponent_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Reference to a specific material in a PrimitiveComponent."));
			MetaData->SetValue(NewProp_ElementIndex, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Decal, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_Decal, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Primitive, TEXT("EditInline"), TEXT("true"));
			MetaData->SetValue(NewProp_Primitive, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPrimitiveMaterialRef_CRC() { return 104364286U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSwarmDebugOptions()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FSwarmDebugOptions_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SwarmDebugOptions"), sizeof(FSwarmDebugOptions), Get_Z_Construct_UScriptStruct_FSwarmDebugOptions_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SwarmDebugOptions"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSwarmDebugOptions>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInitialized, FSwarmDebugOptions, uint8);
			UProperty* NewProp_bInitialized = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bInitialized"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInitialized, FSwarmDebugOptions), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bInitialized, FSwarmDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bForceContentExport, FSwarmDebugOptions, uint8);
			UProperty* NewProp_bForceContentExport = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bForceContentExport"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bForceContentExport, FSwarmDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bForceContentExport, FSwarmDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDistributionEnabled, FSwarmDebugOptions, uint8);
			UProperty* NewProp_bDistributionEnabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDistributionEnabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDistributionEnabled, FSwarmDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bDistributionEnabled, FSwarmDebugOptions), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Debug options for Swarm"));
			MetaData->SetValue(NewProp_bInitialized, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bForceContentExport, TEXT("Category"), TEXT("SwarmDebugOptions"));
			MetaData->SetValue(NewProp_bForceContentExport, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bForceContentExport, TEXT("ToolTip"), TEXT("If true, Swarm will force content to re-export rather than using the cached version.\nIf false, Swarm will attempt to use the cached version."));
			MetaData->SetValue(NewProp_bDistributionEnabled, TEXT("Category"), TEXT("SwarmDebugOptions"));
			MetaData->SetValue(NewProp_bDistributionEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bDistributionEnabled, TEXT("ToolTip"), TEXT("If true, Swarm will distribute jobs.\nIf false, only the local machine will execute the jobs."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSwarmDebugOptions_CRC() { return 1072685185U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightmassDebugOptions()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightmassDebugOptions_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("LightmassDebugOptions"), sizeof(FLightmassDebugOptions), Get_Z_Construct_UScriptStruct_FLightmassDebugOptions_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightmassDebugOptions"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLightmassDebugOptions>, EStructFlags(0x00000001));
			UProperty* NewProp_ExecutionTimeDivisor = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ExecutionTimeDivisor"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ExecutionTimeDivisor, FLightmassDebugOptions), 0x0010000000000005);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bColorByExecutionTime, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bColorByExecutionTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bColorByExecutionTime"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bColorByExecutionTime, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bColorByExecutionTime, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bColorBordersGreen, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bColorBordersGreen = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bColorBordersGreen"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bColorBordersGreen, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bColorBordersGreen, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseRandomColors, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bUseRandomColors = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseRandomColors"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseRandomColors, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bUseRandomColors, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bOnlyCalcDebugTexelMappings, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bOnlyCalcDebugTexelMappings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bOnlyCalcDebugTexelMappings"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bOnlyCalcDebugTexelMappings, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bOnlyCalcDebugTexelMappings, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDebugPaddings, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bDebugPaddings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDebugPaddings"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDebugPaddings, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bDebugPaddings, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bPadMappings, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bPadMappings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bPadMappings"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bPadMappings, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bPadMappings, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDebugMaterials, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bDebugMaterials = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDebugMaterials"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDebugMaterials, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bDebugMaterials, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDumpBinaryFiles, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bDumpBinaryFiles = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDumpBinaryFiles"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDumpBinaryFiles, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bDumpBinaryFiles, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSortMappings, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bSortMappings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bSortMappings"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSortMappings, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bSortMappings, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bImmediateProcessMappings, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bImmediateProcessMappings = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bImmediateProcessMappings"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bImmediateProcessMappings, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bImmediateProcessMappings, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseImmediateImport, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bUseImmediateImport = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseImmediateImport"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseImmediateImport, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bUseImmediateImport, FLightmassDebugOptions), sizeof(uint8), false);
			UProperty* NewProp_CoplanarTolerance = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CoplanarTolerance"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(CoplanarTolerance, FLightmassDebugOptions), 0x0010000000000005);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bGatherBSPSurfacesAcrossComponents, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bGatherBSPSurfacesAcrossComponents = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bGatherBSPSurfacesAcrossComponents"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bGatherBSPSurfacesAcrossComponents, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bGatherBSPSurfacesAcrossComponents, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStatsEnabled, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bStatsEnabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bStatsEnabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStatsEnabled, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bStatsEnabled, FLightmassDebugOptions), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDebugMode, FLightmassDebugOptions, uint8);
			UProperty* NewProp_bDebugMode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bDebugMode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDebugMode, FLightmassDebugOptions), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bDebugMode, FLightmassDebugOptions), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Debug options for Lightmass"));
			MetaData->SetValue(NewProp_ExecutionTimeDivisor, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_ExecutionTimeDivisor, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ExecutionTimeDivisor, TEXT("ToolTip"), TEXT("The amount of time that will be count as full red when bColorByExecutionTime is enabled"));
			MetaData->SetValue(NewProp_bColorByExecutionTime, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bColorByExecutionTime, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bColorByExecutionTime, TEXT("ToolTip"), TEXT("If true, Lightmass will overwrite lightmap data with a shade of red relating to\nhow long it took to calculate the mapping (Red = Time / ExecutionTimeDivisor)"));
			MetaData->SetValue(NewProp_bColorBordersGreen, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bColorBordersGreen, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bColorBordersGreen, TEXT("ToolTip"), TEXT("If true, a green border will be placed around the edges of mappings"));
			MetaData->SetValue(NewProp_bUseRandomColors, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bUseRandomColors, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseRandomColors, TEXT("ToolTip"), TEXT("If true, color lightmaps a random color"));
			MetaData->SetValue(NewProp_bOnlyCalcDebugTexelMappings, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bOnlyCalcDebugTexelMappings, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bOnlyCalcDebugTexelMappings, TEXT("ToolTip"), TEXT("If true, only the mapping containing a debug texel will be calculated, all others\nwill be set to white"));
			MetaData->SetValue(NewProp_bDebugPaddings, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bDebugPaddings, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bDebugPaddings, TEXT("ToolTip"), TEXT("If true, will fill padding of mappings with a color rather than the sampled edges.\nMeans nothing if bPadMappings is not enabled..."));
			MetaData->SetValue(NewProp_bPadMappings, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bPadMappings, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bPadMappings, TEXT("ToolTip"), TEXT("If true, Lightmass will pad the calculated mappings to reduce/eliminate seams."));
			MetaData->SetValue(NewProp_bDebugMaterials, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bDebugMaterials, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bDebugMaterials, TEXT("ToolTip"), TEXT("If true, Lightmass will write out BMPs for each generated material property\nsample to <GAME>\\ScreenShots\\Materials."));
			MetaData->SetValue(NewProp_bDumpBinaryFiles, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bDumpBinaryFiles, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bDumpBinaryFiles, TEXT("ToolTip"), TEXT("If true, the generate coefficients will be dumped to binary files."));
			MetaData->SetValue(NewProp_bSortMappings, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bSortMappings, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bSortMappings, TEXT("ToolTip"), TEXT("If true, Lightmass will sort mappings by texel cost."));
			MetaData->SetValue(NewProp_bImmediateProcessMappings, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bImmediateProcessMappings, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bImmediateProcessMappings, TEXT("ToolTip"), TEXT("If true, Lightmass will process appropriate mappings as they are imported.\nNOTE: Requires ImmediateMode be enabled to actually work."));
			MetaData->SetValue(NewProp_bUseImmediateImport, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bUseImmediateImport, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseImmediateImport, TEXT("ToolTip"), TEXT("If true, Lightmass will import mappings immediately as they complete.\nIt will not process them, however."));
			MetaData->SetValue(NewProp_CoplanarTolerance, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_CoplanarTolerance, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_CoplanarTolerance, TEXT("ToolTip"), TEXT("The tolerance level used when gathering BSP surfaces."));
			MetaData->SetValue(NewProp_bGatherBSPSurfacesAcrossComponents, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bGatherBSPSurfacesAcrossComponents, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bGatherBSPSurfacesAcrossComponents, TEXT("ToolTip"), TEXT("If true, BSP surfaces split across model components are joined into 1 mapping"));
			MetaData->SetValue(NewProp_bStatsEnabled, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bStatsEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bStatsEnabled, TEXT("ToolTip"), TEXT("If true, all participating Lightmass agents will report back detailed stats to the log."));
			MetaData->SetValue(NewProp_bDebugMode, TEXT("Category"), TEXT("LightmassDebugOptions"));
			MetaData->SetValue(NewProp_bDebugMode, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bDebugMode, TEXT("ToolTip"), TEXT("If false, UnrealLightmass.exe is launched automatically (default)\nIf true, it must be launched manually (e.g. through a debugger) with the -debug command line parameter."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightmassDebugOptions_CRC() { return 3349593828U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightmassPrimitiveSettings()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightmassPrimitiveSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("LightmassPrimitiveSettings"), sizeof(FLightmassPrimitiveSettings), Get_Z_Construct_UScriptStruct_FLightmassPrimitiveSettings_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightmassPrimitiveSettings"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLightmassPrimitiveSettings>, EStructFlags(0x00000001));
			UProperty* NewProp_FullyOccludedSamplesFraction = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("FullyOccludedSamplesFraction"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(FullyOccludedSamplesFraction, FLightmassPrimitiveSettings), 0x0010000000000005);
			UProperty* NewProp_DiffuseBoost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("DiffuseBoost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(DiffuseBoost, FLightmassPrimitiveSettings), 0x0010000000000005);
			UProperty* NewProp_EmissiveBoost = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EmissiveBoost"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EmissiveBoost, FLightmassPrimitiveSettings), 0x0010000000000000);
			UProperty* NewProp_EmissiveLightExplicitInfluenceRadius = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EmissiveLightExplicitInfluenceRadius"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EmissiveLightExplicitInfluenceRadius, FLightmassPrimitiveSettings), 0x0010000000000000);
			UProperty* NewProp_EmissiveLightFalloffExponent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EmissiveLightFalloffExponent"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(EmissiveLightFalloffExponent, FLightmassPrimitiveSettings), 0x0010000000000000);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseVertexNormalForHemisphereGather, FLightmassPrimitiveSettings, uint8);
			UProperty* NewProp_bUseVertexNormalForHemisphereGather = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseVertexNormalForHemisphereGather"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseVertexNormalForHemisphereGather, FLightmassPrimitiveSettings), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bUseVertexNormalForHemisphereGather, FLightmassPrimitiveSettings), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseEmissiveForStaticLighting, FLightmassPrimitiveSettings, uint8);
			UProperty* NewProp_bUseEmissiveForStaticLighting = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseEmissiveForStaticLighting"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseEmissiveForStaticLighting, FLightmassPrimitiveSettings), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bUseEmissiveForStaticLighting, FLightmassPrimitiveSettings), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bShadowIndirectOnly, FLightmassPrimitiveSettings, uint8);
			UProperty* NewProp_bShadowIndirectOnly = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bShadowIndirectOnly"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bShadowIndirectOnly, FLightmassPrimitiveSettings), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bShadowIndirectOnly, FLightmassPrimitiveSettings), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseTwoSidedLighting, FLightmassPrimitiveSettings, uint8);
			UProperty* NewProp_bUseTwoSidedLighting = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseTwoSidedLighting"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseTwoSidedLighting, FLightmassPrimitiveSettings), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bUseTwoSidedLighting, FLightmassPrimitiveSettings), sizeof(uint8), false);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Per-object settings for Lightmass"));
			MetaData->SetValue(NewProp_FullyOccludedSamplesFraction, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_FullyOccludedSamplesFraction, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_FullyOccludedSamplesFraction, TEXT("ToolTip"), TEXT("Fraction of samples taken that must be occluded in order to reach full occlusion."));
			MetaData->SetValue(NewProp_DiffuseBoost, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_DiffuseBoost, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_DiffuseBoost, TEXT("ToolTip"), TEXT("Scales the diffuse contribution of all materials applied to this object."));
			MetaData->SetValue(NewProp_EmissiveBoost, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EmissiveBoost, TEXT("ToolTip"), TEXT("Scales the emissive contribution of all materials applied to this object."));
			MetaData->SetValue(NewProp_EmissiveLightExplicitInfluenceRadius, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EmissiveLightExplicitInfluenceRadius, TEXT("ToolTip"), TEXT("Direct lighting influence radius.\nThe default is 0, which means the influence radius should be automatically generated based on the emissive light brightness.\nValues greater than 0 override the automatic method."));
			MetaData->SetValue(NewProp_EmissiveLightFalloffExponent, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EmissiveLightFalloffExponent, TEXT("ToolTip"), TEXT("Direct lighting falloff exponent for mesh area lights created from emissive areas on this primitive."));
			MetaData->SetValue(NewProp_bUseVertexNormalForHemisphereGather, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_bUseVertexNormalForHemisphereGather, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseVertexNormalForHemisphereGather, TEXT("ToolTip"), TEXT("Typically the triangle normal is used for hemisphere gathering which prevents incorrect self-shadowing from artist-tweaked vertex normals.\nHowever in the case of foliage whose vertex normal has been setup to match the underlying terrain, gathering in the direction of the vertex normal is desired."));
			MetaData->SetValue(NewProp_bUseEmissiveForStaticLighting, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_bUseEmissiveForStaticLighting, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseEmissiveForStaticLighting, TEXT("ToolTip"), TEXT("If true, allow using the emissive for static lighting."));
			MetaData->SetValue(NewProp_bShadowIndirectOnly, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_bShadowIndirectOnly, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bShadowIndirectOnly, TEXT("ToolTip"), TEXT("If true, this object will only shadow indirect lighting."));
			MetaData->SetValue(NewProp_bUseTwoSidedLighting, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_bUseTwoSidedLighting, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseTwoSidedLighting, TEXT("ToolTip"), TEXT("If true, this object will be lit as if it receives light from both sides of its polygons."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightmassPrimitiveSettings_CRC() { return 953733773U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightmassDirectionalLightSettings()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightmassDirectionalLightSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("LightmassDirectionalLightSettings"), sizeof(FLightmassDirectionalLightSettings), Get_Z_Construct_UScriptStruct_FLightmassDirectionalLightSettings_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightmassDirectionalLightSettings"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FLightmassLightSettings(), new UScriptStruct::TCppStructOps<FLightmassDirectionalLightSettings>, EStructFlags(0x00000001));
			UProperty* NewProp_LightSourceAngle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LightSourceAngle"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LightSourceAngle, FLightmassDirectionalLightSettings), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Directional light settings for Lightmass"));
			MetaData->SetValue(NewProp_LightSourceAngle, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_LightSourceAngle, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LightSourceAngle, TEXT("ToolTip"), TEXT("Angle that the directional light's emissive surface extends relative to a receiver, affects penumbra sizes."));
			MetaData->SetValue(NewProp_LightSourceAngle, TEXT("UIMax"), TEXT("5"));
			MetaData->SetValue(NewProp_LightSourceAngle, TEXT("UIMin"), TEXT(".0001"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightmassDirectionalLightSettings_CRC() { return 2596134215U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightmassPointLightSettings()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightmassPointLightSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("LightmassPointLightSettings"), sizeof(FLightmassPointLightSettings), Get_Z_Construct_UScriptStruct_FLightmassPointLightSettings_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightmassPointLightSettings"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FLightmassLightSettings(), new UScriptStruct::TCppStructOps<FLightmassPointLightSettings>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Point/spot settings for Lightmass"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightmassPointLightSettings_CRC() { return 1439141495U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightmassLightSettings()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightmassLightSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("LightmassLightSettings"), sizeof(FLightmassLightSettings), Get_Z_Construct_UScriptStruct_FLightmassLightSettings_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightmassLightSettings"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLightmassLightSettings>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUseAreaShadowsForStationaryLight, FLightmassLightSettings, bool);
			UProperty* NewProp_bUseAreaShadowsForStationaryLight = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bUseAreaShadowsForStationaryLight"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUseAreaShadowsForStationaryLight, FLightmassLightSettings), 0x0010000000000005, CPP_BOOL_PROPERTY_BITMASK(bUseAreaShadowsForStationaryLight, FLightmassLightSettings), sizeof(bool), true);
			UProperty* NewProp_ShadowExponent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ShadowExponent"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ShadowExponent, FLightmassLightSettings), 0x0010000000000005);
			UProperty* NewProp_IndirectLightingSaturation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("IndirectLightingSaturation"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(IndirectLightingSaturation, FLightmassLightSettings), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Per-light settings for Lightmass"));
			MetaData->SetValue(NewProp_bUseAreaShadowsForStationaryLight, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_bUseAreaShadowsForStationaryLight, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bUseAreaShadowsForStationaryLight, TEXT("ToolTip"), TEXT("Whether to use area shadows for stationary light precomputed shadowmaps.\nArea shadows get softer the further they are from shadow casters, but require higher lightmap resolution to get the same quality where the shadow is sharp."));
			MetaData->SetValue(NewProp_ShadowExponent, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_ShadowExponent, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ShadowExponent, TEXT("ToolTip"), TEXT("Controls the falloff of shadow penumbras"));
			MetaData->SetValue(NewProp_ShadowExponent, TEXT("UIMax"), TEXT("4.0"));
			MetaData->SetValue(NewProp_ShadowExponent, TEXT("UIMin"), TEXT("0.1"));
			MetaData->SetValue(NewProp_IndirectLightingSaturation, TEXT("Category"), TEXT("Lightmass"));
			MetaData->SetValue(NewProp_IndirectLightingSaturation, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_IndirectLightingSaturation, TEXT("ToolTip"), TEXT("0 will be completely desaturated, 1 will be unchanged"));
			MetaData->SetValue(NewProp_IndirectLightingSaturation, TEXT("UIMax"), TEXT("4.0"));
			MetaData->SetValue(NewProp_IndirectLightingSaturation, TEXT("UIMin"), TEXT("0.0"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightmassLightSettings_CRC() { return 3558977146U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLocalizedSubtitle()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FLocalizedSubtitle_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("LocalizedSubtitle"), sizeof(FLocalizedSubtitle), Get_Z_Construct_UScriptStruct_FLocalizedSubtitle_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LocalizedSubtitle"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLocalizedSubtitle>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bSingleLine, FLocalizedSubtitle, uint8);
			UProperty* NewProp_bSingleLine = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bSingleLine"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bSingleLine, FLocalizedSubtitle), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bSingleLine, FLocalizedSubtitle), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bManualWordWrap, FLocalizedSubtitle, uint8);
			UProperty* NewProp_bManualWordWrap = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bManualWordWrap"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bManualWordWrap, FLocalizedSubtitle), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bManualWordWrap, FLocalizedSubtitle), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bMature, FLocalizedSubtitle, uint8);
			UProperty* NewProp_bMature = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bMature"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bMature, FLocalizedSubtitle), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bMature, FLocalizedSubtitle), sizeof(uint8), false);
			UProperty* NewProp_Subtitles = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Subtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Subtitles, FLocalizedSubtitle), 0x0010000000000000);
			UProperty* NewProp_Subtitles_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Subtitles, TEXT("Subtitles"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSubtitleCue());
			UProperty* NewProp_LanguageExt = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LanguageExt"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(LanguageExt, FLocalizedSubtitle), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A subtitle localized to a specific language."));
			MetaData->SetValue(NewProp_bSingleLine, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bSingleLine, TEXT("ToolTip"), TEXT("true if the subtitles should be displayed one line at a time."));
			MetaData->SetValue(NewProp_bManualWordWrap, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bManualWordWrap, TEXT("ToolTip"), TEXT("true if the subtitles have been split manually."));
			MetaData->SetValue(NewProp_bMature, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bMature, TEXT("ToolTip"), TEXT("true if this sound is considered to contain mature content."));
			MetaData->SetValue(NewProp_Subtitles, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Subtitles, TEXT("ToolTip"), TEXT("Subtitle cues.  If empty, use SoundNodeWave's SpokenText as the subtitle.  Will often be empty,\nas the contents of the subtitle is commonly identical to what is spoken."));
			MetaData->SetValue(NewProp_LanguageExt, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LanguageExt, TEXT("ToolTip"), TEXT("The 3-letter language for this subtitle"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLocalizedSubtitle_CRC() { return 3677364334U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSubtitleCue()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FSubtitleCue_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SubtitleCue"), sizeof(FSubtitleCue), Get_Z_Construct_UScriptStruct_FSubtitleCue_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SubtitleCue"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSubtitleCue>, EStructFlags(0x00000001));
			UProperty* NewProp_Time = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Time"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(Time, FSubtitleCue), 0x0010000000000005);
			UProperty* NewProp_Text = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Text"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(Text, FSubtitleCue), 0x0010000000000005);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("A line of subtitle text and the time at which it should be displayed."));
			MetaData->SetValue(NewProp_Time, TEXT("Category"), TEXT("SubtitleCue"));
			MetaData->SetValue(NewProp_Time, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Time, TEXT("ToolTip"), TEXT("The time at which the subtitle is to be displayed, in seconds relative to the beginning of the line."));
			MetaData->SetValue(NewProp_Text, TEXT("Category"), TEXT("SubtitleCue"));
			MetaData->SetValue(NewProp_Text, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Text, TEXT("ToolTip"), TEXT("The text to appear in the subtitle."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSubtitleCue_CRC() { return 579684276U; }
	UScriptStruct* Z_Construct_UScriptStruct_FBasedPosition()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FBasedPosition_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("BasedPosition"), sizeof(FBasedPosition), Get_Z_Construct_UScriptStruct_FBasedPosition_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("BasedPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FBasedPosition>, EStructFlags(0x00000201));
			UProperty* NewProp_CachedTransPosition = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CachedTransPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CachedTransPosition, FBasedPosition), 0x0010000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_CachedBaseRotation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CachedBaseRotation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CachedBaseRotation, FBasedPosition), 0x0010000000000000, Z_Construct_UScriptStruct_FRotator());
			UProperty* NewProp_CachedBaseLocation = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("CachedBaseLocation"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(CachedBaseLocation, FBasedPosition), 0x0010000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Position = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Position"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Position, FBasedPosition), 0x0010000000000005, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_Base = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Base"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Base, FBasedPosition), 0x0010000000000005, Z_Construct_UClass_AActor_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct for handling positions relative to a base actor, which is potentially moving"));
			MetaData->SetValue(NewProp_CachedTransPosition, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_CachedBaseRotation, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_CachedBaseLocation, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Position, TEXT("Category"), TEXT("BasedPosition"));
			MetaData->SetValue(NewProp_Position, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Base, TEXT("Category"), TEXT("BasedPosition"));
			MetaData->SetValue(NewProp_Base, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FBasedPosition_CRC() { return 92874092U; }
	UScriptStruct* Z_Construct_UScriptStruct_FFractureEffect()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FFractureEffect_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("FractureEffect"), sizeof(FFractureEffect), Get_Z_Construct_UScriptStruct_FFractureEffect_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("FractureEffect"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FFractureEffect>, EStructFlags(0x00000001));
			UProperty* NewProp_Sound = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Sound"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Sound, FFractureEffect), 0x0010000000000005, Z_Construct_UClass_USoundBase_NoRegister());
			UProperty* NewProp_ParticleSystem = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ParticleSystem"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ParticleSystem, FFractureEffect), 0x0010000000000005, Z_Construct_UClass_UParticleSystem_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct used to hold effects for destructible damage events"));
			MetaData->SetValue(NewProp_Sound, TEXT("Category"), TEXT("FractureEffect"));
			MetaData->SetValue(NewProp_Sound, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Sound, TEXT("ToolTip"), TEXT("Sound cue to play at fracture location."));
			MetaData->SetValue(NewProp_ParticleSystem, TEXT("Category"), TEXT("FractureEffect"));
			MetaData->SetValue(NewProp_ParticleSystem, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ParticleSystem, TEXT("ToolTip"), TEXT("Particle system effect to play at fracture location."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FFractureEffect_CRC() { return 3171182933U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCollisionImpactData()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FCollisionImpactData_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("CollisionImpactData"), sizeof(FCollisionImpactData), Get_Z_Construct_UScriptStruct_FCollisionImpactData_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CollisionImpactData"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCollisionImpactData>, EStructFlags(0x00000001));
			UProperty* NewProp_TotalFrictionImpulse = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TotalFrictionImpulse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TotalFrictionImpulse, FCollisionImpactData), 0x0010000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_TotalNormalImpulse = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TotalNormalImpulse"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(TotalNormalImpulse, FCollisionImpactData), 0x0010000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_ContactInfos = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ContactInfos"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ContactInfos, FCollisionImpactData), 0x0010000000000000);
			UProperty* NewProp_ContactInfos_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ContactInfos, TEXT("ContactInfos"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FRigidBodyContactInfo());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Information about an overall collision, including contacts."));
			MetaData->SetValue(NewProp_TotalFrictionImpulse, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_TotalFrictionImpulse, TEXT("ToolTip"), TEXT("the total counterimpulse applied of the two objects sliding against each other"));
			MetaData->SetValue(NewProp_TotalNormalImpulse, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_TotalNormalImpulse, TEXT("ToolTip"), TEXT("the total impulse applied as the two objects push against each other"));
			MetaData->SetValue(NewProp_ContactInfos, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ContactInfos, TEXT("ToolTip"), TEXT("all the contact points in the collision"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCollisionImpactData_CRC() { return 3152493243U; }
	UScriptStruct* Z_Construct_UScriptStruct_FRigidBodyContactInfo()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FRigidBodyContactInfo_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("RigidBodyContactInfo"), sizeof(FRigidBodyContactInfo), Get_Z_Construct_UScriptStruct_FRigidBodyContactInfo_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RigidBodyContactInfo"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FRigidBodyContactInfo>, EStructFlags(0x00000001));
			UProperty* NewProp_PhysMaterial = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PhysMaterial"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PhysMaterial, FRigidBodyContactInfo), 0x0010000000000000, Z_Construct_UClass_UPhysicalMaterial_NoRegister());
			NewProp_PhysMaterial->ArrayDim = CPP_ARRAY_DIM(PhysMaterial, FRigidBodyContactInfo);
			UProperty* NewProp_ContactPenetration = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ContactPenetration"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(ContactPenetration, FRigidBodyContactInfo), 0x0010000000000000);
			UProperty* NewProp_ContactNormal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ContactNormal"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ContactNormal, FRigidBodyContactInfo), 0x0010000000000000, Z_Construct_UScriptStruct_FVector());
			UProperty* NewProp_ContactPosition = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("ContactPosition"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(ContactPosition, FRigidBodyContactInfo), 0x0010000000000000, Z_Construct_UScriptStruct_FVector());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Information about one contact between a pair of rigid bodies."));
			MetaData->SetValue(NewProp_PhysMaterial, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ContactPenetration, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ContactNormal, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_ContactPosition, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FRigidBodyContactInfo_CRC() { return 1195179656U; }
	UScriptStruct* Z_Construct_UScriptStruct_FRigidBodyErrorCorrection()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FRigidBodyErrorCorrection_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("RigidBodyErrorCorrection"), sizeof(FRigidBodyErrorCorrection), Get_Z_Construct_UScriptStruct_FRigidBodyErrorCorrection_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RigidBodyErrorCorrection"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FRigidBodyErrorCorrection>, EStructFlags(0x00000001));
			UProperty* NewProp_BodySpeedThresholdSq = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("BodySpeedThresholdSq"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(BodySpeedThresholdSq, FRigidBodyErrorCorrection), 0x0010000000000000);
			UProperty* NewProp_AngularRecipFixTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AngularRecipFixTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AngularRecipFixTime, FRigidBodyErrorCorrection), 0x0010000000000000);
			UProperty* NewProp_AngularInterpAlpha = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AngularInterpAlpha"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AngularInterpAlpha, FRigidBodyErrorCorrection), 0x0010000000000000);
			UProperty* NewProp_AngularDeltaThreshold = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AngularDeltaThreshold"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(AngularDeltaThreshold, FRigidBodyErrorCorrection), 0x0010000000000000);
			UProperty* NewProp_LinearRecipFixTime = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LinearRecipFixTime"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LinearRecipFixTime, FRigidBodyErrorCorrection), 0x0010000000000000);
			UProperty* NewProp_LinearInterpAlpha = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LinearInterpAlpha"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LinearInterpAlpha, FRigidBodyErrorCorrection), 0x0010000000000000);
			UProperty* NewProp_LinearDeltaThresholdSq = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LinearDeltaThresholdSq"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(LinearDeltaThresholdSq, FRigidBodyErrorCorrection), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Rigid body error correction data"));
			MetaData->SetValue(NewProp_BodySpeedThresholdSq, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_BodySpeedThresholdSq, TEXT("ToolTip"), TEXT("min squared body speed to perform velocity adjustment"));
			MetaData->SetValue(NewProp_AngularRecipFixTime, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_AngularRecipFixTime, TEXT("ToolTip"), TEXT("inverted duration after which angular velocity adjustment will fix error"));
			MetaData->SetValue(NewProp_AngularInterpAlpha, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_AngularInterpAlpha, TEXT("ToolTip"), TEXT("strength of snapping to desired angular velocity"));
			MetaData->SetValue(NewProp_AngularDeltaThreshold, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_AngularDeltaThreshold, TEXT("ToolTip"), TEXT("max squared angle difference (in radians) to perform velocity adjustment"));
			MetaData->SetValue(NewProp_LinearRecipFixTime, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LinearRecipFixTime, TEXT("ToolTip"), TEXT("inverted duration after which linear velocity adjustment will fix error"));
			MetaData->SetValue(NewProp_LinearInterpAlpha, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LinearInterpAlpha, TEXT("ToolTip"), TEXT("strength of snapping to desired linear velocity"));
			MetaData->SetValue(NewProp_LinearDeltaThresholdSq, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LinearDeltaThresholdSq, TEXT("ToolTip"), TEXT("max squared position difference to perform velocity adjustment"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FRigidBodyErrorCorrection_CRC() { return 4047323699U; }
	UScriptStruct* Z_Construct_UScriptStruct_FRigidBodyState()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FRigidBodyState_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("RigidBodyState"), sizeof(FRigidBodyState), Get_Z_Construct_UScriptStruct_FRigidBodyState_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("RigidBodyState"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FRigidBodyState>, EStructFlags(0x00000001));
			UProperty* NewProp_Flags = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Flags"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Flags, FRigidBodyState), 0x0010000000000000);
			UProperty* NewProp_AngVel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("AngVel"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(AngVel, FRigidBodyState), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantize100());
			UProperty* NewProp_LinVel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LinVel"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(LinVel, FRigidBodyState), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantize100());
			UProperty* NewProp_Quaternion = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Quaternion"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Quaternion, FRigidBodyState), 0x0010000000000000, Z_Construct_UScriptStruct_FQuat());
			UProperty* NewProp_Position = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Position"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(Position, FRigidBodyState), 0x0010000000000000, Z_Construct_UScriptStruct_FVector_NetQuantize100());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Describes the physical state of a rigid body."));
			MetaData->SetValue(NewProp_Flags, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_AngVel, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_LinVel, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Quaternion, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Position, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FRigidBodyState_CRC() { return 87980534U; }
	UScriptStruct* Z_Construct_UScriptStruct_FCollisionResponseContainer()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FCollisionResponseContainer_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("CollisionResponseContainer"), sizeof(FCollisionResponseContainer), Get_Z_Construct_UScriptStruct_FCollisionResponseContainer_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("CollisionResponseContainer"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FCollisionResponseContainer>, EStructFlags(0x00000201));
			UProperty* NewProp_GameTraceChannel18 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel18"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel18, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel17 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel17"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel17, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel16 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel16"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel16, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel15 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel15"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel15, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel14 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel14"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel14, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel13 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel13"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel13, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel12 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel12"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel12, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel11 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel11"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel11, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel10 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel10"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel10, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel9 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel9"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel9, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel8 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel8"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel8, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel7 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel7"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel7, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel6 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel6"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel6, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel5 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel5"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel5, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel4 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel4"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel4, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel3 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel3"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel3, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel2 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel2"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel2, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_GameTraceChannel1 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("GameTraceChannel1"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(GameTraceChannel1, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_EngineTraceChannel6 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EngineTraceChannel6"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EngineTraceChannel6, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_EngineTraceChannel5 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EngineTraceChannel5"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EngineTraceChannel5, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_EngineTraceChannel4 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EngineTraceChannel4"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EngineTraceChannel4, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_EngineTraceChannel3 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EngineTraceChannel3"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EngineTraceChannel3, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_EngineTraceChannel2 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EngineTraceChannel2"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EngineTraceChannel2, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_EngineTraceChannel1 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EngineTraceChannel1"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EngineTraceChannel1, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_Destructible = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Destructible"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Destructible, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_Vehicle = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Vehicle"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Vehicle, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_PhysicsBody = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PhysicsBody"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(PhysicsBody, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_Camera = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Camera"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Camera, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_Visibility = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Visibility"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Visibility, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_Pawn = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Pawn"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Pawn, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_WorldDynamic = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WorldDynamic"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(WorldDynamic, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_WorldStatic = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("WorldStatic"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(WorldStatic, FCollisionResponseContainer), 0x0010000000000015, Z_Construct_UEnum_Engine_ECollisionResponse());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Container for indicating a set of collision channels that this object will collide with."));
			MetaData->SetValue(NewProp_GameTraceChannel18, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel18, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel18, TEXT("ToolTip"), TEXT("30"));
			MetaData->SetValue(NewProp_GameTraceChannel17, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel17, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel17, TEXT("ToolTip"), TEXT("28"));
			MetaData->SetValue(NewProp_GameTraceChannel16, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel16, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel16, TEXT("ToolTip"), TEXT("28"));
			MetaData->SetValue(NewProp_GameTraceChannel15, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel15, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel15, TEXT("ToolTip"), TEXT("27"));
			MetaData->SetValue(NewProp_GameTraceChannel14, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel14, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel14, TEXT("ToolTip"), TEXT("26"));
			MetaData->SetValue(NewProp_GameTraceChannel13, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel13, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel13, TEXT("ToolTip"), TEXT("25"));
			MetaData->SetValue(NewProp_GameTraceChannel12, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel12, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel12, TEXT("ToolTip"), TEXT("24"));
			MetaData->SetValue(NewProp_GameTraceChannel11, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel11, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel11, TEXT("ToolTip"), TEXT("23"));
			MetaData->SetValue(NewProp_GameTraceChannel10, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel10, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel10, TEXT("ToolTip"), TEXT("22"));
			MetaData->SetValue(NewProp_GameTraceChannel9, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel9, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel9, TEXT("ToolTip"), TEXT("21"));
			MetaData->SetValue(NewProp_GameTraceChannel8, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel8, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel8, TEXT("ToolTip"), TEXT("20"));
			MetaData->SetValue(NewProp_GameTraceChannel7, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel7, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel7, TEXT("ToolTip"), TEXT("19"));
			MetaData->SetValue(NewProp_GameTraceChannel6, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel6, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel6, TEXT("ToolTip"), TEXT("18"));
			MetaData->SetValue(NewProp_GameTraceChannel5, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel5, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel5, TEXT("ToolTip"), TEXT("17"));
			MetaData->SetValue(NewProp_GameTraceChannel4, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel4, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel4, TEXT("ToolTip"), TEXT("16"));
			MetaData->SetValue(NewProp_GameTraceChannel3, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel3, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel3, TEXT("ToolTip"), TEXT("15"));
			MetaData->SetValue(NewProp_GameTraceChannel2, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel2, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel2, TEXT("ToolTip"), TEXT("14"));
			MetaData->SetValue(NewProp_GameTraceChannel1, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_GameTraceChannel1, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_GameTraceChannel1, TEXT("ToolTip"), TEXT("in order to use this custom channels\nwe recommend to define in your local file\n- i.e. #define COLLISION_WEAPON               ECC_GameTraceChannel1\nand make sure you customize these it in INI file by\n\nin DefaultEngine.ini\n\n[/Script/Engine.CollisionProfile]\nGameTraceChannel1=\"Weapon\"\n\nalso in the INI file, you can override collision profiles that are defined by simply redefining\nnote that Weapon isn't defined in the BaseEngine.ini file, but \"Trigger\" is defined in Engine\n+Profiles=(Name=\"Trigger\",CollisionEnabled=QueryOnly,ObjectTypeName=WorldDynamic, DefaultResponse=ECR_Overlap, CustomResponses=((Channel=Visibility, Response=ECR_Ignore), (Channel=Weapon, Response=ECR_Ignore)))"));
			MetaData->SetValue(NewProp_EngineTraceChannel6, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_EngineTraceChannel6, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EngineTraceChannel6, TEXT("ToolTip"), TEXT("12"));
			MetaData->SetValue(NewProp_EngineTraceChannel5, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_EngineTraceChannel5, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EngineTraceChannel5, TEXT("ToolTip"), TEXT("11"));
			MetaData->SetValue(NewProp_EngineTraceChannel4, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_EngineTraceChannel4, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EngineTraceChannel4, TEXT("ToolTip"), TEXT("10"));
			MetaData->SetValue(NewProp_EngineTraceChannel3, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_EngineTraceChannel3, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EngineTraceChannel3, TEXT("ToolTip"), TEXT("9"));
			MetaData->SetValue(NewProp_EngineTraceChannel2, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_EngineTraceChannel2, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EngineTraceChannel2, TEXT("ToolTip"), TEXT("8"));
			MetaData->SetValue(NewProp_EngineTraceChannel1, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_EngineTraceChannel1, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_EngineTraceChannel1, TEXT("ToolTip"), TEXT("Unspecified Engine Trace Channels"));
			MetaData->SetValue(NewProp_Destructible, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_Destructible, TEXT("DisplayName"), TEXT("Destructible"));
			MetaData->SetValue(NewProp_Destructible, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Destructible, TEXT("ToolTip"), TEXT("6"));
			MetaData->SetValue(NewProp_Vehicle, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_Vehicle, TEXT("DisplayName"), TEXT("Vehicle"));
			MetaData->SetValue(NewProp_Vehicle, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Vehicle, TEXT("ToolTip"), TEXT("5"));
			MetaData->SetValue(NewProp_PhysicsBody, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_PhysicsBody, TEXT("DisplayName"), TEXT("PhysicsBody"));
			MetaData->SetValue(NewProp_PhysicsBody, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_PhysicsBody, TEXT("ToolTip"), TEXT("4"));
			MetaData->SetValue(NewProp_Camera, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_Camera, TEXT("DisplayName"), TEXT("Camera"));
			MetaData->SetValue(NewProp_Camera, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Camera, TEXT("ToolTip"), TEXT("3"));
			MetaData->SetValue(NewProp_Visibility, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_Visibility, TEXT("DisplayName"), TEXT("Visibility"));
			MetaData->SetValue(NewProp_Visibility, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Visibility, TEXT("ToolTip"), TEXT("2"));
			MetaData->SetValue(NewProp_Pawn, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_Pawn, TEXT("DisplayName"), TEXT("Pawn"));
			MetaData->SetValue(NewProp_Pawn, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Pawn, TEXT("ToolTip"), TEXT("1."));
			MetaData->SetValue(NewProp_WorldDynamic, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_WorldDynamic, TEXT("DisplayName"), TEXT("WorldDynamic"));
			MetaData->SetValue(NewProp_WorldDynamic, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_WorldDynamic, TEXT("ToolTip"), TEXT("0"));
			MetaData->SetValue(NewProp_WorldStatic, TEXT("Category"), TEXT("CollisionResponseContainer"));
			MetaData->SetValue(NewProp_WorldStatic, TEXT("DisplayName"), TEXT("WorldStatic"));
			MetaData->SetValue(NewProp_WorldStatic, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_WorldStatic, TEXT("ToolTip"), TEXT("Reserved Engine Trace Channels\n\nNote -        If you change this (add/remove/modify)\n                      you should make sure it matches with ECollisionChannel (including DisplayName)\n                      They has to be mirrored if serialized"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FCollisionResponseContainer_CRC() { return 1777601387U; }
	UScriptStruct* Z_Construct_UScriptStruct_FResponseChannel()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FResponseChannel_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("ResponseChannel"), sizeof(FResponseChannel), Get_Z_Construct_UScriptStruct_FResponseChannel_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ResponseChannel"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FResponseChannel>, EStructFlags(0x00000001));
			UProperty* NewProp_Response = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Response"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Response, FResponseChannel), 0x0010000000000001, Z_Construct_UEnum_Engine_ECollisionResponse());
			UProperty* NewProp_Channel = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Channel"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Channel, FResponseChannel), 0x0010000000000001);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Response, TEXT("Category"), TEXT("FResponseChannel"));
			MetaData->SetValue(NewProp_Response, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Channel, TEXT("Category"), TEXT("FResponseChannel"));
			MetaData->SetValue(NewProp_Channel, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_Channel, TEXT("ToolTip"), TEXT("This should match DisplayName of ECollisionChannel\n    Meta data of custom channels can be used as well"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FResponseChannel_CRC() { return 4246797771U; }
	UScriptStruct* Z_Construct_UScriptStruct_FLightingChannels()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FLightingChannels_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("LightingChannels"), sizeof(FLightingChannels), Get_Z_Construct_UScriptStruct_FLightingChannels_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("LightingChannels"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FLightingChannels>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bChannel2, FLightingChannels, bool);
			UProperty* NewProp_bChannel2 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bChannel2"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bChannel2, FLightingChannels), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bChannel2, FLightingChannels), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bChannel1, FLightingChannels, bool);
			UProperty* NewProp_bChannel1 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bChannel1"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bChannel1, FLightingChannels), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bChannel1, FLightingChannels), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bChannel0, FLightingChannels, bool);
			UProperty* NewProp_bChannel0 = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bChannel0"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bChannel0, FLightingChannels), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bChannel0, FLightingChannels), sizeof(bool), true);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bChannel2, TEXT("Category"), TEXT("Channels"));
			MetaData->SetValue(NewProp_bChannel2, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bChannel1, TEXT("Category"), TEXT("Channels"));
			MetaData->SetValue(NewProp_bChannel1, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bChannel0, TEXT("Category"), TEXT("Channels"));
			MetaData->SetValue(NewProp_bChannel0, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
			MetaData->SetValue(NewProp_bChannel0, TEXT("ToolTip"), TEXT("Default channel for all primitives and lights."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FLightingChannels_CRC() { return 105957383U; }
	UClass* Z_Construct_UClass_UEngineTypes_NoRegister()
	{
		return UEngineTypes::StaticClass();
	}
	UClass* Z_Construct_UClass_UEngineTypes()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_Engine();
			OuterClass = UEngineTypes::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100081;


				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Engine/EngineTypes.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineTypes.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEngineTypes(Z_Construct_UClass_UEngineTypes, &UEngineTypes::StaticClass, TEXT("UEngineTypes"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEngineTypes);
	UEnum* Z_Construct_UEnum_Engine_EViewModeIndex()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EViewModeIndex_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EViewModeIndex"), 0, Get_Z_Construct_UEnum_Engine_EViewModeIndex_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EViewModeIndex"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_BrushWireframe")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_Wireframe")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_Unlit")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_Lit")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_Lit_DetailLighting")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_LightingOnly")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_LightComplexity")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_ShaderComplexity")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_LightmapDensity")), 9));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_LitLightmapDensity")), 10));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_ReflectionOverride")), 11));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_VisualizeBuffer")), 12));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_StationaryLightOverlap")), 14));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_CollisionPawn")), 15));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_CollisionVisibility")), 16));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_LODColoration")), 18));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_QuadOverdraw")), 19));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_PrimitiveDistanceAccuracy")), 20));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_MeshUVDensityAccuracy")), 21));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_ShaderComplexityWithQuadOverdraw")), 22));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_HLODColoration")), 23));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_GroupLODColoration")), 24));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_MaterialTextureScaleAccuracy")), 25));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_RequiredTextureResolution")), 26));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_Max")), 27));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("VMI_Unknown")), 255));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EViewModeIndex");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Define view modes to get specific show flag settings (some on, some off and some are not altered)\nDon't change the order, the ID is serialized with the editor"));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_BrushWireframe.ToolTip"), TEXT("Wireframe w/ brushes."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_GroupLODColoration.ToolTip"), TEXT("Group item for LOD and HLOD coloration"));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_HLODColoration.ToolTip"), TEXT("Colored according to the current HLOD index."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_LightComplexity.ToolTip"), TEXT("Colored according to light count."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_LightingOnly.ToolTip"), TEXT("Lit wo/ materials."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_LightmapDensity.ToolTip"), TEXT("Colored according to world-space LightMap texture density."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_Lit.ToolTip"), TEXT("Lit."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_LitLightmapDensity.ToolTip"), TEXT("Colored according to light count - showing lightmap texel density on texture mapped objects."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_LODColoration.ToolTip"), TEXT("Colored according to the current LOD index."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_MaterialTextureScaleAccuracy.ToolTip"), TEXT("Visualize the accuracy of the material texture scales used for texture streaming."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_Max.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_MeshUVDensityAccuracy.ToolTip"), TEXT("Visualize the accuracy of the mesh UV densities computed for texture streaming."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_PrimitiveDistanceAccuracy.ToolTip"), TEXT("Visualize the accuracy of the primitive distance computed for texture streaming."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_QuadOverdraw.ToolTip"), TEXT("Colored according to the quad coverage."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_RequiredTextureResolution.ToolTip"), TEXT("Compare the required texture resolution to the actual resolution."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_ShaderComplexity.ToolTip"), TEXT("Colored according to shader complexity."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_ShaderComplexityWithQuadOverdraw.ToolTip"), TEXT("Colored according to shader complexity, including quad overdraw."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_StationaryLightOverlap.ToolTip"), TEXT("Colored according to stationary light overlap."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_Unknown.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_Unlit.ToolTip"), TEXT("Unlit."));
			MetaData->SetValue(ReturnEnum, TEXT("VMI_Wireframe.ToolTip"), TEXT("Wireframe w/ BSP."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EViewModeIndex_CRC() { return 2227615515U; }
	UEnum* Z_Construct_UEnum_Engine_EDemoPlayFailure()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EDemoPlayFailure_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EDemoPlayFailure"), 0, Get_Z_Construct_UEnum_Engine_EDemoPlayFailure_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EDemoPlayFailure"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EDemoPlayFailure::Generic")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EDemoPlayFailure::DemoNotFound")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EDemoPlayFailure::Corrupt")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EDemoPlayFailure::InvalidVersion")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EDemoPlayFailure::EDemoPlayFailure_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("EDemoPlayFailure::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("Corrupt.ToolTip"), TEXT("Demo is corrupt."));
			MetaData->SetValue(ReturnEnum, TEXT("DemoNotFound.ToolTip"), TEXT("Demo was not found."));
			MetaData->SetValue(ReturnEnum, TEXT("Generic.ToolTip"), TEXT("A Generic failure."));
			MetaData->SetValue(ReturnEnum, TEXT("InvalidVersion.ToolTip"), TEXT("Invalid version."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Types of demo play failures broadcast from the engine"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EDemoPlayFailure_CRC() { return 2722404739U; }
	UEnum* Z_Construct_UEnum_Engine_ETravelType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETravelType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETravelType"), 0, Get_Z_Construct_UEnum_Engine_ETravelType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETravelType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRAVEL_Absolute")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRAVEL_Partial")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRAVEL_Relative")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TRAVEL_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ETravelType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Traveling from server to server."));
			MetaData->SetValue(ReturnEnum, TEXT("TRAVEL_Absolute.ToolTip"), TEXT("Absolute URL."));
			MetaData->SetValue(ReturnEnum, TEXT("TRAVEL_Partial.ToolTip"), TEXT("Partial (carry name, reset server)."));
			MetaData->SetValue(ReturnEnum, TEXT("TRAVEL_Relative.ToolTip"), TEXT("Relative URL."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETravelType_CRC() { return 1560195852U; }
	UEnum* Z_Construct_UEnum_Engine_ETravelFailure()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETravelFailure_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETravelFailure"), 0, Get_Z_Construct_UEnum_Engine_ETravelFailure_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETravelFailure"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::NoLevel")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::LoadMapFailure")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::InvalidURL")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::PackageMissing")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::PackageVersion")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::NoDownload")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::TravelFailure")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::CheatCommands")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::PendingNetGameCreateFailure")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::CloudSaveFailure")), 9));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::ServerTravelFailure")), 10));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::ClientTravelFailure")), 11));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ETravelFailure::ETravelFailure_MAX")), 12));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ETravelFailure::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("CheatCommands.ToolTip"), TEXT("Cheat commands have been used disabling travel"));
			MetaData->SetValue(ReturnEnum, TEXT("ClientTravelFailure.ToolTip"), TEXT("There was an error during a client travel to a new map"));
			MetaData->SetValue(ReturnEnum, TEXT("CloudSaveFailure.ToolTip"), TEXT("Failed to save before travel"));
			MetaData->SetValue(ReturnEnum, TEXT("InvalidURL.ToolTip"), TEXT("Invalid URL specified"));
			MetaData->SetValue(ReturnEnum, TEXT("LoadMapFailure.ToolTip"), TEXT("LoadMap failed on travel (about to Browse to default map)"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NoDownload.ToolTip"), TEXT("A package is missing and the client is unable to download the file"));
			MetaData->SetValue(ReturnEnum, TEXT("NoLevel.ToolTip"), TEXT("No level found in the loaded package"));
			MetaData->SetValue(ReturnEnum, TEXT("PackageMissing.ToolTip"), TEXT("A package is missing on the client"));
			MetaData->SetValue(ReturnEnum, TEXT("PackageVersion.ToolTip"), TEXT("A package version mismatch has occurred between client and server"));
			MetaData->SetValue(ReturnEnum, TEXT("PendingNetGameCreateFailure.ToolTip"), TEXT("Failed to create the pending net game for travel"));
			MetaData->SetValue(ReturnEnum, TEXT("ServerTravelFailure.ToolTip"), TEXT("There was an error during a server travel to a new map"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Types of server travel failures broadcast by the engine"));
			MetaData->SetValue(ReturnEnum, TEXT("TravelFailure.ToolTip"), TEXT("General travel failure"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETravelFailure_CRC() { return 752224722U; }
	UEnum* Z_Construct_UEnum_Engine_ENetworkLagState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ENetworkLagState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENetworkLagState"), 0, Get_Z_Construct_UEnum_Engine_ENetworkLagState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENetworkLagState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkLagState::NotLagging")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkLagState::Lagging")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkLagState::ENetworkLagState_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ENetworkLagState::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Lagging.ToolTip"), TEXT("The net driver is in the process of timing out all of the client connections"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NotLagging.ToolTip"), TEXT("The net driver is operating normally or it is not possible to tell if it is lagging"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ENetworkLagState_CRC() { return 1672459230U; }
	UEnum* Z_Construct_UEnum_Engine_ENetworkFailure()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ENetworkFailure_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENetworkFailure"), 0, Get_Z_Construct_UEnum_Engine_ENetworkFailure_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENetworkFailure"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::NetDriverAlreadyExists")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::NetDriverCreateFailure")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::NetDriverListenFailure")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::ConnectionLost")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::ConnectionTimeout")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::FailureReceived")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::OutdatedClient")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::OutdatedServer")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::PendingConnectionFailure")), 8));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::NetGuidMismatch")), 9));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::NetChecksumMismatch")), 10));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENetworkFailure::ENetworkFailure_MAX")), 11));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ENetworkFailure::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ConnectionLost.ToolTip"), TEXT("A connection to the net driver has been lost"));
			MetaData->SetValue(ReturnEnum, TEXT("ConnectionTimeout.ToolTip"), TEXT("A connection to the net driver has timed out"));
			MetaData->SetValue(ReturnEnum, TEXT("FailureReceived.ToolTip"), TEXT("The net driver received an NMT_Failure message"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NetChecksumMismatch.ToolTip"), TEXT("Network checksum mismatch"));
			MetaData->SetValue(ReturnEnum, TEXT("NetDriverAlreadyExists.ToolTip"), TEXT("A relevant net driver has already been created for this service"));
			MetaData->SetValue(ReturnEnum, TEXT("NetDriverCreateFailure.ToolTip"), TEXT("The net driver creation failed"));
			MetaData->SetValue(ReturnEnum, TEXT("NetDriverListenFailure.ToolTip"), TEXT("The net driver failed its Listen() call"));
			MetaData->SetValue(ReturnEnum, TEXT("NetGuidMismatch.ToolTip"), TEXT("NetGuid mismatch"));
			MetaData->SetValue(ReturnEnum, TEXT("OutdatedClient.ToolTip"), TEXT("The client needs to upgrade their game"));
			MetaData->SetValue(ReturnEnum, TEXT("OutdatedServer.ToolTip"), TEXT("The server needs to upgrade their game"));
			MetaData->SetValue(ReturnEnum, TEXT("PendingConnectionFailure.ToolTip"), TEXT("There was an error during connection to the game"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Types of network failures broadcast from the engine"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ENetworkFailure_CRC() { return 3990384153U; }
	UEnum* Z_Construct_UEnum_Engine_ETickingGroup()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ETickingGroup_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ETickingGroup"), 0, Get_Z_Construct_UEnum_Engine_ETickingGroup_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ETickingGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TG_PrePhysics")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TG_StartPhysics")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TG_DuringPhysics")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TG_EndPhysics")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TG_PostPhysics")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TG_PostUpdateWork")), 5));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TG_LastDemotable")), 6));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TG_NewlySpawned")), 7));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("TG_MAX")), 8));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("ETickingGroup");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BlueprintType"), TEXT("true"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("TG_DuringPhysics.DisplayName"), TEXT("During Physics"));
			MetaData->SetValue(ReturnEnum, TEXT("TG_DuringPhysics.ToolTip"), TEXT("Any item that can be run in parallel with our physics simulation work."));
			MetaData->SetValue(ReturnEnum, TEXT("TG_EndPhysics.DisplayName"), TEXT("End Physics"));
			MetaData->SetValue(ReturnEnum, TEXT("TG_EndPhysics.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TG_EndPhysics.ToolTip"), TEXT("Special tick group that ends physics simulation."));
			MetaData->SetValue(ReturnEnum, TEXT("TG_LastDemotable.DisplayName"), TEXT("Last Demotable"));
			MetaData->SetValue(ReturnEnum, TEXT("TG_LastDemotable.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TG_LastDemotable.ToolTip"), TEXT("Catchall for anything demoted to the end."));
			MetaData->SetValue(ReturnEnum, TEXT("TG_NewlySpawned.DisplayName"), TEXT("Newly Spawned"));
			MetaData->SetValue(ReturnEnum, TEXT("TG_NewlySpawned.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TG_NewlySpawned.ToolTip"), TEXT("Special tick group that is not actually a tick group. After every tick group this is repeatedly re-run until there are no more newly spawned items to run."));
			MetaData->SetValue(ReturnEnum, TEXT("TG_PostPhysics.DisplayName"), TEXT("Post Physics"));
			MetaData->SetValue(ReturnEnum, TEXT("TG_PostPhysics.ToolTip"), TEXT("Any item that needs rigid body and cloth simulation to be complete before being executed."));
			MetaData->SetValue(ReturnEnum, TEXT("TG_PostUpdateWork.DisplayName"), TEXT("Post Update Work"));
			MetaData->SetValue(ReturnEnum, TEXT("TG_PostUpdateWork.ToolTip"), TEXT("Any item that needs the update work to be done before being ticked."));
			MetaData->SetValue(ReturnEnum, TEXT("TG_PrePhysics.DisplayName"), TEXT("Pre Physics"));
			MetaData->SetValue(ReturnEnum, TEXT("TG_PrePhysics.ToolTip"), TEXT("Any item that needs to be executed before physics simulation starts."));
			MetaData->SetValue(ReturnEnum, TEXT("TG_StartPhysics.DisplayName"), TEXT("Start Physics"));
			MetaData->SetValue(ReturnEnum, TEXT("TG_StartPhysics.Hidden"), TEXT(""));
			MetaData->SetValue(ReturnEnum, TEXT("TG_StartPhysics.ToolTip"), TEXT("Special tick group that starts physics simulation."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Determines which ticking group a tick function belongs to."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ETickingGroup_CRC() { return 187644691U; }
	UEnum* Z_Construct_UEnum_Engine_EMouseLockMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EMouseLockMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMouseLockMode"), 0, Get_Z_Construct_UEnum_Engine_EMouseLockMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMouseLockMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseLockMode::DoNotLock")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseLockMode::LockOnCapture")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseLockMode::LockAlways")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseLockMode::EMouseLockMode_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EMouseLockMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("DoNotLock.ToolTip"), TEXT("Do not lock the mouse cursor to the viewport"));
			MetaData->SetValue(ReturnEnum, TEXT("LockAlways.ToolTip"), TEXT("Always lock the mouse cursor to the viewport"));
			MetaData->SetValue(ReturnEnum, TEXT("LockOnCapture.ToolTip"), TEXT("Only lock the mouse cursor to the viewport when the mouse is captured"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EMouseLockMode_CRC() { return 1623315837U; }
	UEnum* Z_Construct_UEnum_Engine_EMouseCaptureMode()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EMouseCaptureMode_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EMouseCaptureMode"), 0, Get_Z_Construct_UEnum_Engine_EMouseCaptureMode_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EMouseCaptureMode"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseCaptureMode::NoCapture")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseCaptureMode::CapturePermanently")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseCaptureMode::CapturePermanently_IncludingInitialMouseDown")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseCaptureMode::CaptureDuringMouseDown")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseCaptureMode::CaptureDuringRightMouseDown")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EMouseCaptureMode::EMouseCaptureMode_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EMouseCaptureMode");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("CaptureDuringMouseDown.ToolTip"), TEXT("Capture the mouse during a mouse down, releases on mouse up"));
			MetaData->SetValue(ReturnEnum, TEXT("CaptureDuringRightMouseDown.ToolTip"), TEXT("Capture only when the right mouse button is down, not any of the other mouse buttons"));
			MetaData->SetValue(ReturnEnum, TEXT("CapturePermanently.ToolTip"), TEXT("Capture the mouse permanently when the viewport is clicked, and consume the initial mouse down that caused the capture so it isn't processed by player input"));
			MetaData->SetValue(ReturnEnum, TEXT("CapturePermanently_IncludingInitialMouseDown.ToolTip"), TEXT("Capture the mouse permanently when the viewport is clicked, and allow player input to process the mouse down that caused the capture"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NoCapture.ToolTip"), TEXT("Do not capture the mouse at all"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EMouseCaptureMode_CRC() { return 4136559368U; }
	UEnum* Z_Construct_UEnum_Engine_EInputEvent()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EInputEvent_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EInputEvent"), 0, Get_Z_Construct_UEnum_Engine_EInputEvent_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EInputEvent"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("IE_Pressed")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("IE_Released")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("IE_Repeat")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("IE_DoubleClick")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("IE_Axis")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("IE_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EInputEvent");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("EInputEvent"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EInputEvent_CRC() { return 2430095431U; }
	UScriptStruct* Z_Construct_UScriptStruct_FExposureSettings()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FExposureSettings_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("ExposureSettings"), sizeof(FExposureSettings), Get_Z_Construct_UScriptStruct_FExposureSettings_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ExposureSettings"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FExposureSettings>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bFixed, FExposureSettings, bool);
			UProperty* NewProp_bFixed = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bFixed"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bFixed, FExposureSettings), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bFixed, FExposureSettings), sizeof(bool), true);
			UProperty* NewProp_LogOffset = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("LogOffset"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(LogOffset, FExposureSettings), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Settings to allow designers to override the automatic expose"));
			MetaData->SetValue(NewProp_bFixed, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_bFixed, TEXT("ToolTip"), TEXT("true: fixed exposure using the LogOffset value, false: automatic eye adaptation"));
			MetaData->SetValue(NewProp_LogOffset, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_LogOffset, TEXT("ToolTip"), TEXT("usually -4:/16 darker .. +4:16x brighter"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FExposureSettings_CRC() { return 2807802432U; }
	UScriptStruct* Z_Construct_UScriptStruct_FURL()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FURL_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("URL"), sizeof(FURL), Get_Z_Construct_UScriptStruct_FURL_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("URL"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FURL>, EStructFlags(0x00000201));
			UProperty* NewProp_Valid = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Valid"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Valid, FURL), 0x0010000000000000);
			UProperty* NewProp_Portal = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Portal"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Portal, FURL), 0x0010000000000000);
			UProperty* NewProp_Op = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Op"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(Op, FURL), 0x0010000000000000);
			UProperty* NewProp_Op_Inner = new(EC_InternalUseOnlyConstructor, NewProp_Op, TEXT("Op"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
			UProperty* NewProp_RedirectURL = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("RedirectURL"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(RedirectURL, FURL), 0x0010000000000000);
			UProperty* NewProp_Map = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Map"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Map, FURL), 0x0010000000000000);
			UProperty* NewProp_Port = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Port"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(Port, FURL), 0x0010000000000000);
			UProperty* NewProp_Host = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Host"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Host, FURL), 0x0010000000000000);
			UProperty* NewProp_Protocol = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("Protocol"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(Protocol, FURL), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("URL structure."));
			MetaData->SetValue(NewProp_Valid, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_Portal, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_Portal, TEXT("ToolTip"), TEXT("Portal to enter through, default is \"\"."));
			MetaData->SetValue(NewProp_Op, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_Op, TEXT("ToolTip"), TEXT("Options."));
			MetaData->SetValue(NewProp_RedirectURL, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_RedirectURL, TEXT("ToolTip"), TEXT("Optional place to download Map if client does not possess it"));
			MetaData->SetValue(NewProp_Map, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_Map, TEXT("ToolTip"), TEXT("Map name, i.e. \"SkyCity\", default is \"Entry\"."));
			MetaData->SetValue(NewProp_Port, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_Port, TEXT("ToolTip"), TEXT("Optional host port."));
			MetaData->SetValue(NewProp_Host, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_Host, TEXT("ToolTip"), TEXT("Optional hostname, i.e. \"204.157.115.40\" or \"unreal.epicgames.com\", blank if local."));
			MetaData->SetValue(NewProp_Protocol, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_Protocol, TEXT("ToolTip"), TEXT("Protocol, i.e. \"unreal\" or \"http\"."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FURL_CRC() { return 2677030328U; }
	UScriptStruct* Z_Construct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("PrimitiveComponentPostPhysicsTickFunction"), sizeof(FPrimitiveComponentPostPhysicsTickFunction), Get_Z_Construct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("PrimitiveComponentPostPhysicsTickFunction"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FTickFunction(), new UScriptStruct::TCppStructOps<FPrimitiveComponentPostPhysicsTickFunction>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Tick function that calls UPrimitiveComponent::PostPhysicsTick\n//DEPRECATED: This struct has been deprecated. Please use your own tick functions if you need something other than the primary tick function"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FPrimitiveComponentPostPhysicsTickFunction_CRC() { return 200388697U; }
	UScriptStruct* Z_Construct_UScriptStruct_FActorComponentTickFunction()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FActorComponentTickFunction_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("ActorComponentTickFunction"), sizeof(FActorComponentTickFunction), Get_Z_Construct_UScriptStruct_FActorComponentTickFunction_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActorComponentTickFunction"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FTickFunction(), new UScriptStruct::TCppStructOps<FActorComponentTickFunction>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Tick function that calls UActorComponent::ConditionalTick"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FActorComponentTickFunction_CRC() { return 723286098U; }
	UScriptStruct* Z_Construct_UScriptStruct_FActorTickFunction()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FActorTickFunction_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("ActorTickFunction"), sizeof(FActorTickFunction), Get_Z_Construct_UScriptStruct_FActorTickFunction_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActorTickFunction"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), Z_Construct_UScriptStruct_FTickFunction(), new UScriptStruct::TCppStructOps<FActorTickFunction>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Tick function that calls AActor::TickActor"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FActorTickFunction_CRC() { return 2243749316U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTickFunction()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FTickFunction_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("TickFunction"), sizeof(FTickFunction), Get_Z_Construct_UScriptStruct_FTickFunction_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TickFunction"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTickFunction>, EStructFlags(0x00000201));
			UProperty* NewProp_TickInterval = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TickInterval"), RF_Public|RF_Transient|RF_MarkAsNative) UFloatProperty(CPP_PROPERTY_BASE(TickInterval, FTickFunction), 0x0010000000010001);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAllowTickOnDedicatedServer, FTickFunction, uint8);
			UProperty* NewProp_bAllowTickOnDedicatedServer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bAllowTickOnDedicatedServer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAllowTickOnDedicatedServer, FTickFunction), 0x0010040000010001, CPP_BOOL_PROPERTY_BITMASK(bAllowTickOnDedicatedServer, FTickFunction), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bStartWithTickEnabled, FTickFunction, uint8);
			UProperty* NewProp_bStartWithTickEnabled = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bStartWithTickEnabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bStartWithTickEnabled, FTickFunction), 0x0010000000010001, CPP_BOOL_PROPERTY_BITMASK(bStartWithTickEnabled, FTickFunction), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanEverTick, FTickFunction, uint8);
			UProperty* NewProp_bCanEverTick = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bCanEverTick"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanEverTick, FTickFunction), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bCanEverTick, FTickFunction), sizeof(uint8), false);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bTickEvenWhenPaused, FTickFunction, uint8);
			UProperty* NewProp_bTickEvenWhenPaused = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bTickEvenWhenPaused"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bTickEvenWhenPaused, FTickFunction), 0x0010040000010001, CPP_BOOL_PROPERTY_BITMASK(bTickEvenWhenPaused, FTickFunction), sizeof(uint8), false);
			UProperty* NewProp_EndTickGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("EndTickGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(EndTickGroup, FTickFunction), 0x0010040000010001, Z_Construct_UEnum_Engine_ETickingGroup());
			UProperty* NewProp_TickGroup = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TickGroup"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(TickGroup, FTickFunction), 0x0010040000010001, Z_Construct_UEnum_Engine_ETickingGroup());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Abstract Base class for all tick functions."));
			MetaData->SetValue(NewProp_TickInterval, TEXT("Category"), TEXT("Tick"));
			MetaData->SetValue(NewProp_TickInterval, TEXT("DisplayName"), TEXT("Tick Interval (secs)"));
			MetaData->SetValue(NewProp_TickInterval, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_TickInterval, TEXT("ToolTip"), TEXT("The frequency in seconds at which this tick function will be executed.  If less than or equal to 0 then it will tick every frame"));
			MetaData->SetValue(NewProp_bAllowTickOnDedicatedServer, TEXT("Category"), TEXT("Tick"));
			MetaData->SetValue(NewProp_bAllowTickOnDedicatedServer, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_bAllowTickOnDedicatedServer, TEXT("ToolTip"), TEXT("If we allow this tick to run on a dedicated server"));
			MetaData->SetValue(NewProp_bStartWithTickEnabled, TEXT("Category"), TEXT("Tick"));
			MetaData->SetValue(NewProp_bStartWithTickEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_bStartWithTickEnabled, TEXT("ToolTip"), TEXT("If true, this tick function will start enabled, but can be disabled later on."));
			MetaData->SetValue(NewProp_bCanEverTick, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_bCanEverTick, TEXT("ToolTip"), TEXT("If false, this tick function will never be registered and will never tick. Only settable in defaults."));
			MetaData->SetValue(NewProp_bTickEvenWhenPaused, TEXT("Category"), TEXT("Tick"));
			MetaData->SetValue(NewProp_bTickEvenWhenPaused, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_bTickEvenWhenPaused, TEXT("ToolTip"), TEXT("Bool indicating that this function should execute even if the game is paused. Pause ticks are very limited in capabilities. *"));
			MetaData->SetValue(NewProp_EndTickGroup, TEXT("Category"), TEXT("Tick"));
			MetaData->SetValue(NewProp_EndTickGroup, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_EndTickGroup, TEXT("ToolTip"), TEXT("Defines the tick group that this tick function must finish in. These groups determine the relative order of when objects tick during a frame update.\n\n@see ETickingGroup"));
			MetaData->SetValue(NewProp_TickGroup, TEXT("Category"), TEXT("Tick"));
			MetaData->SetValue(NewProp_TickGroup, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(NewProp_TickGroup, TEXT("ToolTip"), TEXT("Defines the minimum tick group for this tick function. These groups determine the relative order of when objects tick during a frame update.\nGiven prerequisites, the tick may be delayed.\n\n@see ETickingGroup\n@see FTickFunction::AddPrerequisite()"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTickFunction_CRC() { return 616697183U; }
	UScriptStruct* Z_Construct_UScriptStruct_FTickPrerequisite()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FTickPrerequisite_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("TickPrerequisite"), sizeof(FTickPrerequisite), Get_Z_Construct_UScriptStruct_FTickPrerequisite_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("TickPrerequisite"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FTickPrerequisite>, EStructFlags(0x00000001));
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("This is small structure to hold prerequisite tick functions"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FTickPrerequisite_CRC() { return 606825919U; }
	UClass* Z_Construct_UClass_UEngineBaseTypes_NoRegister()
	{
		return UEngineBaseTypes::StaticClass();
	}
	UClass* Z_Construct_UClass_UEngineBaseTypes()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_Engine();
			OuterClass = UEngineBaseTypes::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20000081;


				OuterClass->ClassConfigName = FName(TEXT("Engine"));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Engine/EngineBaseTypes.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Engine/EngineBaseTypes.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEngineBaseTypes(Z_Construct_UClass_UEngineBaseTypes, &UEngineBaseTypes::StaticClass, TEXT("UEngineBaseTypes"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEngineBaseTypes);
	UEnum* Z_Construct_UEnum_Engine_ENodeEnabledState()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ENodeEnabledState_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENodeEnabledState"), 0, Get_Z_Construct_UEnum_Engine_ENodeEnabledState_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENodeEnabledState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeEnabledState::Enabled")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeEnabledState::Disabled")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeEnabledState::DevelopmentOnly")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeEnabledState::ENodeEnabledState_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("ENodeEnabledState");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("DevelopmentOnly.ToolTip"), TEXT("Node is enabled for development only."));
			MetaData->SetValue(ReturnEnum, TEXT("Disabled.ToolTip"), TEXT("Node is disabled."));
			MetaData->SetValue(ReturnEnum, TEXT("Enabled.ToolTip"), TEXT("Node is enabled."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum to indicate a node's enabled state."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ENodeEnabledState_CRC() { return 3909917848U; }
	UEnum* Z_Construct_UEnum_Engine_ENodeAdvancedPins()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ENodeAdvancedPins_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENodeAdvancedPins"), 0, Get_Z_Construct_UEnum_Engine_ENodeAdvancedPins_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENodeAdvancedPins"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeAdvancedPins::NoPins")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeAdvancedPins::Shown")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeAdvancedPins::Hidden")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeAdvancedPins::ENodeAdvancedPins_MAX")), 3));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ENodeAdvancedPins::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Hidden.ToolTip"), TEXT("There are some advanced pins, and they are hidden."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(ReturnEnum, TEXT("NoPins.ToolTip"), TEXT("No advanced pins."));
			MetaData->SetValue(ReturnEnum, TEXT("Shown.ToolTip"), TEXT("There are some advanced pins, and they are shown."));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum to indicate if a node has advanced-display-pins, and whether they are shown."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ENodeAdvancedPins_CRC() { return 2470969224U; }
	UEnum* Z_Construct_UEnum_Engine_ENodeTitleType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_ENodeTitleType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ENodeTitleType"), 0, Get_Z_Construct_UEnum_Engine_ENodeTitleType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ENodeTitleType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeTitleType::FullTitle")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeTitleType::ListView")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeTitleType::EditableTitle")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeTitleType::MenuTitle")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeTitleType::MAX_TitleTypes")), 4));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("ENodeTitleType::ENodeTitleType_MAX")), 5));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Namespaced);
			ReturnEnum->CppType = TEXT("ENodeTitleType::Type");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("EditableTitle.ToolTip"), TEXT("Returns the editable title (which might not be a title at all)."));
			MetaData->SetValue(ReturnEnum, TEXT("FullTitle.ToolTip"), TEXT("The full title, may be multiple lines."));
			MetaData->SetValue(ReturnEnum, TEXT("ListView.ToolTip"), TEXT("More concise, single line title."));
			MetaData->SetValue(ReturnEnum, TEXT("MenuTitle.ToolTip"), TEXT("Menu Title for context menus to be displayed in context menus referencing the node."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum to indicate what sort of title we want."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_ENodeTitleType_CRC() { return 1825043658U; }
	UEnum* Z_Construct_UEnum_Engine_EEdGraphPinDirection()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EEdGraphPinDirection_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EEdGraphPinDirection"), 0, Get_Z_Construct_UEnum_Engine_EEdGraphPinDirection_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EEdGraphPinDirection"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGPD_Input")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGPD_Output")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EGPD_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EEdGraphPinDirection");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(ReturnEnum, TEXT("ToolTip"), TEXT("Enum used to define which way data flows into or out of this pin."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EEdGraphPinDirection_CRC() { return 3682542905U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEdGraphTerminalType()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FEdGraphTerminalType_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("EdGraphTerminalType"), sizeof(FEdGraphTerminalType), Get_Z_Construct_UScriptStruct_FEdGraphTerminalType_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EdGraphTerminalType"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEdGraphTerminalType>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bTerminalIsWeakPointer, FEdGraphTerminalType, bool);
			UProperty* NewProp_bTerminalIsWeakPointer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bTerminalIsWeakPointer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bTerminalIsWeakPointer, FEdGraphTerminalType), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bTerminalIsWeakPointer, FEdGraphTerminalType), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bTerminalIsConst, FEdGraphTerminalType, bool);
			UProperty* NewProp_bTerminalIsConst = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bTerminalIsConst"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bTerminalIsConst, FEdGraphTerminalType), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bTerminalIsConst, FEdGraphTerminalType), sizeof(bool), true);
			UProperty* NewProp_TerminalSubCategoryObject = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TerminalSubCategoryObject"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(TerminalSubCategoryObject, FEdGraphTerminalType), 0x0014000000000000, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_TerminalSubCategory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TerminalSubCategory"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TerminalSubCategory, FEdGraphTerminalType), 0x0010000000000000);
			UProperty* NewProp_TerminalCategory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("TerminalCategory"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(TerminalCategory, FEdGraphTerminalType), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct used to define information for terminal types, e.g. types that can be contained\nby a container. Currently can represent strong/weak references to a type (only UObjects),\na structure, or a primitive. Support for \"Container of Containers\" is done by wrapping\na structure, rather than implicitly defining names for containers."));
			MetaData->SetValue(NewProp_bTerminalIsWeakPointer, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(NewProp_bTerminalIsWeakPointer, TEXT("ToolTip"), TEXT("Whether or not this is a weak reference"));
			MetaData->SetValue(NewProp_bTerminalIsConst, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(NewProp_bTerminalIsConst, TEXT("ToolTip"), TEXT("Whether or not this pin is a immutable const value"));
			MetaData->SetValue(NewProp_TerminalSubCategoryObject, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(NewProp_TerminalSubCategoryObject, TEXT("ToolTip"), TEXT("Sub-category object"));
			MetaData->SetValue(NewProp_TerminalSubCategory, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(NewProp_TerminalSubCategory, TEXT("ToolTip"), TEXT("Sub-category"));
			MetaData->SetValue(NewProp_TerminalCategory, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
			MetaData->SetValue(NewProp_TerminalCategory, TEXT("ToolTip"), TEXT("Category"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEdGraphTerminalType_CRC() { return 2001877326U; }
	UClass* Z_Construct_UClass_UEdGraphNode_NoRegister()
	{
		return UEdGraphNode::StaticClass();
	}
	UClass* Z_Construct_UClass_UEdGraphNode()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_Engine();
			OuterClass = UEdGraphNode::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20100080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsNodeEnabled_DEPRECATED, UEdGraphNode, bool);
				UProperty* NewProp_bIsNodeEnabled = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsNodeEnabled"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsNodeEnabled_DEPRECATED, UEdGraphNode), 0x0040000020000000, CPP_BOOL_PROPERTY_BITMASK(bIsNodeEnabled_DEPRECATED, UEdGraphNode), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bUserSetEnabledState, UEdGraphNode, bool);
				UProperty* NewProp_bUserSetEnabledState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bUserSetEnabledState"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bUserSetEnabledState, UEdGraphNode), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bUserSetEnabledState, UEdGraphNode), sizeof(bool), true);
				UProperty* NewProp_EnabledState = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("EnabledState"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(EnabledState, UEdGraphNode), 0x0010000000000000, Z_Construct_UEnum_Engine_ENodeEnabledState());
				UProperty* NewProp_EnabledState_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_EnabledState, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_AdvancedPinDisplay = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AdvancedPinDisplay"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(AdvancedPinDisplay, UEdGraphNode), 0x0010000000000000, Z_Construct_UEnum_Engine_ENodeAdvancedPins());
				UProperty* NewProp_NodeGuid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodeGuid"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(NodeGuid, UEdGraphNode), 0x0010000000000000, Z_Construct_UScriptStruct_FGuid());
				UProperty* NewProp_ErrorMsg = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ErrorMsg"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(ErrorMsg, UEdGraphNode), 0x0010000000000000);
				UProperty* NewProp_ErrorType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ErrorType"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(ErrorType, UEdGraphNode), 0x0010000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCommentBubbleVisible, UEdGraphNode, bool);
				UProperty* NewProp_bCommentBubbleVisible = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCommentBubbleVisible"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCommentBubbleVisible, UEdGraphNode), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bCommentBubbleVisible, UEdGraphNode), sizeof(bool), true);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCommentBubblePinned, UEdGraphNode, bool);
				UProperty* NewProp_bCommentBubblePinned = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCommentBubblePinned"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCommentBubblePinned, UEdGraphNode), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bCommentBubblePinned, UEdGraphNode), sizeof(bool), true);
				UProperty* NewProp_NodeComment = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodeComment"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(NodeComment, UEdGraphNode), 0x0010000000000000);
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_NodeUpgradeMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodeUpgradeMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(NodeUpgradeMessage, UEdGraphNode), 0x0010000800002000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanRenameNode, UEdGraphNode, uint8);
				UProperty* NewProp_bCanRenameNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCanRenameNode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanRenameNode, UEdGraphNode), 0x0010000800000000, CPP_BOOL_PROPERTY_BITMASK(bCanRenameNode, UEdGraphNode), sizeof(uint8), false);
#endif // WITH_EDITORONLY_DATA
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHasCompilerMessage, UEdGraphNode, uint8);
				UProperty* NewProp_bHasCompilerMessage = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHasCompilerMessage"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHasCompilerMessage, UEdGraphNode), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bHasCompilerMessage, UEdGraphNode), sizeof(uint8), false);
#if WITH_EDITORONLY_DATA
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanResizeNode, UEdGraphNode, uint8);
				UProperty* NewProp_bCanResizeNode = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCanResizeNode"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanResizeNode, UEdGraphNode), 0x0010000800000000, CPP_BOOL_PROPERTY_BITMASK(bCanResizeNode, UEdGraphNode), sizeof(uint8), false);
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_NodeHeight = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodeHeight"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NodeHeight, UEdGraphNode), 0x0010000000000000);
				UProperty* NewProp_NodeWidth = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodeWidth"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NodeWidth, UEdGraphNode), 0x0010000000000000);
				UProperty* NewProp_NodePosY = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodePosY"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NodePosY, UEdGraphNode), 0x0010000000000000);
				UProperty* NewProp_NodePosX = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("NodePosX"), RF_Public|RF_Transient|RF_MarkAsNative) UIntProperty(CPP_PROPERTY_BASE(NodePosX, UEdGraphNode), 0x0010000000000000);
				UProperty* NewProp_DeprecatedPins = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DeprecatedPins"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(DeprecatedPins, UEdGraphNode), 0x0010000000000000);
				UProperty* NewProp_DeprecatedPins_Inner = new(EC_InternalUseOnlyConstructor, NewProp_DeprecatedPins, TEXT("DeprecatedPins"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UEdGraphPin_Deprecated_NoRegister());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EdGraph/EdGraphNode.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_bIsNodeEnabled, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_bIsNodeEnabled, TEXT("ToolTip"), TEXT("(DEPRECATED) FALSE if the node is a disabled, which eliminates it from being compiled"));
				MetaData->SetValue(NewProp_bUserSetEnabledState, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_bUserSetEnabledState, TEXT("ToolTip"), TEXT("Indicates whether or not the user explicitly set the enabled state"));
				MetaData->SetValue(NewProp_EnabledState, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_EnabledState, TEXT("ToolTip"), TEXT("Indicates in what state the node is enabled, which may eliminate it from being compiled"));
				MetaData->SetValue(NewProp_AdvancedPinDisplay, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_AdvancedPinDisplay, TEXT("ToolTip"), TEXT("Enum to indicate if a node has advanced-display-pins, and if they are shown"));
				MetaData->SetValue(NewProp_NodeGuid, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_NodeGuid, TEXT("ToolTip"), TEXT("GUID to uniquely identify this node, to facilitate diffing versions of this graph"));
				MetaData->SetValue(NewProp_ErrorMsg, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_ErrorMsg, TEXT("ToolTip"), TEXT("Error/Warning description"));
				MetaData->SetValue(NewProp_ErrorType, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_ErrorType, TEXT("ToolTip"), TEXT("Flag to store node specific compile error/warning"));
				MetaData->SetValue(NewProp_bCommentBubbleVisible, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_bCommentBubbleVisible, TEXT("ToolTip"), TEXT("Comment bubble visibility"));
				MetaData->SetValue(NewProp_bCommentBubblePinned, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_bCommentBubblePinned, TEXT("ToolTip"), TEXT("Comment bubble pinned state"));
				MetaData->SetValue(NewProp_NodeComment, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_NodeComment, TEXT("ToolTip"), TEXT("Comment string that is drawn on the node"));
				MetaData->SetValue(NewProp_NodeUpgradeMessage, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_NodeUpgradeMessage, TEXT("ToolTip"), TEXT("Note for a node that lingers until saved"));
				MetaData->SetValue(NewProp_bCanRenameNode, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_bCanRenameNode, TEXT("ToolTip"), TEXT("If true, this node can be renamed in the editor"));
				MetaData->SetValue(NewProp_bHasCompilerMessage, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_bHasCompilerMessage, TEXT("ToolTip"), TEXT("Flag to check for compile error/warning"));
				MetaData->SetValue(NewProp_bCanResizeNode, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_bCanResizeNode, TEXT("ToolTip"), TEXT("If true, this node can be resized and should be drawn with a resize handle"));
				MetaData->SetValue(NewProp_NodeHeight, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_NodeHeight, TEXT("ToolTip"), TEXT("Height of node in the editor; only used when the node can be resized"));
				MetaData->SetValue(NewProp_NodeWidth, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_NodeWidth, TEXT("ToolTip"), TEXT("Width of node in the editor; only used when the node can be resized"));
				MetaData->SetValue(NewProp_NodePosY, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_NodePosY, TEXT("ToolTip"), TEXT("Y position of node in the editor"));
				MetaData->SetValue(NewProp_NodePosX, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_NodePosX, TEXT("ToolTip"), TEXT("X position of node in the editor"));
				MetaData->SetValue(NewProp_DeprecatedPins, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphNode.h"));
				MetaData->SetValue(NewProp_DeprecatedPins, TEXT("ToolTip"), TEXT("List of connector pins"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEdGraphNode(Z_Construct_UClass_UEdGraphNode, &UEdGraphNode::StaticClass, TEXT("UEdGraphNode"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEdGraphNode);
	UEnum* Z_Construct_UEnum_Engine_EBlueprintPinStyleType()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EBlueprintPinStyleType_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EBlueprintPinStyleType"), 0, Get_Z_Construct_UEnum_Engine_EBlueprintPinStyleType_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EBlueprintPinStyleType"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BPST_Original")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BPST_VariantA")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("BPST_MAX")), 2));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::Regular);
			ReturnEnum->CppType = TEXT("EBlueprintPinStyleType");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("BPST_Original.DisplayName"), TEXT("Circles, Grid, Diamond"));
			MetaData->SetValue(ReturnEnum, TEXT("BPST_VariantA.DisplayName"), TEXT("Directional Circles"));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EBlueprintPinStyleType_CRC() { return 335473079U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEdGraphPinReference()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FEdGraphPinReference_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("EdGraphPinReference"), sizeof(FEdGraphPinReference), Get_Z_Construct_UScriptStruct_FEdGraphPinReference_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EdGraphPinReference"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEdGraphPinReference>, EStructFlags(0x00000201));
			UProperty* NewProp_PinId = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PinId"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PinId, FEdGraphPinReference), 0x0040000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_OwningNode = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("OwningNode"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(OwningNode, FEdGraphPinReference), 0x0044000000000000, Z_Construct_UClass_UEdGraphNode_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_PinId, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_PinId, TEXT("ToolTip"), TEXT("The pin's unique ID. Updated at Set and Save time."));
			MetaData->SetValue(NewProp_OwningNode, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_OwningNode, TEXT("ToolTip"), TEXT("The node that owns the pin referred to by this struct. Updated at Set and Save time."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEdGraphPinReference_CRC() { return 2988065040U; }
	UScriptStruct* Z_Construct_UScriptStruct_FEdGraphPinType()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FEdGraphPinType_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("EdGraphPinType"), sizeof(FEdGraphPinType), Get_Z_Construct_UScriptStruct_FEdGraphPinType_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EdGraphPinType"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FEdGraphPinType>, EStructFlags(0x00000001));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsWeakPointer, FEdGraphPinType, bool);
			UProperty* NewProp_bIsWeakPointer = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsWeakPointer"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsWeakPointer, FEdGraphPinType), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsWeakPointer, FEdGraphPinType), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsConst, FEdGraphPinType, bool);
			UProperty* NewProp_bIsConst = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsConst"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsConst, FEdGraphPinType), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsConst, FEdGraphPinType), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsReference, FEdGraphPinType, bool);
			UProperty* NewProp_bIsReference = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsReference"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsReference, FEdGraphPinType), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsReference, FEdGraphPinType), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsArray, FEdGraphPinType, bool);
			UProperty* NewProp_bIsArray = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsArray"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsArray, FEdGraphPinType), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsArray, FEdGraphPinType), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsSet, FEdGraphPinType, bool);
			UProperty* NewProp_bIsSet = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsSet"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsSet, FEdGraphPinType), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsSet, FEdGraphPinType), sizeof(bool), true);
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsMap, FEdGraphPinType, bool);
			UProperty* NewProp_bIsMap = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("bIsMap"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsMap, FEdGraphPinType), 0x0010000000000000, CPP_BOOL_PROPERTY_BITMASK(bIsMap, FEdGraphPinType), sizeof(bool), true);
			UProperty* NewProp_PinValueType = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PinValueType"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PinValueType, FEdGraphPinType), 0x0010000000000000, Z_Construct_UScriptStruct_FEdGraphTerminalType());
			UProperty* NewProp_PinSubCategoryMemberReference = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PinSubCategoryMemberReference"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PinSubCategoryMemberReference, FEdGraphPinType), 0x0010000000000000, Z_Construct_UScriptStruct_FSimpleMemberReference());
			UProperty* NewProp_PinSubCategoryObject = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PinSubCategoryObject"), RF_Public|RF_Transient|RF_MarkAsNative) UWeakObjectProperty(CPP_PROPERTY_BASE(PinSubCategoryObject, FEdGraphPinType), 0x0014000000000000, Z_Construct_UClass_UObject_NoRegister());
			UProperty* NewProp_PinSubCategory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PinSubCategory"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PinSubCategory, FEdGraphPinType), 0x0010000000000000);
			UProperty* NewProp_PinCategory = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("PinCategory"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PinCategory, FEdGraphPinType), 0x0010000000000000);
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(ReturnStruct, TEXT("ToolTip"), TEXT("Struct used to define the type of information carried on this pin"));
			MetaData->SetValue(NewProp_bIsWeakPointer, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_bIsWeakPointer, TEXT("ToolTip"), TEXT("Whether or not this is a weak reference"));
			MetaData->SetValue(NewProp_bIsConst, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_bIsConst, TEXT("ToolTip"), TEXT("Whether or not this pin is a immutable const value"));
			MetaData->SetValue(NewProp_bIsReference, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_bIsReference, TEXT("ToolTip"), TEXT("Whether or not this pin is a value passed by reference or not"));
			MetaData->SetValue(NewProp_bIsArray, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_bIsArray, TEXT("ToolTip"), TEXT("Whether or not this pin represents an array of values"));
			MetaData->SetValue(NewProp_bIsSet, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_bIsSet, TEXT("ToolTip"), TEXT("Whether or not this pin represents a set of (unique) values"));
			MetaData->SetValue(NewProp_bIsMap, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_bIsMap, TEXT("ToolTip"), TEXT("Whether or not this pin represents a map of keys to values"));
			MetaData->SetValue(NewProp_PinValueType, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_PinValueType, TEXT("ToolTip"), TEXT("Data used to determine value types when bIsMap is true"));
			MetaData->SetValue(NewProp_PinSubCategoryMemberReference, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_PinSubCategoryMemberReference, TEXT("ToolTip"), TEXT("Sub-category member reference"));
			MetaData->SetValue(NewProp_PinSubCategoryObject, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_PinSubCategoryObject, TEXT("ToolTip"), TEXT("Sub-category object"));
			MetaData->SetValue(NewProp_PinSubCategory, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_PinSubCategory, TEXT("ToolTip"), TEXT("Sub-category of pin type"));
			MetaData->SetValue(NewProp_PinCategory, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_PinCategory, TEXT("ToolTip"), TEXT("Category of pin type"));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FEdGraphPinType_CRC() { return 788567131U; }
	UScriptStruct* Z_Construct_UScriptStruct_FSimpleMemberReference()
	{
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UScriptStruct_FSimpleMemberReference_CRC();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("SimpleMemberReference"), sizeof(FSimpleMemberReference), Get_Z_Construct_UScriptStruct_FSimpleMemberReference_CRC(), false);
		if (!ReturnStruct)
		{
			ReturnStruct = new(EC_InternalUseOnlyConstructor, Outer, TEXT("SimpleMemberReference"), RF_Public|RF_Transient|RF_MarkAsNative) UScriptStruct(FObjectInitializer(), NULL, new UScriptStruct::TCppStructOps<FSimpleMemberReference>, EStructFlags(0x00000001));
			UProperty* NewProp_MemberGuid = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MemberGuid"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(MemberGuid, FSimpleMemberReference), 0x0010000000000000, Z_Construct_UScriptStruct_FGuid());
			UProperty* NewProp_MemberName = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MemberName"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(MemberName, FSimpleMemberReference), 0x0010000000000000);
			UProperty* NewProp_MemberParent = new(EC_InternalUseOnlyConstructor, ReturnStruct, TEXT("MemberParent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(MemberParent, FSimpleMemberReference), 0x0010000000000000, Z_Construct_UClass_UObject_NoRegister());
			ReturnStruct->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnStruct->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnStruct, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_MemberGuid, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_MemberGuid, TEXT("ToolTip"), TEXT("The Guid of the member"));
			MetaData->SetValue(NewProp_MemberName, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_MemberName, TEXT("ToolTip"), TEXT("Name of the member"));
			MetaData->SetValue(NewProp_MemberParent, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
			MetaData->SetValue(NewProp_MemberParent, TEXT("ToolTip"), TEXT("Most often the Class that this member is defined in. Could be a UPackage\nif it is a native delegate signature function (declared globally)."));
#endif
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FSimpleMemberReference_CRC() { return 1932636899U; }
	UClass* Z_Construct_UClass_UEdGraphPin_Deprecated_NoRegister()
	{
		return UEdGraphPin_Deprecated::StaticClass();
	}
	UClass* Z_Construct_UClass_UEdGraphPin_Deprecated()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_Engine();
			OuterClass = UEdGraphPin_Deprecated::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20080080;


PRAGMA_DISABLE_DEPRECATION_WARNINGS
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_PersistentGuid = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PersistentGuid"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PersistentGuid, UEdGraphPin_Deprecated), 0x0010000800000000, Z_Construct_UScriptStruct_FGuid());
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDisplayAsMutableRef, UEdGraphPin_Deprecated, uint8);
				UProperty* NewProp_bDisplayAsMutableRef = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDisplayAsMutableRef"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDisplayAsMutableRef, UEdGraphPin_Deprecated), 0x0010000800002000, CPP_BOOL_PROPERTY_BITMASK(bDisplayAsMutableRef, UEdGraphPin_Deprecated), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAdvancedView, UEdGraphPin_Deprecated, uint8);
				UProperty* NewProp_bAdvancedView = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAdvancedView"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAdvancedView, UEdGraphPin_Deprecated), 0x0010000800000000, CPP_BOOL_PROPERTY_BITMASK(bAdvancedView, UEdGraphPin_Deprecated), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsDiffing, UEdGraphPin_Deprecated, uint8);
				UProperty* NewProp_bIsDiffing = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsDiffing"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsDiffing, UEdGraphPin_Deprecated), 0x0010000800002000, CPP_BOOL_PROPERTY_BITMASK(bIsDiffing, UEdGraphPin_Deprecated), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDefaultValueIsIgnored, UEdGraphPin_Deprecated, uint8);
				UProperty* NewProp_bDefaultValueIsIgnored = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDefaultValueIsIgnored"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDefaultValueIsIgnored, UEdGraphPin_Deprecated), 0x0010000800000000, CPP_BOOL_PROPERTY_BITMASK(bDefaultValueIsIgnored, UEdGraphPin_Deprecated), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bDefaultValueIsReadOnly, UEdGraphPin_Deprecated, uint8);
				UProperty* NewProp_bDefaultValueIsReadOnly = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bDefaultValueIsReadOnly"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bDefaultValueIsReadOnly, UEdGraphPin_Deprecated), 0x0010000800000000, CPP_BOOL_PROPERTY_BITMASK(bDefaultValueIsReadOnly, UEdGraphPin_Deprecated), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNotConnectable, UEdGraphPin_Deprecated, uint8);
				UProperty* NewProp_bNotConnectable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bNotConnectable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNotConnectable, UEdGraphPin_Deprecated), 0x0010000800000000, CPP_BOOL_PROPERTY_BITMASK(bNotConnectable, UEdGraphPin_Deprecated), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bHidden, UEdGraphPin_Deprecated, uint8);
				UProperty* NewProp_bHidden = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bHidden"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bHidden, UEdGraphPin_Deprecated), 0x0010000800000000, CPP_BOOL_PROPERTY_BITMASK(bHidden, UEdGraphPin_Deprecated), sizeof(uint8), false);
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_ReferencePassThroughConnection = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ReferencePassThroughConnection"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ReferencePassThroughConnection, UEdGraphPin_Deprecated), 0x0010000000000000, Z_Construct_UClass_UEdGraphPin_Deprecated_NoRegister());
				UProperty* NewProp_ParentPin = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ParentPin"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(ParentPin, UEdGraphPin_Deprecated), 0x0010000000000000, Z_Construct_UClass_UEdGraphPin_Deprecated_NoRegister());
				UProperty* NewProp_SubPins = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("SubPins"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(SubPins, UEdGraphPin_Deprecated), 0x0010000000000000);
				UProperty* NewProp_SubPins_Inner = new(EC_InternalUseOnlyConstructor, NewProp_SubPins, TEXT("SubPins"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UEdGraphPin_Deprecated_NoRegister());
				UProperty* NewProp_LinkedTo = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("LinkedTo"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(LinkedTo, UEdGraphPin_Deprecated), 0x0010000000000000);
				UProperty* NewProp_LinkedTo_Inner = new(EC_InternalUseOnlyConstructor, NewProp_LinkedTo, TEXT("LinkedTo"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UClass_UEdGraphPin_Deprecated_NoRegister());
				UProperty* NewProp_DefaultTextValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultTextValue"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(DefaultTextValue, UEdGraphPin_Deprecated), 0x0010000000000000);
				UProperty* NewProp_DefaultObject = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultObject"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(DefaultObject, UEdGraphPin_Deprecated), 0x0010000000000000, Z_Construct_UClass_UObject_NoRegister());
				UProperty* NewProp_AutogeneratedDefaultValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AutogeneratedDefaultValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(AutogeneratedDefaultValue, UEdGraphPin_Deprecated), 0x0010000000000000);
				UProperty* NewProp_DefaultValue = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("DefaultValue"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(DefaultValue, UEdGraphPin_Deprecated), 0x0010000000000000);
				UProperty* NewProp_PinType = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PinType"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PinType, UEdGraphPin_Deprecated), 0x0010000000000000, Z_Construct_UScriptStruct_FEdGraphPinType());
				UProperty* NewProp_Direction = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("Direction"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(CPP_PROPERTY_BASE(Direction, UEdGraphPin_Deprecated), 0x0010000000000000, Z_Construct_UEnum_Engine_EEdGraphPinDirection());
				UProperty* NewProp_PinToolTip = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PinToolTip"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PinToolTip, UEdGraphPin_Deprecated), 0x0010000000000000);
#if WITH_EDITORONLY_DATA
				UProperty* NewProp_PinFriendlyName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PinFriendlyName"), RF_Public|RF_Transient|RF_MarkAsNative) UTextProperty(CPP_PROPERTY_BASE(PinFriendlyName, UEdGraphPin_Deprecated), 0x0010000800000000);
#endif // WITH_EDITORONLY_DATA
				UProperty* NewProp_PinName = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PinName"), RF_Public|RF_Transient|RF_MarkAsNative) UStrProperty(CPP_PROPERTY_BASE(PinName, UEdGraphPin_Deprecated), 0x0010000000000000);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("EdGraph/EdGraphPin.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_PersistentGuid, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_PersistentGuid, TEXT("ToolTip"), TEXT("Pin name could be changed, so whenever possible it's good to have a persistent GUID identifying Pin to reconstruct Node seamlessly"));
				MetaData->SetValue(NewProp_bDisplayAsMutableRef, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_bDisplayAsMutableRef, TEXT("ToolTip"), TEXT("If true, the pin is displayed as ref"));
				MetaData->SetValue(NewProp_bAdvancedView, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_bAdvancedView, TEXT("ToolTip"), TEXT("If true, the pin may be hidden by user"));
				MetaData->SetValue(NewProp_bIsDiffing, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_bIsDiffing, TEXT("ToolTip"), TEXT("If true, this pin is the focus of a diff"));
				MetaData->SetValue(NewProp_bDefaultValueIsIgnored, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_bDefaultValueIsIgnored, TEXT("ToolTip"), TEXT("If true, the default value on this pin is ignored and should not be set"));
				MetaData->SetValue(NewProp_bDefaultValueIsReadOnly, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_bDefaultValueIsReadOnly, TEXT("ToolTip"), TEXT("If true, the default value of this connector is fixed and cannot be modified by the user (it's visible for reference only)"));
				MetaData->SetValue(NewProp_bNotConnectable, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_bNotConnectable, TEXT("ToolTip"), TEXT("If true, this connector is unconnectable, and present only to allow the editing of the default text."));
				MetaData->SetValue(NewProp_bHidden, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_bHidden, TEXT("ToolTip"), TEXT("If true, this connector is currently hidden."));
				MetaData->SetValue(NewProp_ReferencePassThroughConnection, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_ReferencePassThroughConnection, TEXT("ToolTip"), TEXT("Pin that this pin uses for passing through reference connection"));
				MetaData->SetValue(NewProp_ParentPin, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_ParentPin, TEXT("ToolTip"), TEXT("The pin that was split and generated this pin"));
				MetaData->SetValue(NewProp_SubPins, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_SubPins, TEXT("ToolTip"), TEXT("The pins created when a pin is split and hidden"));
				MetaData->SetValue(NewProp_LinkedTo, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_LinkedTo, TEXT("ToolTip"), TEXT("Set of pins that we are linked to"));
				MetaData->SetValue(NewProp_DefaultTextValue, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_DefaultTextValue, TEXT("ToolTip"), TEXT("If the default value for this pin should be an FText, it is stored here."));
				MetaData->SetValue(NewProp_DefaultObject, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_DefaultObject, TEXT("ToolTip"), TEXT("If the default value for this pin should be an object, we store a pointer to it"));
				MetaData->SetValue(NewProp_AutogeneratedDefaultValue, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_AutogeneratedDefaultValue, TEXT("ToolTip"), TEXT("Initial default value (the autogenerated value, to identify if the user has modified the value), stored as a string"));
				MetaData->SetValue(NewProp_DefaultValue, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_DefaultValue, TEXT("ToolTip"), TEXT("Default value for this pin (used if the pin has no connections), stored as a string"));
				MetaData->SetValue(NewProp_PinType, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_PinType, TEXT("ToolTip"), TEXT("The type of information carried on this pin"));
				MetaData->SetValue(NewProp_Direction, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_Direction, TEXT("ToolTip"), TEXT("Direction of flow of this pin (input or output)"));
				MetaData->SetValue(NewProp_PinToolTip, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_PinToolTip, TEXT("ToolTip"), TEXT("The tool-tip describing this pin's purpose"));
				MetaData->SetValue(NewProp_PinFriendlyName, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_PinFriendlyName, TEXT("ToolTip"), TEXT("Used as the display name if set"));
				MetaData->SetValue(NewProp_PinName, TEXT("ModuleRelativePath"), TEXT("Classes/EdGraph/EdGraphPin.h"));
				MetaData->SetValue(NewProp_PinName, TEXT("ToolTip"), TEXT("Name of this pin"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UEdGraphPin_Deprecated(Z_Construct_UClass_UEdGraphPin_Deprecated, &UEdGraphPin_Deprecated::StaticClass, TEXT("UEdGraphPin_Deprecated"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UEdGraphPin_Deprecated);
	UClass* Z_Construct_UClass_UInterface_AssetUserData_NoRegister()
	{
		return UInterface_AssetUserData::StaticClass();
	}
	UClass* Z_Construct_UClass_UInterface_AssetUserData()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			UInterface::StaticClass();
			Z_Construct_UPackage__Script_Engine();
			OuterClass = UInterface_AssetUserData::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20084081;


				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("CannotImplementInterfaceInBlueprint"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Interfaces/Interface_AssetUserData.h"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UInterface_AssetUserData(Z_Construct_UClass_UInterface_AssetUserData, &UInterface_AssetUserData::StaticClass, TEXT("UInterface_AssetUserData"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UInterface_AssetUserData);
	UFunction* Z_Construct_UDelegateFunction_Engine_ActorComponentDeactivateSignature__DelegateSignature()
	{
		struct _Script_Engine_eventActorComponentDeactivateSignature_Parms
		{
			UActorComponent* Component;
		};
		UObject* Outer=Z_Construct_UPackage__Script_Engine();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActorComponentDeactivateSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_Engine_eventActorComponentDeactivateSignature_Parms));
			UProperty* NewProp_Component = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Component"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Component, _Script_Engine_eventActorComponentDeactivateSignature_Parms), 0x0010000000080080, Z_Construct_UClass_UActorComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
			MetaData->SetValue(NewProp_Component, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UDelegateFunction_Engine_ActorComponentActivatedSignature__DelegateSignature()
	{
		struct _Script_Engine_eventActorComponentActivatedSignature_Parms
		{
			UActorComponent* Component;
			bool bReset;
		};
		UObject* Outer=Z_Construct_UPackage__Script_Engine();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ActorComponentActivatedSignature__DelegateSignature"), RF_Public|RF_Transient|RF_MarkAsNative) UDelegateFunction(FObjectInitializer(), NULL, 0x00130000, 65535, sizeof(_Script_Engine_eventActorComponentActivatedSignature_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bReset, _Script_Engine_eventActorComponentActivatedSignature_Parms, bool);
			UProperty* NewProp_bReset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bReset"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bReset, _Script_Engine_eventActorComponentActivatedSignature_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bReset, _Script_Engine_eventActorComponentActivatedSignature_Parms), sizeof(bool), true);
			UProperty* NewProp_Component = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Component"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(Component, _Script_Engine_eventActorComponentActivatedSignature_Parms), 0x0010000000080080, Z_Construct_UClass_UActorComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
			MetaData->SetValue(NewProp_Component, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UEnum* Z_Construct_UEnum_Engine_EComponentCreationMethod()
	{
		UPackage* Outer=Z_Construct_UPackage__Script_Engine();
		extern uint32 Get_Z_Construct_UEnum_Engine_EComponentCreationMethod_CRC();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EComponentCreationMethod"), 0, Get_Z_Construct_UEnum_Engine_EComponentCreationMethod_CRC(), false);
		if (!ReturnEnum)
		{
			ReturnEnum = new(EC_InternalUseOnlyConstructor, Outer, TEXT("EComponentCreationMethod"), RF_Public|RF_Transient|RF_MarkAsNative) UEnum(FObjectInitializer());
			TArray<TPair<FName, int64>> EnumNames;
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentCreationMethod::Native")), 0));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentCreationMethod::SimpleConstructionScript")), 1));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentCreationMethod::UserConstructionScript")), 2));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentCreationMethod::Instance")), 3));
			EnumNames.Add(TPairInitializer<FName, int64>(FName(TEXT("EComponentCreationMethod::EComponentCreationMethod_MAX")), 4));
			ReturnEnum->SetEnums(EnumNames, UEnum::ECppForm::EnumClass);
			ReturnEnum->CppType = TEXT("EComponentCreationMethod");
#if WITH_METADATA
			UMetaData* MetaData = ReturnEnum->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnEnum, TEXT("Instance.ToolTip"), TEXT("A component added to a single Actor instance via the Component section of the Actor's details panel."));
			MetaData->SetValue(ReturnEnum, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
			MetaData->SetValue(ReturnEnum, TEXT("Native.ToolTip"), TEXT("A component that is part of a native class."));
			MetaData->SetValue(ReturnEnum, TEXT("SimpleConstructionScript.ToolTip"), TEXT("A component that is created from a template defined in the Components section of the Blueprint."));
			MetaData->SetValue(ReturnEnum, TEXT("UserConstructionScript.ToolTip"), TEXT("A dynamically created component, either from the UserConstructionScript or from a Add Component node in a Blueprint event graph."));
#endif
		}
		return ReturnEnum;
	}
	uint32 Get_Z_Construct_UEnum_Engine_EComponentCreationMethod_CRC() { return 3724913642U; }
	UFunction* Z_Construct_UFunction_UActorComponent_Activate()
	{
		struct ActorComponent_eventActivate_Parms
		{
			bool bReset;
		};
		UObject* Outer=Z_Construct_UClass_UActorComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Activate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(ActorComponent_eventActivate_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(bReset, ActorComponent_eventActivate_Parms, bool);
			UProperty* NewProp_bReset = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("bReset"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bReset, ActorComponent_eventActivate_Parms), 0x0010000000000080, CPP_BOOL_PROPERTY_BITMASK(bReset, ActorComponent_eventActivate_Parms), sizeof(bool), true);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Components|Activation"));
			MetaData->SetValue(ReturnFunction, TEXT("CPP_Default_bReset"), TEXT("false"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Activates the SceneComponent\n@param bReset - The value to assign to HiddenGame."));
			MetaData->SetValue(ReturnFunction, TEXT("UnsafeDuringActorConstruction"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UActorComponent_AddTickPrerequisiteActor()
	{
		struct ActorComponent_eventAddTickPrerequisiteActor_Parms
		{
			AActor* PrerequisiteActor;
		};
		UObject* Outer=Z_Construct_UClass_UActorComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddTickPrerequisiteActor"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(ActorComponent_eventAddTickPrerequisiteActor_Parms));
			UProperty* NewProp_PrerequisiteActor = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PrerequisiteActor"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PrerequisiteActor, ActorComponent_eventAddTickPrerequisiteActor_Parms), 0x0010000000000080, Z_Construct_UClass_AActor_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Utilities"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("dependency"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Make this component tick after PrerequisiteActor"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UActorComponent_AddTickPrerequisiteComponent()
	{
		struct ActorComponent_eventAddTickPrerequisiteComponent_Parms
		{
			UActorComponent* PrerequisiteComponent;
		};
		UObject* Outer=Z_Construct_UClass_UActorComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("AddTickPrerequisiteComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535, sizeof(ActorComponent_eventAddTickPrerequisiteComponent_Parms));
			UProperty* NewProp_PrerequisiteComponent = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("PrerequisiteComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(CPP_PROPERTY_BASE(PrerequisiteComponent, ActorComponent_eventAddTickPrerequisiteComponent_Parms), 0x0010000000080080, Z_Construct_UClass_UActorComponent_NoRegister());
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Utilities"));
			MetaData->SetValue(ReturnFunction, TEXT("Keywords"), TEXT("dependency"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Make this component tick after PrerequisiteComponent."));
			MetaData->SetValue(NewProp_PrerequisiteComponent, TEXT("EditInline"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UActorComponent_ComponentHasTag()
	{
		struct ActorComponent_eventComponentHasTag_Parms
		{
			FName Tag;
			bool ReturnValue;
		};
		UObject* Outer=Z_Construct_UClass_UActorComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("ComponentHasTag"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x54020401, 65535, sizeof(ActorComponent_eventComponentHasTag_Parms));
			CPP_BOOL_PROPERTY_BITMASK_STRUCT(ReturnValue, ActorComponent_eventComponentHasTag_Parms, bool);
			UProperty* NewProp_ReturnValue = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("ReturnValue"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(ReturnValue, ActorComponent_eventComponentHasTag_Parms), 0x0010000000000580, CPP_BOOL_PROPERTY_BITMASK(ReturnValue, ActorComponent_eventComponentHasTag_Parms), sizeof(bool), true);
			UProperty* NewProp_Tag = new(EC_InternalUseOnlyConstructor, ReturnFunction, TEXT("Tag"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(CPP_PROPERTY_BASE(Tag, ActorComponent_eventComponentHasTag_Parms), 0x0010000000000080);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Components"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("See if this component contains the supplied tag"));
#endif
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UActorComponent_Deactivate()
	{
		UObject* Outer=Z_Construct_UClass_UActorComponent();
		static UFunction* ReturnFunction = NULL;
		if (!ReturnFunction)
		{
			ReturnFunction = new(EC_InternalUseOnlyConstructor, Outer, TEXT("Deactivate"), RF_Public|RF_Transient|RF_MarkAsNative) UFunction(FObjectInitializer(), NULL, 0x04020400, 65535);
			ReturnFunction->Bind();
			ReturnFunction->StaticLink();
#if WITH_METADATA
			UMetaData* MetaData = ReturnFunction->GetOutermost()->GetMetaData();
			MetaData->SetValue(ReturnFunction, TEXT("Category"), TEXT("Components|Activation"));
			MetaData->SetValue(ReturnFunction, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
			MetaData->SetValue(ReturnFunction, TEXT("ToolTip"), TEXT("Deactivates the SceneComponent."));
			MetaData->SetValue(ReturnFunction, TEXT("UnsafeDuringActorConstruction"), TEXT("true"));
#endif
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UActorComponent_NoRegister()
	{
		return UActorComponent::StaticClass();
	}
	UClass* Z_Construct_UClass_UActorComponent()
	{
		static UClass* OuterClass = NULL;
		if (!OuterClass)
		{
			Z_Construct_UClass_UObject();
			Z_Construct_UPackage__Script_Engine();
			OuterClass = UActorComponent::StaticClass();
			if (!(OuterClass->ClassFlags & CLASS_Constructed))
			{
				UObjectForceRegistration(OuterClass);
				OuterClass->ClassFlags |= 0x20B00081;

				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_Activate());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_AddTickPrerequisiteActor());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_AddTickPrerequisiteComponent());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_ComponentHasTag());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_Deactivate());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_GetComponentTickInterval());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_GetOwner());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_IsActive());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_IsBeingDestroyed());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_IsComponentTickEnabled());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_K2_DestroyComponent());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_OnRep_IsActive());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_ReceiveBeginPlay());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_ReceiveEndPlay());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_ReceiveTick());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_RemoveTickPrerequisiteActor());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_RemoveTickPrerequisiteComponent());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_SetActive());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_SetAutoActivate());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_SetComponentTickEnabled());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_SetComponentTickInterval());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_SetIsReplicated());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_SetTickableWhenPaused());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_SetTickGroup());
				OuterClass->LinkChild(Z_Construct_UFunction_UActorComponent_ToggleActive());

PRAGMA_DISABLE_DEPRECATION_WARNINGS
				UProperty* NewProp_OnComponentDeactivated = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnComponentDeactivated"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnComponentDeactivated, UActorComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_Engine_ActorComponentDeactivateSignature__DelegateSignature());
				UProperty* NewProp_OnComponentActivated = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("OnComponentActivated"), RF_Public|RF_Transient|RF_MarkAsNative) UMulticastDelegateProperty(CPP_PROPERTY_BASE(OnComponentActivated, UActorComponent), 0x0010000010080000, Z_Construct_UDelegateFunction_Engine_ActorComponentActivatedSignature__DelegateSignature());
				UProperty* NewProp_UCSModifiedProperties = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("UCSModifiedProperties"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(UCSModifiedProperties, UActorComponent), 0x0040000000000000);
				UProperty* NewProp_UCSModifiedProperties_Inner = new(EC_InternalUseOnlyConstructor, NewProp_UCSModifiedProperties, TEXT("UCSModifiedProperties"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000, Z_Construct_UScriptStruct_FSimpleMemberReference());
				UProperty* NewProp_CreationMethod = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("CreationMethod"), RF_Public|RF_Transient|RF_MarkAsNative) UEnumProperty(CPP_PROPERTY_BASE(CreationMethod, UActorComponent), 0x0010000000000000, Z_Construct_UEnum_Engine_EComponentCreationMethod());
				UProperty* NewProp_CreationMethod_Underlying = new(EC_InternalUseOnlyConstructor, NewProp_CreationMethod, TEXT("UnderlyingType"), RF_Public|RF_Transient|RF_MarkAsNative) UByteProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsEditorOnly, UActorComponent, uint8);
				UProperty* NewProp_bIsEditorOnly = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsEditorOnly"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsEditorOnly, UActorComponent), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bIsEditorOnly, UActorComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCanEverAffectNavigation, UActorComponent, uint8);
				UProperty* NewProp_bCanEverAffectNavigation = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCanEverAffectNavigation"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCanEverAffectNavigation, UActorComponent), 0x00200c0000000001, CPP_BOOL_PROPERTY_BITMASK(bCanEverAffectNavigation, UActorComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bEditableWhenInherited, UActorComponent, uint8);
				UProperty* NewProp_bEditableWhenInherited = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bEditableWhenInherited"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bEditableWhenInherited, UActorComponent), 0x0010000000010001, CPP_BOOL_PROPERTY_BITMASK(bEditableWhenInherited, UActorComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bIsActive, UActorComponent, uint8);
				UProperty* NewProp_bIsActive = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bIsActive"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bIsActive, UActorComponent), 0x0010000100002020, CPP_BOOL_PROPERTY_BITMASK(bIsActive, UActorComponent), sizeof(uint8), false);
				NewProp_bIsActive->RepNotifyFunc = FName(TEXT("OnRep_IsActive"));
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bAutoActivate, UActorComponent, uint8);
				UProperty* NewProp_bAutoActivate = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bAutoActivate"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bAutoActivate, UActorComponent), 0x0010000000000015, CPP_BOOL_PROPERTY_BITMASK(bAutoActivate, UActorComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bInstanceComponent_DEPRECATED, UActorComponent, uint8);
				UProperty* NewProp_bInstanceComponent = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bInstanceComponent"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bInstanceComponent_DEPRECATED, UActorComponent), 0x0010000020000000, CPP_BOOL_PROPERTY_BITMASK(bInstanceComponent_DEPRECATED, UActorComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bCreatedByConstructionScript_DEPRECATED, UActorComponent, uint8);
				UProperty* NewProp_bCreatedByConstructionScript = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bCreatedByConstructionScript"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bCreatedByConstructionScript_DEPRECATED, UActorComponent), 0x0010000020000000, CPP_BOOL_PROPERTY_BITMASK(bCreatedByConstructionScript_DEPRECATED, UActorComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bNetAddressable, UActorComponent, uint8);
				UProperty* NewProp_bNetAddressable = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bNetAddressable"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bNetAddressable, UActorComponent), 0x0020080000000000, CPP_BOOL_PROPERTY_BITMASK(bNetAddressable, UActorComponent), sizeof(uint8), false);
				CPP_BOOL_PROPERTY_BITMASK_STRUCT(bReplicates, UActorComponent, uint8);
				UProperty* NewProp_bReplicates = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("bReplicates"), RF_Public|RF_Transient|RF_MarkAsNative) UBoolProperty(FObjectInitializer(), EC_CppProperty, CPP_BOOL_PROPERTY_OFFSET(bReplicates, UActorComponent), 0x0020080000010035, CPP_BOOL_PROPERTY_BITMASK(bReplicates, UActorComponent), sizeof(uint8), false);
				UProperty* NewProp_AssetUserData = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("AssetUserData"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(AssetUserData, UActorComponent), 0x0020088000000008);
				UProperty* NewProp_AssetUserData_Inner = new(EC_InternalUseOnlyConstructor, NewProp_AssetUserData, TEXT("AssetUserData"), RF_Public|RF_Transient|RF_MarkAsNative) UObjectProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000080008, Z_Construct_UClass_UAssetUserData_NoRegister());
				UProperty* NewProp_ComponentTags = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("ComponentTags"), RF_Public|RF_Transient|RF_MarkAsNative) UArrayProperty(CPP_PROPERTY_BASE(ComponentTags, UActorComponent), 0x0010000000000005);
				UProperty* NewProp_ComponentTags_Inner = new(EC_InternalUseOnlyConstructor, NewProp_ComponentTags, TEXT("ComponentTags"), RF_Public|RF_Transient|RF_MarkAsNative) UNameProperty(FObjectInitializer(), EC_CppProperty, 0, 0x0000000000000000);
				UProperty* NewProp_PrimaryComponentTick = new(EC_InternalUseOnlyConstructor, OuterClass, TEXT("PrimaryComponentTick"), RF_Public|RF_Transient|RF_MarkAsNative) UStructProperty(CPP_PROPERTY_BASE(PrimaryComponentTick, UActorComponent), 0x0010000000010001, Z_Construct_UScriptStruct_FActorComponentTickFunction());
PRAGMA_ENABLE_DEPRECATION_WARNINGS
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_Activate(), "Activate"); // 1892233545
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_AddTickPrerequisiteActor(), "AddTickPrerequisiteActor"); // 3246100391
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_AddTickPrerequisiteComponent(), "AddTickPrerequisiteComponent"); // 2416456337
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_ComponentHasTag(), "ComponentHasTag"); // 2353321453
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_Deactivate(), "Deactivate"); // 170323611
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_GetComponentTickInterval(), "GetComponentTickInterval"); // 1844068337
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_GetOwner(), "GetOwner"); // 3197179009
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_IsActive(), "IsActive"); // 146015055
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_IsBeingDestroyed(), "IsBeingDestroyed"); // 3694572220
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_IsComponentTickEnabled(), "IsComponentTickEnabled"); // 3037559197
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_K2_DestroyComponent(), "K2_DestroyComponent"); // 1968119094
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_OnRep_IsActive(), "OnRep_IsActive"); // 2677173859
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_ReceiveBeginPlay(), "ReceiveBeginPlay"); // 4126989316
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_ReceiveEndPlay(), "ReceiveEndPlay"); // 3756529596
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_ReceiveTick(), "ReceiveTick"); // 707191149
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_RemoveTickPrerequisiteActor(), "RemoveTickPrerequisiteActor"); // 854710787
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_RemoveTickPrerequisiteComponent(), "RemoveTickPrerequisiteComponent"); // 1031851091
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_SetActive(), "SetActive"); // 3801065595
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_SetAutoActivate(), "SetAutoActivate"); // 1139388620
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_SetComponentTickEnabled(), "SetComponentTickEnabled"); // 2554109874
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_SetComponentTickInterval(), "SetComponentTickInterval"); // 3867757152
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_SetIsReplicated(), "SetIsReplicated"); // 1533611035
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_SetTickableWhenPaused(), "SetTickableWhenPaused"); // 774188830
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_SetTickGroup(), "SetTickGroup"); // 1432290293
				OuterClass->AddFunctionToFunctionMapWithOverriddenName(Z_Construct_UFunction_UActorComponent_ToggleActive(), "ToggleActive"); // 388891619
				OuterClass->Interfaces.Add(FImplementedInterface(Z_Construct_UClass_UInterface_AssetUserData_NoRegister(), VTABLE_OFFSET(UActorComponent, IInterface_AssetUserData), false ));
				OuterClass->StaticLink();
#if WITH_METADATA
				UMetaData* MetaData = OuterClass->GetOutermost()->GetMetaData();
				MetaData->SetValue(OuterClass, TEXT("BlueprintType"), TEXT("true"));
				MetaData->SetValue(OuterClass, TEXT("IncludePath"), TEXT("Components/ActorComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(OuterClass, TEXT("ObjectInitializerConstructorDeclared"), TEXT(""));
				MetaData->SetValue(OuterClass, TEXT("ShortTooltip"), TEXT("An ActorComponent is a reusable component that can be added to any actor."));
				MetaData->SetValue(OuterClass, TEXT("ToolTip"), TEXT("ActorComponent is the base class for components that define reusable behavior that can be added to different types of Actors.\nActorComponents that have a transform are known as SceneComponents and those that can be rendered are PrimitiveComponents.\n\n@see [ActorComponent](https://docs.unrealengine.com/latest/INT/Programming/UnrealArchitecture/Actors/Components/index.html#actorcomponents)\n@see USceneComponent\n@see UPrimitiveComponent"));
				MetaData->SetValue(NewProp_OnComponentDeactivated, TEXT("Category"), TEXT("Components|Activation"));
				MetaData->SetValue(NewProp_OnComponentDeactivated, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_OnComponentActivated, TEXT("Category"), TEXT("Components|Activation"));
				MetaData->SetValue(NewProp_OnComponentActivated, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_UCSModifiedProperties, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_CreationMethod, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bIsEditorOnly, TEXT("Category"), TEXT("Cooking"));
				MetaData->SetValue(NewProp_bIsEditorOnly, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bIsEditorOnly, TEXT("ToolTip"), TEXT("If true, the component will be excluded from non-editor builds"));
				MetaData->SetValue(NewProp_bCanEverAffectNavigation, TEXT("Category"), TEXT("Collision"));
				MetaData->SetValue(NewProp_bCanEverAffectNavigation, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bCanEverAffectNavigation, TEXT("ToolTip"), TEXT("Whether this component can potentially influence navigation"));
				MetaData->SetValue(NewProp_bEditableWhenInherited, TEXT("Category"), TEXT("Variable"));
				MetaData->SetValue(NewProp_bEditableWhenInherited, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bIsActive, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bIsActive, TEXT("ToolTip"), TEXT("Whether the component is currently active."));
				MetaData->SetValue(NewProp_bAutoActivate, TEXT("Category"), TEXT("Activation"));
				MetaData->SetValue(NewProp_bAutoActivate, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bAutoActivate, TEXT("ToolTip"), TEXT("Whether the component is activated at creation or must be explicitly activated."));
				MetaData->SetValue(NewProp_bInstanceComponent, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bInstanceComponent, TEXT("ToolTip"), TEXT("True if this component was created as an instance component"));
				MetaData->SetValue(NewProp_bCreatedByConstructionScript, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bCreatedByConstructionScript, TEXT("ToolTip"), TEXT("True if this component was created by a construction script, and will be destroyed by DestroyConstructedComponents"));
				MetaData->SetValue(NewProp_bNetAddressable, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bNetAddressable, TEXT("ToolTip"), TEXT("Is this component safe to ID over the network by name?"));
				MetaData->SetValue(NewProp_bReplicates, TEXT("Category"), TEXT("ComponentReplication"));
				MetaData->SetValue(NewProp_bReplicates, TEXT("DisplayName"), TEXT("Component Replicates"));
				MetaData->SetValue(NewProp_bReplicates, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_bReplicates, TEXT("ToolTip"), TEXT("Is this component currently replicating? Should the network code consider it for replication? Owning Actor must be replicating first!"));
				MetaData->SetValue(NewProp_AssetUserData, TEXT("EditInline"), TEXT("true"));
				MetaData->SetValue(NewProp_AssetUserData, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_AssetUserData, TEXT("ToolTip"), TEXT("Array of user data stored with the component"));
				MetaData->SetValue(NewProp_ComponentTags, TEXT("Category"), TEXT("Tags"));
				MetaData->SetValue(NewProp_ComponentTags, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_ComponentTags, TEXT("ToolTip"), TEXT("Array of tags that can be used for grouping and categorizing. Can also be accessed from scripting."));
				MetaData->SetValue(NewProp_PrimaryComponentTick, TEXT("Category"), TEXT("ComponentTick"));
				MetaData->SetValue(NewProp_PrimaryComponentTick, TEXT("ModuleRelativePath"), TEXT("Classes/Components/ActorComponent.h"));
				MetaData->SetValue(NewProp_PrimaryComponentTick, TEXT("ToolTip"), TEXT("Main tick function for the Actor"));
#endif
			}
		}
		check(OuterClass->GetClass());
		return OuterClass;
	}
	static FCompiledInDefer Z_CompiledInDefer_UClass_UActorComponent(Z_Construct_UClass_UActorComponent, &UActorComponent::StaticClass, TEXT("UActorComponent"), false, nullptr, nullptr, nullptr);
#endif

PRAGMA_ENABLE_DEPRECATION_WARNINGS
